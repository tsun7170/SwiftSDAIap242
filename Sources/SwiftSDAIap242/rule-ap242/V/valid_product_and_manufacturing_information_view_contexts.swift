/* file: valid_product_and_manufacturing_information_view_contexts.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -RULE DEFINITION in EXPRESS
/*

  RULE valid_product_and_manufacturing_information_view_contexts FOR ( product_definition_context );

    LOCAL
      design_view_contexts                                 : SET OF product_definition_context := 
                                                              QUERY ( pdc <* product_definition_context | ( 
                                                              pdc.life_cycle_stage = 'design' ) );
      gdt_representation_view_contexts                     : SET OF product_definition_context := 
                                                              QUERY ( pdc <* product_definition_context | ( 
                                                              pdc.frame_of_reference.application = 
                                                              'geometrical dimensioning and tolerancing representation'  ) );
      machining_feature_view_contexts                      : SET OF product_definition_context := 
                                                              QUERY ( pdc <* product_definition_context | ( 
                                                              pdc.frame_of_reference.application = 
                                                              'machining feature'  ) );
      material_specification_view_contexts                 : SET OF product_definition_context := 
                                                              QUERY ( pdc <* product_definition_context | ( 
                                                              pdc.frame_of_reference.application = 
                                                              'material specification'  ) );
      model_based_3d_annotation_presentation_view_contexts : SET OF product_definition_context := 
                                                              QUERY ( pdc <* product_definition_context | ( 
                                                              pdc.frame_of_reference.application = 
                                                              'model based 3D annotation presentation'  ) );
      model_based_view_contexts                            : SET OF product_definition_context := 
                                                              QUERY ( pdc <* product_definition_context | ( 
                                                              pdc.frame_of_reference.application = 
                                                              'model based product geometry'  ) );
      process_state_view_contexts                          : SET OF product_definition_context := 
                                                              QUERY ( pdc <* product_definition_context | ( 
                                                              pdc.frame_of_reference.application = 
                                                              'process state'  ) );
      surface_finish_view_contexts                         : SET OF product_definition_context := 
                                                              QUERY ( pdc <* product_definition_context | ( 
                                                              pdc.frame_of_reference.application = 
                                                              'surface finish'  ) );
      additional_view_contexts                             : SET OF product_definition_context := 
                                                              gdt_representation_view_contexts + 
                                                              machining_feature_view_contexts + 
                                                              material_specification_view_contexts + model_based_3d_annotation_presentation_view_contexts 
                                                              + process_state_view_contexts + 
                                                              surface_finish_view_contexts;
      need_initial_model_based_view_contexts               : SET OF product_definition_context := 
                                                              gdt_representation_view_contexts + model_based_3d_annotation_presentation_view_contexts;
    END_LOCAL;

  WHERE
    wr1 : ( SIZEOF( gdt_representation_view_contexts * design_view_contexts ) = SIZEOF( 
              gdt_representation_view_contexts ) );
    wr2 : ( SIZEOF( machining_feature_view_contexts * design_view_contexts ) = SIZEOF( 
              machining_feature_view_contexts ) );
    wr3 : ( SIZEOF( material_specification_view_contexts * design_view_contexts ) = SIZEOF( 
              material_specification_view_contexts ) );
    wr4 : ( SIZEOF( model_based_3d_annotation_presentation_view_contexts * design_view_contexts ) = SIZEOF( 
              model_based_3d_annotation_presentation_view_contexts ) );
    wr5 : ( SIZEOF( model_based_view_contexts * design_view_contexts ) = SIZEOF( model_based_view_contexts ) );
    wr6 : ( SIZEOF( process_state_view_contexts * design_view_contexts ) = SIZEOF( 
              process_state_view_contexts ) );
    wr7 : ( SIZEOF( surface_finish_view_contexts * design_view_contexts ) = SIZEOF( 
              surface_finish_view_contexts ) );
    wr8 : ( SIZEOF( QUERY ( mbvc <* model_based_view_contexts | ( SIZEOF( USEDIN( mbvc, 
              'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION_CONTEXT_ASSOCIATION.'
              + 'FRAME_OF_REFERENCE'  ) ) = 0 ) ) ) = SIZEOF( model_based_view_contexts ) );
    wr9 : ( SIZEOF( QUERY ( avc <* additional_view_contexts | ( SIZEOF( USEDIN( avc, 
              'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION.FRAME_OF_REFERENCE'  ) ) = 
              0 ) ) ) = SIZEOF( additional_view_contexts ) );
    wr10: ( SIZEOF( QUERY ( nimbvc <* need_initial_model_based_view_contexts | ( NOT ( SIZEOF( 
              QUERY ( pdca <* USEDIN( nimbvc, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
              + 'PRODUCT_DEFINITION_CONTEXT_ASSOCIATION.FRAME_OF_REFERENCE'  ) | ( pdca\
              product_definition_context_association.definition\product_definition.frame_of_reference IN 
              model_based_view_contexts ) ) ) = SIZEOF( need_initial_model_based_view_contexts ) ) ) ) ) = 0 );
    wr11: ( SIZEOF( QUERY ( gdt_pdc <* gdt_representation_view_contexts | ( SIZEOF( [ 'ISO 1101', 'ASME Y14.5'] 
              * get_associated_mandatory_document_ids( gdt_pdc ) ) = 0 ) ) ) = 0 );
    wr12: ( SIZEOF( QUERY ( mb3d_pdc <* model_based_3d_annotation_presentation_view_contexts | ( SIZEOF( [
              'ISO 1101' , 'ISO 16792', 'ASME Y14.41', 'ASME Y14.5'] * 
              get_associated_mandatory_document_ids( mb3d_pdc ) ) = 0 ) ) ) = 0 );

  END_RULE; -- valid_product_and_manufacturing_information_view_contexts (line:49991 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static
  func VALID_PRODUCT_AND_MANUFACTURING_INFORMATION_VIEW_CONTEXTS( 
    allComplexEntities: AnySequence<SDAI.ComplexEntity> ) -> [SDAI.WhereLabel:SDAI.LOGICAL] {

    //ENTITY REFERENCES
    let PRODUCT_DEFINITION_CONTEXT = 
      SDAI.POPULATION(OF: ePRODUCT_DEFINITION_CONTEXT.self, FROM: allComplexEntities)

    //LOCAL
    var DESIGN_VIEW_CONTEXTS: SDAI.SET<ePRODUCT_DEFINITION_CONTEXT>?  = PRODUCT_DEFINITION_CONTEXT
                                                                        .QUERY{ PDC in 

                                                                          let _TEMP1 = PDC.LIFE_CYCLE_STAGE
                                                                          let _TEMP2 = SDAI.FORCE_OPTIONAL(
                                                                            _TEMP1) .==. SDAI.FORCE_OPTIONAL(
                                                                            SDAI.STRING("design"))
                                                                          return _TEMP2 }; SDAI.TOUCH(var: &DESIGN_VIEW_CONTEXTS)
    var GDT_REPRESENTATION_VIEW_CONTEXTS: SDAI.SET<ePRODUCT_DEFINITION_CONTEXT>?  = 
      PRODUCT_DEFINITION_CONTEXT.QUERY{ PDC in 

        let _TEMP1 = PDC.FRAME_OF_REFERENCE
        let _TEMP2 = _TEMP1.APPLICATION
        let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP2) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
          "geometrical dimensioning and tolerancing representation"))
        return _TEMP3 }; SDAI.TOUCH(var: &GDT_REPRESENTATION_VIEW_CONTEXTS)
    var MACHINING_FEATURE_VIEW_CONTEXTS: SDAI.SET<ePRODUCT_DEFINITION_CONTEXT>?  = 
      PRODUCT_DEFINITION_CONTEXT.QUERY{ PDC in 

        let _TEMP1 = PDC.FRAME_OF_REFERENCE
        let _TEMP2 = _TEMP1.APPLICATION
        let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP2) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("machining feature"))
        return _TEMP3 }; SDAI.TOUCH(var: &MACHINING_FEATURE_VIEW_CONTEXTS)
    var MATERIAL_SPECIFICATION_VIEW_CONTEXTS: SDAI.SET<ePRODUCT_DEFINITION_CONTEXT>?  = 
      PRODUCT_DEFINITION_CONTEXT.QUERY{ PDC in 

        let _TEMP1 = PDC.FRAME_OF_REFERENCE
        let _TEMP2 = _TEMP1.APPLICATION
        let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP2) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("material specification"))
        return _TEMP3 }; SDAI.TOUCH(var: &MATERIAL_SPECIFICATION_VIEW_CONTEXTS)
    var MODEL_BASED_3D_ANNOTATION_PRESENTATION_VIEW_CONTEXTS: SDAI.SET<ePRODUCT_DEFINITION_CONTEXT>?  = 
      PRODUCT_DEFINITION_CONTEXT.QUERY{ PDC in 

        let _TEMP1 = PDC.FRAME_OF_REFERENCE
        let _TEMP2 = _TEMP1.APPLICATION
        let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP2) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
          "model based 3D annotation presentation"))
        return _TEMP3 }; SDAI.TOUCH(var: &MODEL_BASED_3D_ANNOTATION_PRESENTATION_VIEW_CONTEXTS)
    var MODEL_BASED_VIEW_CONTEXTS: SDAI.SET<ePRODUCT_DEFINITION_CONTEXT>?  = 
      PRODUCT_DEFINITION_CONTEXT.QUERY{ PDC in 

        let _TEMP1 = PDC.FRAME_OF_REFERENCE
        let _TEMP2 = _TEMP1.APPLICATION
        let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP2) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
          "model based product geometry"))
        return _TEMP3 }; SDAI.TOUCH(var: &MODEL_BASED_VIEW_CONTEXTS)
    var PROCESS_STATE_VIEW_CONTEXTS: SDAI.SET<ePRODUCT_DEFINITION_CONTEXT>?  = 
      PRODUCT_DEFINITION_CONTEXT.QUERY{ PDC in 

        let _TEMP1 = PDC.FRAME_OF_REFERENCE
        let _TEMP2 = _TEMP1.APPLICATION
        let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP2) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("process state"))
        return _TEMP3 }; SDAI.TOUCH(var: &PROCESS_STATE_VIEW_CONTEXTS)
    var SURFACE_FINISH_VIEW_CONTEXTS: SDAI.SET<ePRODUCT_DEFINITION_CONTEXT>?  = 
      PRODUCT_DEFINITION_CONTEXT.QUERY{ PDC in 

        let _TEMP1 = PDC.FRAME_OF_REFERENCE
        let _TEMP2 = _TEMP1.APPLICATION
        let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP2) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("surface finish"))
        return _TEMP3 }; SDAI.TOUCH(var: &SURFACE_FINISH_VIEW_CONTEXTS)
    var ADDITIONAL_VIEW_CONTEXTS: SDAI.SET<ePRODUCT_DEFINITION_CONTEXT>?  = 
      GDT_REPRESENTATION_VIEW_CONTEXTS + MACHINING_FEATURE_VIEW_CONTEXTS + 
      MATERIAL_SPECIFICATION_VIEW_CONTEXTS + MODEL_BASED_3D_ANNOTATION_PRESENTATION_VIEW_CONTEXTS + 
      PROCESS_STATE_VIEW_CONTEXTS + SURFACE_FINISH_VIEW_CONTEXTS; SDAI.TOUCH(var: &ADDITIONAL_VIEW_CONTEXTS)
    var NEED_INITIAL_MODEL_BASED_VIEW_CONTEXTS: SDAI.SET<ePRODUCT_DEFINITION_CONTEXT>?  = 
      GDT_REPRESENTATION_VIEW_CONTEXTS + MODEL_BASED_3D_ANNOTATION_PRESENTATION_VIEW_CONTEXTS; SDAI.TOUCH(var: &NEED_INITIAL_MODEL_BASED_VIEW_CONTEXTS)
    //END_LOCAL


    //WHERE
    var _conformance: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]

    let _TEMP1 = GDT_REPRESENTATION_VIEW_CONTEXTS * DESIGN_VIEW_CONTEXTS
    let _TEMP2 = SDAI.SIZEOF(_TEMP1)
    let _TEMP3 = SDAI.SIZEOF(GDT_REPRESENTATION_VIEW_CONTEXTS)
    let _TEMP4 = _TEMP2 .==. _TEMP3
    let WHERE_wr1 = _TEMP4
    _conformance["WHERE_wr1"] = WHERE_wr1


    let _TEMP5 = MACHINING_FEATURE_VIEW_CONTEXTS * DESIGN_VIEW_CONTEXTS
    let _TEMP6 = SDAI.SIZEOF(_TEMP5)
    let _TEMP7 = SDAI.SIZEOF(MACHINING_FEATURE_VIEW_CONTEXTS)
    let _TEMP8 = _TEMP6 .==. _TEMP7
    let WHERE_wr2 = _TEMP8
    _conformance["WHERE_wr2"] = WHERE_wr2


    let _TEMP9 = MATERIAL_SPECIFICATION_VIEW_CONTEXTS * DESIGN_VIEW_CONTEXTS
    let _TEMP10 = SDAI.SIZEOF(_TEMP9)
    let _TEMP11 = SDAI.SIZEOF(MATERIAL_SPECIFICATION_VIEW_CONTEXTS)
    let _TEMP12 = _TEMP10 .==. _TEMP11
    let WHERE_wr3 = _TEMP12
    _conformance["WHERE_wr3"] = WHERE_wr3


    let _TEMP13 = MODEL_BASED_3D_ANNOTATION_PRESENTATION_VIEW_CONTEXTS * DESIGN_VIEW_CONTEXTS
    let _TEMP14 = SDAI.SIZEOF(_TEMP13)
    let _TEMP15 = SDAI.SIZEOF(MODEL_BASED_3D_ANNOTATION_PRESENTATION_VIEW_CONTEXTS)
    let _TEMP16 = _TEMP14 .==. _TEMP15
    let WHERE_wr4 = _TEMP16
    _conformance["WHERE_wr4"] = WHERE_wr4


    let _TEMP17 = MODEL_BASED_VIEW_CONTEXTS * DESIGN_VIEW_CONTEXTS
    let _TEMP18 = SDAI.SIZEOF(_TEMP17)
    let _TEMP19 = SDAI.SIZEOF(MODEL_BASED_VIEW_CONTEXTS)
    let _TEMP20 = _TEMP18 .==. _TEMP19
    let WHERE_wr5 = _TEMP20
    _conformance["WHERE_wr5"] = WHERE_wr5


    let _TEMP21 = PROCESS_STATE_VIEW_CONTEXTS * DESIGN_VIEW_CONTEXTS
    let _TEMP22 = SDAI.SIZEOF(_TEMP21)
    let _TEMP23 = SDAI.SIZEOF(PROCESS_STATE_VIEW_CONTEXTS)
    let _TEMP24 = _TEMP22 .==. _TEMP23
    let WHERE_wr6 = _TEMP24
    _conformance["WHERE_wr6"] = WHERE_wr6


    let _TEMP25 = SURFACE_FINISH_VIEW_CONTEXTS * DESIGN_VIEW_CONTEXTS
    let _TEMP26 = SDAI.SIZEOF(_TEMP25)
    let _TEMP27 = SDAI.SIZEOF(SURFACE_FINISH_VIEW_CONTEXTS)
    let _TEMP28 = _TEMP26 .==. _TEMP27
    let WHERE_wr7 = _TEMP28
    _conformance["WHERE_wr7"] = WHERE_wr7


    let _TEMP29 = MODEL_BASED_VIEW_CONTEXTS?
      .QUERY{ MBVC in 

        let _TEMP1 = SDAI.USEDIN(T: MBVC, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .ePRODUCT_DEFINITION_CONTEXT_ASSOCIATION.FRAME_OF_REFERENCE)
        let _TEMP2 = SDAI.SIZEOF(_TEMP1)
        let _TEMP3 = _TEMP2 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
        return _TEMP3 }
    let _TEMP30 = SDAI.SIZEOF(_TEMP29)
    let _TEMP31 = SDAI.SIZEOF(MODEL_BASED_VIEW_CONTEXTS)
    let _TEMP32 = _TEMP30 .==. _TEMP31
    let WHERE_wr8 = _TEMP32
    _conformance["WHERE_wr8"] = WHERE_wr8


    let _TEMP33 = ADDITIONAL_VIEW_CONTEXTS?
      .QUERY{ AVC in 

        let _TEMP1 = SDAI.USEDIN(T: AVC, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .ePRODUCT_DEFINITION.FRAME_OF_REFERENCE)
        let _TEMP2 = SDAI.SIZEOF(_TEMP1)
        let _TEMP3 = _TEMP2 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
        return _TEMP3 }
    let _TEMP34 = SDAI.SIZEOF(_TEMP33)
    let _TEMP35 = SDAI.SIZEOF(ADDITIONAL_VIEW_CONTEXTS)
    let _TEMP36 = _TEMP34 .==. _TEMP35
    let WHERE_wr9 = _TEMP36
    _conformance["WHERE_wr9"] = WHERE_wr9


    let _TEMP37 = NEED_INITIAL_MODEL_BASED_VIEW_CONTEXTS?
      .QUERY{ NIMBVC in 

        let _TEMP1 = SDAI.USEDIN(T: NIMBVC, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .ePRODUCT_DEFINITION_CONTEXT_ASSOCIATION.FRAME_OF_REFERENCE)
        let _TEMP2 = _TEMP1.QUERY{ PDCA in 

            let _TEMP1 = /*runtime*/PDCA.GROUP_REF(ePRODUCT_DEFINITION_CONTEXT_ASSOCIATION.self)
            let _TEMP2 = /*runtime*/_TEMP1?.DEFINITION
            let _TEMP3 = /*runtime*/_TEMP2?.GROUP_REF(ePRODUCT_DEFINITION.self)
            let _TEMP4 = /*runtime*/_TEMP3?.FRAME_OF_REFERENCE
            let _TEMP5 = SDAI.aggregate(MODEL_BASED_VIEW_CONTEXTS, contains: ePRODUCT_DEFINITION_CONTEXT(fromGeneric: /*
              /*runtime*/SDAI.GENERIC*/_TEMP4))
            return _TEMP5 }
        let _TEMP3 = SDAI.SIZEOF(_TEMP2)
        let _TEMP4 = SDAI.SIZEOF(NEED_INITIAL_MODEL_BASED_VIEW_CONTEXTS)
        let _TEMP5 = _TEMP3 .==. _TEMP4
        let _TEMP6 =  !_TEMP5
        return _TEMP6 }
    let _TEMP38 = SDAI.SIZEOF(_TEMP37)
    let _TEMP39 = _TEMP38 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr10 = _TEMP39
    _conformance["WHERE_wr10"] = WHERE_wr10


    let _TEMP40 = GDT_REPRESENTATION_VIEW_CONTEXTS?
      .QUERY{ GDT_PDC in 

        let _TEMP1 = ([SDAI.AIE(SDAI.STRING("ISO 1101")), 
          SDAI.AIE(SDAI.STRING("ASME Y14.5"))] as [SDAI.AggregationInitializerElement<SDAI.STRING>])
        let _TEMP2 = GET_ASSOCIATED_MANDATORY_DOCUMENT_IDS(GDT_PDC)
        let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP1) * _TEMP2
        let _TEMP4 = SDAI.SIZEOF(_TEMP3)
        let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
        return _TEMP5 }
    let _TEMP41 = SDAI.SIZEOF(_TEMP40)
    let _TEMP42 = _TEMP41 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr11 = _TEMP42
    _conformance["WHERE_wr11"] = WHERE_wr11


    let _TEMP43 = MODEL_BASED_3D_ANNOTATION_PRESENTATION_VIEW_CONTEXTS?
      .QUERY{ MB3D_PDC in 

        let _TEMP1 = ([SDAI.AIE(SDAI.STRING("ISO 1101")), 
          SDAI.AIE(SDAI.STRING("ISO 16792")), 
          SDAI.AIE(SDAI.STRING("ASME Y14.41")), 
          SDAI.AIE(SDAI.STRING("ASME Y14.5"))] as [SDAI.AggregationInitializerElement<SDAI.STRING>])
        let _TEMP2 = GET_ASSOCIATED_MANDATORY_DOCUMENT_IDS(MB3D_PDC)
        let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP1) * _TEMP2
        let _TEMP4 = SDAI.SIZEOF(_TEMP3)
        let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
        return _TEMP5 }
    let _TEMP44 = SDAI.SIZEOF(_TEMP43)
    let _TEMP45 = _TEMP44 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr12 = _TEMP45
    _conformance["WHERE_wr12"] = WHERE_wr12


    return _conformance
  }

}
