/* file: restrict_part_occurrence.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -RULE DEFINITION in EXPRESS
/*

  RULE restrict_part_occurrence FOR ( product_definition );

    LOCAL
      part_occurrences : SET OF product_definition := QUERY ( pd <* product_definition | ( pd.
                          frame_of_reference.name = 'part occurrence' ) );
    END_LOCAL;

  WHERE
    wr1: ( SIZEOF( QUERY ( pd <* part_occurrences | ( NOT ( pd.name IN [ 'single instance', 'selected instance' , 
             'quantified instance' , 'specified instance'] ) ) ) ) = 0 );
    wr2: ( SIZEOF( QUERY ( pd <* part_occurrences | ( ( SIZEOF( QUERY ( pdr <* USEDIN( pd, 
             'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.'
             + 'RELATED_PRODUCT_DEFINITION'  ) | ( pdr.name = 'definition usage' ) ) ) <> 1 ) AND ( SIZEOF( 
             QUERY ( cd <* USEDIN( pd, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CONFIGURATION_DESIGN.'
             + 'DESIGN'  ) | ( ( cd.name = 'occurrence usage definition' ) AND ( NOT ( 
             'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_IDENTIFICATION'  IN TYPEOF( cd.
             configuration ) ) ) ) ) ) <> 1 ) ) ) ) = 0 );
    wr3: ( SIZEOF( QUERY ( pd <* part_occurrences | ( ( SIZEOF( QUERY ( cd <* USEDIN( pd, 
             'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.'
             + 'RELATED_PRODUCT_DEFINITION'  ) | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
             + 'PRODUCT_DEFINITION_USAGE'  IN TYPEOF( cd ) ) ) ) = 0 ) AND ( SIZEOF( USEDIN( pd, 
             'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION_OCCURRENCE_RELATIONSHIP.'
             + 'OCCURRENCE'  ) ) = 0 ) ) ) ) = 0 );
    wr4: ( SIZEOF( QUERY ( pd <* part_occurrences | ( ( pd.name = 'selected instance' ) AND ( NOT 
             valid_selected_instance_representation( pd ) ) ) ) ) = 0 );
    wr5: ( SIZEOF( QUERY ( pd <* part_occurrences | ( ( pd.name = 'quantified instance' ) AND ( SIZEOF( 
             QUERY ( ppd <* USEDIN( pd, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PROPERTY_DEFINITION.'
             + 'DEFINITION'  ) | ( ( ppd.name = 'occurrence quantity' ) AND ( SIZEOF( QUERY ( pdr <* USEDIN( 
             ppd, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PROPERTY_DEFINITION_REPRESENTATION.'
             + 'DEFINITION'  ) | ( ( pdr.used_representation.name = 'quantity' ) AND ( SIZEOF( pdr.
             used_representation.items ) = 1 ) AND ( SIZEOF( QUERY ( i <* pdr.used_representation.items | ( 
             ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.MEASURE_REPRESENTATION_ITEM' IN TYPEOF( i ) ) 
             AND ( i.name = 'quantity measure' ) ) ) ) = 1 ) ) ) ) = 1 ) ) ) ) = 0 ) ) ) ) = 0 );
    wr6: ( SIZEOF( QUERY ( pd <* part_occurrences | ( ( pd.name = 'specified instance' ) AND ( SIZEOF( 
             QUERY ( pdor <* USEDIN( pd, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
             + 'PRODUCT_DEFINITION_OCCURRENCE_RELATIONSHIP.OCCURRENCE'  ) | ( 
             'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SPECIFIED_HIGHER_USAGE_OCCURRENCE'  IN TYPEOF( 
             pdor.occurrence_usage ) ) ) ) = 0 ) ) ) ) = 0 );

  END_RULE; -- restrict_part_occurrence (line:49534 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static
  func RESTRICT_PART_OCCURRENCE( 
    allComplexEntities: AnySequence<SDAI.ComplexEntity> ) -> [SDAI.WhereLabel:SDAI.LOGICAL] {

    //ENTITY REFERENCES
    let PRODUCT_DEFINITION = SDAI.POPULATION(OF: ePRODUCT_DEFINITION.self, FROM: allComplexEntities)

    //LOCAL
    var PART_OCCURRENCES: SDAI.SET<ePRODUCT_DEFINITION>?  = PRODUCT_DEFINITION
                                                            .QUERY{ PD in 

                                                              let _TEMP1 = PD.FRAME_OF_REFERENCE
                                                              let _TEMP2 = _TEMP1.NAME
                                                              let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP2) .==. SDAI.FORCE_OPTIONAL(
                                                                SDAI.STRING("part occurrence"))
                                                              return _TEMP3 }; SDAI.TOUCH(var: &PART_OCCURRENCES)


    //WHERE
    var _conformance: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]

    let _TEMP1 = PART_OCCURRENCES?.QUERY{ PD in 

        let _TEMP1 = PD.NAME
        let _TEMP2 = ([SDAI.AIE(SDAI.STRING("single instance")), 
          SDAI.AIE(SDAI.STRING("selected instance")), 
          SDAI.AIE(SDAI.STRING("quantified instance")), 
          SDAI.AIE(SDAI.STRING("specified instance"))] as [SDAI.AggregationInitializerElement<SDAI.STRING>])
        let _TEMP3 = SDAI.aggregate(_TEMP2, contains: SDAI.STRING(/*tLABEL*/_TEMP1))
        let _TEMP4 =  !_TEMP3
        return _TEMP4 }
    let _TEMP2 = SDAI.SIZEOF(_TEMP1)
    let _TEMP3 = _TEMP2 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr1 = _TEMP3
    _conformance["WHERE_wr1"] = WHERE_wr1


    let _TEMP4 = PART_OCCURRENCES?.QUERY{ PD in 

        let _TEMP1 = SDAI.USEDIN(T: PD, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .ePRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION)
        let _TEMP2 = _TEMP1.QUERY{ PDR in 

            let _TEMP1 = /*runtime*/PDR.NAME
            let _TEMP2 = SDAI.FORCE_OPTIONAL(/*runtime*/_TEMP1) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
              "definition usage"))
            return _TEMP2 }
        let _TEMP3 = SDAI.SIZEOF(_TEMP2)
        let _TEMP4 = _TEMP3 .!=. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
        let _TEMP5 = SDAI.USEDIN(T: PD, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .eCONFIGURATION_DESIGN.DESIGN)
        let _TEMP6 = _TEMP5.QUERY{ CD in 

            let _TEMP1 = /*runtime*/CD.NAME
            let _TEMP2 = SDAI.FORCE_OPTIONAL(/*runtime*/_TEMP1) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
              "occurrence usage definition"))
            let _TEMP3 = SDAI.TYPEOF(CD.CONFIGURATION, IS: ePRODUCT_IDENTIFICATION.self)
            let _TEMP4 =  !_TEMP3
            let _TEMP5 = _TEMP2 && _TEMP4
            return _TEMP5 }
        let _TEMP7 = SDAI.SIZEOF(_TEMP6)
        let _TEMP8 = _TEMP7 .!=. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
        let _TEMP9 = _TEMP4 && _TEMP8
        return _TEMP9 }
    let _TEMP5 = SDAI.SIZEOF(_TEMP4)
    let _TEMP6 = _TEMP5 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr2 = _TEMP6
    _conformance["WHERE_wr2"] = WHERE_wr2


    let _TEMP7 = PART_OCCURRENCES?.QUERY{ PD in 

        let _TEMP1 = SDAI.USEDIN(T: PD, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .ePRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION)
        let _TEMP2 = _TEMP1.QUERY{ CD in 

            let _TEMP1 = SDAI.TYPEOF(CD, IS: ePRODUCT_DEFINITION_USAGE.self)
            return _TEMP1 }
        let _TEMP3 = SDAI.SIZEOF(_TEMP2)
        let _TEMP4 = _TEMP3 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
        let _TEMP5 = SDAI.USEDIN(T: PD, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .ePRODUCT_DEFINITION_OCCURRENCE_RELATIONSHIP.OCCURRENCE)
        let _TEMP6 = SDAI.SIZEOF(_TEMP5)
        let _TEMP7 = _TEMP6 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
        let _TEMP8 = _TEMP4 && _TEMP7
        return _TEMP8 }
    let _TEMP8 = SDAI.SIZEOF(_TEMP7)
    let _TEMP9 = _TEMP8 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr3 = _TEMP9
    _conformance["WHERE_wr3"] = WHERE_wr3


    let _TEMP10 = PART_OCCURRENCES?.QUERY{ PD in 

        let _TEMP1 = PD.NAME
        let _TEMP2 = _TEMP1 .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("selected instance"))
        let _TEMP3 = VALID_SELECTED_INSTANCE_REPRESENTATION(sPRODUCT_DEFINITION_OR_ASSEMBLY_RELATIONSHIP(/*
          ePRODUCT_DEFINITION*/PD))
        let _TEMP4 =  !_TEMP3
        let _TEMP5 = _TEMP2 && _TEMP4
        return _TEMP5 }
    let _TEMP11 = SDAI.SIZEOF(_TEMP10)
    let _TEMP12 = _TEMP11 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr4 = _TEMP12
    _conformance["WHERE_wr4"] = WHERE_wr4


    let _TEMP13 = PART_OCCURRENCES?.QUERY{ PD in 

        let _TEMP1 = PD.NAME
        let _TEMP2 = _TEMP1 .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("quantified instance"))
        let _TEMP3 = SDAI.USEDIN(T: PD, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .ePROPERTY_DEFINITION.DEFINITION)
        let _TEMP4 = _TEMP3.QUERY{ PPD in 

            let _TEMP1 = /*runtime*/PPD.NAME
            let _TEMP2 = SDAI.FORCE_OPTIONAL(/*runtime*/_TEMP1) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
              "occurrence quantity"))
            let _TEMP3 = SDAI.USEDIN(T: PPD, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
              .ePROPERTY_DEFINITION_REPRESENTATION.DEFINITION)
            let _TEMP4 = _TEMP3.QUERY{ PDR in 

                let _TEMP1 = /*runtime*/PDR.USED_REPRESENTATION
                let _TEMP2 = /*runtime*/SDAI.FORCE_OPTIONAL(_TEMP1)?.NAME
                let _TEMP3 = SDAI.FORCE_OPTIONAL(/*runtime*/_TEMP2) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
                  "quantity"))
                let _TEMP4 = /*runtime*/PDR.USED_REPRESENTATION
                let _TEMP5 = /*runtime*/SDAI.FORCE_OPTIONAL(_TEMP4)?.ITEMS
                let _TEMP6 = SDAI.SIZEOF(SDAI.AGGREGATE<SDAI.GENERIC>(/*runtime*/_TEMP5))
                let _TEMP7 = _TEMP6 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                let _TEMP8 = _TEMP3 && _TEMP7
                let _TEMP9 = /*runtime*/PDR.USED_REPRESENTATION
                let _TEMP10 = /*runtime*/SDAI.FORCE_OPTIONAL(_TEMP9)?.ITEMS
                let _TEMP11 = /*runtime*/SDAI.FORCE_OPTIONAL(_TEMP10)?
                  .QUERY{ I in 

                    let _TEMP1 = SDAI.TYPEOF(I, IS: eMEASURE_REPRESENTATION_ITEM.self)
                    let _TEMP2 = /*runtime*/I.NAME
                    let _TEMP3 = SDAI.FORCE_OPTIONAL(/*runtime*/_TEMP2) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
                      "quantity measure"))
                    let _TEMP4 = _TEMP1 && _TEMP3
                    return _TEMP4 }
                let _TEMP12 = SDAI.SIZEOF(SDAI.AGGREGATE<SDAI.GENERIC>(/*runtime*/_TEMP11))
                let _TEMP13 = _TEMP12 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                let _TEMP14 = _TEMP8 && _TEMP13
                return _TEMP14 }
            let _TEMP5 = SDAI.SIZEOF(_TEMP4)
            let _TEMP6 = _TEMP5 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
            let _TEMP7 = _TEMP2 && _TEMP6
            return _TEMP7 }
        let _TEMP5 = SDAI.SIZEOF(_TEMP4)
        let _TEMP6 = _TEMP5 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
        let _TEMP7 = _TEMP2 && _TEMP6
        return _TEMP7 }
    let _TEMP14 = SDAI.SIZEOF(_TEMP13)
    let _TEMP15 = _TEMP14 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr5 = _TEMP15
    _conformance["WHERE_wr5"] = WHERE_wr5


    let _TEMP16 = PART_OCCURRENCES?.QUERY{ PD in 

        let _TEMP1 = PD.NAME
        let _TEMP2 = _TEMP1 .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("specified instance"))
        let _TEMP3 = SDAI.USEDIN(T: PD, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .ePRODUCT_DEFINITION_OCCURRENCE_RELATIONSHIP.OCCURRENCE)
        let _TEMP4 = _TEMP3.QUERY{ PDOR in 

            let _TEMP1 = SDAI.TYPEOF(PDOR.OCCURRENCE_USAGE, IS: eSPECIFIED_HIGHER_USAGE_OCCURRENCE.self)
            return _TEMP1 }
        let _TEMP5 = SDAI.SIZEOF(_TEMP4)
        let _TEMP6 = _TEMP5 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
        let _TEMP7 = _TEMP2 && _TEMP6
        return _TEMP7 }
    let _TEMP17 = SDAI.SIZEOF(_TEMP16)
    let _TEMP18 = _TEMP17 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr6 = _TEMP18
    _conformance["WHERE_wr6"] = WHERE_wr6


    return _conformance
  }

}
