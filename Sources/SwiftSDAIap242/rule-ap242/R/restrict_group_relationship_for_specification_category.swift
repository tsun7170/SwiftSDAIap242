/* file: restrict_group_relationship_for_specification_category.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -RULE DEFINITION in EXPRESS
/*

  RULE restrict_group_relationship_for_specification_category FOR ( group_relationship );

  WHERE
    wr1: ( SIZEOF( QUERY ( gr <* group_relationship | ( ( gr.name = 'specification category hierarchy' ) AND 
             ( ( NOT ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_CONCEPT_FEATURE_CATEGORY' IN 
             TYPEOF( gr.related_group ) ) ) OR ( NOT ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
             + 'PRODUCT_CONCEPT_FEATURE_CATEGORY'  IN TYPEOF( gr.relating_group ) ) ) ) ) ) ) = 0 );

  END_RULE; -- restrict_group_relationship_for_specification_category (line:49518 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static
  func RESTRICT_GROUP_RELATIONSHIP_FOR_SPECIFICATION_CATEGORY( 
    allComplexEntities: AnySequence<SDAI.ComplexEntity> ) -> [SDAI.WhereLabel:SDAI.LOGICAL] {

    //ENTITY REFERENCES
    let GROUP_RELATIONSHIP = SDAI.POPULATION(OF: eGROUP_RELATIONSHIP.self, FROM: allComplexEntities)


    //WHERE
    var _conformance: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]

    let _TEMP1 = GROUP_RELATIONSHIP.QUERY{ GR in 

        let _TEMP1 = GR.NAME
        let _TEMP2 = SDAI.FORCE_OPTIONAL(_TEMP1) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
          "specification category hierarchy"))
        let _TEMP3 = SDAI.TYPEOF(GR.RELATED_GROUP, IS: ePRODUCT_CONCEPT_FEATURE_CATEGORY.self)
        let _TEMP4 =  !_TEMP3
        let _TEMP5 = SDAI.TYPEOF(GR.RELATING_GROUP, IS: ePRODUCT_CONCEPT_FEATURE_CATEGORY.self)
        let _TEMP6 =  !_TEMP5
        let _TEMP7 = _TEMP4 || _TEMP6
        let _TEMP8 = _TEMP2 && _TEMP7
        return _TEMP8 }
    let _TEMP2 = SDAI.SIZEOF(_TEMP1)
    let _TEMP3 = _TEMP2 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr1 = _TEMP3
    _conformance["WHERE_wr1"] = WHERE_wr1


    return _conformance
  }

}
