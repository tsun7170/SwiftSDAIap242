/* file: restrict_configuration_design_for_class_breakdown_association.swift 	 generated: Sat Aug 14 13:46:02 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -RULE DEFINITION in EXPRESS
/*

  RULE restrict_configuration_design_for_class_breakdown_association FOR ( configuration_design );

  WHERE
    wr1: ( SIZEOF( QUERY ( cd <* configuration_design | ( ( cd.name = 'functionality' ) AND ( ( NOT ( 
             'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION'  IN TYPEOF( cd.design ) ) ) 
             OR ( cd.design\product_definition.frame_of_reference.name <> 'functional definition' ) ) ) ) ) =
             0 );
    wr2: ( SIZEOF( QUERY ( cd <* configuration_design | ( ( cd.name = 'realization' ) AND ( ( NOT ( 
             'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION'  IN TYPEOF( cd.design ) ) ) 
             OR ( cd.design\product_definition.frame_of_reference.name <> 'conceptual definition' ) ) ) ) ) =
             0 );
    wr3: ( SIZEOF( QUERY ( cd <* configuration_design | ( ( cd.name IN [ 'functionality', 'realization'] ) 
             AND ( NOT ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_CLASS' IN TYPEOF( cd.
             configuration.item_concept ) ) ) ) ) ) = 0 );

  END_RULE; -- restrict_configuration_design_for_class_breakdown_association (line:49456 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static
  func RESTRICT_CONFIGURATION_DESIGN_FOR_CLASS_BREAKDOWN_ASSOCIATION( 
    allComplexEntities: AnySequence<SDAI.ComplexEntity> ) -> [SDAI.WhereLabel:SDAI.LOGICAL] {

    //ENTITY REFERENCES
    let CONFIGURATION_DESIGN = SDAI.POPULATION(OF: eCONFIGURATION_DESIGN.self, FROM: allComplexEntities)


    //WHERE
    var _conformance: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]

    let _TEMP1 = CONFIGURATION_DESIGN
      .QUERY{ CD in 

        let _TEMP1 = CD.NAME
        let _TEMP2 = _TEMP1 .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("functionality"))
        let _TEMP3 = SDAI.TYPEOF(CD.DESIGN, IS: ePRODUCT_DEFINITION.self)
        let _TEMP4 =  !_TEMP3
        let _TEMP5 = CD.DESIGN
        let _TEMP6 = _TEMP5.GROUP_REF(ePRODUCT_DEFINITION.self)
        let _TEMP7 = _TEMP6?.FRAME_OF_REFERENCE
        let _TEMP8 = _TEMP7?.NAME
        let _TEMP9 = _TEMP8 .!=. SDAI.FORCE_OPTIONAL(SDAI.STRING("functional definition"))
        let _TEMP10 = _TEMP4 || _TEMP9
        let _TEMP11 = _TEMP2 && _TEMP10
        return _TEMP11 }
    let _TEMP2 = SDAI.SIZEOF(_TEMP1)
    let _TEMP3 = _TEMP2 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr1 = _TEMP3
    _conformance["WHERE_wr1"] = WHERE_wr1


    let _TEMP4 = CONFIGURATION_DESIGN
      .QUERY{ CD in 

        let _TEMP1 = CD.NAME
        let _TEMP2 = _TEMP1 .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("realization"))
        let _TEMP3 = SDAI.TYPEOF(CD.DESIGN, IS: ePRODUCT_DEFINITION.self)
        let _TEMP4 =  !_TEMP3
        let _TEMP5 = CD.DESIGN
        let _TEMP6 = _TEMP5.GROUP_REF(ePRODUCT_DEFINITION.self)
        let _TEMP7 = _TEMP6?.FRAME_OF_REFERENCE
        let _TEMP8 = _TEMP7?.NAME
        let _TEMP9 = _TEMP8 .!=. SDAI.FORCE_OPTIONAL(SDAI.STRING("conceptual definition"))
        let _TEMP10 = _TEMP4 || _TEMP9
        let _TEMP11 = _TEMP2 && _TEMP10
        return _TEMP11 }
    let _TEMP5 = SDAI.SIZEOF(_TEMP4)
    let _TEMP6 = _TEMP5 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr2 = _TEMP6
    _conformance["WHERE_wr2"] = WHERE_wr2


    let _TEMP7 = CONFIGURATION_DESIGN
      .QUERY{ CD in 

        let _TEMP1 = CD.NAME
        let _TEMP2 = ([SDAI.AIE(SDAI.STRING("functionality")), 
          SDAI.AIE(SDAI.STRING("realization"))] as [SDAI.AggregationInitializerElement<SDAI.STRING>])
        let _TEMP3 = SDAI.aggregate(_TEMP2, contains: SDAI.STRING(/*tLABEL*/_TEMP1))
        let _TEMP4 = SDAI.TYPEOF(CD.CONFIGURATION.ITEM_CONCEPT, IS: ePRODUCT_CLASS.self)
        let _TEMP5 =  !_TEMP4
        let _TEMP6 = _TEMP3 && _TEMP5
        return _TEMP6 }
    let _TEMP8 = SDAI.SIZEOF(_TEMP7)
    let _TEMP9 = _TEMP8 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr3 = _TEMP9
    _conformance["WHERE_wr3"] = WHERE_wr3


    return _conformance
  }

}
