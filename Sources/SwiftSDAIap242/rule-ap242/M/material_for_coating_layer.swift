/* file: material_for_coating_layer.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -RULE DEFINITION in EXPRESS
/*

  RULE material_for_coating_layer FOR ( shape_aspect );

    LOCAL
      coating_layers : SET OF shape_aspect := [];
    END_LOCAL;
    coating_layers := QUERY ( r <* shape_aspect | ( r.name = 'coating layer' ) );

  WHERE
    wr1: ( SIZEOF( QUERY ( r <* coating_layers | ( SIZEOF( USEDIN( r, 
             'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.MATERIAL_DESIGNATION.DEFINITIONS'  ) ) <> 1 ) ) ) 
             = 0 );

  END_RULE; -- material_for_coating_layer (line:49156 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static
  func MATERIAL_FOR_COATING_LAYER( 
    allComplexEntities: AnySequence<SDAI.ComplexEntity> ) -> [SDAI.WhereLabel:SDAI.LOGICAL] {

    //ENTITY REFERENCES
    let SHAPE_ASPECT = SDAI.POPULATION(OF: eSHAPE_ASPECT.self, FROM: allComplexEntities)

    //LOCAL
    var COATING_LAYERS: SDAI.SET<eSHAPE_ASPECT>?  = SDAI.SET<eSHAPE_ASPECT>(SDAI.EMPLY_AGGREGATE); SDAI.TOUCH(var: &COATING_LAYERS)

    
    let _TEMP1 = SHAPE_ASPECT.QUERY{ R in 

        let _TEMP1 = R.NAME
        let _TEMP2 = SDAI.FORCE_OPTIONAL(_TEMP1) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("coating layer"))
        return _TEMP2 }
    COATING_LAYERS = _TEMP1

    //WHERE
    var _conformance: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]

    let _TEMP2 = COATING_LAYERS?.QUERY{ R in 

        let _TEMP1 = SDAI.USEDIN(T: R, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .eMATERIAL_DESIGNATION.DEFINITIONS)
        let _TEMP2 = SDAI.SIZEOF(_TEMP1)
        let _TEMP3 = _TEMP2 .!=. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
        return _TEMP3 }
    let _TEMP3 = SDAI.SIZEOF(_TEMP2)
    let _TEMP4 = _TEMP3 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr1 = _TEMP4
    _conformance["WHERE_wr1"] = WHERE_wr1


    return _conformance
  }

}
