/* file: non_uniform_zone_definition_constraint.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -RULE DEFINITION in EXPRESS
/*

  RULE non_uniform_zone_definition_constraint FOR ( tolerance_zone_definition, tolerance_zone, 
    tolerance_zone_form );

    LOCAL
      tzf_set  : SET OF tolerance_zone_form := QUERY ( tzf <* tolerance_zone_form | ( tzf\tolerance_zone_form
                  .name = 'non uniform' ) );
      nuzd_set : SET OF tolerance_zone_definition := QUERY ( tzd <* tolerance_zone_definition | ( 
                  'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.NON_UNIFORM_ZONE_DEFINITION'  IN TYPEOF( 
                  tzd ) ) );
    END_LOCAL;

  WHERE
    wr1: ( QUERY ( tzd <* nuzd_set | ( tzd\tolerance_zone_definition.zone\tolerance_zone.form IN tzf_set ) ) 
             = nuzd_set );

  END_RULE; -- non_uniform_zone_definition_constraint (line:49167 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static
  func NON_UNIFORM_ZONE_DEFINITION_CONSTRAINT( 
    allComplexEntities: AnySequence<SDAI.ComplexEntity> ) -> [SDAI.WhereLabel:SDAI.LOGICAL] {

    //ENTITY REFERENCES
    let TOLERANCE_ZONE_DEFINITION = 
      SDAI.POPULATION(OF: eTOLERANCE_ZONE_DEFINITION.self, FROM: allComplexEntities)
    let TOLERANCE_ZONE = SDAI.POPULATION(OF: eTOLERANCE_ZONE.self, FROM: allComplexEntities)
    let TOLERANCE_ZONE_FORM = SDAI.POPULATION(OF: eTOLERANCE_ZONE_FORM.self, FROM: allComplexEntities)

    //LOCAL
    var TZF_SET: SDAI.SET<eTOLERANCE_ZONE_FORM>?  = TOLERANCE_ZONE_FORM
                                                    .QUERY{ TZF in 

                                                      let _TEMP1 = TZF.GROUP_REF(eTOLERANCE_ZONE_FORM.self)
                                                      let _TEMP2 = _TEMP1?.NAME
                                                      let _TEMP3 = _TEMP2 .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
                                                        "non uniform"))
                                                      return _TEMP3 }; SDAI.TOUCH(var: &TZF_SET)
    var NUZD_SET: SDAI.SET<eTOLERANCE_ZONE_DEFINITION>?  = TOLERANCE_ZONE_DEFINITION
                                                           .QUERY{ TZD in 

                                                             let _TEMP1 = SDAI.TYPEOF(TZD, 
                                                               IS: eNON_UNIFORM_ZONE_DEFINITION.self)
                                                             return _TEMP1 }; SDAI.TOUCH(var: &NUZD_SET)
    //END_LOCAL


    //WHERE
    var _conformance: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]

    let _TEMP1 = NUZD_SET?.QUERY{ TZD in 

        let _TEMP1 = TZD.GROUP_REF(eTOLERANCE_ZONE_DEFINITION.self)
        let _TEMP2 = _TEMP1?.ZONE
        let _TEMP3 = _TEMP2?.GROUP_REF(eTOLERANCE_ZONE.self)
        let _TEMP4 = _TEMP3?.FORM
        let _TEMP5 = SDAI.aggregate(TZF_SET, contains: _TEMP4)
        return _TEMP5 }
    let _TEMP2 = _TEMP1 .==. NUZD_SET
    let WHERE_wr1 = _TEMP2
    _conformance["WHERE_wr1"] = WHERE_wr1


    return _conformance
  }

}
