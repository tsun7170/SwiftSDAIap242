/* file: selected_instance_usage_requires_representation.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -RULE DEFINITION in EXPRESS
/*

  RULE selected_instance_usage_requires_representation FOR ( assembly_component_usage );

    LOCAL
      selected_instance_usages : SET OF assembly_component_usage := QUERY ( acr <* assembly_component_usage
                                  | ( acr.name = 'selected instance usage' ) );
    END_LOCAL;

  WHERE
    wr1: ( SIZEOF( QUERY ( acr <* selected_instance_usages | ( NOT valid_selected_instance_representation( 
             acr ) ) ) ) = 0 );

  END_RULE; -- selected_instance_usage_requires_representation (line:49734 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static
  func SELECTED_INSTANCE_USAGE_REQUIRES_REPRESENTATION( 
    allComplexEntities: AnySequence<SDAI.ComplexEntity> ) -> [SDAI.WhereLabel:SDAI.LOGICAL] {

    //ENTITY REFERENCES
    let ASSEMBLY_COMPONENT_USAGE = 
      SDAI.POPULATION(OF: eASSEMBLY_COMPONENT_USAGE.self, FROM: allComplexEntities)

    //LOCAL
    var SELECTED_INSTANCE_USAGES: SDAI.SET<eASSEMBLY_COMPONENT_USAGE>?  = 
      ASSEMBLY_COMPONENT_USAGE.QUERY{ ACR in 

        let _TEMP1 = ACR.NAME
        let _TEMP2 = SDAI.FORCE_OPTIONAL(_TEMP1) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("selected instance usage"))
        return _TEMP2 }; SDAI.TOUCH(var: &SELECTED_INSTANCE_USAGES)


    //WHERE
    var _conformance: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]

    let _TEMP1 = SELECTED_INSTANCE_USAGES?
      .QUERY{ ACR in 

        let _TEMP1 = VALID_SELECTED_INSTANCE_REPRESENTATION(sPRODUCT_DEFINITION_OR_ASSEMBLY_RELATIONSHIP(/*
          eASSEMBLY_COMPONENT_USAGE*/ACR))
        let _TEMP2 =  !_TEMP1
        return _TEMP2 }
    let _TEMP2 = SDAI.SIZEOF(_TEMP1)
    let _TEMP3 = _TEMP2 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr1 = _TEMP3
    _conformance["WHERE_wr1"] = WHERE_wr1


    return _conformance
  }

}
