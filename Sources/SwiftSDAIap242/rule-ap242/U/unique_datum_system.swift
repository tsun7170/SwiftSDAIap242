/* file: unique_datum_system.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -RULE DEFINITION in EXPRESS
/*

  RULE unique_datum_system FOR ( datum_system );

    LOCAL
      pass : BOOLEAN := TRUE;
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( datum_system ) BY 1;
      REPEAT j := 1 TO SIZEOF( datum_system ) BY 1;
        IF i <> j THEN
          IF datum_system[i]\datum_system.constituents = datum_system[j]\datum_system.constituents THEN
            pass := FALSE;
          END_IF;
        END_IF;
      END_REPEAT;
    END_REPEAT;

  WHERE
    wr1: pass;

  END_RULE; -- unique_datum_system (line:49928 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static
  func UNIQUE_DATUM_SYSTEM( 
    allComplexEntities: AnySequence<SDAI.ComplexEntity> ) -> [SDAI.WhereLabel:SDAI.LOGICAL] {

    //ENTITY REFERENCES
    let DATUM_SYSTEM = SDAI.POPULATION(OF: eDATUM_SYSTEM.self, FROM: allComplexEntities)

    //LOCAL
    var PASS: SDAI.BOOLEAN?  = SDAI.BOOLEAN(SDAI.TRUE); SDAI.TOUCH(var: &PASS)

    if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/SDAI.SIZEOF(
      DATUM_SYSTEM)) {
      for I in incrementControl {
        if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/
          SDAI.SIZEOF(DATUM_SYSTEM)) {
          for J in incrementControl {
            
            let _TEMP1 = SDAI.FORCE_OPTIONAL(I) .!=. SDAI.FORCE_OPTIONAL(J)
            if SDAI.IS_TRUE( _TEMP1 ) {
              
              let _TEMP2 = DATUM_SYSTEM[I]
              let _TEMP3 = _TEMP2?.GROUP_REF(eDATUM_SYSTEM.self)
              let _TEMP4 = _TEMP3?.CONSTITUENTS
              let _TEMP5 = DATUM_SYSTEM[J]
              let _TEMP6 = _TEMP5?.GROUP_REF(eDATUM_SYSTEM.self)
              let _TEMP7 = _TEMP6?.CONSTITUENTS
              let _TEMP8 = _TEMP4 .==. _TEMP7
              if SDAI.IS_TRUE( _TEMP8 ) {
                PASS = SDAI.BOOLEAN(SDAI.FALSE)
              }
            }
          }
        }
      }
    }

    //WHERE
    var _conformance: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]
    let WHERE_wr1 = SDAI.LOGICAL(/*SDAI.BOOLEAN*/PASS)
    _conformance["WHERE_wr1"] = WHERE_wr1


    return _conformance
  }

}
