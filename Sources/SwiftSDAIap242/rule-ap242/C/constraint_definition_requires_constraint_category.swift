/* file: constraint_definition_requires_constraint_category.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -RULE DEFINITION in EXPRESS
/*

  RULE constraint_definition_requires_constraint_category FOR ( product_definition );

    LOCAL
      constraint_definitions : SET OF product_definition := [];
    END_LOCAL;
    constraint_definitions := QUERY ( pd <* product_definition | ( pd.frame_of_reference.name = 
        'design constraint definition'  ) );

  WHERE
    wr1: ( SIZEOF( QUERY ( pd <* constraint_definitions | ( SIZEOF( QUERY ( prpc <* USEDIN( pd.formation.
             of_product, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.'
             + 'PRODUCTS'  ) | ( prpc.name = 'requirement' ) ) ) = 0 ) ) ) = 0 );

  END_RULE; -- constraint_definition_requires_constraint_category (line:49008 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static
  func CONSTRAINT_DEFINITION_REQUIRES_CONSTRAINT_CATEGORY( 
    allComplexEntities: AnySequence<SDAI.ComplexEntity> ) -> [SDAI.WhereLabel:SDAI.LOGICAL] {

    //ENTITY REFERENCES
    let PRODUCT_DEFINITION = SDAI.POPULATION(OF: ePRODUCT_DEFINITION.self, FROM: allComplexEntities)

    //LOCAL
    var CONSTRAINT_DEFINITIONS: SDAI.SET<ePRODUCT_DEFINITION>?  = SDAI.SET<ePRODUCT_DEFINITION>(
                                                                  SDAI.EMPLY_AGGREGATE); SDAI.TOUCH(var: &CONSTRAINT_DEFINITIONS)

    
    let _TEMP1 = PRODUCT_DEFINITION.QUERY{ PD in 

        let _TEMP1 = PD.FRAME_OF_REFERENCE
        let _TEMP2 = _TEMP1.NAME
        let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP2) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
          "design constraint definition"))
        return _TEMP3 }
    CONSTRAINT_DEFINITIONS = _TEMP1

    //WHERE
    var _conformance: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]

    let _TEMP2 = CONSTRAINT_DEFINITIONS?
      .QUERY{ PD in 

        let _TEMP1 = PD.FORMATION
        let _TEMP2 = _TEMP1.OF_PRODUCT
        let _TEMP3 = SDAI.USEDIN(T: _TEMP2, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .ePRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS)
        let _TEMP4 = _TEMP3.QUERY{ PRPC in 

            let _TEMP1 = /*runtime*/PRPC.NAME
            let _TEMP2 = SDAI.FORCE_OPTIONAL(/*runtime*/_TEMP1) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING(
              "requirement"))
            return _TEMP2 }
        let _TEMP5 = SDAI.SIZEOF(_TEMP4)
        let _TEMP6 = _TEMP5 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
        return _TEMP6 }
    let _TEMP3 = SDAI.SIZEOF(_TEMP2)
    let _TEMP4 = _TEMP3 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let WHERE_wr1 = _TEMP4
    _conformance["WHERE_wr1"] = WHERE_wr1


    return _conformance
  }

}
