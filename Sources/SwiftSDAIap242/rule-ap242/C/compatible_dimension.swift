/* file: compatible_dimension.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -RULE DEFINITION in EXPRESS
/*

  RULE compatible_dimension FOR ( cartesian_point, direction, geometric_representation_context );

  WHERE
    wr1: check_geometric_dimension( cartesian_point, direction, geometric_representation_context );

  END_RULE; -- compatible_dimension (line:48918 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static
  func COMPATIBLE_DIMENSION( 
    allComplexEntities: AnySequence<SDAI.ComplexEntity> ) -> [SDAI.WhereLabel:SDAI.LOGICAL] {

    //ENTITY REFERENCES
    let CARTESIAN_POINT = SDAI.POPULATION(OF: eCARTESIAN_POINT.self, FROM: allComplexEntities)
    let DIRECTION = SDAI.POPULATION(OF: eDIRECTION.self, FROM: allComplexEntities)
    let GEOMETRIC_REPRESENTATION_CONTEXT = 
      SDAI.POPULATION(OF: eGEOMETRIC_REPRESENTATION_CONTEXT.self, FROM: allComplexEntities)


    //WHERE
    var _conformance: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]

    let _TEMP1 = CHECK_GEOMETRIC_DIMENSION(
      CAPT: SDAI.SET<eCARTESIAN_POINT>(bound1: SDAI.UNWRAP(SDAI.INTEGER(0)), bound2: (nil as SDAI.INTEGER?), 
      /*SDAI.SET<eCARTESIAN_POINT>*/CARTESIAN_POINT), 
      DIR: SDAI.SET<eDIRECTION>(bound1: SDAI.UNWRAP(SDAI.INTEGER(0)), bound2: (nil as SDAI.INTEGER?), 
      /*SDAI.SET<eDIRECTION>*/DIRECTION), 
      GRC: SDAI.SET<eGEOMETRIC_REPRESENTATION_CONTEXT>(bound1: SDAI.UNWRAP(SDAI.INTEGER(0)), bound2: (nil as 
      SDAI.INTEGER?), /*SDAI.SET<eGEOMETRIC_REPRESENTATION_CONTEXT>*/GEOMETRIC_REPRESENTATION_CONTEXT))
    let WHERE_wr1 = SDAI.LOGICAL(/*SDAI.BOOLEAN*/_TEMP1)
    _conformance["WHERE_wr1"] = WHERE_wr1


    return _conformance
  }

}
