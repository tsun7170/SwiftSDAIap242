/* file: data_equivalence_inspection_requirement.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY data_equivalence_inspection_requirement
    SUBTYPE OF ( representation_item );
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* bag_to_set( USEDIN( SELF, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
               + 'REPRESENTATION.ITEMS'  ) ) | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
               + 'DATA_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION'  IN TYPEOF( q ) ) ) ) = 0 );
  END_ENTITY; -- data_equivalence_inspection_requirement (line:11399 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  SUPER- ENTITY(1)	representation_item
    ATTR:  name,	TYPE: label -- EXPLICIT


  ENTITY(SELF)	data_equivalence_inspection_requirement
    (no local attributes)

  SUB- ENTITY(3)	a3ms_equivalence_criterion_with_specified_elements
    REDCR: comparing_specified_elements,	TYPE: SET [1 : ?] OF a3ms_inspected_equivalence_element_select -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion_with_specified_elements

    REDCR: compared_specified_elements,	TYPE: SET [1 : ?] OF a3ms_inspected_equivalence_element_select -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion_with_specified_elements


  SUB- ENTITY(4)	a3m_equivalence_criterion_with_specified_elements
    ATTR:  comparing_specified_elements,	TYPE: SET [1 : ?] OF inspected_equivalence_element_select -- EXPLICIT
      -- possibly overriden by
          ENTITY: a3ms_equivalence_criterion_with_specified_elements,	TYPE: SET [1 : ?] OF a3ms_inspected_equivalence_element_select

    ATTR:  compared_specified_elements,	TYPE: SET [1 : ?] OF inspected_equivalence_element_select -- EXPLICIT
      -- possibly overriden by
          ENTITY: a3ms_equivalence_criterion_with_specified_elements,	TYPE: SET [1 : ?] OF a3ms_inspected_equivalence_element_select


  SUB- ENTITY(5)	different_bounding_box
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [3 : 3] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_manifold_solid_brep, etns_shell_based_surface_model, etns_shell_based_wireframe_model]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_two_cartesian_points]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(6)	different_centroid
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [3 : 3] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_manifold_solid_brep, etns_shell_based_surface_model, etns_shell_based_wireframe_model]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_cartesian_point]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := [atns_length_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(7)	different_curve_length
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_edge_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_length_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := [atns_length_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(8)	different_number_of_closed_shell
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_manifold_solid_brep]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_count_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(9)	different_number_of_geometric_elements
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [2 : 2] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_manifold_solid_brep, etns_shell_based_surface_model]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_three_count_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(10)	different_number_of_geometric_elements_wireframe_model
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_shell_based_wireframe_model]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_two_count_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(11)	different_number_of_topological_elements
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [2 : 2] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_manifold_solid_brep, etns_shell_based_surface_model]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_five_count_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(12)	different_number_of_topological_elements_wireframe_model
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_shell_based_wireframe_model]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_four_count_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(13)	different_surface_area
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_area_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_area_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := [atns_area_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(14)	different_volume
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_manifold_solid_brep]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_volume_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_volume_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := [atns_volume_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(15)	a3m_equivalence_criterion_of_representative_shape_property_value
    REDCR: comparing_element_types,	TYPE: LIST [1 : ?] OF a3m_element_type_name -- DERIVED (DYNAMIC)
      := SELF\a3m_equivalence_criterion.compared_element_types
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(16)	mismatch_of_underlying_face_geometry
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_face]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(17)	different_surface_normal
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_plane_angle_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_cartesian_point, ddns_point_on_surface]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := [atns_plane_angle_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(18)	mismatch_of_arcwise_connected_curves
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_edge_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_edge_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_cartesian_point, ddns_point_on_curve]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := [atns_length_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(19)	mismatch_of_arcwise_connected_surfaces
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_cartesian_point, ddns_point_on_surface]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := [atns_length_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(20)	mismatch_of_arcwise_connected_surfaces_boundary
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_cartesian_point, ddns_point_on_curve]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := [atns_length_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(21)	mismatch_of_points
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_vertex_point]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_vertex_point]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_no_element]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(22)	mismatch_of_point_cloud_and_related_geometry
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: comparing_element_types,	TYPE: LIST [2 : 2] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_edge_set, etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_point_cloud_dataset]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [3 : 3] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_cartesian_point, ddns_point_on_curve, ddns_point_on_surface]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := [atns_length_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(23)	mismatch_of_underlying_edge_geometry
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_edge]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(24)	a3m_equivalence_criterion_of_detailed_shape_data_content
    (no local attributes)

  SUB- ENTITY(25)	missing_edge
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_edge_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_no_element, ddns_edge]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(26)	missing_face
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_no_element, ddns_face]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(27)	mismatch_of_edges
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_edge_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_edge, ddns_several_edges]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(28)	mismatch_of_faces
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ms_element_type_name -- DERIVED (DYNAMIC)
      := [etns_connected_face_set]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdns_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddns_face, ddns_several_faces]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(29)	a3m_equivalence_criterion_of_shape_data_structure
    REDCR: comparing_element_types,	TYPE: LIST [1 : ?] OF a3m_element_type_name -- DERIVED (DYNAMIC)
      := SELF\a3m_equivalence_criterion.compared_element_types
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(30)	a3m_equivalence_criterion_for_shape
    REDCR: comparing_element_types,	TYPE: LIST [1 : ?] OF a3ms_element_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : ?] OF a3ms_element_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ms_measured_data_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : ?] OF a3ms_detected_difference_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : ?] OF a3ms_accuracy_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(31)	different_length_of_assembly_constraint
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_binary_assembly_constraint]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(32)	different_angle_of_assembly_constraint
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_plane_angle_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_binary_assembly_constraint]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(33)	different_assembly_constraint_type
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_binary_assembly_constraint]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(34)	different_component_type
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_assembly_component_usage]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(35)	different_placement_of_component
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_length_measure_and_context_dependent_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_context_dependent_shape_representation]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    ATTR:  assessment_threshold_2,	TYPE: a3ma_equivalence_criterion_assessment_threshold_relationship -- INVERSE
      FOR relating_representation_item;


  SUB- ENTITY(36)	a3m_equivalence_criterion_of_detailed_assembly_data_content
    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ma_element_type_name -- DERIVED (DYNAMIC)
      := [etna_product_definition_or_reference]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ma_element_type_name -- DERIVED (DYNAMIC)
      := [etna_product_definition_or_reference]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(37)	different_assembly_centroid_using_notional_solid
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_cartesian_point]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(38)	different_assembly_centroid
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_cartesian_point]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(39)	different_assembly_volume
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_volume_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_volume_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(40)	different_number_of_components
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_count_measure]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(41)	a3m_equivalence_criterion_of_representative_assembly_property_value
    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ma_element_type_name -- DERIVED (DYNAMIC)
      := [etna_product_definition_or_reference]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ma_element_type_name -- DERIVED (DYNAMIC)
      := [etna_product_definition_or_reference]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(42)	different_component_shape
    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ma_element_type_name -- DERIVED (DYNAMIC)
      := [etna_shape_representation]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ma_element_type_name -- DERIVED (DYNAMIC)
      := [etna_shape_representation]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_a3ms_inspected_equivalence_element_select]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    ATTR:  shape_criteria,	TYPE: SET [1 : ?] OF a3ma_assembly_and_shape_criteria_relationship -- INVERSE
      FOR relating_representation_item;


  SUB- ENTITY(43)	a3m_equivalence_criterion_of_component_property_difference
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(44)	mismatch_of_component
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_assembly_component_usage]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(45)	missing_assembly_constraint
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [2 : 2] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_no_element, ddna_binary_assembly_constraint]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(46)	missing_component
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [2 : 2] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_no_element, ddna_assembly_component_usage]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(47)	different_component_identification_via_multi_level_reference
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_multi_level_reference_designator]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(48)	a3m_equivalence_criterion_of_assembly_data_structure
    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ma_element_type_name -- DERIVED (DYNAMIC)
      := [etna_product_definition_or_reference]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ma_element_type_name -- DERIVED (DYNAMIC)
      := [etna_product_definition_or_reference]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(49)	a3m_equivalence_criterion_for_assembly
    REDCR: comparing_element_types,	TYPE: LIST [1 : ?] OF a3ma_element_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : ?] OF a3ma_element_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : ?] OF a3ma_detected_difference_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ma_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(50)	a3m_equivalence_criterion
    ATTR:  assessment_specification,	TYPE: a3m_equivalence_assessment_specification_select -- EXPLICIT
      -- possibly overriden by
          ENTITY: different_length_of_assembly_constraint,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_assembly_centroid_using_notional_solid,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: mismatch_of_component,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_number_of_closed_shell,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_curve_length,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: missing_assembly_constraint,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_angle_of_assembly_constraint,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_number_of_topological_elements_wireframe_model,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: missing_edge,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_number_of_geometric_elements,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: missing_face,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: mismatch_of_points,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: missing_component,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_placement_of_component,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_volume,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_component_identification_via_multi_level_reference,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_surface_area,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_centroid,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_bounding_box,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_assembly_volume,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: a3m_equivalence_criterion_of_component_property_difference,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_number_of_geometric_elements_wireframe_model,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: mismatch_of_edges,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: mismatch_of_faces,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_surface_normal,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_number_of_topological_elements,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_assembly_centroid,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_component_type,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_number_of_components,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_assembly_constraint_type,	TYPE: a3m_equivalence_assessment_by_logical_test

    ATTR:  comparing_element_types,	TYPE: LIST [1 : ?] OF a3m_element_type_name -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: a3m_equivalence_criterion_of_representative_shape_property_value,	TYPE: LIST [1 : ?] OF a3m_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_detailed_assembly_data_content,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_points,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_component_shape,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: LIST [2 : 2] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_representative_assembly_property_value,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_shape_data_structure,	TYPE: LIST [1 : ?] OF a3m_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_assembly_data_structure,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: different_surface_normal,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_for_shape,	TYPE: LIST [1 : ?] OF a3ms_element_type_name
          ENTITY: a3m_equivalence_criterion_for_assembly,	TYPE: LIST [1 : ?] OF a3ma_element_type_name

    ATTR:  compared_element_types,	TYPE: LIST [1 : ?] OF a3m_element_type_name -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: different_number_of_closed_shell,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_curve_length,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_detailed_assembly_data_content,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements_wireframe_model,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: missing_edge,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements,	TYPE: LIST [2 : 2] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: missing_face,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_points,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_component_shape,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: different_volume,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_surface_area,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_centroid,	TYPE: LIST [3 : 3] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_representative_assembly_property_value,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: different_bounding_box,	TYPE: LIST [3 : 3] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements_wireframe_model,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_edges,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_assembly_data_structure,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_faces,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_surface_normal,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements,	TYPE: LIST [2 : 2] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_for_shape,	TYPE: LIST [1 : ?] OF a3ms_element_type_name
          ENTITY: a3m_equivalence_criterion_for_assembly,	TYPE: LIST [1 : ?] OF a3ma_element_type_name

    ATTR:  measured_data_type,	TYPE: a3m_measured_data_type_name -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: different_length_of_assembly_constraint,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_assembly_centroid_using_notional_solid,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_component,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_number_of_closed_shell,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_curve_length,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: missing_assembly_constraint,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_angle_of_assembly_constraint,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements_wireframe_model,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: missing_edge,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: missing_face,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_points,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: missing_component,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_placement_of_component,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_volume,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_component_identification_via_multi_level_reference,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_surface_area,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_centroid,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_bounding_box,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_assembly_volume,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_component_property_difference,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements_wireframe_model,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_edges,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_faces,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_surface_normal,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_assembly_centroid,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_component_type,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_for_shape,	TYPE: a3ms_measured_data_type_name
          ENTITY: a3m_equivalence_criterion_for_assembly,	TYPE: a3ma_measured_data_type_name
          ENTITY: different_number_of_components,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_assembly_constraint_type,	TYPE: a3ma_measured_data_type_name	(as DERIVED)

    ATTR:  detected_difference_types,	TYPE: LIST [0 : ?] OF a3m_detected_difference_type_name -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: different_length_of_assembly_constraint,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_assembly_centroid_using_notional_solid,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_component,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_number_of_closed_shell,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_curve_length,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: missing_assembly_constraint,	TYPE: LIST [2 : 2] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_angle_of_assembly_constraint,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements_wireframe_model,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: missing_edge,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: missing_face,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_points,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: missing_component,	TYPE: LIST [2 : 2] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_placement_of_component,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_component_shape,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_volume,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_component_identification_via_multi_level_reference,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_surface_area,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_centroid,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: LIST [3 : 3] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_bounding_box,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_assembly_volume,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements_wireframe_model,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_edges,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_faces,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_surface_normal,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_assembly_centroid,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_component_type,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_for_shape,	TYPE: LIST [1 : ?] OF a3ms_detected_difference_type_name
          ENTITY: a3m_equivalence_criterion_for_assembly,	TYPE: LIST [1 : ?] OF a3ma_detected_difference_type_name
          ENTITY: different_number_of_components,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_assembly_constraint_type,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)

    ATTR:  accuracy_types,	TYPE: LIST [0 : ?] OF a3m_accuracy_type_name -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: different_number_of_closed_shell,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_curve_length,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements_wireframe_model,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: missing_edge,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: missing_face,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_points,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_volume,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_surface_area,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_centroid,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_bounding_box,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements_wireframe_model,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_edges,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_faces,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_surface_normal,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_for_shape,	TYPE: LIST [0 : ?] OF a3ms_accuracy_type_name
          ENTITY: a3m_equivalence_criterion_for_assembly,	TYPE: LIST [0 : 0] OF a3ma_accuracy_type_name	(as DERIVED)


  SUB- ENTITY(51)	a3m_equivalence_inspection_requirement_with_values
    ATTR:  applied_values,	TYPE: SET [1 : ?] OF measure_representation_item -- EXPLICIT


*/


//MARK: - Partial Entity
  public final class _data_equivalence_inspection_requirement : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.self
    }

    //ATTRIBUTES
    // (no local attributes)

    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //MARK: WHERE RULES (ENTITY)
    public static func WHERE_wr1(SELF: eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SDAI.USEDIN(T: SELF, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
        .eREPRESENTATION.ITEMS)
      let _TEMP2 = BAG_TO_SET(_TEMP1)
      let _TEMP3 = _TEMP2?.QUERY{ Q in 

          let _TEMP1 = SDAI.TYPEOF(Q, IS: eDATA_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION.self)
          return _TEMP1 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }

    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init() {
      super.init(asAbstructSuperclass:())

    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 0
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      self.init( )
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY data_equivalence_inspection_requirement
    SUBTYPE OF ( representation_item );
    WHERE
      wr1: ( SIZEOF( QUERY ( q <* bag_to_set( USEDIN( SELF, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
               + 'REPRESENTATION.ITEMS'  ) ) | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
               + 'DATA_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION'  IN TYPEOF( q ) ) ) ) = 0 );
  END_ENTITY; -- data_equivalence_inspection_requirement (line:11399 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _data_equivalence_inspection_requirement.self
    }
    public let partialEntity: _data_equivalence_inspection_requirement

    //MARK: SUPERTYPES
    public let super_eREPRESENTATION_ITEM: eREPRESENTATION_ITEM 	// [1]
    public var super_eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT: eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT { return self } 	// [2]

    //MARK: SUBTYPES
    public var sub_eA3MS_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS: eA3MS_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS? {	// [3]
      return self.complexEntity.entityReference(eA3MS_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS: eA3M_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS? {	// [4]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS.self)
    }

    public var sub_eDIFFERENT_BOUNDING_BOX: eDIFFERENT_BOUNDING_BOX? {	// [5]
      return self.complexEntity.entityReference(eDIFFERENT_BOUNDING_BOX.self)
    }

    public var sub_eDIFFERENT_CENTROID: eDIFFERENT_CENTROID? {	// [6]
      return self.complexEntity.entityReference(eDIFFERENT_CENTROID.self)
    }

    public var sub_eDIFFERENT_CURVE_LENGTH: eDIFFERENT_CURVE_LENGTH? {	// [7]
      return self.complexEntity.entityReference(eDIFFERENT_CURVE_LENGTH.self)
    }

    public var sub_eDIFFERENT_NUMBER_OF_CLOSED_SHELL: eDIFFERENT_NUMBER_OF_CLOSED_SHELL? {	// [8]
      return self.complexEntity.entityReference(eDIFFERENT_NUMBER_OF_CLOSED_SHELL.self)
    }

    public var sub_eDIFFERENT_NUMBER_OF_GEOMETRIC_ELEMENTS: eDIFFERENT_NUMBER_OF_GEOMETRIC_ELEMENTS? {	// [9]
      return self.complexEntity.entityReference(eDIFFERENT_NUMBER_OF_GEOMETRIC_ELEMENTS.self)
    }

    public var sub_eDIFFERENT_NUMBER_OF_GEOMETRIC_ELEMENTS_WIREFRAME_MODEL: eDIFFERENT_NUMBER_OF_GEOMETRIC_ELEMENTS_WIREFRAME_MODEL? {	// [10]
      return self.complexEntity.entityReference(eDIFFERENT_NUMBER_OF_GEOMETRIC_ELEMENTS_WIREFRAME_MODEL.self)
    }

    public var sub_eDIFFERENT_NUMBER_OF_TOPOLOGICAL_ELEMENTS: eDIFFERENT_NUMBER_OF_TOPOLOGICAL_ELEMENTS? {	// [11]
      return self.complexEntity.entityReference(eDIFFERENT_NUMBER_OF_TOPOLOGICAL_ELEMENTS.self)
    }

    public var sub_eDIFFERENT_NUMBER_OF_TOPOLOGICAL_ELEMENTS_WIREFRAME_MODEL: eDIFFERENT_NUMBER_OF_TOPOLOGICAL_ELEMENTS_WIREFRAME_MODEL? {	// [12]
      return self.complexEntity.entityReference(eDIFFERENT_NUMBER_OF_TOPOLOGICAL_ELEMENTS_WIREFRAME_MODEL.self)
    }

    public var sub_eDIFFERENT_SURFACE_AREA: eDIFFERENT_SURFACE_AREA? {	// [13]
      return self.complexEntity.entityReference(eDIFFERENT_SURFACE_AREA.self)
    }

    public var sub_eDIFFERENT_VOLUME: eDIFFERENT_VOLUME? {	// [14]
      return self.complexEntity.entityReference(eDIFFERENT_VOLUME.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERION_OF_REPRESENTATIVE_SHAPE_PROPERTY_VALUE: eA3M_EQUIVALENCE_CRITERION_OF_REPRESENTATIVE_SHAPE_PROPERTY_VALUE? {	// [15]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERION_OF_REPRESENTATIVE_SHAPE_PROPERTY_VALUE.self)
    }

    public var sub_eMISMATCH_OF_UNDERLYING_FACE_GEOMETRY: eMISMATCH_OF_UNDERLYING_FACE_GEOMETRY? {	// [16]
      return self.complexEntity.entityReference(eMISMATCH_OF_UNDERLYING_FACE_GEOMETRY.self)
    }

    public var sub_eDIFFERENT_SURFACE_NORMAL: eDIFFERENT_SURFACE_NORMAL? {	// [17]
      return self.complexEntity.entityReference(eDIFFERENT_SURFACE_NORMAL.self)
    }

    public var sub_eMISMATCH_OF_ARCWISE_CONNECTED_CURVES: eMISMATCH_OF_ARCWISE_CONNECTED_CURVES? {	// [18]
      return self.complexEntity.entityReference(eMISMATCH_OF_ARCWISE_CONNECTED_CURVES.self)
    }

    public var sub_eMISMATCH_OF_ARCWISE_CONNECTED_SURFACES: eMISMATCH_OF_ARCWISE_CONNECTED_SURFACES? {	// [19]
      return self.complexEntity.entityReference(eMISMATCH_OF_ARCWISE_CONNECTED_SURFACES.self)
    }

    public var sub_eMISMATCH_OF_ARCWISE_CONNECTED_SURFACES_BOUNDARY: eMISMATCH_OF_ARCWISE_CONNECTED_SURFACES_BOUNDARY? {	// [20]
      return self.complexEntity.entityReference(eMISMATCH_OF_ARCWISE_CONNECTED_SURFACES_BOUNDARY.self)
    }

    public var sub_eMISMATCH_OF_POINTS: eMISMATCH_OF_POINTS? {	// [21]
      return self.complexEntity.entityReference(eMISMATCH_OF_POINTS.self)
    }

    public var sub_eMISMATCH_OF_POINT_CLOUD_AND_RELATED_GEOMETRY: eMISMATCH_OF_POINT_CLOUD_AND_RELATED_GEOMETRY? {	// [22]
      return self.complexEntity.entityReference(eMISMATCH_OF_POINT_CLOUD_AND_RELATED_GEOMETRY.self)
    }

    public var sub_eMISMATCH_OF_UNDERLYING_EDGE_GEOMETRY: eMISMATCH_OF_UNDERLYING_EDGE_GEOMETRY? {	// [23]
      return self.complexEntity.entityReference(eMISMATCH_OF_UNDERLYING_EDGE_GEOMETRY.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_SHAPE_DATA_CONTENT: eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_SHAPE_DATA_CONTENT? {	// [24]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_SHAPE_DATA_CONTENT.self)
    }

    public var sub_eMISSING_EDGE: eMISSING_EDGE? {	// [25]
      return self.complexEntity.entityReference(eMISSING_EDGE.self)
    }

    public var sub_eMISSING_FACE: eMISSING_FACE? {	// [26]
      return self.complexEntity.entityReference(eMISSING_FACE.self)
    }

    public var sub_eMISMATCH_OF_EDGES: eMISMATCH_OF_EDGES? {	// [27]
      return self.complexEntity.entityReference(eMISMATCH_OF_EDGES.self)
    }

    public var sub_eMISMATCH_OF_FACES: eMISMATCH_OF_FACES? {	// [28]
      return self.complexEntity.entityReference(eMISMATCH_OF_FACES.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERION_OF_SHAPE_DATA_STRUCTURE: eA3M_EQUIVALENCE_CRITERION_OF_SHAPE_DATA_STRUCTURE? {	// [29]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERION_OF_SHAPE_DATA_STRUCTURE.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERION_FOR_SHAPE: eA3M_EQUIVALENCE_CRITERION_FOR_SHAPE? {	// [30]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERION_FOR_SHAPE.self)
    }

    public var sub_eDIFFERENT_LENGTH_OF_ASSEMBLY_CONSTRAINT: eDIFFERENT_LENGTH_OF_ASSEMBLY_CONSTRAINT? {	// [31]
      return self.complexEntity.entityReference(eDIFFERENT_LENGTH_OF_ASSEMBLY_CONSTRAINT.self)
    }

    public var sub_eDIFFERENT_ANGLE_OF_ASSEMBLY_CONSTRAINT: eDIFFERENT_ANGLE_OF_ASSEMBLY_CONSTRAINT? {	// [32]
      return self.complexEntity.entityReference(eDIFFERENT_ANGLE_OF_ASSEMBLY_CONSTRAINT.self)
    }

    public var sub_eDIFFERENT_ASSEMBLY_CONSTRAINT_TYPE: eDIFFERENT_ASSEMBLY_CONSTRAINT_TYPE? {	// [33]
      return self.complexEntity.entityReference(eDIFFERENT_ASSEMBLY_CONSTRAINT_TYPE.self)
    }

    public var sub_eDIFFERENT_COMPONENT_TYPE: eDIFFERENT_COMPONENT_TYPE? {	// [34]
      return self.complexEntity.entityReference(eDIFFERENT_COMPONENT_TYPE.self)
    }

    public var sub_eDIFFERENT_PLACEMENT_OF_COMPONENT: eDIFFERENT_PLACEMENT_OF_COMPONENT? {	// [35]
      return self.complexEntity.entityReference(eDIFFERENT_PLACEMENT_OF_COMPONENT.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT: eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT? {	// [36]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.self)
    }

    public var sub_eDIFFERENT_ASSEMBLY_CENTROID_USING_NOTIONAL_SOLID: eDIFFERENT_ASSEMBLY_CENTROID_USING_NOTIONAL_SOLID? {	// [37]
      return self.complexEntity.entityReference(eDIFFERENT_ASSEMBLY_CENTROID_USING_NOTIONAL_SOLID.self)
    }

    public var sub_eDIFFERENT_ASSEMBLY_CENTROID: eDIFFERENT_ASSEMBLY_CENTROID? {	// [38]
      return self.complexEntity.entityReference(eDIFFERENT_ASSEMBLY_CENTROID.self)
    }

    public var sub_eDIFFERENT_ASSEMBLY_VOLUME: eDIFFERENT_ASSEMBLY_VOLUME? {	// [39]
      return self.complexEntity.entityReference(eDIFFERENT_ASSEMBLY_VOLUME.self)
    }

    public var sub_eDIFFERENT_NUMBER_OF_COMPONENTS: eDIFFERENT_NUMBER_OF_COMPONENTS? {	// [40]
      return self.complexEntity.entityReference(eDIFFERENT_NUMBER_OF_COMPONENTS.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERION_OF_REPRESENTATIVE_ASSEMBLY_PROPERTY_VALUE: eA3M_EQUIVALENCE_CRITERION_OF_REPRESENTATIVE_ASSEMBLY_PROPERTY_VALUE? {	// [41]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERION_OF_REPRESENTATIVE_ASSEMBLY_PROPERTY_VALUE.self)
    }

    public var sub_eDIFFERENT_COMPONENT_SHAPE: eDIFFERENT_COMPONENT_SHAPE? {	// [42]
      return self.complexEntity.entityReference(eDIFFERENT_COMPONENT_SHAPE.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERION_OF_COMPONENT_PROPERTY_DIFFERENCE: eA3M_EQUIVALENCE_CRITERION_OF_COMPONENT_PROPERTY_DIFFERENCE? {	// [43]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERION_OF_COMPONENT_PROPERTY_DIFFERENCE.self)
    }

    public var sub_eMISMATCH_OF_COMPONENT: eMISMATCH_OF_COMPONENT? {	// [44]
      return self.complexEntity.entityReference(eMISMATCH_OF_COMPONENT.self)
    }

    public var sub_eMISSING_ASSEMBLY_CONSTRAINT: eMISSING_ASSEMBLY_CONSTRAINT? {	// [45]
      return self.complexEntity.entityReference(eMISSING_ASSEMBLY_CONSTRAINT.self)
    }

    public var sub_eMISSING_COMPONENT: eMISSING_COMPONENT? {	// [46]
      return self.complexEntity.entityReference(eMISSING_COMPONENT.self)
    }

    public var sub_eDIFFERENT_COMPONENT_IDENTIFICATION_VIA_MULTI_LEVEL_REFERENCE: eDIFFERENT_COMPONENT_IDENTIFICATION_VIA_MULTI_LEVEL_REFERENCE? {	// [47]
      return self.complexEntity.entityReference(eDIFFERENT_COMPONENT_IDENTIFICATION_VIA_MULTI_LEVEL_REFERENCE.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERION_OF_ASSEMBLY_DATA_STRUCTURE: eA3M_EQUIVALENCE_CRITERION_OF_ASSEMBLY_DATA_STRUCTURE? {	// [48]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERION_OF_ASSEMBLY_DATA_STRUCTURE.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY: eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY? {	// [49]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERION: eA3M_EQUIVALENCE_CRITERION? {	// [50]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERION.self)
    }

    public var sub_eA3M_EQUIVALENCE_INSPECTION_REQUIREMENT_WITH_VALUES: eA3M_EQUIVALENCE_INSPECTION_REQUIREMENT_WITH_VALUES? {	// [51]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_INSPECTION_REQUIREMENT_WITH_VALUES.self)
    }


    //MARK: ATTRIBUTES
    /// __EXPLICIT(DYNAMIC)__ attribute
    /// - origin: SUB( ``eA3M_EQUIVALENCE_CRITERION`` )
    public var ACCURACY_TYPES: (SDAI.LIST<nA3M_ACCURACY_TYPE_NAME>/*[0:nil]*/ )?  {
      get {
        if let resolved = _a3m_equivalence_criterion._accuracy_types__provider(complex: self.complexEntity) {
          let value = resolved._accuracy_types__getter(complex: self.complexEntity)
          return value
        }
        else {
          return sub_eA3M_EQUIVALENCE_CRITERION?.partialEntity._accuracy_types
        }
      }
      set(newValue) {
        if let _ = _a3m_equivalence_criterion._accuracy_types__provider(complex: self.complexEntity) { return }

        guard let partial = sub_eA3M_EQUIVALENCE_CRITERION?.super_eA3M_EQUIVALENCE_CRITERION.partialEntity
          else { return }
        partial._accuracy_types = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT(DYNAMIC)__ attribute
    /// - origin: SUB( ``eA3M_EQUIVALENCE_CRITERION`` )
    public var DETECTED_DIFFERENCE_TYPES: (SDAI.LIST<nA3M_DETECTED_DIFFERENCE_TYPE_NAME>/*[0:nil]*/ )?  {
      get {
        if let resolved = _a3m_equivalence_criterion._detected_difference_types__provider(complex: self.complexEntity) {
          let value = resolved._detected_difference_types__getter(complex: self.complexEntity)
          return value
        }
        else {
          return sub_eA3M_EQUIVALENCE_CRITERION?.partialEntity._detected_difference_types
        }
      }
      set(newValue) {
        if let _ = _a3m_equivalence_criterion._detected_difference_types__provider(complex: self.complexEntity) { return }

        guard let partial = sub_eA3M_EQUIVALENCE_CRITERION?.super_eA3M_EQUIVALENCE_CRITERION.partialEntity
          else { return }
        partial._detected_difference_types = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eA3M_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS`` )
    public var COMPARING_SPECIFIED_ELEMENTS: (SDAI.SET<sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      get {
        return sub_eA3M_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS?.partialEntity
          ._comparing_specified_elements
      }
      set(newValue) {
        guard let partial = sub_eA3M_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS?.super_eA3M_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS
          .partialEntity else { return }
        partial._comparing_specified_elements = SDAI.UNWRAP(newValue)
      }
    }

    /// __INVERSE__ attribute
    /// observing eA3MA_ASSEMBLY_AND_SHAPE_CRITERIA_RELATIONSHIP .RELATING_REPRESENTATION_ITEM
    /// - origin: SUB( ``eDIFFERENT_COMPONENT_SHAPE`` )
    public var SHAPE_CRITERIA: (SDAI.SET<eA3MA_ASSEMBLY_AND_SHAPE_CRITERIA_RELATIONSHIP>/*[1:nil]*/ )?  {
      get {
        return sub_eDIFFERENT_COMPONENT_SHAPE?.partialEntity._shape_criteria
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eA3M_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS`` )
    public var COMPARED_SPECIFIED_ELEMENTS: (SDAI.SET<sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      get {
        return sub_eA3M_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS?.partialEntity
          ._compared_specified_elements
      }
      set(newValue) {
        guard let partial = sub_eA3M_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS?.super_eA3M_EQUIVALENCE_CRITERION_WITH_SPECIFIED_ELEMENTS
          .partialEntity else { return }
        partial._compared_specified_elements = SDAI.UNWRAP(newValue)
      }
    }

    /// __INVERSE__ attribute
    /// observing eA3MA_EQUIVALENCE_CRITERION_ASSESSMENT_THRESHOLD_RELATIONSHIP .RELATING_REPRESENTATION_ITEM
    /// - origin: SUB( ``eDIFFERENT_PLACEMENT_OF_COMPONENT`` )
    public var ASSESSMENT_THRESHOLD_2: eA3MA_EQUIVALENCE_CRITERION_ASSESSMENT_THRESHOLD_RELATIONSHIP?  {
      get {
        return sub_eDIFFERENT_PLACEMENT_OF_COMPONENT?.partialEntity._assessment_threshold_2
      }
    }

    /// __EXPLICIT(DYNAMIC)__ attribute
    /// - origin: SUB( ``eA3M_EQUIVALENCE_CRITERION`` )
    public var COMPARED_ELEMENT_TYPES: (SDAI.LIST<nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  {
      get {
        if let resolved = _a3m_equivalence_criterion._compared_element_types__provider(complex: self.complexEntity) {
          let value = resolved._compared_element_types__getter(complex: self.complexEntity)
          return value
        }
        else {
          return sub_eA3M_EQUIVALENCE_CRITERION?.partialEntity._compared_element_types
        }
      }
      set(newValue) {
        if let _ = _a3m_equivalence_criterion._compared_element_types__provider(complex: self.complexEntity) { return }

        guard let partial = sub_eA3M_EQUIVALENCE_CRITERION?.super_eA3M_EQUIVALENCE_CRITERION.partialEntity
          else { return }
        partial._compared_element_types = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT(DYNAMIC)__ attribute
    /// - origin: SUB( ``eA3M_EQUIVALENCE_CRITERION`` )
    public var MEASURED_DATA_TYPE: nA3M_MEASURED_DATA_TYPE_NAME?  {
      get {
        if let resolved = _a3m_equivalence_criterion._measured_data_type__provider(complex: self.complexEntity) {
          let value = resolved._measured_data_type__getter(complex: self.complexEntity)
          return value
        }
        else {
          return sub_eA3M_EQUIVALENCE_CRITERION?.partialEntity._measured_data_type
        }
      }
      set(newValue) {
        if let _ = _a3m_equivalence_criterion._measured_data_type__provider(complex: self.complexEntity) { return }

        guard let partial = sub_eA3M_EQUIVALENCE_CRITERION?.super_eA3M_EQUIVALENCE_CRITERION.partialEntity
          else { return }
        partial._measured_data_type = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eA3M_EQUIVALENCE_CRITERION`` )
    public var ASSESSMENT_SPECIFICATION: sA3M_EQUIVALENCE_ASSESSMENT_SPECIFICATION_SELECT?  {
      get {
        return sub_eA3M_EQUIVALENCE_CRITERION?.partialEntity._assessment_specification
      }
      set(newValue) {
        guard let partial = sub_eA3M_EQUIVALENCE_CRITERION?.super_eA3M_EQUIVALENCE_CRITERION.partialEntity
          else { return }
        partial._assessment_specification = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eREPRESENTATION_ITEM`` )
    public var NAME: tLABEL {
      get {
        return SDAI.UNWRAP( super_eREPRESENTATION_ITEM.partialEntity._name )
      }
      set(newValue) {
        let partial = super_eREPRESENTATION_ITEM.partialEntity
        partial._name = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT(DYNAMIC)__ attribute
    /// - origin: SUB( ``eA3M_EQUIVALENCE_CRITERION`` )
    public var COMPARING_ELEMENT_TYPES: (SDAI.LIST<nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  {
      get {
        if let resolved = _a3m_equivalence_criterion._comparing_element_types__provider(complex: self.complexEntity) {
          let value = resolved._comparing_element_types__getter(complex: self.complexEntity)
          return value
        }
        else {
          return sub_eA3M_EQUIVALENCE_CRITERION?.partialEntity._comparing_element_types
        }
      }
      set(newValue) {
        if let _ = _a3m_equivalence_criterion._comparing_element_types__provider(complex: self.complexEntity) { return }

        guard let partial = sub_eA3M_EQUIVALENCE_CRITERION?.super_eA3M_EQUIVALENCE_CRITERION.partialEntity
          else { return }
        partial._comparing_element_types = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eA3M_EQUIVALENCE_INSPECTION_REQUIREMENT_WITH_VALUES`` )
    public var APPLIED_VALUES: (SDAI.SET<eMEASURE_REPRESENTATION_ITEM>/*[1:nil]*/ )?  {
      get {
        return sub_eA3M_EQUIVALENCE_INSPECTION_REQUIREMENT_WITH_VALUES?.partialEntity._applied_values
      }
      set(newValue) {
        guard let partial = sub_eA3M_EQUIVALENCE_INSPECTION_REQUIREMENT_WITH_VALUES?.super_eA3M_EQUIVALENCE_INSPECTION_REQUIREMENT_WITH_VALUES
          .partialEntity else { return }
        partial._applied_values = SDAI.UNWRAP(newValue)
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_data_equivalence_inspection_requirement.self) else { return nil }
      self.partialEntity = partial

      guard let super1 = complexEntity?.entityReference(eREPRESENTATION_ITEM.self) else { return nil }
      self.super_eREPRESENTATION_ITEM = super1

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }


    //MARK: WHERE RULE VALIDATION (ENTITY)
    public override class func validateWhereRules(instance:SDAI.EntityReference?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      guard let instance = instance as? Self else { return [:] }

      let prefix2 = prefix + " \(instance)"

      var result = super.validateWhereRules(instance:instance, prefix:prefix2)
      result[prefix2 + " .WHERE_wr1"] = _data_equivalence_inspection_requirement.WHERE_wr1(SELF: instance)
      return result
    }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "DATA_EQUIVALENCE_INSPECTION_REQUIREMENT", type: self, explicitAttributeCount: 0)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: eREPRESENTATION_ITEM.self)
      entityDef.add(supertype: eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "ACCURACY_TYPES", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.ACCURACY_TYPES, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "DETECTED_DIFFERENCE_TYPES", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.DETECTED_DIFFERENCE_TYPES, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "COMPARING_SPECIFIED_ELEMENTS", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.COMPARING_SPECIFIED_ELEMENTS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "SHAPE_CRITERIA", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.SHAPE_CRITERIA, 
        kind: .inverse, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "COMPARED_SPECIFIED_ELEMENTS", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.COMPARED_SPECIFIED_ELEMENTS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ASSESSMENT_THRESHOLD_2", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.ASSESSMENT_THRESHOLD_2, 
        kind: .inverse, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "COMPARED_ELEMENT_TYPES", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.COMPARED_ELEMENT_TYPES, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "MEASURED_DATA_TYPE", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.MEASURED_DATA_TYPE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ASSESSMENT_SPECIFICATION", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.ASSESSMENT_SPECIFICATION, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NAME", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.NAME, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "COMPARING_ELEMENT_TYPES", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.COMPARING_ELEMENT_TYPES, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "APPLIED_VALUES", keyPath: \eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.APPLIED_VALUES, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)

      return entityDef
    }

  }
}
