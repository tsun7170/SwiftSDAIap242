/* file: dimension_callout_component_relationship.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY dimension_callout_component_relationship
    SUBTYPE OF ( draughting_callout_relationship );
    WHERE
      wr1: ( SELF.name IN [ 'prefix', 'suffix'] );
      wr2: ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STRUCTURED_DIMENSION_CALLOUT' IN TYPEOF( SELF.
               relating_draughting_callout ) );
      wr3: ( SIZEOF( TYPEOF( SELF.related_draughting_callout ) * [
               'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.LEADER_DIRECTED_CALLOUT' , 
               'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PROJECTION_DIRECTED_CALLOUT' , 
               'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DIMENSION_CURVE_DIRECTED_CALLOUT' , 
               'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STRUCTURED_DIMENSION_CALLOUT' ] ) = 0 );
      wr4: ( ( SELF.related_draughting_callout.contents * SELF.relating_draughting_callout.contents ) = SELF.
               related_draughting_callout.contents );
      wr5: ( ( SELF.name = 'prefix' ) AND ( SIZEOF( QUERY ( ato <* QUERY ( con <* SELF.
               related_draughting_callout.contents | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
               + 'ANNOTATION_TEXT_OCCURRENCE'  IN TYPEOF( con ) ) ) | ( NOT ( ato.name = 'prefix text' ) ) ) ) 
               = 0 ) );
      wr6: ( ( SELF.name = 'suffix' ) AND ( SIZEOF( QUERY ( ato <* QUERY ( con <* SELF.
               related_draughting_callout.contents | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
               + 'ANNOTATION_TEXT_OCCURRENCE'  IN TYPEOF( con ) ) ) | ( NOT ( ato.name = 'suffix text' ) ) ) ) 
               = 0 ) );
  END_ENTITY; -- dimension_callout_component_relationship (line:12337 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  SUPER- ENTITY(1)	draughting_callout_relationship
    ATTR:  name,	TYPE: label -- EXPLICIT

    ATTR:  description,	TYPE: text -- EXPLICIT

    ATTR:  relating_draughting_callout,	TYPE: draughting_callout -- EXPLICIT

    ATTR:  related_draughting_callout,	TYPE: draughting_callout -- EXPLICIT


  ENTITY(SELF)	dimension_callout_component_relationship
    (no local attributes)

*/


//MARK: - Partial Entity
  public final class _dimension_callout_component_relationship : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP.self
    }

    //ATTRIBUTES
    // (no local attributes)

    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //MARK: WHERE RULES (ENTITY)
    public static func WHERE_wr1(SELF: eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.NAME
      let _TEMP2 = ([SDAI.AIE(SDAI.STRING("prefix")), 
        SDAI.AIE(SDAI.STRING("suffix"))] as [SDAI.AggregationInitializerElement<SDAI.STRING>])
      let _TEMP3 = SDAI.aggregate(_TEMP2, contains: SDAI.STRING(/*tLABEL*/_TEMP1))
      return _TEMP3
    }
    public static func WHERE_wr2(SELF: eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SDAI.TYPEOF(SELF.RELATING_DRAUGHTING_CALLOUT, IS: eSTRUCTURED_DIMENSION_CALLOUT.self)
      return _TEMP1
    }
    public static func WHERE_wr3(SELF: eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.RELATED_DRAUGHTING_CALLOUT
      let _TEMP2 = SDAI.TYPEOF(_TEMP1)
      let _TEMP3 = ([SDAI.AIE(SDAI.STRING(
        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.LEADER_DIRECTED_CALLOUT")), 
        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PROJECTION_DIRECTED_CALLOUT")), 
        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DIMENSION_CURVE_DIRECTED_CALLOUT")), 
        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STRUCTURED_DIMENSION_CALLOUT"))] 
        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
      let _TEMP4 = SDAI.FORCE_OPTIONAL(_TEMP2) * SDAI.FORCE_OPTIONAL(_TEMP3)
      let _TEMP5 = SDAI.SIZEOF(_TEMP4)
      let _TEMP6 = _TEMP5 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP6
    }
    public static func WHERE_wr4(SELF: eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.RELATED_DRAUGHTING_CALLOUT
      let _TEMP2 = _TEMP1.CONTENTS
      let _TEMP3 = SELF.RELATING_DRAUGHTING_CALLOUT
      let _TEMP4 = _TEMP3.CONTENTS
      let _TEMP5 = SDAI.FORCE_OPTIONAL(_TEMP2) * SDAI.FORCE_OPTIONAL(_TEMP4)
      let _TEMP6 = SELF.RELATED_DRAUGHTING_CALLOUT
      let _TEMP7 = _TEMP6.CONTENTS
      let _TEMP8 = _TEMP5 .==. SDAI.FORCE_OPTIONAL(_TEMP7)
      return _TEMP8
    }
    public static func WHERE_wr5(SELF: eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.NAME
      let _TEMP2 = SDAI.FORCE_OPTIONAL(_TEMP1) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("prefix"))
      let _TEMP3 = SELF.RELATED_DRAUGHTING_CALLOUT
      let _TEMP4 = _TEMP3.CONTENTS
      let _TEMP5 = _TEMP4.QUERY{ CON in 

          let _TEMP1 = SDAI.TYPEOF(CON, IS: eANNOTATION_TEXT_OCCURRENCE.self)
          return _TEMP1 }
      let _TEMP6 = _TEMP5.QUERY{ ATO in 

          let _TEMP1 = /*runtime*/ATO.NAME
          let _TEMP2 = /*runtime*/_TEMP1 .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("prefix text"))
          let _TEMP3 =  !_TEMP2
          return _TEMP3 }
      let _TEMP7 = SDAI.SIZEOF(_TEMP6)
      let _TEMP8 = _TEMP7 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      let _TEMP9 = _TEMP2 && _TEMP8
      return _TEMP9
    }
    public static func WHERE_wr6(SELF: eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.NAME
      let _TEMP2 = SDAI.FORCE_OPTIONAL(_TEMP1) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("suffix"))
      let _TEMP3 = SELF.RELATED_DRAUGHTING_CALLOUT
      let _TEMP4 = _TEMP3.CONTENTS
      let _TEMP5 = _TEMP4.QUERY{ CON in 

          let _TEMP1 = SDAI.TYPEOF(CON, IS: eANNOTATION_TEXT_OCCURRENCE.self)
          return _TEMP1 }
      let _TEMP6 = _TEMP5.QUERY{ ATO in 

          let _TEMP1 = /*runtime*/ATO.NAME
          let _TEMP2 = /*runtime*/_TEMP1 .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("suffix text"))
          let _TEMP3 =  !_TEMP2
          return _TEMP3 }
      let _TEMP7 = SDAI.SIZEOF(_TEMP6)
      let _TEMP8 = _TEMP7 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      let _TEMP9 = _TEMP2 && _TEMP8
      return _TEMP9
    }

    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init() {
      super.init(asAbstructSuperclass:())

    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 0
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      self.init( )
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY dimension_callout_component_relationship
    SUBTYPE OF ( draughting_callout_relationship );
    WHERE
      wr1: ( SELF.name IN [ 'prefix', 'suffix'] );
      wr2: ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STRUCTURED_DIMENSION_CALLOUT' IN TYPEOF( SELF.
               relating_draughting_callout ) );
      wr3: ( SIZEOF( TYPEOF( SELF.related_draughting_callout ) * [
               'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.LEADER_DIRECTED_CALLOUT' , 
               'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PROJECTION_DIRECTED_CALLOUT' , 
               'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DIMENSION_CURVE_DIRECTED_CALLOUT' , 
               'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STRUCTURED_DIMENSION_CALLOUT' ] ) = 0 );
      wr4: ( ( SELF.related_draughting_callout.contents * SELF.relating_draughting_callout.contents ) = SELF.
               related_draughting_callout.contents );
      wr5: ( ( SELF.name = 'prefix' ) AND ( SIZEOF( QUERY ( ato <* QUERY ( con <* SELF.
               related_draughting_callout.contents | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
               + 'ANNOTATION_TEXT_OCCURRENCE'  IN TYPEOF( con ) ) ) | ( NOT ( ato.name = 'prefix text' ) ) ) ) 
               = 0 ) );
      wr6: ( ( SELF.name = 'suffix' ) AND ( SIZEOF( QUERY ( ato <* QUERY ( con <* SELF.
               related_draughting_callout.contents | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
               + 'ANNOTATION_TEXT_OCCURRENCE'  IN TYPEOF( con ) ) ) | ( NOT ( ato.name = 'suffix text' ) ) ) ) 
               = 0 ) );
  END_ENTITY; -- dimension_callout_component_relationship (line:12337 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _dimension_callout_component_relationship.self
    }
    public let partialEntity: _dimension_callout_component_relationship

    //MARK: SUPERTYPES
    public let super_eDRAUGHTING_CALLOUT_RELATIONSHIP: eDRAUGHTING_CALLOUT_RELATIONSHIP 	// [1]
    public var super_eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP: eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP { return self } 	// [2]

    //MARK: SUBTYPES

    //MARK: ATTRIBUTES
    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eDRAUGHTING_CALLOUT_RELATIONSHIP`` )
    public var DESCRIPTION: tTEXT {
      get {
        return SDAI.UNWRAP( super_eDRAUGHTING_CALLOUT_RELATIONSHIP.partialEntity._description )
      }
      set(newValue) {
        let partial = super_eDRAUGHTING_CALLOUT_RELATIONSHIP.partialEntity
        partial._description = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eDRAUGHTING_CALLOUT_RELATIONSHIP`` )
    public var RELATED_DRAUGHTING_CALLOUT: eDRAUGHTING_CALLOUT {
      get {
        return SDAI.UNWRAP( super_eDRAUGHTING_CALLOUT_RELATIONSHIP.partialEntity._related_draughting_callout )
      }
      set(newValue) {
        let partial = super_eDRAUGHTING_CALLOUT_RELATIONSHIP.partialEntity
        partial._related_draughting_callout = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eDRAUGHTING_CALLOUT_RELATIONSHIP`` )
    public var RELATING_DRAUGHTING_CALLOUT: eDRAUGHTING_CALLOUT {
      get {
        return SDAI.UNWRAP( super_eDRAUGHTING_CALLOUT_RELATIONSHIP.partialEntity._relating_draughting_callout )
      }
      set(newValue) {
        let partial = super_eDRAUGHTING_CALLOUT_RELATIONSHIP.partialEntity
        partial._relating_draughting_callout = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eDRAUGHTING_CALLOUT_RELATIONSHIP`` )
    public var NAME: tLABEL {
      get {
        return SDAI.UNWRAP( super_eDRAUGHTING_CALLOUT_RELATIONSHIP.partialEntity._name )
      }
      set(newValue) {
        let partial = super_eDRAUGHTING_CALLOUT_RELATIONSHIP.partialEntity
        partial._name = SDAI.UNWRAP(newValue)
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_dimension_callout_component_relationship.self) else { return nil }
      self.partialEntity = partial

      guard let super1 = complexEntity?.entityReference(eDRAUGHTING_CALLOUT_RELATIONSHIP.self) else { return nil }
      self.super_eDRAUGHTING_CALLOUT_RELATIONSHIP = super1

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }


    //MARK: WHERE RULE VALIDATION (ENTITY)
    public override class func validateWhereRules(instance:SDAI.EntityReference?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      guard let instance = instance as? Self else { return [:] }

      let prefix2 = prefix + " \(instance)"

      var result = super.validateWhereRules(instance:instance, prefix:prefix2)
      result[prefix2 + " .WHERE_wr1"] = _dimension_callout_component_relationship.WHERE_wr1(SELF: instance)
      result[prefix2 + " .WHERE_wr2"] = _dimension_callout_component_relationship.WHERE_wr2(SELF: instance)
      result[prefix2 + " .WHERE_wr3"] = _dimension_callout_component_relationship.WHERE_wr3(SELF: instance)
      result[prefix2 + " .WHERE_wr4"] = _dimension_callout_component_relationship.WHERE_wr4(SELF: instance)
      result[prefix2 + " .WHERE_wr5"] = _dimension_callout_component_relationship.WHERE_wr5(SELF: instance)
      result[prefix2 + " .WHERE_wr6"] = _dimension_callout_component_relationship.WHERE_wr6(SELF: instance)
      return result
    }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "DIMENSION_CALLOUT_COMPONENT_RELATIONSHIP", type: self, explicitAttributeCount: 0)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: eDRAUGHTING_CALLOUT_RELATIONSHIP.self)
      entityDef.add(supertype: eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "DESCRIPTION", keyPath: \eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP.DESCRIPTION, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "RELATED_DRAUGHTING_CALLOUT", keyPath: \eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP.RELATED_DRAUGHTING_CALLOUT, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATING_DRAUGHTING_CALLOUT", keyPath: \eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP.RELATING_DRAUGHTING_CALLOUT, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NAME", keyPath: \eDIMENSION_CALLOUT_COMPONENT_RELATIONSHIP.NAME, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: false)

      return entityDef
    }

  }
}
