/* file: representation.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY representation
    SUPERTYPE OF ( 
        ONEOF ( 
            reinforcement_orientation_basis, 
            ply_angle_representation ) 
        ANDOR
        ONEOF ( 
            interpolated_configuration_representation, 
            link_motion_representation_along_path ) 
        ANDOR
        ONEOF ( 
            kinematic_link_representation, 
            kinematic_topology_structure, 
            kinematic_topology_directed_structure, 
            kinematic_topology_network_structure, 
            mechanism_representation, 
            shape_representation ) 
        ANDOR
        ONEOF ( 
            kinematic_topology_structure, 
            kinematic_topology_directed_structure, 
            kinematic_topology_network_structure ) );
      name              : label;
      items             : SET [1 : ?] OF representation_item; (* observed by
          hidden_element_over_riding_styled_item.container
          *)
      context_of_items  : representation_context; (* observed by
          representation_context.representations_in_context
          *)
    DERIVE
      id           : identifier := get_id_value( SELF );
      description  : text := get_description_value( SELF );
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ID_ATTRIBUTE.'
               + 'IDENTIFIED_ITEM'  ) ) <= 1 );
      wr2: ( SIZEOF( USEDIN( SELF, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DESCRIPTION_ATTRIBUTE.'
               + 'DESCRIBED_ITEM'  ) ) <= 1 );
  END_ENTITY; -- representation (line:27449 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  ENTITY(SELF)	representation
    ATTR:  name,	TYPE: label -- EXPLICIT

    ATTR:  items,	TYPE: SET [1 : ?] OF representation_item -- EXPLICIT
      -- observed by
        ENTITY(1): hidden_element_over_riding_styled_item,	ATTR: container,	TYPE: SET [1 : ?] OF
          presentation_view
      -- possibly overriden by
          ENTITY: shape_representation_with_parameters,	TYPE: SET [1 : ?] OF shape_representation_with_parameters_items
          ENTITY: mechanical_design_shaded_presentation_area,	TYPE: SET [1 : ?] OF mechanical_design_shaded_presentation_area_items
          ENTITY: mechanical_design_shaded_presentation_representation,	TYPE: SET [1 : ?] OF mechanical_design_shaded_presentation_representation_items
          ENTITY: connected_edge_with_length_set_representation,	TYPE: SET [1 : ?] OF connected_edge_with_length_set_items
          ENTITY: mechanism_state_representation,	TYPE: SET [1 : ?] OF pair_value
          ENTITY: reinforcement_orientation_basis,	TYPE: SET [1 : 1] OF basis_11_direction_member
          ENTITY: externally_defined_representation,	TYPE: SET [1 : ?] OF externally_defined_representation_item
          ENTITY: kinematic_topology_network_structure,	TYPE: SET [1 : ?] OF kinematic_loop
          ENTITY: kinematic_topology_structure,	TYPE: SET [1 : ?] OF kinematic_joint
          ENTITY: single_area_csg_2d_shape_representation,	TYPE: SET [1 : ?] OF csg_2d_area_select
          ENTITY: draughting_model,	TYPE: SET [1 : ?] OF draughting_model_item_select
          ENTITY: shape_dimension_representation,	TYPE: SET [1 : ?] OF shape_dimension_representation_item
          ENTITY: point_placement_shape_representation,	TYPE: SET [1 : ?] OF point_placement_shape_representation_item
          ENTITY: link_motion_representation_along_path,	TYPE: SET [1 : ?] OF kinematic_path
          ENTITY: kinematic_topology_directed_structure,	TYPE: SET [1 : ?] OF oriented_joint
          ENTITY: scan_data_shape_representation,	TYPE: SET [1 : ?] OF scanned_data_item
          ENTITY: mechanical_design_geometric_presentation_area,	TYPE: SET [1 : ?] OF mechanical_design_geometric_presentation_area_items
          ENTITY: procedural_shape_representation,	TYPE: SET [1 : ?] OF procedural_shape_representation_sequence
          ENTITY: path_parameter_representation,	TYPE: SET [1 : ?] OF bounded_curve
          ENTITY: csg_2d_shape_representation,	TYPE: SET [1 : ?] OF csg_2d_shape_select
          ENTITY: ply_angle_representation,	TYPE: SET [1 : 1] OF measure_representation_item
          ENTITY: text_string_representation,	TYPE: SET [1 : ?] OF text_string_representation_item
          ENTITY: procedural_representation,	TYPE: SET [1 : ?] OF procedural_representation_sequence
          ENTITY: draughting_subfigure_representation,	TYPE: SET [1 : ?] OF draughting_subfigure_representation_item
          ENTITY: picture_representation,	TYPE: SET [2 : ?] OF picture_representation_item_select
          ENTITY: structured_text_representation,	TYPE: SET [1 : ?] OF string_representation_item_select
          ENTITY: interpolated_configuration_representation,	TYPE: SET [1 : ?] OF interpolated_configuration_sequence
          ENTITY: mechanical_design_presentation_representation_with_draughting,	TYPE: SET [1 : ?] OF camera_model_d3
          ENTITY: mechanism_representation,	TYPE: SET [1 : ?] OF pair_representation_relationship
          ENTITY: mechanical_design_geometric_presentation_representation,	TYPE: SET [1 : ?] OF mechanical_design_geometric_presentation_representation_items
          ENTITY: kinematic_link_representation,	TYPE: SET [1 : ?] OF kinematic_link_representation_items
          ENTITY: neutral_sketch_representation,	TYPE: SET [1 : ?] OF sketch_element_select
          ENTITY: draughting_symbol_representation,	TYPE: SET [1 : ?] OF draughting_symbol_representation_item

    ATTR:  context_of_items,	TYPE: representation_context -- EXPLICIT (DYNAMIC)
      -- observed by
        ENTITY(1): representation_context,	ATTR: representations_in_context,	TYPE: SET [1 : ?] OF
          representation
      -- possibly overriden by
          ENTITY: mechanism_state_representation,	TYPE: geometric_representation_context	(as DERIVED)
          ENTITY: presentation_representation,	TYPE: geometric_representation_context
          ENTITY: link_motion_representation_along_path,	TYPE: geometric_representation_context_with_parameter
          ENTITY: path_parameter_representation,	TYPE: path_parameter_representation_context
          ENTITY: analysis_model,	TYPE: analysis_representation_context
          ENTITY: interpolated_configuration_representation,	TYPE: geometric_representation_context_with_parameter
          ENTITY: mechanism_representation,	TYPE: geometric_representation_context
          ENTITY: kinematic_link_representation,	TYPE: geometric_representation_context

    ATTR:  id,	TYPE: identifier -- DERIVED
      := get_id_value( SELF )

    ATTR:  description,	TYPE: text -- DERIVED
      := get_description_value( SELF )


  SUB- ENTITY(2)	reinforcement_orientation_basis
    REDCR: items,	TYPE: SET [1 : 1] OF basis_11_direction_member -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(3)	ply_angle_representation
    REDCR: items,	TYPE: SET [1 : 1] OF measure_representation_item -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(4)	interpolated_configuration_representation
    REDCR: context_of_items,	TYPE: geometric_representation_context_with_parameter -- EXPLICIT
      -- OVERRIDING ENTITY: representation

    REDCR: items,	TYPE: SET [1 : ?] OF interpolated_configuration_sequence -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(5)	prescribed_path
    ATTR:  controlling_joints,	TYPE: OPTIONAL SET [1 : 6] OF kinematic_joint -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(6)	resulting_path
    ATTR:  controlling_joints,	TYPE: SET [1 : ?] OF kinematic_joint -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(7)	link_motion_representation_along_path
    REDCR: items,	TYPE: SET [1 : ?] OF kinematic_path -- EXPLICIT
      -- OVERRIDING ENTITY: representation

    REDCR: context_of_items,	TYPE: geometric_representation_context_with_parameter -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(8)	rigid_link_representation
    (no local attributes)

  SUB- ENTITY(9)	linear_flexible_link_representation
    (no local attributes)

  SUB- ENTITY(10)	kinematic_link_representation
    REDCR: context_of_items,	TYPE: geometric_representation_context -- EXPLICIT
      -- OVERRIDING ENTITY: representation

    REDCR: items,	TYPE: SET [1 : ?] OF kinematic_link_representation_items -- EXPLICIT
      -- OVERRIDING ENTITY: representation

    ATTR:  represented_link,	TYPE: kinematic_link -- EXPLICIT

    ATTR:  associated_shape_representation,	TYPE: SET [0 : 1] OF kinematic_link_representation_association -- INVERSE
      FOR rep_1;


  SUB- ENTITY(11)	kinematic_topology_substructure
    ATTR:  parent,	TYPE: kinematic_topology_structure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(12)	kinematic_topology_structure
    REDCR: items,	TYPE: SET [1 : ?] OF kinematic_joint -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(13)	kinematic_topology_tree_structure
    (no local attributes)

  SUB- ENTITY(14)	kinematic_topology_directed_structure
    REDCR: items,	TYPE: SET [1 : ?] OF oriented_joint -- EXPLICIT
      -- OVERRIDING ENTITY: representation

    ATTR:  parent,	TYPE: kinematic_topology_structure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(15)	kinematic_topology_network_structure
    REDCR: items,	TYPE: SET [1 : ?] OF kinematic_loop -- EXPLICIT
      -- OVERRIDING ENTITY: representation

    ATTR:  parent,	TYPE: kinematic_topology_structure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(16)	mechanism_representation
    REDCR: context_of_items,	TYPE: geometric_representation_context -- EXPLICIT
      -- OVERRIDING ENTITY: representation

    REDCR: items,	TYPE: SET [1 : ?] OF pair_representation_relationship -- EXPLICIT
      -- OVERRIDING ENTITY: representation

    ATTR:  represented_topology,	TYPE: kinematic_topology_representation_select -- EXPLICIT

    ATTR:  represented_joints,	TYPE: SET [1 : ?] OF kinematic_joint -- DERIVED
      := collect_joints( items )


  SUB- ENTITY(17)	faceted_brep_shape_representation
    (no local attributes)

  SUB- ENTITY(18)	shape_representation_with_parameters
    REDCR: items,	TYPE: SET [1 : ?] OF shape_representation_with_parameters_items -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(19)	location_shape_representation
    (no local attributes)

  SUB- ENTITY(20)	beveled_sheet_representation
    (no local attributes)

  SUB- ENTITY(21)	advanced_brep_shape_representation
    (no local attributes)

  SUB- ENTITY(22)	direction_shape_representation
    (no local attributes)

  SUB- ENTITY(23)	edge_based_wireframe_shape_representation
    (no local attributes)

  SUB- ENTITY(24)	manifold_subsurface_shape_representation
    (no local attributes)

  SUB- ENTITY(25)	composite_sheet_representation
    (no local attributes)

  SUB- ENTITY(26)	curve_swept_solid_shape_representation
    (no local attributes)

  SUB- ENTITY(27)	geometrically_bounded_2d_wireframe_representation
    (no local attributes)

  SUB- ENTITY(28)	planar_shape_representation
    (no local attributes)

  SUB- ENTITY(29)	path_shape_representation
    (no local attributes)

  SUB- ENTITY(30)	shape_dimension_representation
    REDCR: items,	TYPE: SET [1 : ?] OF shape_dimension_representation_item -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(31)	geometrically_bounded_wireframe_shape_representation
    (no local attributes)

  SUB- ENTITY(32)	point_placement_shape_representation
    REDCR: items,	TYPE: SET [1 : ?] OF point_placement_shape_representation_item -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(33)	scan_data_shape_representation
    REDCR: items,	TYPE: SET [1 : ?] OF scanned_data_item -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(34)	procedural_shape_representation
    REDCR: items,	TYPE: SET [1 : ?] OF procedural_shape_representation_sequence -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(35)	single_boundary_csg_2d_shape_representation
    (no local attributes)

  SUB- ENTITY(36)	single_area_csg_2d_shape_representation
    REDCR: items,	TYPE: SET [1 : ?] OF csg_2d_area_select -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(37)	csg_2d_shape_representation
    REDCR: items,	TYPE: SET [1 : ?] OF csg_2d_shape_select -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(38)	non_manifold_surface_shape_representation
    (no local attributes)

  SUB- ENTITY(39)	compound_shape_representation
    (no local attributes)

  SUB- ENTITY(40)	representative_shape_representation
    (no local attributes)

  SUB- ENTITY(41)	elementary_brep_shape_representation
    (no local attributes)

  SUB- ENTITY(42)	manifold_surface_shape_representation
    (no local attributes)

  SUB- ENTITY(43)	geometrically_bounded_surface_shape_representation
    (no local attributes)

  SUB- ENTITY(44)	face_shape_representation
    (no local attributes)

  SUB- ENTITY(45)	shell_based_wireframe_shape_representation
    (no local attributes)

  SUB- ENTITY(46)	csg_shape_representation
    (no local attributes)

  SUB- ENTITY(47)	neutral_sketch_representation
    ATTR:  neutral_sketch_semantics,	TYPE: curves_or_area -- EXPLICIT

    REDCR: items,	TYPE: SET [1 : ?] OF sketch_element_select -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(48)	tessellated_shape_representation_with_accuracy_parameters
    ATTR:  tessellation_accuracy_parameters,	TYPE: SET [1 : ?] OF tessellation_accuracy_parameter_item -- EXPLICIT


  SUB- ENTITY(49)	tessellated_shape_representation
    (no local attributes)

  SUB- ENTITY(50)	shape_representation
    (no local attributes)

  SUB- ENTITY(51)	range_characteristic
    (no local attributes)

  SUB- ENTITY(52)	visual_appearance_representation
    (no local attributes)

  SUB- ENTITY(53)	curve_style_parameters_with_ends
    (no local attributes)

  SUB- ENTITY(54)	closed_curve_style_parameters
    (no local attributes)

  SUB- ENTITY(55)	curve_style_parameters_representation
    (no local attributes)

  SUB- ENTITY(56)	evaluated_characteristic_of_product_as_individual_test_result
    (no local attributes)

  SUB- ENTITY(57)	evaluated_characteristic
    (no local attributes)

  SUB- ENTITY(58)	hardness_representation
    (no local attributes)

  SUB- ENTITY(59)	mechanical_design_shaded_presentation_representation
    REDCR: items,	TYPE: SET [1 : ?] OF mechanical_design_shaded_presentation_representation_items -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(60)	connected_edge_with_length_set_representation
    REDCR: items,	TYPE: SET [1 : ?] OF connected_edge_with_length_set_items -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(61)	mechanism_state_representation
    REDCR: items,	TYPE: SET [1 : ?] OF pair_value -- EXPLICIT
      -- OVERRIDING ENTITY: representation

    ATTR:  represented_mechanism,	TYPE: mechanism_representation -- EXPLICIT

    REDCR: context_of_items,	TYPE: geometric_representation_context -- DERIVED (DYNAMIC)
      := represented_mechanism.context_of_items
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(62)	externally_defined_representation
    REDCR: items,	TYPE: SET [1 : ?] OF externally_defined_representation_item -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(63)	mechanical_design_shaded_presentation_area
    REDCR: items,	TYPE: SET [1 : ?] OF mechanical_design_shaded_presentation_area_items -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(64)	mechanical_design_geometric_presentation_area
    REDCR: items,	TYPE: SET [1 : ?] OF mechanical_design_geometric_presentation_area_items -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(65)	drawing_sheet_revision
    ATTR:  revision_identifier,	TYPE: identifier -- EXPLICIT


  SUB- ENTITY(66)	presentation_area
    (no local attributes)

  SUB- ENTITY(67)	picture_representation
    REDCR: items,	TYPE: SET [2 : ?] OF picture_representation_item_select -- EXPLICIT
      -- OVERRIDING ENTITY: representation

    ATTR:  size,	TYPE: presentation_size -- INVERSE
      FOR unit;


  SUB- ENTITY(68)	presentation_view
    (no local attributes)

  SUB- ENTITY(69)	presentation_representation
    REDCR: context_of_items,	TYPE: geometric_representation_context -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(70)	uncertainty_assigned_representation
    ATTR:  uncertainty,	TYPE: SET [1 : ?] OF uncertainty_measure_with_unit -- EXPLICIT


  SUB- ENTITY(71)	draughting_subfigure_representation
    REDCR: items,	TYPE: SET [1 : ?] OF draughting_subfigure_representation_item -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(72)	drawing_sheet_layout
    (no local attributes)

  SUB- ENTITY(73)	draughting_symbol_representation
    REDCR: items,	TYPE: SET [1 : ?] OF draughting_symbol_representation_item -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(74)	character_glyph_symbol_stroke
    ATTR:  strokes,	TYPE: SET [1 : ?] OF curve -- EXPLICIT


  SUB- ENTITY(75)	character_glyph_symbol_outline
    ATTR:  outlines,	TYPE: SET [1 : ?] OF annotation_fill_area -- EXPLICIT


  SUB- ENTITY(76)	character_glyph_symbol
    ATTR:  character_box,	TYPE: planar_extent -- EXPLICIT

    ATTR:  baseline_ratio,	TYPE: ratio_measure -- EXPLICIT

    ATTR:  box_height,	TYPE: length_measure -- DERIVED
      := character_box.size_in_y


  SUB- ENTITY(77)	generic_character_glyph_symbol
    (no local attributes)

  SUB- ENTITY(78)	symbol_representation
    (no local attributes)

  SUB- ENTITY(79)	back_chaining_rule_body
    (no local attributes)

  SUB- ENTITY(80)	forward_chaining_rule_premise
    (no local attributes)

  SUB- ENTITY(81)	draughting_model
    REDCR: items,	TYPE: SET [1 : ?] OF draughting_model_item_select -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(82)	contact_ratio_representation
    (no local attributes)

  SUB- ENTITY(83)	shape_inspection_result_representation_with_accuracy
    ATTR:  applied_general_accuracy,	TYPE: SET [1 : ?] OF shape_measurement_accuracy -- EXPLICIT


  SUB- ENTITY(84)	shape_data_quality_inspection_result_representation
    (no local attributes)

  SUB- ENTITY(85)	externally_conditioned_data_quality_inspection_result_representation
    (no local attributes)

  SUB- ENTITY(86)	data_quality_inspection_result_representation
    ATTR:  criteria_inspected,	TYPE: data_quality_criteria_representation -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(87)	a3m_equivalence_criteria_representation
    (no local attributes)

  SUB- ENTITY(88)	data_equivalence_criteria_representation
    (no local attributes)

  SUB- ENTITY(89)	shape_criteria_representation_with_accuracy
    ATTR:  required_general_accuracy,	TYPE: SET [1 : ?] OF shape_measurement_accuracy -- EXPLICIT


  SUB- ENTITY(90)	shape_data_quality_criteria_representation
    (no local attributes)

  SUB- ENTITY(91)	externally_conditioned_data_quality_criteria_representation
    (no local attributes)

  SUB- ENTITY(92)	data_quality_criteria_representation
    (no local attributes)

  SUB- ENTITY(93)	tactile_appearance_representation
    (no local attributes)

  SUB- ENTITY(94)	constructive_geometry_representation
    (no local attributes)

  SUB- ENTITY(95)	analysis_model
    REDCR: context_of_items,	TYPE: analysis_representation_context -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(96)	path_parameter_representation
    REDCR: context_of_items,	TYPE: path_parameter_representation_context -- EXPLICIT
      -- OVERRIDING ENTITY: representation

    REDCR: items,	TYPE: SET [1 : ?] OF bounded_curve -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(97)	definitional_representation
    (no local attributes)

  SUB- ENTITY(98)	text_string_representation
    REDCR: items,	TYPE: SET [1 : ?] OF text_string_representation_item -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(99)	procedural_representation
    REDCR: items,	TYPE: SET [1 : ?] OF procedural_representation_sequence -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(100)	surface_texture_representation
    (no local attributes)

  SUB- ENTITY(101)	default_tolerance_table
    (no local attributes)

  SUB- ENTITY(102)	characterized_representation
    REDCR: name,	TYPE: label -- DERIVED (DYNAMIC)
      := SELF\representation.name
      -- OVERRIDING ENTITY: characterized_object

    REDCR: description,	TYPE: text -- DERIVED (DYNAMIC)
      := SELF\representation.description
      -- OVERRIDING ENTITY: characterized_object


  SUB- ENTITY(103)	structured_text_representation
    REDCR: items,	TYPE: SET [1 : ?] OF string_representation_item_select -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(104)	a3m_equivalence_inspection_result_representation_for_assembly
    (no local attributes)

  SUB- ENTITY(105)	a3m_equivalence_inspection_result_representation_for_shape
    (no local attributes)

  SUB- ENTITY(106)	a3m_equivalence_inspection_result_representation
    (no local attributes)

  SUB- ENTITY(107)	data_equivalence_inspection_result_representation
    ATTR:  criteria_inspected,	TYPE: data_equivalence_criteria_representation -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(108)	mechanical_design_presentation_representation_with_draughting
    REDCR: items,	TYPE: SET [1 : ?] OF camera_model_d3 -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(109)	attribute_assertion
    (no local attributes)

  SUB- ENTITY(110)	mechanical_design_geometric_presentation_representation
    REDCR: items,	TYPE: SET [1 : ?] OF mechanical_design_geometric_presentation_representation_items -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(111)	moments_of_inertia_representation
    (no local attributes)

  SUB- ENTITY(112)	row_variable
    (no local attributes)

  SUB- ENTITY(113)	scalar_variable
    (no local attributes)

  SUB- ENTITY(114)	abstract_variable
    (no local attributes)

  SUB- ENTITY(115)	variational_representation
    ATTR:  cm_link,	TYPE: variational_current_representation_relationship -- INVERSE
      FOR rep_1;


*/


//MARK: - Partial Entity
  public final class _representation : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      eREPRESENTATION.self
    }

    //ATTRIBUTES
    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _name: tLABEL // PLAIN EXPLICIT ATTRIBUTE

    /// EXPLICIT ATTRIBUTE (OBSERVED)
    public internal(set) var _items: SDAI.SET<eREPRESENTATION_ITEM>/*[1:nil]*/ { // OBSERVED EXPLICIT ATTRIBUTE
      get {
        return __items.copy()
      } // getter
      set {
        var newValue = newValue
        let observer = SDAI.EntityReferenceObserver(referencer: self, observerCode: _items__observer.self)
        newValue.configure(with: observer)
        observer.observe(removing: SDAI.UNWRAP(seq:__items.entityReferences),
          adding: SDAI.UNWRAP(seq: newValue.entityReferences) )
      } // setter
    }

    /// backing storage for observed attribute
    private var __items: SDAI.SET<eREPRESENTATION_ITEM>/*[1:nil]*/ 

    /// attribute observer code
    internal class _items__observer: SDAI.EntityReferenceObserver.ObserverCode {
      final override class func observe<RemovingEntities: Sequence, AddingEntities: Sequence>(
        referencer: SDAI.PartialEntity, removing: RemovingEntities, adding: AddingEntities )
        where RemovingEntities.Element: SDAI.EntityReference, AddingEntities.Element: SDAI.EntityReference
      {
        for referencedComplex in removing.map({ $0.complexEntity }) {
          for referencerOwner in referencer.owners {
            //OBSERVING ENTITY: eHIDDEN_ELEMENT_OVER_RIDING_STYLED_ITEM
            referencedComplex.partialEntityInstance(_hidden_element_over_riding_styled_item.self)?
              ._container__observeRemovedReference(in: referencerOwner)
          }
        }

        for referencedComplex in adding.map({ $0.complexEntity }) {
          for referencerOwner in referencer.owners {
            //OBSERVING ENTITY: eHIDDEN_ELEMENT_OVER_RIDING_STYLED_ITEM
            referencedComplex.partialEntityInstance(_hidden_element_over_riding_styled_item.self)?
              ._container__observeAddedReference(in: referencerOwner)
          }
        }
      }

      final override class func observe(newReferencerOwner referencerOwner: SDAI.ComplexEntity) {
        guard let attrValue = referencerOwner.partialEntityInstance(_representation.self)?._items else { return }
        for referencedComplex in attrValue.entityReferences.map({ $0.complexEntity }) {
        //OBSERVING ENTITY: eHIDDEN_ELEMENT_OVER_RIDING_STYLED_ITEM
        referencedComplex.partialEntityInstance(_hidden_element_over_riding_styled_item.self)?
          ._container__observeAddedReference(in: referencerOwner)
        }
      }

      final override class func observe(leavingReferencerOwner referencerOwner: SDAI.ComplexEntity) {
        guard let attrValue = referencerOwner.partialEntityInstance(_representation.self)?._items else { return }
        for referencedComplex in attrValue.entityReferences.map({ $0.complexEntity }) {
        //OBSERVING ENTITY: eHIDDEN_ELEMENT_OVER_RIDING_STYLED_ITEM
        referencedComplex.partialEntityInstance(_hidden_element_over_riding_styled_item.self)?
          ._container__observe(leavingReferencerOwner: referencerOwner)
        }
      }

    }

    /// EXPLICIT ATTRIBUTE (OBSERVED)
    /// - see the corresponding attribute accesser in the entity reference definition for the attribute value dynamic lookup logic
    public internal(set) var _context_of_items: eREPRESENTATION_CONTEXT? { // OBSERVED EXPLICIT ATTRIBUTE
      get {
        return __context_of_items?.copy()
      } // getter
      set {
        let newValue = newValue
        let observer = SDAI.EntityReferenceObserver(referencer: self, observerCode: _context_of_items__observer.self)
        newValue?.configure(with: observer)
        observer.observe(removing: SDAI.UNWRAP(seq:__context_of_items?.entityReferences),
          adding: SDAI.UNWRAP(seq: newValue?.entityReferences) )
      } // setter
    }

    /// backing storage for observed attribute
    /// - see the corresponding attribute accesser in the entity reference definition for the attribute value dynamic lookup logic
    private var __context_of_items: eREPRESENTATION_CONTEXT? 

    /// attribute observer code
    internal class _context_of_items__observer: SDAI.EntityReferenceObserver.ObserverCode {
      final override class func observe<RemovingEntities: Sequence, AddingEntities: Sequence>(
        referencer: SDAI.PartialEntity, removing: RemovingEntities, adding: AddingEntities )
        where RemovingEntities.Element: SDAI.EntityReference, AddingEntities.Element: SDAI.EntityReference
      {
        for referencedComplex in removing.map({ $0.complexEntity }) {
          for referencerOwner in referencer.owners {
            //OBSERVING ENTITY: eREPRESENTATION_CONTEXT
            referencedComplex.partialEntityInstance(_representation_context.self)?
              ._representations_in_context__observeRemovedReference(in: referencerOwner)
          }
        }

        for referencedComplex in adding.map({ $0.complexEntity }) {
          for referencerOwner in referencer.owners {
            //OBSERVING ENTITY: eREPRESENTATION_CONTEXT
            referencedComplex.partialEntityInstance(_representation_context.self)?
              ._representations_in_context__observeAddedReference(in: referencerOwner)
          }
        }
      }

      final override class func observe(newReferencerOwner referencerOwner: SDAI.ComplexEntity) {
        guard let attrValue = referencerOwner.partialEntityInstance(_representation.self)?._context_of_items else { return }
        for referencedComplex in attrValue.entityReferences.map({ $0.complexEntity }) {
        //OBSERVING ENTITY: eREPRESENTATION_CONTEXT
        referencedComplex.partialEntityInstance(_representation_context.self)?
          ._representations_in_context__observeAddedReference(in: referencerOwner)
        }
      }

      final override class func observe(leavingReferencerOwner referencerOwner: SDAI.ComplexEntity) {
        guard let attrValue = referencerOwner.partialEntityInstance(_representation.self)?._context_of_items else { return }
        for referencedComplex in attrValue.entityReferences.map({ $0.complexEntity }) {
        //OBSERVING ENTITY: eREPRESENTATION_CONTEXT
        referencedComplex.partialEntityInstance(_representation_context.self)?
          ._representations_in_context__observe(leavingReferencerOwner: referencerOwner)
        }
      }

    }

    internal static func _context_of_items__provider(complex: SDAI.ComplexEntity) -> eREPRESENTATION__CONTEXT_OF_ITEMS__provider? {
      let resolved = complex.resolvePartialEntityInstance(from: [_mechanism_state_representation.typeIdentity
        ])
      return resolved as? eREPRESENTATION__CONTEXT_OF_ITEMS__provider
    }

    /// DERIVE ATTRIBUTE
    internal func _id__getter(SELF: eREPRESENTATION) -> tIDENTIFIER?  {

      let _TEMP1 = GET_ID_VALUE(sID_ATTRIBUTE_SELECT(/*eREPRESENTATION*/SELF))
      return _TEMP1
    }

    /// DERIVE ATTRIBUTE
    internal func _description__getter(SELF: eREPRESENTATION) -> tTEXT?  {

      let _TEMP1 = GET_DESCRIPTION_VALUE(sDESCRIPTION_ATTRIBUTE_SELECT(/*eREPRESENTATION*/SELF))
      return _TEMP1
    }

    //PARTIAL COMPLEX ENTITY SUPPORT
    final public override class func fixupPartialComplexEntityAttributes(partialComplex: SDAI.ComplexEntity, baseComplex: SDAI.ComplexEntity) {
      guard let pe = partialComplex.partialEntityInstance(_representation.self) else { return }

      if pe._context_of_items == nil, self._context_of_items__provider(complex: partialComplex) == nil, 
        let base__context_of_items__provider = self._context_of_items__provider(complex: baseComplex) {
        pe._context_of_items = base__context_of_items__provider._context_of_items__getter(complex: baseComplex)
      }
    }
    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      //SELECT data types (indirectly) referencing the current type as a member of the select list
      members.insert(SDAI.STRING(sSTYLE_CONTEXT_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sDATE_AND_TIME_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_ITEMS.typeName)) // -> sCLASSIFICATION_ITEM
      members.insert(SDAI.STRING(sCHANGE_MANAGEMENT_OBJECT.typeName)) // -> sACTION_ITEMS
      members.insert(SDAI.STRING(sIR_USAGE_ITEM.typeName)) // -> sCLASSIFICATION_ITEM
      members.insert(SDAI.STRING(sMULTI_LANGUAGE_ATTRIBUTE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sID_ATTRIBUTE_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sEXTERNAL_IDENTIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sIDENTIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sATTRIBUTE_CLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sEVIDENCE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sSECURITY_CLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sDESCRIPTION_ATTRIBUTE_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sPROPERTY_VARIABLE_REP_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sDATE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sAPPROVAL_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sREQUIREMENT_ASSIGNED_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sREQUIREMENT_SATISFACTION_ITEM.typeName)) // -> sREQUIREMENT_ASSIGNED_ITEM
      members.insert(SDAI.STRING(sREPRESENTATION_OR_REPRESENTATION_REFERENCE.typeName)) // -> Self
      members.insert(SDAI.STRING(sSTYLED_ITEM_TARGET.typeName)) // -> sREPRESENTATION_OR_REPRESENTATION_REFERENCE
      members.insert(SDAI.STRING(sPERSON_AND_ORGANIZATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sINVISIBLE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sGENERAL_ORGANIZATIONAL_DATA_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sEVENT_OCCURRENCE_ITEM.typeName)) // -> sGENERAL_ORGANIZATIONAL_DATA_SELECT
      members.insert(SDAI.STRING(sORGANIZATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sDESCRIPTION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sPROJECT_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sATTRIBUTE_LANGUAGE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sDOCUMENT_REFERENCE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sGROUPABLE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sEFFECTIVITY_ITEM.typeName)) // -> Self
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
      self._name.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._items.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._context_of_items?.value.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      if let comp = self._name.value.isValueEqualOptionally(to: rhs._name.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._items.value.isValueEqualOptionally(to: rhs._items.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._context_of_items?.value.isValueEqualOptionally(to: rhs._context_of_items?.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._name.value.isValueEqualOptionally(to: rhs._name.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._items.value.isValueEqualOptionally(to: rhs._items.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._context_of_items?.value.isValueEqualOptionally(to: rhs._context_of_items?.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //MARK: WHERE RULES (ENTITY)
    public static func WHERE_wr1(SELF: eREPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SDAI.USEDIN(T: SELF, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eID_ATTRIBUTE
        .IDENTIFIED_ITEM)
      let _TEMP2 = SDAI.SIZEOF(_TEMP1)
      let _TEMP3 = _TEMP2 <= SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
      return _TEMP3
    }
    public static func WHERE_wr2(SELF: eREPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SDAI.USEDIN(T: SELF, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
        .eDESCRIPTION_ATTRIBUTE.DESCRIBED_ITEM)
      let _TEMP2 = SDAI.SIZEOF(_TEMP1)
      let _TEMP3 = _TEMP2 <= SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
      return _TEMP3
    }

    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init(NAME: tLABEL, ITEMS: SDAI.SET<eREPRESENTATION_ITEM>/*[1:nil]*/ , 
                CONTEXT_OF_ITEMS: eREPRESENTATION_CONTEXT? ) {
      self._name = NAME
      self.__items = ITEMS
      self.__context_of_items = CONTEXT_OF_ITEMS
      super.init(asAbstructSuperclass:())

      self._items.configure(with: SDAI.EntityReferenceObserver(referencer: self, observerCode: _items__observer.self))
      self._context_of_items?.configure(with: SDAI.EntityReferenceObserver(referencer: self, observerCode: _context_of_items__observer.self))
    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 3
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      guard case .success(let p0) = exchangeStructure.recoverRequiredParameter(as: tLABEL.self, from: parameters[0])
      else { exchangeStructure.add(errorContext: "while recovering parameter #0 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p1) = exchangeStructure.recoverRequiredParameter(as: SDAI.SET<
        eREPRESENTATION_ITEM>.self, from: parameters[1])
      else { exchangeStructure.add(errorContext: "while recovering parameter #1 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p2) = exchangeStructure.recoverOmittableParameter(as: eREPRESENTATION_CONTEXT.self, from: parameters[2])
      else { exchangeStructure.add(errorContext: "while recovering parameter #2 for entity(\(Self.entityName)) constructor"); return nil }

      self.init( NAME: p0, ITEMS: p1, CONTEXT_OF_ITEMS: p2 )
    }

    /// broadcasting a new complex entity becoming an owner of the partial entity
    final public override func broadcast(addedToComplex complex: SDAI.ComplexEntity) {
      _items__observer.observe(newReferencerOwner: complex)
      _context_of_items__observer.observe(newReferencerOwner: complex)
    }

    /// broadcasting a complex entity withdrawing an owner of the partial entity
    final public override func broadcast(removedFromComplex complex: SDAI.ComplexEntity) {
      _items__observer.observe(leavingReferencerOwner: complex)
      _context_of_items__observer.observe(leavingReferencerOwner: complex)
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY representation
    SUPERTYPE OF ( 
        ONEOF ( 
            reinforcement_orientation_basis, 
            ply_angle_representation ) 
        ANDOR
        ONEOF ( 
            interpolated_configuration_representation, 
            link_motion_representation_along_path ) 
        ANDOR
        ONEOF ( 
            kinematic_link_representation, 
            kinematic_topology_structure, 
            kinematic_topology_directed_structure, 
            kinematic_topology_network_structure, 
            mechanism_representation, 
            shape_representation ) 
        ANDOR
        ONEOF ( 
            kinematic_topology_structure, 
            kinematic_topology_directed_structure, 
            kinematic_topology_network_structure ) );
      name              : label;
      items             : SET [1 : ?] OF representation_item; (* observed by
          hidden_element_over_riding_styled_item.container
          *)
      context_of_items  : representation_context; (* observed by
          representation_context.representations_in_context
          *)
    DERIVE
      id           : identifier := get_id_value( SELF );
      description  : text := get_description_value( SELF );
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ID_ATTRIBUTE.'
               + 'IDENTIFIED_ITEM'  ) ) <= 1 );
      wr2: ( SIZEOF( USEDIN( SELF, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DESCRIPTION_ATTRIBUTE.'
               + 'DESCRIBED_ITEM'  ) ) <= 1 );
  END_ENTITY; -- representation (line:27449 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class eREPRESENTATION : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _representation.self
    }
    public let partialEntity: _representation

    //MARK: SUPERTYPES
    public var super_eREPRESENTATION: eREPRESENTATION { return self } 	// [1]

    //MARK: SUBTYPES
    public var sub_eREINFORCEMENT_ORIENTATION_BASIS: eREINFORCEMENT_ORIENTATION_BASIS? {	// [2]
      return self.complexEntity.entityReference(eREINFORCEMENT_ORIENTATION_BASIS.self)
    }

    public var sub_ePLY_ANGLE_REPRESENTATION: ePLY_ANGLE_REPRESENTATION? {	// [3]
      return self.complexEntity.entityReference(ePLY_ANGLE_REPRESENTATION.self)
    }

    public var sub_eINTERPOLATED_CONFIGURATION_REPRESENTATION: eINTERPOLATED_CONFIGURATION_REPRESENTATION? {	// [4]
      return self.complexEntity.entityReference(eINTERPOLATED_CONFIGURATION_REPRESENTATION.self)
    }

    public var sub_ePRESCRIBED_PATH: ePRESCRIBED_PATH? {	// [5]
      return self.complexEntity.entityReference(ePRESCRIBED_PATH.self)
    }

    public var sub_eRESULTING_PATH: eRESULTING_PATH? {	// [6]
      return self.complexEntity.entityReference(eRESULTING_PATH.self)
    }

    public var sub_eLINK_MOTION_REPRESENTATION_ALONG_PATH: eLINK_MOTION_REPRESENTATION_ALONG_PATH? {	// [7]
      return self.complexEntity.entityReference(eLINK_MOTION_REPRESENTATION_ALONG_PATH.self)
    }

    public var sub_eRIGID_LINK_REPRESENTATION: eRIGID_LINK_REPRESENTATION? {	// [8]
      return self.complexEntity.entityReference(eRIGID_LINK_REPRESENTATION.self)
    }

    public var sub_eLINEAR_FLEXIBLE_LINK_REPRESENTATION: eLINEAR_FLEXIBLE_LINK_REPRESENTATION? {	// [9]
      return self.complexEntity.entityReference(eLINEAR_FLEXIBLE_LINK_REPRESENTATION.self)
    }

    public var sub_eKINEMATIC_LINK_REPRESENTATION: eKINEMATIC_LINK_REPRESENTATION? {	// [10]
      return self.complexEntity.entityReference(eKINEMATIC_LINK_REPRESENTATION.self)
    }

    public var sub_eKINEMATIC_TOPOLOGY_SUBSTRUCTURE: eKINEMATIC_TOPOLOGY_SUBSTRUCTURE? {	// [11]
      return self.complexEntity.entityReference(eKINEMATIC_TOPOLOGY_SUBSTRUCTURE.self)
    }

    public var sub_eKINEMATIC_TOPOLOGY_STRUCTURE: eKINEMATIC_TOPOLOGY_STRUCTURE? {	// [12]
      return self.complexEntity.entityReference(eKINEMATIC_TOPOLOGY_STRUCTURE.self)
    }

    public var sub_eKINEMATIC_TOPOLOGY_TREE_STRUCTURE: eKINEMATIC_TOPOLOGY_TREE_STRUCTURE? {	// [13]
      return self.complexEntity.entityReference(eKINEMATIC_TOPOLOGY_TREE_STRUCTURE.self)
    }

    public var sub_eKINEMATIC_TOPOLOGY_DIRECTED_STRUCTURE: eKINEMATIC_TOPOLOGY_DIRECTED_STRUCTURE? {	// [14]
      return self.complexEntity.entityReference(eKINEMATIC_TOPOLOGY_DIRECTED_STRUCTURE.self)
    }

    public var sub_eKINEMATIC_TOPOLOGY_NETWORK_STRUCTURE: eKINEMATIC_TOPOLOGY_NETWORK_STRUCTURE? {	// [15]
      return self.complexEntity.entityReference(eKINEMATIC_TOPOLOGY_NETWORK_STRUCTURE.self)
    }

    public var sub_eMECHANISM_REPRESENTATION: eMECHANISM_REPRESENTATION? {	// [16]
      return self.complexEntity.entityReference(eMECHANISM_REPRESENTATION.self)
    }

    public var sub_eFACETED_BREP_SHAPE_REPRESENTATION: eFACETED_BREP_SHAPE_REPRESENTATION? {	// [17]
      return self.complexEntity.entityReference(eFACETED_BREP_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSHAPE_REPRESENTATION_WITH_PARAMETERS: eSHAPE_REPRESENTATION_WITH_PARAMETERS? {	// [18]
      return self.complexEntity.entityReference(eSHAPE_REPRESENTATION_WITH_PARAMETERS.self)
    }

    public var sub_eLOCATION_SHAPE_REPRESENTATION: eLOCATION_SHAPE_REPRESENTATION? {	// [19]
      return self.complexEntity.entityReference(eLOCATION_SHAPE_REPRESENTATION.self)
    }

    public var sub_eBEVELED_SHEET_REPRESENTATION: eBEVELED_SHEET_REPRESENTATION? {	// [20]
      return self.complexEntity.entityReference(eBEVELED_SHEET_REPRESENTATION.self)
    }

    public var sub_eADVANCED_BREP_SHAPE_REPRESENTATION: eADVANCED_BREP_SHAPE_REPRESENTATION? {	// [21]
      return self.complexEntity.entityReference(eADVANCED_BREP_SHAPE_REPRESENTATION.self)
    }

    public var sub_eDIRECTION_SHAPE_REPRESENTATION: eDIRECTION_SHAPE_REPRESENTATION? {	// [22]
      return self.complexEntity.entityReference(eDIRECTION_SHAPE_REPRESENTATION.self)
    }

    public var sub_eEDGE_BASED_WIREFRAME_SHAPE_REPRESENTATION: eEDGE_BASED_WIREFRAME_SHAPE_REPRESENTATION? {	// [23]
      return self.complexEntity.entityReference(eEDGE_BASED_WIREFRAME_SHAPE_REPRESENTATION.self)
    }

    public var sub_eMANIFOLD_SUBSURFACE_SHAPE_REPRESENTATION: eMANIFOLD_SUBSURFACE_SHAPE_REPRESENTATION? {	// [24]
      return self.complexEntity.entityReference(eMANIFOLD_SUBSURFACE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eCOMPOSITE_SHEET_REPRESENTATION: eCOMPOSITE_SHEET_REPRESENTATION? {	// [25]
      return self.complexEntity.entityReference(eCOMPOSITE_SHEET_REPRESENTATION.self)
    }

    public var sub_eCURVE_SWEPT_SOLID_SHAPE_REPRESENTATION: eCURVE_SWEPT_SOLID_SHAPE_REPRESENTATION? {	// [26]
      return self.complexEntity.entityReference(eCURVE_SWEPT_SOLID_SHAPE_REPRESENTATION.self)
    }

    public var sub_eGEOMETRICALLY_BOUNDED_2D_WIREFRAME_REPRESENTATION: eGEOMETRICALLY_BOUNDED_2D_WIREFRAME_REPRESENTATION? {	// [27]
      return self.complexEntity.entityReference(eGEOMETRICALLY_BOUNDED_2D_WIREFRAME_REPRESENTATION.self)
    }

    public var sub_ePLANAR_SHAPE_REPRESENTATION: ePLANAR_SHAPE_REPRESENTATION? {	// [28]
      return self.complexEntity.entityReference(ePLANAR_SHAPE_REPRESENTATION.self)
    }

    public var sub_ePATH_SHAPE_REPRESENTATION: ePATH_SHAPE_REPRESENTATION? {	// [29]
      return self.complexEntity.entityReference(ePATH_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSHAPE_DIMENSION_REPRESENTATION: eSHAPE_DIMENSION_REPRESENTATION? {	// [30]
      return self.complexEntity.entityReference(eSHAPE_DIMENSION_REPRESENTATION.self)
    }

    public var sub_eGEOMETRICALLY_BOUNDED_WIREFRAME_SHAPE_REPRESENTATION: eGEOMETRICALLY_BOUNDED_WIREFRAME_SHAPE_REPRESENTATION? {	// [31]
      return self.complexEntity.entityReference(eGEOMETRICALLY_BOUNDED_WIREFRAME_SHAPE_REPRESENTATION.self)
    }

    public var sub_ePOINT_PLACEMENT_SHAPE_REPRESENTATION: ePOINT_PLACEMENT_SHAPE_REPRESENTATION? {	// [32]
      return self.complexEntity.entityReference(ePOINT_PLACEMENT_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSCAN_DATA_SHAPE_REPRESENTATION: eSCAN_DATA_SHAPE_REPRESENTATION? {	// [33]
      return self.complexEntity.entityReference(eSCAN_DATA_SHAPE_REPRESENTATION.self)
    }

    public var sub_ePROCEDURAL_SHAPE_REPRESENTATION: ePROCEDURAL_SHAPE_REPRESENTATION? {	// [34]
      return self.complexEntity.entityReference(ePROCEDURAL_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSINGLE_BOUNDARY_CSG_2D_SHAPE_REPRESENTATION: eSINGLE_BOUNDARY_CSG_2D_SHAPE_REPRESENTATION? {	// [35]
      return self.complexEntity.entityReference(eSINGLE_BOUNDARY_CSG_2D_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSINGLE_AREA_CSG_2D_SHAPE_REPRESENTATION: eSINGLE_AREA_CSG_2D_SHAPE_REPRESENTATION? {	// [36]
      return self.complexEntity.entityReference(eSINGLE_AREA_CSG_2D_SHAPE_REPRESENTATION.self)
    }

    public var sub_eCSG_2D_SHAPE_REPRESENTATION: eCSG_2D_SHAPE_REPRESENTATION? {	// [37]
      return self.complexEntity.entityReference(eCSG_2D_SHAPE_REPRESENTATION.self)
    }

    public var sub_eNON_MANIFOLD_SURFACE_SHAPE_REPRESENTATION: eNON_MANIFOLD_SURFACE_SHAPE_REPRESENTATION? {	// [38]
      return self.complexEntity.entityReference(eNON_MANIFOLD_SURFACE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eCOMPOUND_SHAPE_REPRESENTATION: eCOMPOUND_SHAPE_REPRESENTATION? {	// [39]
      return self.complexEntity.entityReference(eCOMPOUND_SHAPE_REPRESENTATION.self)
    }

    public var sub_eREPRESENTATIVE_SHAPE_REPRESENTATION: eREPRESENTATIVE_SHAPE_REPRESENTATION? {	// [40]
      return self.complexEntity.entityReference(eREPRESENTATIVE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eELEMENTARY_BREP_SHAPE_REPRESENTATION: eELEMENTARY_BREP_SHAPE_REPRESENTATION? {	// [41]
      return self.complexEntity.entityReference(eELEMENTARY_BREP_SHAPE_REPRESENTATION.self)
    }

    public var sub_eMANIFOLD_SURFACE_SHAPE_REPRESENTATION: eMANIFOLD_SURFACE_SHAPE_REPRESENTATION? {	// [42]
      return self.complexEntity.entityReference(eMANIFOLD_SURFACE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eGEOMETRICALLY_BOUNDED_SURFACE_SHAPE_REPRESENTATION: eGEOMETRICALLY_BOUNDED_SURFACE_SHAPE_REPRESENTATION? {	// [43]
      return self.complexEntity.entityReference(eGEOMETRICALLY_BOUNDED_SURFACE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eFACE_SHAPE_REPRESENTATION: eFACE_SHAPE_REPRESENTATION? {	// [44]
      return self.complexEntity.entityReference(eFACE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSHELL_BASED_WIREFRAME_SHAPE_REPRESENTATION: eSHELL_BASED_WIREFRAME_SHAPE_REPRESENTATION? {	// [45]
      return self.complexEntity.entityReference(eSHELL_BASED_WIREFRAME_SHAPE_REPRESENTATION.self)
    }

    public var sub_eCSG_SHAPE_REPRESENTATION: eCSG_SHAPE_REPRESENTATION? {	// [46]
      return self.complexEntity.entityReference(eCSG_SHAPE_REPRESENTATION.self)
    }

    public var sub_eNEUTRAL_SKETCH_REPRESENTATION: eNEUTRAL_SKETCH_REPRESENTATION? {	// [47]
      return self.complexEntity.entityReference(eNEUTRAL_SKETCH_REPRESENTATION.self)
    }

    public var sub_eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS: eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS? {	// [48]
      return self.complexEntity.entityReference(eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS.self)
    }

    public var sub_eTESSELLATED_SHAPE_REPRESENTATION: eTESSELLATED_SHAPE_REPRESENTATION? {	// [49]
      return self.complexEntity.entityReference(eTESSELLATED_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSHAPE_REPRESENTATION: eSHAPE_REPRESENTATION? {	// [50]
      return self.complexEntity.entityReference(eSHAPE_REPRESENTATION.self)
    }

    public var sub_eRANGE_CHARACTERISTIC: eRANGE_CHARACTERISTIC? {	// [51]
      return self.complexEntity.entityReference(eRANGE_CHARACTERISTIC.self)
    }

    public var sub_eVISUAL_APPEARANCE_REPRESENTATION: eVISUAL_APPEARANCE_REPRESENTATION? {	// [52]
      return self.complexEntity.entityReference(eVISUAL_APPEARANCE_REPRESENTATION.self)
    }

    public var sub_eCURVE_STYLE_PARAMETERS_WITH_ENDS: eCURVE_STYLE_PARAMETERS_WITH_ENDS? {	// [53]
      return self.complexEntity.entityReference(eCURVE_STYLE_PARAMETERS_WITH_ENDS.self)
    }

    public var sub_eCLOSED_CURVE_STYLE_PARAMETERS: eCLOSED_CURVE_STYLE_PARAMETERS? {	// [54]
      return self.complexEntity.entityReference(eCLOSED_CURVE_STYLE_PARAMETERS.self)
    }

    public var sub_eCURVE_STYLE_PARAMETERS_REPRESENTATION: eCURVE_STYLE_PARAMETERS_REPRESENTATION? {	// [55]
      return self.complexEntity.entityReference(eCURVE_STYLE_PARAMETERS_REPRESENTATION.self)
    }

    public var sub_eEVALUATED_CHARACTERISTIC_OF_PRODUCT_AS_INDIVIDUAL_TEST_RESULT: eEVALUATED_CHARACTERISTIC_OF_PRODUCT_AS_INDIVIDUAL_TEST_RESULT? {	// [56]
      return self.complexEntity.entityReference(eEVALUATED_CHARACTERISTIC_OF_PRODUCT_AS_INDIVIDUAL_TEST_RESULT.self)
    }

    public var sub_eEVALUATED_CHARACTERISTIC: eEVALUATED_CHARACTERISTIC? {	// [57]
      return self.complexEntity.entityReference(eEVALUATED_CHARACTERISTIC.self)
    }

    public var sub_eHARDNESS_REPRESENTATION: eHARDNESS_REPRESENTATION? {	// [58]
      return self.complexEntity.entityReference(eHARDNESS_REPRESENTATION.self)
    }

    public var sub_eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION? {	// [59]
      return self.complexEntity.entityReference(eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION.self)
    }

    public var sub_eCONNECTED_EDGE_WITH_LENGTH_SET_REPRESENTATION: eCONNECTED_EDGE_WITH_LENGTH_SET_REPRESENTATION? {	// [60]
      return self.complexEntity.entityReference(eCONNECTED_EDGE_WITH_LENGTH_SET_REPRESENTATION.self)
    }

    public var sub_eMECHANISM_STATE_REPRESENTATION: eMECHANISM_STATE_REPRESENTATION? {	// [61]
      return self.complexEntity.entityReference(eMECHANISM_STATE_REPRESENTATION.self)
    }

    public var sub_eEXTERNALLY_DEFINED_REPRESENTATION: eEXTERNALLY_DEFINED_REPRESENTATION? {	// [62]
      return self.complexEntity.entityReference(eEXTERNALLY_DEFINED_REPRESENTATION.self)
    }

    public var sub_eMECHANICAL_DESIGN_SHADED_PRESENTATION_AREA: eMECHANICAL_DESIGN_SHADED_PRESENTATION_AREA? {	// [63]
      return self.complexEntity.entityReference(eMECHANICAL_DESIGN_SHADED_PRESENTATION_AREA.self)
    }

    public var sub_eMECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_AREA: eMECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_AREA? {	// [64]
      return self.complexEntity.entityReference(eMECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_AREA.self)
    }

    public var sub_eDRAWING_SHEET_REVISION: eDRAWING_SHEET_REVISION? {	// [65]
      return self.complexEntity.entityReference(eDRAWING_SHEET_REVISION.self)
    }

    public var sub_ePRESENTATION_AREA: ePRESENTATION_AREA? {	// [66]
      return self.complexEntity.entityReference(ePRESENTATION_AREA.self)
    }

    public var sub_ePICTURE_REPRESENTATION: ePICTURE_REPRESENTATION? {	// [67]
      return self.complexEntity.entityReference(ePICTURE_REPRESENTATION.self)
    }

    public var sub_ePRESENTATION_VIEW: ePRESENTATION_VIEW? {	// [68]
      return self.complexEntity.entityReference(ePRESENTATION_VIEW.self)
    }

    public var sub_ePRESENTATION_REPRESENTATION: ePRESENTATION_REPRESENTATION? {	// [69]
      return self.complexEntity.entityReference(ePRESENTATION_REPRESENTATION.self)
    }

    public var sub_eUNCERTAINTY_ASSIGNED_REPRESENTATION: eUNCERTAINTY_ASSIGNED_REPRESENTATION? {	// [70]
      return self.complexEntity.entityReference(eUNCERTAINTY_ASSIGNED_REPRESENTATION.self)
    }

    public var sub_eDRAUGHTING_SUBFIGURE_REPRESENTATION: eDRAUGHTING_SUBFIGURE_REPRESENTATION? {	// [71]
      return self.complexEntity.entityReference(eDRAUGHTING_SUBFIGURE_REPRESENTATION.self)
    }

    public var sub_eDRAWING_SHEET_LAYOUT: eDRAWING_SHEET_LAYOUT? {	// [72]
      return self.complexEntity.entityReference(eDRAWING_SHEET_LAYOUT.self)
    }

    public var sub_eDRAUGHTING_SYMBOL_REPRESENTATION: eDRAUGHTING_SYMBOL_REPRESENTATION? {	// [73]
      return self.complexEntity.entityReference(eDRAUGHTING_SYMBOL_REPRESENTATION.self)
    }

    public var sub_eCHARACTER_GLYPH_SYMBOL_STROKE: eCHARACTER_GLYPH_SYMBOL_STROKE? {	// [74]
      return self.complexEntity.entityReference(eCHARACTER_GLYPH_SYMBOL_STROKE.self)
    }

    public var sub_eCHARACTER_GLYPH_SYMBOL_OUTLINE: eCHARACTER_GLYPH_SYMBOL_OUTLINE? {	// [75]
      return self.complexEntity.entityReference(eCHARACTER_GLYPH_SYMBOL_OUTLINE.self)
    }

    public var sub_eCHARACTER_GLYPH_SYMBOL: eCHARACTER_GLYPH_SYMBOL? {	// [76]
      return self.complexEntity.entityReference(eCHARACTER_GLYPH_SYMBOL.self)
    }

    public var sub_eGENERIC_CHARACTER_GLYPH_SYMBOL: eGENERIC_CHARACTER_GLYPH_SYMBOL? {	// [77]
      return self.complexEntity.entityReference(eGENERIC_CHARACTER_GLYPH_SYMBOL.self)
    }

    public var sub_eSYMBOL_REPRESENTATION: eSYMBOL_REPRESENTATION? {	// [78]
      return self.complexEntity.entityReference(eSYMBOL_REPRESENTATION.self)
    }

    public var sub_eBACK_CHAINING_RULE_BODY: eBACK_CHAINING_RULE_BODY? {	// [79]
      return self.complexEntity.entityReference(eBACK_CHAINING_RULE_BODY.self)
    }

    public var sub_eFORWARD_CHAINING_RULE_PREMISE: eFORWARD_CHAINING_RULE_PREMISE? {	// [80]
      return self.complexEntity.entityReference(eFORWARD_CHAINING_RULE_PREMISE.self)
    }

    public var sub_eDRAUGHTING_MODEL: eDRAUGHTING_MODEL? {	// [81]
      return self.complexEntity.entityReference(eDRAUGHTING_MODEL.self)
    }

    public var sub_eCONTACT_RATIO_REPRESENTATION: eCONTACT_RATIO_REPRESENTATION? {	// [82]
      return self.complexEntity.entityReference(eCONTACT_RATIO_REPRESENTATION.self)
    }

    public var sub_eSHAPE_INSPECTION_RESULT_REPRESENTATION_WITH_ACCURACY: eSHAPE_INSPECTION_RESULT_REPRESENTATION_WITH_ACCURACY? {	// [83]
      return self.complexEntity.entityReference(eSHAPE_INSPECTION_RESULT_REPRESENTATION_WITH_ACCURACY.self)
    }

    public var sub_eSHAPE_DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION: eSHAPE_DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION? {	// [84]
      return self.complexEntity.entityReference(eSHAPE_DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION.self)
    }

    public var sub_eEXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION: eEXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION? {	// [85]
      return self.complexEntity.entityReference(eEXTERNALLY_CONDITIONED_DATA_QUALITY_INSPECTION_RESULT_REPRESENTATION.self)
    }

    public var sub_eDATA_QUALITY_INSPECTION_RESULT_REPRESENTATION: eDATA_QUALITY_INSPECTION_RESULT_REPRESENTATION? {	// [86]
      return self.complexEntity.entityReference(eDATA_QUALITY_INSPECTION_RESULT_REPRESENTATION.self)
    }

    public var sub_eA3M_EQUIVALENCE_CRITERIA_REPRESENTATION: eA3M_EQUIVALENCE_CRITERIA_REPRESENTATION? {	// [87]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_CRITERIA_REPRESENTATION.self)
    }

    public var sub_eDATA_EQUIVALENCE_CRITERIA_REPRESENTATION: eDATA_EQUIVALENCE_CRITERIA_REPRESENTATION? {	// [88]
      return self.complexEntity.entityReference(eDATA_EQUIVALENCE_CRITERIA_REPRESENTATION.self)
    }

    public var sub_eSHAPE_CRITERIA_REPRESENTATION_WITH_ACCURACY: eSHAPE_CRITERIA_REPRESENTATION_WITH_ACCURACY? {	// [89]
      return self.complexEntity.entityReference(eSHAPE_CRITERIA_REPRESENTATION_WITH_ACCURACY.self)
    }

    public var sub_eSHAPE_DATA_QUALITY_CRITERIA_REPRESENTATION: eSHAPE_DATA_QUALITY_CRITERIA_REPRESENTATION? {	// [90]
      return self.complexEntity.entityReference(eSHAPE_DATA_QUALITY_CRITERIA_REPRESENTATION.self)
    }

    public var sub_eEXTERNALLY_CONDITIONED_DATA_QUALITY_CRITERIA_REPRESENTATION: eEXTERNALLY_CONDITIONED_DATA_QUALITY_CRITERIA_REPRESENTATION? {	// [91]
      return self.complexEntity.entityReference(eEXTERNALLY_CONDITIONED_DATA_QUALITY_CRITERIA_REPRESENTATION.self)
    }

    public var sub_eDATA_QUALITY_CRITERIA_REPRESENTATION: eDATA_QUALITY_CRITERIA_REPRESENTATION? {	// [92]
      return self.complexEntity.entityReference(eDATA_QUALITY_CRITERIA_REPRESENTATION.self)
    }

    public var sub_eTACTILE_APPEARANCE_REPRESENTATION: eTACTILE_APPEARANCE_REPRESENTATION? {	// [93]
      return self.complexEntity.entityReference(eTACTILE_APPEARANCE_REPRESENTATION.self)
    }

    public var sub_eCONSTRUCTIVE_GEOMETRY_REPRESENTATION: eCONSTRUCTIVE_GEOMETRY_REPRESENTATION? {	// [94]
      return self.complexEntity.entityReference(eCONSTRUCTIVE_GEOMETRY_REPRESENTATION.self)
    }

    public var sub_eANALYSIS_MODEL: eANALYSIS_MODEL? {	// [95]
      return self.complexEntity.entityReference(eANALYSIS_MODEL.self)
    }

    public var sub_ePATH_PARAMETER_REPRESENTATION: ePATH_PARAMETER_REPRESENTATION? {	// [96]
      return self.complexEntity.entityReference(ePATH_PARAMETER_REPRESENTATION.self)
    }

    public var sub_eDEFINITIONAL_REPRESENTATION: eDEFINITIONAL_REPRESENTATION? {	// [97]
      return self.complexEntity.entityReference(eDEFINITIONAL_REPRESENTATION.self)
    }

    public var sub_eTEXT_STRING_REPRESENTATION: eTEXT_STRING_REPRESENTATION? {	// [98]
      return self.complexEntity.entityReference(eTEXT_STRING_REPRESENTATION.self)
    }

    public var sub_ePROCEDURAL_REPRESENTATION: ePROCEDURAL_REPRESENTATION? {	// [99]
      return self.complexEntity.entityReference(ePROCEDURAL_REPRESENTATION.self)
    }

    public var sub_eSURFACE_TEXTURE_REPRESENTATION: eSURFACE_TEXTURE_REPRESENTATION? {	// [100]
      return self.complexEntity.entityReference(eSURFACE_TEXTURE_REPRESENTATION.self)
    }

    public var sub_eDEFAULT_TOLERANCE_TABLE: eDEFAULT_TOLERANCE_TABLE? {	// [101]
      return self.complexEntity.entityReference(eDEFAULT_TOLERANCE_TABLE.self)
    }

    public var sub_eCHARACTERIZED_REPRESENTATION: eCHARACTERIZED_REPRESENTATION? {	// [102]
      return self.complexEntity.entityReference(eCHARACTERIZED_REPRESENTATION.self)
    }

    public var sub_eSTRUCTURED_TEXT_REPRESENTATION: eSTRUCTURED_TEXT_REPRESENTATION? {	// [103]
      return self.complexEntity.entityReference(eSTRUCTURED_TEXT_REPRESENTATION.self)
    }

    public var sub_eA3M_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION_FOR_ASSEMBLY: eA3M_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION_FOR_ASSEMBLY? {	// [104]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION_FOR_ASSEMBLY.self)
    }

    public var sub_eA3M_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION_FOR_SHAPE: eA3M_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION_FOR_SHAPE? {	// [105]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION_FOR_SHAPE.self)
    }

    public var sub_eA3M_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION: eA3M_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION? {	// [106]
      return self.complexEntity.entityReference(eA3M_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION.self)
    }

    public var sub_eDATA_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION: eDATA_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION? {	// [107]
      return self.complexEntity.entityReference(eDATA_EQUIVALENCE_INSPECTION_RESULT_REPRESENTATION.self)
    }

    public var sub_eMECHANICAL_DESIGN_PRESENTATION_REPRESENTATION_WITH_DRAUGHTING: eMECHANICAL_DESIGN_PRESENTATION_REPRESENTATION_WITH_DRAUGHTING? {	// [108]
      return self.complexEntity.entityReference(eMECHANICAL_DESIGN_PRESENTATION_REPRESENTATION_WITH_DRAUGHTING.self)
    }

    public var sub_eATTRIBUTE_ASSERTION: eATTRIBUTE_ASSERTION? {	// [109]
      return self.complexEntity.entityReference(eATTRIBUTE_ASSERTION.self)
    }

    public var sub_eMECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_REPRESENTATION: eMECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_REPRESENTATION? {	// [110]
      return self.complexEntity.entityReference(eMECHANICAL_DESIGN_GEOMETRIC_PRESENTATION_REPRESENTATION.self)
    }

    public var sub_eMOMENTS_OF_INERTIA_REPRESENTATION: eMOMENTS_OF_INERTIA_REPRESENTATION? {	// [111]
      return self.complexEntity.entityReference(eMOMENTS_OF_INERTIA_REPRESENTATION.self)
    }

    public var sub_eROW_VARIABLE: eROW_VARIABLE? {	// [112]
      return self.complexEntity.entityReference(eROW_VARIABLE.self)
    }

    public var sub_eSCALAR_VARIABLE: eSCALAR_VARIABLE? {	// [113]
      return self.complexEntity.entityReference(eSCALAR_VARIABLE.self)
    }

    public var sub_eABSTRACT_VARIABLE: eABSTRACT_VARIABLE? {	// [114]
      return self.complexEntity.entityReference(eABSTRACT_VARIABLE.self)
    }

    public var sub_eVARIATIONAL_REPRESENTATION: eVARIATIONAL_REPRESENTATION? {	// [115]
      return self.complexEntity.entityReference(eVARIATIONAL_REPRESENTATION.self)
    }


    //MARK: ATTRIBUTES
    // CRITERIA_INSPECTED: (2 AMBIGUOUS REFs)

    // CONTROLLING_JOINTS: (2 AMBIGUOUS REFs)

    // PARENT: (3 AMBIGUOUS REFs)

    /// __DERIVE__ attribute
    /// - origin: SELF( ``eREPRESENTATION`` )
    public var DESCRIPTION: tTEXT?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"DESCRIPTION") {
          return cached.value as! tTEXT? 
        }
        let origin = self
        let value = origin.partialEntity._description__getter(SELF: origin)
        updateCache(derivedAttributeName:"DESCRIPTION", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCHARACTER_GLYPH_SYMBOL`` )
    public var CHARACTER_BOX: ePLANAR_EXTENT?  {
      get {
        return sub_eCHARACTER_GLYPH_SYMBOL?.partialEntity._character_box
      }
      set(newValue) {
        guard let partial = sub_eCHARACTER_GLYPH_SYMBOL?.super_eCHARACTER_GLYPH_SYMBOL.partialEntity
          else { return }
        partial._character_box = SDAI.UNWRAP(newValue)
      }
    }

    /// __INVERSE__ attribute
    /// observing eVARIATIONAL_CURRENT_REPRESENTATION_RELATIONSHIP .REP_1
    /// - origin: SUB( ``eVARIATIONAL_REPRESENTATION`` )
    public var CM_LINK: eVARIATIONAL_CURRENT_REPRESENTATION_RELATIONSHIP?  {
      get {
        return sub_eVARIATIONAL_REPRESENTATION?.partialEntity._cm_link
      }
    }

    /// __EXPLICIT(OBSERVED)__ attribute
    /// - origin: SELF( ``eREPRESENTATION`` )
    public var ITEMS: SDAI.SET<eREPRESENTATION_ITEM>/*[1:nil]*/  {
      get {
        return SDAI.UNWRAP( self.partialEntity._items )
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._items = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCHARACTER_GLYPH_SYMBOL_OUTLINE`` )
    public var OUTLINES: (SDAI.SET<eANNOTATION_FILL_AREA>/*[1:nil]*/ )?  {
      get {
        return sub_eCHARACTER_GLYPH_SYMBOL_OUTLINE?.partialEntity._outlines
      }
      set(newValue) {
        guard let partial = sub_eCHARACTER_GLYPH_SYMBOL_OUTLINE?.super_eCHARACTER_GLYPH_SYMBOL_OUTLINE
          .partialEntity else { return }
        partial._outlines = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSHAPE_CRITERIA_REPRESENTATION_WITH_ACCURACY`` )
    public var REQUIRED_GENERAL_ACCURACY: (SDAI.SET<eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  {
      get {
        return sub_eSHAPE_CRITERIA_REPRESENTATION_WITH_ACCURACY?.partialEntity._required_general_accuracy
      }
      set(newValue) {
        guard let partial = sub_eSHAPE_CRITERIA_REPRESENTATION_WITH_ACCURACY?.super_eSHAPE_CRITERIA_REPRESENTATION_WITH_ACCURACY
          .partialEntity else { return }
        partial._required_general_accuracy = SDAI.UNWRAP(newValue)
      }
    }

    /// __INVERSE__ attribute
    /// observing eKINEMATIC_LINK_REPRESENTATION_ASSOCIATION .REP_1
    /// - origin: SUB( ``eKINEMATIC_LINK_REPRESENTATION`` )
    public var ASSOCIATED_SHAPE_REPRESENTATION: (SDAI.SET<eKINEMATIC_LINK_REPRESENTATION_ASSOCIATION>/*[0:1]*/ )?  {
      get {
        return sub_eKINEMATIC_LINK_REPRESENTATION?.partialEntity._associated_shape_representation
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCHARACTER_GLYPH_SYMBOL`` )
    public var BASELINE_RATIO: tRATIO_MEASURE?  {
      get {
        return sub_eCHARACTER_GLYPH_SYMBOL?.partialEntity._baseline_ratio
      }
      set(newValue) {
        guard let partial = sub_eCHARACTER_GLYPH_SYMBOL?.super_eCHARACTER_GLYPH_SYMBOL.partialEntity
          else { return }
        partial._baseline_ratio = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eDRAWING_SHEET_REVISION`` )
    public var REVISION_IDENTIFIER: tIDENTIFIER?  {
      get {
        return sub_eDRAWING_SHEET_REVISION?.partialEntity._revision_identifier
      }
      set(newValue) {
        guard let partial = sub_eDRAWING_SHEET_REVISION?.super_eDRAWING_SHEET_REVISION.partialEntity
          else { return }
        partial._revision_identifier = SDAI.UNWRAP(newValue)
      }
    }

    /// __INVERSE__ attribute
    /// observing ePRESENTATION_SIZE .UNIT
    /// - origin: SUB( ``ePICTURE_REPRESENTATION`` )
    public var SIZE: ePRESENTATION_SIZE?  {
      get {
        return sub_ePICTURE_REPRESENTATION?.partialEntity._size
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS`` )
    public var TESSELLATION_ACCURACY_PARAMETERS: (SDAI.SET<sTESSELLATION_ACCURACY_PARAMETER_ITEM>/*[1:nil]*/ )?  {
      get {
        return sub_eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS?.partialEntity
          ._tessellation_accuracy_parameters
      }
      set(newValue) {
        guard let partial = sub_eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS?.super_eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS
          .partialEntity else { return }
        partial._tessellation_accuracy_parameters = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eMECHANISM_REPRESENTATION`` )
    public var REPRESENTED_JOINTS: (SDAI.SET<eKINEMATIC_JOINT>/*[1:nil]*/ )?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"REPRESENTED_JOINTS") {
          return cached.value as! (SDAI.SET<eKINEMATIC_JOINT>/*[1:nil]*/ )? 
        }
        guard let origin = sub_eMECHANISM_REPRESENTATION else { return nil }
        let value = SDAI.SET<eKINEMATIC_JOINT>(origin.partialEntity._represented_joints__getter(SELF: origin))
        updateCache(derivedAttributeName:"REPRESENTED_JOINTS", value:value)
        return value
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eCHARACTER_GLYPH_SYMBOL`` )
    public var BOX_HEIGHT: tLENGTH_MEASURE?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"BOX_HEIGHT") {
          return cached.value as! tLENGTH_MEASURE? 
        }
        guard let origin = sub_eCHARACTER_GLYPH_SYMBOL else { return nil }
        let value = tLENGTH_MEASURE(origin.partialEntity._box_height__getter(SELF: origin))
        updateCache(derivedAttributeName:"BOX_HEIGHT", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCHARACTER_GLYPH_SYMBOL_STROKE`` )
    public var STROKES: (SDAI.SET<eCURVE>/*[1:nil]*/ )?  {
      get {
        return sub_eCHARACTER_GLYPH_SYMBOL_STROKE?.partialEntity._strokes
      }
      set(newValue) {
        guard let partial = sub_eCHARACTER_GLYPH_SYMBOL_STROKE?.super_eCHARACTER_GLYPH_SYMBOL_STROKE
          .partialEntity else { return }
        partial._strokes = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SELF( ``eREPRESENTATION`` )
    public var ID: tIDENTIFIER?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"ID") {
          return cached.value as! tIDENTIFIER? 
        }
        let origin = self
        let value = origin.partialEntity._id__getter(SELF: origin)
        updateCache(derivedAttributeName:"ID", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSHAPE_INSPECTION_RESULT_REPRESENTATION_WITH_ACCURACY`` )
    public var APPLIED_GENERAL_ACCURACY: (SDAI.SET<eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  {
      get {
        return sub_eSHAPE_INSPECTION_RESULT_REPRESENTATION_WITH_ACCURACY?.partialEntity
          ._applied_general_accuracy
      }
      set(newValue) {
        guard let partial = sub_eSHAPE_INSPECTION_RESULT_REPRESENTATION_WITH_ACCURACY?.super_eSHAPE_INSPECTION_RESULT_REPRESENTATION_WITH_ACCURACY
          .partialEntity else { return }
        partial._applied_general_accuracy = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT(DYNAMIC)(OBSERVED)__ attribute
    /// - origin: SELF( ``eREPRESENTATION`` )
    public var CONTEXT_OF_ITEMS: eREPRESENTATION_CONTEXT {
      get {
        if let resolved = _representation._context_of_items__provider(complex: self.complexEntity) {
          let value = resolved._context_of_items__getter(complex: self.complexEntity)
          return value
        }
        else {
          return SDAI.UNWRAP( self.partialEntity._context_of_items )
        }
      }
      set(newValue) {
        if let _ = _representation._context_of_items__provider(complex: self.complexEntity) { return }

        let partial = self.partialEntity
        partial._context_of_items = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eNEUTRAL_SKETCH_REPRESENTATION`` )
    public var NEUTRAL_SKETCH_SEMANTICS: nCURVES_OR_AREA?  {
      get {
        return sub_eNEUTRAL_SKETCH_REPRESENTATION?.partialEntity._neutral_sketch_semantics
      }
      set(newValue) {
        guard let partial = sub_eNEUTRAL_SKETCH_REPRESENTATION?.super_eNEUTRAL_SKETCH_REPRESENTATION
          .partialEntity else { return }
        partial._neutral_sketch_semantics = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eKINEMATIC_LINK_REPRESENTATION`` )
    public var REPRESENTED_LINK: eKINEMATIC_LINK?  {
      get {
        return sub_eKINEMATIC_LINK_REPRESENTATION?.partialEntity._represented_link
      }
      set(newValue) {
        guard let partial = sub_eKINEMATIC_LINK_REPRESENTATION?.super_eKINEMATIC_LINK_REPRESENTATION
          .partialEntity else { return }
        partial._represented_link = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eMECHANISM_REPRESENTATION`` )
    public var REPRESENTED_TOPOLOGY: sKINEMATIC_TOPOLOGY_REPRESENTATION_SELECT?  {
      get {
        return sub_eMECHANISM_REPRESENTATION?.partialEntity._represented_topology
      }
      set(newValue) {
        guard let partial = sub_eMECHANISM_REPRESENTATION?.super_eMECHANISM_REPRESENTATION.partialEntity
          else { return }
        partial._represented_topology = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eUNCERTAINTY_ASSIGNED_REPRESENTATION`` )
    public var UNCERTAINTY: (SDAI.SET<eUNCERTAINTY_MEASURE_WITH_UNIT>/*[1:nil]*/ )?  {
      get {
        return sub_eUNCERTAINTY_ASSIGNED_REPRESENTATION?.partialEntity._uncertainty
      }
      set(newValue) {
        guard let partial = sub_eUNCERTAINTY_ASSIGNED_REPRESENTATION?.super_eUNCERTAINTY_ASSIGNED_REPRESENTATION
          .partialEntity else { return }
        partial._uncertainty = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``eREPRESENTATION`` )
    public var NAME: tLABEL {
      get {
        return SDAI.UNWRAP( self.partialEntity._name )
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._name = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eMECHANISM_STATE_REPRESENTATION`` )
    public var REPRESENTED_MECHANISM: eMECHANISM_REPRESENTATION?  {
      get {
        return sub_eMECHANISM_STATE_REPRESENTATION?.partialEntity._represented_mechanism
      }
      set(newValue) {
        guard let partial = sub_eMECHANISM_STATE_REPRESENTATION?.super_eMECHANISM_STATE_REPRESENTATION
          .partialEntity else { return }
        partial._represented_mechanism = SDAI.UNWRAP(newValue)
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_representation.self) else { return nil }
      self.partialEntity = partial

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }

    //SIMPLE ENTITY REFERENCE
    public convenience init?(_ partial:_representation) {
      let complex = SDAI.ComplexEntity(entities:[partial])
      self.init(complex: complex)
    }


    //MARK: WHERE RULE VALIDATION (ENTITY)
    public override class func validateWhereRules(instance:SDAI.EntityReference?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      guard let instance = instance as? Self else { return [:] }

      let prefix2 = prefix + " \(instance)"

      var result = super.validateWhereRules(instance:instance, prefix:prefix2)
      result[prefix2 + " .WHERE_wr1"] = _representation.WHERE_wr1(SELF: instance)
      result[prefix2 + " .WHERE_wr2"] = _representation.WHERE_wr2(SELF: instance)
      return result
    }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "REPRESENTATION", type: self, explicitAttributeCount: 3)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: eREPRESENTATION.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "DESCRIPTION", keyPath: \eREPRESENTATION.DESCRIPTION, 
        kind: .derived, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "CHARACTER_BOX", keyPath: \eREPRESENTATION.CHARACTER_BOX, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "CM_LINK", keyPath: \eREPRESENTATION.CM_LINK, 
        kind: .inverse, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ITEMS", keyPath: \eREPRESENTATION.ITEMS, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "OUTLINES", keyPath: \eREPRESENTATION.OUTLINES, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "REQUIRED_GENERAL_ACCURACY", keyPath: \eREPRESENTATION.REQUIRED_GENERAL_ACCURACY, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ASSOCIATED_SHAPE_REPRESENTATION", keyPath: \eREPRESENTATION.ASSOCIATED_SHAPE_REPRESENTATION, 
        kind: .inverse, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "BASELINE_RATIO", keyPath: \eREPRESENTATION.BASELINE_RATIO, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "REVISION_IDENTIFIER", keyPath: \eREPRESENTATION.REVISION_IDENTIFIER, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "SIZE", keyPath: \eREPRESENTATION.SIZE, 
        kind: .inverse, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "TESSELLATION_ACCURACY_PARAMETERS", keyPath: \eREPRESENTATION.TESSELLATION_ACCURACY_PARAMETERS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "REPRESENTED_JOINTS", keyPath: \eREPRESENTATION.REPRESENTED_JOINTS, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "BOX_HEIGHT", keyPath: \eREPRESENTATION.BOX_HEIGHT, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "STROKES", keyPath: \eREPRESENTATION.STROKES, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ID", keyPath: \eREPRESENTATION.ID, 
        kind: .derived, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "APPLIED_GENERAL_ACCURACY", keyPath: \eREPRESENTATION.APPLIED_GENERAL_ACCURACY, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "CONTEXT_OF_ITEMS", keyPath: \eREPRESENTATION.CONTEXT_OF_ITEMS, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NEUTRAL_SKETCH_SEMANTICS", keyPath: \eREPRESENTATION.NEUTRAL_SKETCH_SEMANTICS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "REPRESENTED_LINK", keyPath: \eREPRESENTATION.REPRESENTED_LINK, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "REPRESENTED_TOPOLOGY", keyPath: \eREPRESENTATION.REPRESENTED_TOPOLOGY, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "UNCERTAINTY", keyPath: \eREPRESENTATION.UNCERTAINTY, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NAME", keyPath: \eREPRESENTATION.NAME, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "REPRESENTED_MECHANISM", keyPath: \eREPRESENTATION.REPRESENTED_MECHANISM, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)

      return entityDef
    }

  }
}

//MARK: - Entity Dynamic Attribute Protocols
internal protocol eREPRESENTATION__CONTEXT_OF_ITEMS__provider {
  func _context_of_items__getter(complex: SDAI.ComplexEntity) -> 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_CONTEXT
}
