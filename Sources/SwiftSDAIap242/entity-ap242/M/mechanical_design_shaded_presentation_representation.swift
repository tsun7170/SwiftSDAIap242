/* file: mechanical_design_shaded_presentation_representation.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY mechanical_design_shaded_presentation_representation
    SUBTYPE OF ( representation );
      SELF\representation.items  : SET [1 : ?] OF mechanical_design_shaded_presentation_representation_items;
    WHERE
      wr1 : ( SIZEOF( QUERY ( mi <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.MAPPED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SHAPE_REPRESENTATION', 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'MECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION' ] * TYPEOF( mi\mapped_item.
                mapping_source.mapped_representation ) ) = 1 ) ) ) ) = 0 );
      wr2 : ( SIZEOF( QUERY ( smi <* QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.MAPPED_ITEM'  IN TYPEOF( si\styled_item.item ) ) )
                | ( NOT ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SHAPE_REPRESENTATION' IN TYPEOF( 
                smi\styled_item.item\mapped_item.mapping_source.mapped_representation ) ) ) ) ) = 0 );
      wr3 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( pss <* psa.styles | ( 
                NOT ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POINT_STYLE', 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' ] * TYPEOF( pss ) ) = 1 ) ) ) ) 
                = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr4 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psbc <* QUERY ( psa <* si\styled_item.styles | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRESENTATION_STYLE_BY_CONTEXT'  IN TYPEOF( 
                psa ) ) ) | ( NOT ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'REPRESENTATION_ITEM' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.REPRESENTATION'] *
                TYPEOF( psbc\presentation_style_by_context.style_context ) ) = 1 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr5 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ps <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POINT_STYLE' IN TYPEOF( pss ) ) )
                | ( NOT ( ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.MARKER_TYPE' IN TYPEOF( ps\
                point_style.marker ) ) AND ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'POSITIVE_LENGTH_MEASURE'  IN TYPEOF( ps\point_style.marker_size ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                ps\point_style.marker_colour ) ) = 1 ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr6 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( cs <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE' IN TYPEOF( pss ) ) )
                | ( NOT ( ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB', 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                cs\curve_style.curve_colour ) ) = 1 ) AND ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'POSITIVE_LENGTH_MEASURE'  IN TYPEOF( cs\curve_style.curve_width ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * 
                TYPEOF( cs\curve_style.curve_font ) ) = 1 ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr7 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_SIDE_STYLE'  IN TYPEOF( ssu\surface_style_usage.style ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
      wr8 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( sses <* ssu\surface_style_usage.style\
                surface_side_style.styles | ( NOT ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_PARAMETER_LINE' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_CONTROL_GRID' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_SILHOUETTE' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_SEGMENTATION_CURVE' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_BOUNDARY' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_FILL_AREA' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_RENDERING' ] * TYPEOF( sses ) ) = 1 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
      wr9 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( ssfa <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_FILL_AREA'  IN TYPEOF( sses ) ) ) | ( NOT ( SIZEOF( QUERY ( fss <* ssfa\
                surface_style_fill_area.fill_area.fill_styles | ( NOT ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.FILL_AREA_STYLE_COLOUR'  IN TYPEOF( fss ) ) 
                AND ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB', 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                fss\fill_area_style_colour.fill_colour ) ) = 1 ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 ) ) ) ) = 0 );
      wr10: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( sspl <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_PARAMETER_LINE'  IN TYPEOF( sses ) ) ) | ( NOT ( ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE'  IN TYPEOF( sspl\
                surface_style_parameter_line.style_of_parameter_lines ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sspl\surface_style_parameter_line.style_of_parameter_lines\curve_style.curve_colour ) ) = 1 ) 
                AND ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POSITIVE_LENGTH_MEASURE' IN TYPEOF( 
                sspl\surface_style_parameter_line.style_of_parameter_lines\curve_style.curve_width ) ) AND ( 
                SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT', 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * 
                TYPEOF( sspl\surface_style_parameter_line.style_of_parameter_lines\curve_style.curve_font ) ) 
                = 1 ) ) OR ( ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_RENDERING' IN 
                TYPEOF( sspl\surface_style_parameter_line.style_of_parameter_lines ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sspl\surface_style_parameter_line.style_of_parameter_lines\curve_style_rendering.
                rendering_properties.rendered_colour ) ) = 1 ) ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
      wr11: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( sscg <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_CONTROL_GRID'  IN TYPEOF( sses ) ) ) | ( NOT ( ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE'  IN TYPEOF( sscg\
                surface_style_control_grid.style_of_control_grid ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sscg\surface_style_control_grid.style_of_control_grid\curve_style.curve_colour ) ) = 1 ) AND 
                ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POSITIVE_LENGTH_MEASURE' IN TYPEOF( sscg\
                surface_style_control_grid.style_of_control_grid\curve_style.curve_width ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * 
                TYPEOF( sscg\surface_style_control_grid.style_of_control_grid\curve_style.curve_font ) ) = 1 ) ) 
                OR ( ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_RENDERING' IN TYPEOF( 
                sscg\surface_style_control_grid.style_of_control_grid ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sscg\surface_style_control_grid.style_of_control_grid\curve_style_rendering.
                rendering_properties.rendered_colour ) ) = 1 ) ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
      wr12: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( sssh <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_SILHOUETTE'  IN TYPEOF( sses ) ) ) | ( NOT ( ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE'  IN TYPEOF( sssh\
                surface_style_silhouette.style_of_silhouette ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sssh\surface_style_silhouette.style_of_silhouette\curve_style.curve_colour ) ) = 1 ) AND ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POSITIVE_LENGTH_MEASURE'  IN TYPEOF( sssh\
                surface_style_silhouette.style_of_silhouette\curve_style.curve_width ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * 
                TYPEOF( sssh\surface_style_silhouette.style_of_silhouette\curve_style.curve_font ) ) = 1 ) ) 
                OR ( ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_RENDERING' IN TYPEOF( 
                sssh\surface_style_silhouette.style_of_silhouette ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sssh\surface_style_silhouette.style_of_silhouette\curve_style_rendering.rendering_properties.
                rendered_colour ) ) = 1 ) ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr13: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( sssc <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_SEGMENTATION_CURVE'  IN TYPEOF( sses ) ) ) | ( NOT ( ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE'  IN TYPEOF( sssc\
                surface_style_segmentation_curve.style_of_segmentation_curve ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sssc\surface_style_segmentation_curve.style_of_segmentation_curve\curve_style.curve_colour ) ) 
                = 1 ) AND ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POSITIVE_LENGTH_MEASURE' IN 
                TYPEOF( sssc\surface_style_segmentation_curve.style_of_segmentation_curve\curve_style.
                curve_width ) ) AND ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'CURVE_STYLE_FONT' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * TYPEOF( sssc\surface_style_segmentation_curve.
                style_of_segmentation_curve\curve_style.curve_font ) ) = 1 ) ) OR ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_RENDERING'  IN TYPEOF( sssc\
                surface_style_segmentation_curve.style_of_segmentation_curve ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sssc\surface_style_segmentation_curve.style_of_segmentation_curve\curve_style_rendering.
                rendering_properties.rendered_colour ) ) = 1 ) ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
      wr14: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( ssbd <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_BOUNDARY'  IN TYPEOF( sses ) ) ) | ( NOT ( ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE'  IN TYPEOF( ssbd\
                surface_style_boundary.style_of_boundary ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                ssbd\surface_style_boundary.style_of_boundary\curve_style.curve_colour ) ) = 1 ) AND ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POSITIVE_LENGTH_MEASURE'  IN TYPEOF( ssbd\
                surface_style_boundary.style_of_boundary\curve_style.curve_width ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * 
                TYPEOF( ssbd\surface_style_boundary.style_of_boundary\curve_style.curve_font ) ) = 1 ) ) OR 
                ( ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_RENDERING' IN TYPEOF( ssbd\
                surface_style_boundary.style_of_boundary ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                ssbd\surface_style_boundary.style_of_boundary\curve_style_rendering.rendering_properties.
                rendered_colour ) ) = 1 ) ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr15: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( ssre <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_RENDERING'  IN TYPEOF( sses ) ) ) | ( NOT ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                ssre\surface_style_rendering.surface_colour ) ) = 1 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
  END_ENTITY; -- mechanical_design_shaded_presentation_representation (line:20912 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  SUPER- ENTITY(1)	representation
    ATTR:  name,	TYPE: label -- EXPLICIT

    ATTR:  items,	TYPE: SET [1 : ?] OF representation_item -- EXPLICIT
      -- observed by
        ENTITY(1): hidden_element_over_riding_styled_item,	ATTR: container,	TYPE: SET [1 : ?] OF
          presentation_view
      -- possibly overriden by
          ENTITY: shape_representation_with_parameters,	TYPE: SET [1 : ?] OF shape_representation_with_parameters_items
          ENTITY: mechanical_design_shaded_presentation_area,	TYPE: SET [1 : ?] OF mechanical_design_shaded_presentation_area_items
      *** ENTITY: mechanical_design_shaded_presentation_representation,	TYPE: SET [1 : ?] OF mechanical_design_shaded_presentation_representation_items
          ENTITY: connected_edge_with_length_set_representation,	TYPE: SET [1 : ?] OF connected_edge_with_length_set_items
          ENTITY: mechanism_state_representation,	TYPE: SET [1 : ?] OF pair_value
          ENTITY: reinforcement_orientation_basis,	TYPE: SET [1 : 1] OF basis_11_direction_member
          ENTITY: externally_defined_representation,	TYPE: SET [1 : ?] OF externally_defined_representation_item
          ENTITY: kinematic_topology_network_structure,	TYPE: SET [1 : ?] OF kinematic_loop
          ENTITY: kinematic_topology_structure,	TYPE: SET [1 : ?] OF kinematic_joint
          ENTITY: single_area_csg_2d_shape_representation,	TYPE: SET [1 : ?] OF csg_2d_area_select
          ENTITY: draughting_model,	TYPE: SET [1 : ?] OF draughting_model_item_select
          ENTITY: shape_dimension_representation,	TYPE: SET [1 : ?] OF shape_dimension_representation_item
          ENTITY: point_placement_shape_representation,	TYPE: SET [1 : ?] OF point_placement_shape_representation_item
          ENTITY: link_motion_representation_along_path,	TYPE: SET [1 : ?] OF kinematic_path
          ENTITY: kinematic_topology_directed_structure,	TYPE: SET [1 : ?] OF oriented_joint
          ENTITY: scan_data_shape_representation,	TYPE: SET [1 : ?] OF scanned_data_item
          ENTITY: mechanical_design_geometric_presentation_area,	TYPE: SET [1 : ?] OF mechanical_design_geometric_presentation_area_items
          ENTITY: procedural_shape_representation,	TYPE: SET [1 : ?] OF procedural_shape_representation_sequence
          ENTITY: path_parameter_representation,	TYPE: SET [1 : ?] OF bounded_curve
          ENTITY: csg_2d_shape_representation,	TYPE: SET [1 : ?] OF csg_2d_shape_select
          ENTITY: ply_angle_representation,	TYPE: SET [1 : 1] OF measure_representation_item
          ENTITY: text_string_representation,	TYPE: SET [1 : ?] OF text_string_representation_item
          ENTITY: procedural_representation,	TYPE: SET [1 : ?] OF procedural_representation_sequence
          ENTITY: draughting_subfigure_representation,	TYPE: SET [1 : ?] OF draughting_subfigure_representation_item
          ENTITY: picture_representation,	TYPE: SET [2 : ?] OF picture_representation_item_select
          ENTITY: structured_text_representation,	TYPE: SET [1 : ?] OF string_representation_item_select
          ENTITY: interpolated_configuration_representation,	TYPE: SET [1 : ?] OF interpolated_configuration_sequence
          ENTITY: mechanical_design_presentation_representation_with_draughting,	TYPE: SET [1 : ?] OF camera_model_d3
          ENTITY: mechanism_representation,	TYPE: SET [1 : ?] OF pair_representation_relationship
          ENTITY: mechanical_design_geometric_presentation_representation,	TYPE: SET [1 : ?] OF mechanical_design_geometric_presentation_representation_items
          ENTITY: kinematic_link_representation,	TYPE: SET [1 : ?] OF kinematic_link_representation_items
          ENTITY: neutral_sketch_representation,	TYPE: SET [1 : ?] OF sketch_element_select
          ENTITY: draughting_symbol_representation,	TYPE: SET [1 : ?] OF draughting_symbol_representation_item

    ATTR:  context_of_items,	TYPE: representation_context -- EXPLICIT (DYNAMIC)
      -- observed by
        ENTITY(1): representation_context,	ATTR: representations_in_context,	TYPE: SET [1 : ?] OF
          representation
      -- possibly overriden by
          ENTITY: mechanism_state_representation,	TYPE: geometric_representation_context	(as DERIVED)
          ENTITY: presentation_representation,	TYPE: geometric_representation_context
          ENTITY: link_motion_representation_along_path,	TYPE: geometric_representation_context_with_parameter
          ENTITY: path_parameter_representation,	TYPE: path_parameter_representation_context
          ENTITY: analysis_model,	TYPE: analysis_representation_context
          ENTITY: interpolated_configuration_representation,	TYPE: geometric_representation_context_with_parameter
          ENTITY: mechanism_representation,	TYPE: geometric_representation_context
          ENTITY: kinematic_link_representation,	TYPE: geometric_representation_context

    ATTR:  id,	TYPE: identifier -- DERIVED
      := get_id_value( SELF )

    ATTR:  description,	TYPE: text -- DERIVED
      := get_description_value( SELF )


  ENTITY(SELF)	mechanical_design_shaded_presentation_representation
    REDCR: items,	TYPE: SET [1 : ?] OF mechanical_design_shaded_presentation_representation_items -- EXPLICIT
      -- OVERRIDING ENTITY: representation


*/


//MARK: - Partial Entity
  public final class _mechanical_design_shaded_presentation_representation : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION.self
    }

    //ATTRIBUTES
    /* override var _items: SDAI.SET<sMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION_ITEMS>[1:nil] 	//EXPLICIT REDEFINITION(eREPRESENTATION) */

    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      //SELECT data types (indirectly) referencing the current type as a member of the select list
      members.insert(SDAI.STRING(sMECHANICAL_DESIGN_AND_DRAUGHTING_RELATIONSHIP_SELECT.typeName)) // -> Self
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //MARK: WHERE RULES (ENTITY)
    public static func WHERE_wr1(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eMAPPED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ MI in 

          let _TEMP1 = ([SDAI.AIE(SDAI.STRING(
            "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SHAPE_REPRESENTATION")), 
            SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.MECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION"))] 
            as [SDAI.AggregationInitializerElement<SDAI.STRING>])
          let _TEMP2 = MI.GROUP_REF(eMAPPED_ITEM.self)
          let _TEMP3 = _TEMP2?.MAPPING_SOURCE
          let _TEMP4 = _TEMP3?.MAPPED_REPRESENTATION
          let _TEMP5 = SDAI.TYPEOF(_TEMP4)
          let _TEMP6 = SDAI.FORCE_OPTIONAL(_TEMP1) * SDAI.FORCE_OPTIONAL(_TEMP5)
          let _TEMP7 = SDAI.SIZEOF(_TEMP6)
          let _TEMP8 = _TEMP7 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
          let _TEMP9 =  !_TEMP8
          return _TEMP9 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr2(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SDAI.TYPEOF(SI.GROUP_REF(eSTYLED_ITEM.self)?.ITEM, IS: eMAPPED_ITEM.self)
          return _TEMP1 }
      let _TEMP4 = _TEMP3.QUERY{ SMI in 

          let _TEMP1 = SDAI.TYPEOF(SMI.GROUP_REF(eSTYLED_ITEM.self)?.ITEM.GROUP_REF(eMAPPED_ITEM.self)?.MAPPING_SOURCE
            .MAPPED_REPRESENTATION, IS: eSHAPE_REPRESENTATION.self)
          let _TEMP2 =  !_TEMP1
          return _TEMP2 }
      let _TEMP5 = SDAI.SIZEOF(_TEMP4)
      let _TEMP6 = _TEMP5 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP6
    }
    public static func WHERE_wr3(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = ([SDAI.AIE(SDAI.STRING(
                    "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POINT_STYLE")), 
                    SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE")), 
                    SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE"))] 
                    as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                  let _TEMP2 = SDAI.TYPEOF(PSS)
                  let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP1) * SDAI.FORCE_OPTIONAL(_TEMP2)
                  let _TEMP4 = SDAI.SIZEOF(_TEMP3)
                  let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                  let _TEMP6 =  !_TEMP5
                  return _TEMP6 }
              let _TEMP3 = SDAI.SIZEOF(_TEMP2)
              let _TEMP4 = _TEMP3 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP5 =  !_TEMP4
              return _TEMP5 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr4(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = SDAI.TYPEOF(PSA, IS: ePRESENTATION_STYLE_BY_CONTEXT.self)
              return _TEMP1 }
          let _TEMP4 = _TEMP3?.QUERY{ PSBC in 

              let _TEMP1 = ([SDAI.AIE(SDAI.STRING(
                "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.REPRESENTATION_ITEM")), 
                SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.REPRESENTATION"))] 
                as [SDAI.AggregationInitializerElement<SDAI.STRING>])
              let _TEMP2 = PSBC.GROUP_REF(ePRESENTATION_STYLE_BY_CONTEXT.self)
              let _TEMP3 = _TEMP2?.STYLE_CONTEXT
              let _TEMP4 = SDAI.TYPEOF(_TEMP3)
              let _TEMP5 = SDAI.FORCE_OPTIONAL(_TEMP1) * SDAI.FORCE_OPTIONAL(_TEMP4)
              let _TEMP6 = SDAI.SIZEOF(_TEMP5)
              let _TEMP7 = _TEMP6 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
              let _TEMP8 =  !_TEMP7
              return _TEMP8 }
          let _TEMP5 = SDAI.SIZEOF(_TEMP4)
          let _TEMP6 = _TEMP5 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP7 =  !_TEMP6
          return _TEMP7 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr5(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = SDAI.TYPEOF(PSS, IS: ePOINT_STYLE.self)
                  return _TEMP1 }
              let _TEMP3 = _TEMP2.QUERY{ PS in 

                  let _TEMP1 = SDAI.TYPEOF(PS.GROUP_REF(ePOINT_STYLE.self)?.MARKER, IS: nMARKER_TYPE.self)
                  let _TEMP2 = SDAI.TYPEOF(PS.GROUP_REF(ePOINT_STYLE.self)?.MARKER_SIZE, 
                    IS: tPOSITIVE_LENGTH_MEASURE.self)
                  let _TEMP3 = _TEMP1 && _TEMP2
                  let _TEMP4 = ([SDAI.AIE(SDAI.STRING(
                    "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                    SDAI.AIE(SDAI.STRING(
                    "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                    as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                  let _TEMP5 = PS.GROUP_REF(ePOINT_STYLE.self)
                  let _TEMP6 = _TEMP5?.MARKER_COLOUR
                  let _TEMP7 = SDAI.TYPEOF(_TEMP6)
                  let _TEMP8 = SDAI.FORCE_OPTIONAL(_TEMP4) * SDAI.FORCE_OPTIONAL(_TEMP7)
                  let _TEMP9 = SDAI.SIZEOF(_TEMP8)
                  let _TEMP10 = _TEMP9 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                  let _TEMP11 = _TEMP3 && _TEMP10
                  let _TEMP12 =  !_TEMP11
                  return _TEMP12 }
              let _TEMP4 = SDAI.SIZEOF(_TEMP3)
              let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP6 =  !_TEMP5
              return _TEMP6 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr6(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = SDAI.TYPEOF(PSS, IS: eCURVE_STYLE.self)
                  return _TEMP1 }
              let _TEMP3 = _TEMP2.QUERY{ CS in 

                  let _TEMP1 = ([SDAI.AIE(SDAI.STRING(
                    "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                    SDAI.AIE(SDAI.STRING(
                    "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                    as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                  let _TEMP2 = CS.GROUP_REF(eCURVE_STYLE.self)
                  let _TEMP3 = _TEMP2?.CURVE_COLOUR
                  let _TEMP4 = SDAI.TYPEOF(_TEMP3)
                  let _TEMP5 = SDAI.FORCE_OPTIONAL(_TEMP1) * SDAI.FORCE_OPTIONAL(_TEMP4)
                  let _TEMP6 = SDAI.SIZEOF(_TEMP5)
                  let _TEMP7 = _TEMP6 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                  let _TEMP8 = SDAI.TYPEOF(CS.GROUP_REF(eCURVE_STYLE.self)?.CURVE_WIDTH, 
                    IS: tPOSITIVE_LENGTH_MEASURE.self)
                  let _TEMP9 = _TEMP7 && _TEMP8
                  let _TEMP10 = ([SDAI.AIE(SDAI.STRING(
                    "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT")), 
                    SDAI.AIE(SDAI.STRING(
                    "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT"))] 
                    as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                  let _TEMP11 = CS.GROUP_REF(eCURVE_STYLE.self)
                  let _TEMP12 = _TEMP11?.CURVE_FONT
                  let _TEMP13 = SDAI.TYPEOF(_TEMP12)
                  let _TEMP14 = SDAI.FORCE_OPTIONAL(_TEMP10) * SDAI.FORCE_OPTIONAL(_TEMP13)
                  let _TEMP15 = SDAI.SIZEOF(_TEMP14)
                  let _TEMP16 = _TEMP15 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                  let _TEMP17 = _TEMP9 && _TEMP16
                  let _TEMP18 =  !_TEMP17
                  return _TEMP18 }
              let _TEMP4 = SDAI.SIZEOF(_TEMP3)
              let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP6 =  !_TEMP5
              return _TEMP6 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr7(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = SDAI.TYPEOF(PSS, IS: eSURFACE_STYLE_USAGE.self)
                  return _TEMP1 }
              let _TEMP3 = _TEMP2.QUERY{ SSU in 

                  let _TEMP1 = SDAI.TYPEOF(SSU.GROUP_REF(eSURFACE_STYLE_USAGE.self)?.STYLE, 
                    IS: eSURFACE_SIDE_STYLE.self)
                  let _TEMP2 =  !_TEMP1
                  return _TEMP2 }
              let _TEMP4 = SDAI.SIZEOF(_TEMP3)
              let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP6 =  !_TEMP5
              return _TEMP6 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr8(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = SDAI.TYPEOF(PSS, IS: eSURFACE_STYLE_USAGE.self)
                  return _TEMP1 }
              let _TEMP3 = _TEMP2.QUERY{ SSU in 

                  let _TEMP1 = SSU.GROUP_REF(eSURFACE_STYLE_USAGE.self)
                  let _TEMP2 = _TEMP1?.STYLE
                  let _TEMP3 = _TEMP2?.GROUP_REF(eSURFACE_SIDE_STYLE.self)
                  let _TEMP4 = _TEMP3?.STYLES
                  let _TEMP5 = _TEMP4?
                    .QUERY{ SSES in 

                      let _TEMP1 = ([
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_PARAMETER_LINE")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_CONTROL_GRID")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_SILHOUETTE")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_SEGMENTATION_CURVE")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_BOUNDARY")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_FILL_AREA")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_RENDERING"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP2 = SDAI.TYPEOF(SSES)
                      let _TEMP3 = SDAI.FORCE_OPTIONAL(_TEMP1) * SDAI.FORCE_OPTIONAL(_TEMP2)
                      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
                      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP6 =  !_TEMP5
                      return _TEMP6 }
                  let _TEMP6 = SDAI.SIZEOF(_TEMP5)
                  let _TEMP7 = _TEMP6 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
                  let _TEMP8 =  !_TEMP7
                  return _TEMP8 }
              let _TEMP4 = SDAI.SIZEOF(_TEMP3)
              let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP6 =  !_TEMP5
              return _TEMP6 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr9(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = SDAI.TYPEOF(PSS, IS: eSURFACE_STYLE_USAGE.self)
                  return _TEMP1 }
              let _TEMP3 = _TEMP2.QUERY{ SSU in 

                  let _TEMP1 = SSU.GROUP_REF(eSURFACE_STYLE_USAGE.self)
                  let _TEMP2 = _TEMP1?.STYLE
                  let _TEMP3 = _TEMP2?.GROUP_REF(eSURFACE_SIDE_STYLE.self)
                  let _TEMP4 = _TEMP3?.STYLES
                  let _TEMP5 = _TEMP4?
                    .QUERY{ SSES in 

                      let _TEMP1 = SDAI.TYPEOF(SSES, IS: eSURFACE_STYLE_FILL_AREA.self)
                      return _TEMP1 }
                  let _TEMP6 = _TEMP5?
                    .QUERY{ SSFA in 

                      let _TEMP1 = SSFA.GROUP_REF(eSURFACE_STYLE_FILL_AREA.self)
                      let _TEMP2 = _TEMP1?.FILL_AREA
                      let _TEMP3 = _TEMP2?.FILL_STYLES
                      let _TEMP4 = _TEMP3?
                        .QUERY{ FSS in 

                          let _TEMP1 = SDAI.TYPEOF(FSS, IS: eFILL_AREA_STYLE_COLOUR.self)
                          let _TEMP2 = ([
                            SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                            SDAI.AIE(SDAI.STRING(
                            "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                            as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                          let _TEMP3 = FSS.GROUP_REF(eFILL_AREA_STYLE_COLOUR.self)
                          let _TEMP4 = _TEMP3?.FILL_COLOUR
                          let _TEMP5 = SDAI.TYPEOF(_TEMP4)
                          let _TEMP6 = SDAI.FORCE_OPTIONAL(_TEMP2) * SDAI.FORCE_OPTIONAL(_TEMP5)
                          let _TEMP7 = SDAI.SIZEOF(_TEMP6)
                          let _TEMP8 = _TEMP7 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                          let _TEMP9 = _TEMP1 && _TEMP8
                          let _TEMP10 =  !_TEMP9
                          return _TEMP10 }
                      let _TEMP5 = SDAI.SIZEOF(_TEMP4)
                      let _TEMP6 = _TEMP5 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
                      let _TEMP7 =  !_TEMP6
                      return _TEMP7 }
                  let _TEMP7 = SDAI.SIZEOF(_TEMP6)
                  let _TEMP8 = _TEMP7 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
                  let _TEMP9 =  !_TEMP8
                  return _TEMP9 }
              let _TEMP4 = SDAI.SIZEOF(_TEMP3)
              let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP6 =  !_TEMP5
              return _TEMP6 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr10(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = SDAI.TYPEOF(PSS, IS: eSURFACE_STYLE_USAGE.self)
                  return _TEMP1 }
              let _TEMP3 = _TEMP2.QUERY{ SSU in 

                  let _TEMP1 = SSU.GROUP_REF(eSURFACE_STYLE_USAGE.self)
                  let _TEMP2 = _TEMP1?.STYLE
                  let _TEMP3 = _TEMP2?.GROUP_REF(eSURFACE_SIDE_STYLE.self)
                  let _TEMP4 = _TEMP3?.STYLES
                  let _TEMP5 = _TEMP4?
                    .QUERY{ SSES in 

                      let _TEMP1 = SDAI.TYPEOF(SSES, IS: eSURFACE_STYLE_PARAMETER_LINE.self)
                      return _TEMP1 }
                  let _TEMP6 = _TEMP5?
                    .QUERY{ SSPL in 

                      let _TEMP1 = SDAI.TYPEOF(SSPL.GROUP_REF(eSURFACE_STYLE_PARAMETER_LINE.self)?.STYLE_OF_PARAMETER_LINES, 
                        IS: eCURVE_STYLE.self)
                      let _TEMP2 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP3 = SSPL.GROUP_REF(eSURFACE_STYLE_PARAMETER_LINE.self)
                      let _TEMP4 = _TEMP3?.STYLE_OF_PARAMETER_LINES
                      let _TEMP5 = _TEMP4?.GROUP_REF(eCURVE_STYLE.self)
                      let _TEMP6 = _TEMP5?.CURVE_COLOUR
                      let _TEMP7 = SDAI.TYPEOF(_TEMP6)
                      let _TEMP8 = SDAI.FORCE_OPTIONAL(_TEMP2) * SDAI.FORCE_OPTIONAL(_TEMP7)
                      let _TEMP9 = SDAI.SIZEOF(_TEMP8)
                      let _TEMP10 = _TEMP9 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP11 = _TEMP1 && _TEMP10
                      let _TEMP12 = SDAI.TYPEOF(SSPL.GROUP_REF(eSURFACE_STYLE_PARAMETER_LINE.self)?.STYLE_OF_PARAMETER_LINES
                        .GROUP_REF(eCURVE_STYLE.self)?.CURVE_WIDTH, IS: tPOSITIVE_LENGTH_MEASURE.self)
                      let _TEMP13 = _TEMP11 && _TEMP12
                      let _TEMP14 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP15 = SSPL.GROUP_REF(eSURFACE_STYLE_PARAMETER_LINE.self)
                      let _TEMP16 = _TEMP15?.STYLE_OF_PARAMETER_LINES
                      let _TEMP17 = _TEMP16?.GROUP_REF(eCURVE_STYLE.self)
                      let _TEMP18 = _TEMP17?.CURVE_FONT
                      let _TEMP19 = SDAI.TYPEOF(_TEMP18)
                      let _TEMP20 = SDAI.FORCE_OPTIONAL(_TEMP14) * SDAI.FORCE_OPTIONAL(_TEMP19)
                      let _TEMP21 = SDAI.SIZEOF(_TEMP20)
                      let _TEMP22 = _TEMP21 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP23 = _TEMP13 && _TEMP22
                      let _TEMP24 = SDAI.TYPEOF(SSPL.GROUP_REF(eSURFACE_STYLE_PARAMETER_LINE.self)?.STYLE_OF_PARAMETER_LINES, 
                        IS: eCURVE_STYLE_RENDERING.self)
                      let _TEMP25 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP26 = SSPL.GROUP_REF(eSURFACE_STYLE_PARAMETER_LINE.self)
                      let _TEMP27 = _TEMP26?.STYLE_OF_PARAMETER_LINES
                      let _TEMP28 = _TEMP27?.GROUP_REF(eCURVE_STYLE_RENDERING.self)
                      let _TEMP29 = _TEMP28?.RENDERING_PROPERTIES
                      let _TEMP30 = _TEMP29?.RENDERED_COLOUR
                      let _TEMP31 = SDAI.TYPEOF(_TEMP30)
                      let _TEMP32 = SDAI.FORCE_OPTIONAL(_TEMP25) * SDAI.FORCE_OPTIONAL(_TEMP31)
                      let _TEMP33 = SDAI.SIZEOF(_TEMP32)
                      let _TEMP34 = _TEMP33 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP35 = _TEMP24 && _TEMP34
                      let _TEMP36 = _TEMP23 || _TEMP35
                      let _TEMP37 =  !_TEMP36
                      return _TEMP37 }
                  let _TEMP7 = SDAI.SIZEOF(_TEMP6)
                  let _TEMP8 = _TEMP7 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
                  let _TEMP9 =  !_TEMP8
                  return _TEMP9 }
              let _TEMP4 = SDAI.SIZEOF(_TEMP3)
              let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP6 =  !_TEMP5
              return _TEMP6 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr11(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = SDAI.TYPEOF(PSS, IS: eSURFACE_STYLE_USAGE.self)
                  return _TEMP1 }
              let _TEMP3 = _TEMP2.QUERY{ SSU in 

                  let _TEMP1 = SSU.GROUP_REF(eSURFACE_STYLE_USAGE.self)
                  let _TEMP2 = _TEMP1?.STYLE
                  let _TEMP3 = _TEMP2?.GROUP_REF(eSURFACE_SIDE_STYLE.self)
                  let _TEMP4 = _TEMP3?.STYLES
                  let _TEMP5 = _TEMP4?
                    .QUERY{ SSES in 

                      let _TEMP1 = SDAI.TYPEOF(SSES, IS: eSURFACE_STYLE_CONTROL_GRID.self)
                      return _TEMP1 }
                  let _TEMP6 = _TEMP5?
                    .QUERY{ SSCG in 

                      let _TEMP1 = SDAI.TYPEOF(SSCG.GROUP_REF(eSURFACE_STYLE_CONTROL_GRID.self)?.STYLE_OF_CONTROL_GRID, 
                        IS: eCURVE_STYLE.self)
                      let _TEMP2 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP3 = SSCG.GROUP_REF(eSURFACE_STYLE_CONTROL_GRID.self)
                      let _TEMP4 = _TEMP3?.STYLE_OF_CONTROL_GRID
                      let _TEMP5 = _TEMP4?.GROUP_REF(eCURVE_STYLE.self)
                      let _TEMP6 = _TEMP5?.CURVE_COLOUR
                      let _TEMP7 = SDAI.TYPEOF(_TEMP6)
                      let _TEMP8 = SDAI.FORCE_OPTIONAL(_TEMP2) * SDAI.FORCE_OPTIONAL(_TEMP7)
                      let _TEMP9 = SDAI.SIZEOF(_TEMP8)
                      let _TEMP10 = _TEMP9 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP11 = _TEMP1 && _TEMP10
                      let _TEMP12 = SDAI.TYPEOF(SSCG.GROUP_REF(eSURFACE_STYLE_CONTROL_GRID.self)?.STYLE_OF_CONTROL_GRID
                        .GROUP_REF(eCURVE_STYLE.self)?.CURVE_WIDTH, IS: tPOSITIVE_LENGTH_MEASURE.self)
                      let _TEMP13 = _TEMP11 && _TEMP12
                      let _TEMP14 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP15 = SSCG.GROUP_REF(eSURFACE_STYLE_CONTROL_GRID.self)
                      let _TEMP16 = _TEMP15?.STYLE_OF_CONTROL_GRID
                      let _TEMP17 = _TEMP16?.GROUP_REF(eCURVE_STYLE.self)
                      let _TEMP18 = _TEMP17?.CURVE_FONT
                      let _TEMP19 = SDAI.TYPEOF(_TEMP18)
                      let _TEMP20 = SDAI.FORCE_OPTIONAL(_TEMP14) * SDAI.FORCE_OPTIONAL(_TEMP19)
                      let _TEMP21 = SDAI.SIZEOF(_TEMP20)
                      let _TEMP22 = _TEMP21 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP23 = _TEMP13 && _TEMP22
                      let _TEMP24 = SDAI.TYPEOF(SSCG.GROUP_REF(eSURFACE_STYLE_CONTROL_GRID.self)?.STYLE_OF_CONTROL_GRID, 
                        IS: eCURVE_STYLE_RENDERING.self)
                      let _TEMP25 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP26 = SSCG.GROUP_REF(eSURFACE_STYLE_CONTROL_GRID.self)
                      let _TEMP27 = _TEMP26?.STYLE_OF_CONTROL_GRID
                      let _TEMP28 = _TEMP27?.GROUP_REF(eCURVE_STYLE_RENDERING.self)
                      let _TEMP29 = _TEMP28?.RENDERING_PROPERTIES
                      let _TEMP30 = _TEMP29?.RENDERED_COLOUR
                      let _TEMP31 = SDAI.TYPEOF(_TEMP30)
                      let _TEMP32 = SDAI.FORCE_OPTIONAL(_TEMP25) * SDAI.FORCE_OPTIONAL(_TEMP31)
                      let _TEMP33 = SDAI.SIZEOF(_TEMP32)
                      let _TEMP34 = _TEMP33 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP35 = _TEMP24 && _TEMP34
                      let _TEMP36 = _TEMP23 || _TEMP35
                      let _TEMP37 =  !_TEMP36
                      return _TEMP37 }
                  let _TEMP7 = SDAI.SIZEOF(_TEMP6)
                  let _TEMP8 = _TEMP7 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
                  let _TEMP9 =  !_TEMP8
                  return _TEMP9 }
              let _TEMP4 = SDAI.SIZEOF(_TEMP3)
              let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP6 =  !_TEMP5
              return _TEMP6 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr12(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = SDAI.TYPEOF(PSS, IS: eSURFACE_STYLE_USAGE.self)
                  return _TEMP1 }
              let _TEMP3 = _TEMP2.QUERY{ SSU in 

                  let _TEMP1 = SSU.GROUP_REF(eSURFACE_STYLE_USAGE.self)
                  let _TEMP2 = _TEMP1?.STYLE
                  let _TEMP3 = _TEMP2?.GROUP_REF(eSURFACE_SIDE_STYLE.self)
                  let _TEMP4 = _TEMP3?.STYLES
                  let _TEMP5 = _TEMP4?
                    .QUERY{ SSES in 

                      let _TEMP1 = SDAI.TYPEOF(SSES, IS: eSURFACE_STYLE_SILHOUETTE.self)
                      return _TEMP1 }
                  let _TEMP6 = _TEMP5?
                    .QUERY{ SSSH in 

                      let _TEMP1 = SDAI.TYPEOF(SSSH.GROUP_REF(eSURFACE_STYLE_SILHOUETTE.self)?.STYLE_OF_SILHOUETTE, 
                        IS: eCURVE_STYLE.self)
                      let _TEMP2 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP3 = SSSH.GROUP_REF(eSURFACE_STYLE_SILHOUETTE.self)
                      let _TEMP4 = _TEMP3?.STYLE_OF_SILHOUETTE
                      let _TEMP5 = _TEMP4?.GROUP_REF(eCURVE_STYLE.self)
                      let _TEMP6 = _TEMP5?.CURVE_COLOUR
                      let _TEMP7 = SDAI.TYPEOF(_TEMP6)
                      let _TEMP8 = SDAI.FORCE_OPTIONAL(_TEMP2) * SDAI.FORCE_OPTIONAL(_TEMP7)
                      let _TEMP9 = SDAI.SIZEOF(_TEMP8)
                      let _TEMP10 = _TEMP9 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP11 = _TEMP1 && _TEMP10
                      let _TEMP12 = SDAI.TYPEOF(SSSH.GROUP_REF(eSURFACE_STYLE_SILHOUETTE.self)?.STYLE_OF_SILHOUETTE
                        .GROUP_REF(eCURVE_STYLE.self)?.CURVE_WIDTH, IS: tPOSITIVE_LENGTH_MEASURE.self)
                      let _TEMP13 = _TEMP11 && _TEMP12
                      let _TEMP14 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP15 = SSSH.GROUP_REF(eSURFACE_STYLE_SILHOUETTE.self)
                      let _TEMP16 = _TEMP15?.STYLE_OF_SILHOUETTE
                      let _TEMP17 = _TEMP16?.GROUP_REF(eCURVE_STYLE.self)
                      let _TEMP18 = _TEMP17?.CURVE_FONT
                      let _TEMP19 = SDAI.TYPEOF(_TEMP18)
                      let _TEMP20 = SDAI.FORCE_OPTIONAL(_TEMP14) * SDAI.FORCE_OPTIONAL(_TEMP19)
                      let _TEMP21 = SDAI.SIZEOF(_TEMP20)
                      let _TEMP22 = _TEMP21 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP23 = _TEMP13 && _TEMP22
                      let _TEMP24 = SDAI.TYPEOF(SSSH.GROUP_REF(eSURFACE_STYLE_SILHOUETTE.self)?.STYLE_OF_SILHOUETTE, 
                        IS: eCURVE_STYLE_RENDERING.self)
                      let _TEMP25 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP26 = SSSH.GROUP_REF(eSURFACE_STYLE_SILHOUETTE.self)
                      let _TEMP27 = _TEMP26?.STYLE_OF_SILHOUETTE
                      let _TEMP28 = _TEMP27?.GROUP_REF(eCURVE_STYLE_RENDERING.self)
                      let _TEMP29 = _TEMP28?.RENDERING_PROPERTIES
                      let _TEMP30 = _TEMP29?.RENDERED_COLOUR
                      let _TEMP31 = SDAI.TYPEOF(_TEMP30)
                      let _TEMP32 = SDAI.FORCE_OPTIONAL(_TEMP25) * SDAI.FORCE_OPTIONAL(_TEMP31)
                      let _TEMP33 = SDAI.SIZEOF(_TEMP32)
                      let _TEMP34 = _TEMP33 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP35 = _TEMP24 && _TEMP34
                      let _TEMP36 = _TEMP23 || _TEMP35
                      let _TEMP37 =  !_TEMP36
                      return _TEMP37 }
                  let _TEMP7 = SDAI.SIZEOF(_TEMP6)
                  let _TEMP8 = _TEMP7 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
                  let _TEMP9 =  !_TEMP8
                  return _TEMP9 }
              let _TEMP4 = SDAI.SIZEOF(_TEMP3)
              let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP6 =  !_TEMP5
              return _TEMP6 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr13(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = SDAI.TYPEOF(PSS, IS: eSURFACE_STYLE_USAGE.self)
                  return _TEMP1 }
              let _TEMP3 = _TEMP2.QUERY{ SSU in 

                  let _TEMP1 = SSU.GROUP_REF(eSURFACE_STYLE_USAGE.self)
                  let _TEMP2 = _TEMP1?.STYLE
                  let _TEMP3 = _TEMP2?.GROUP_REF(eSURFACE_SIDE_STYLE.self)
                  let _TEMP4 = _TEMP3?.STYLES
                  let _TEMP5 = _TEMP4?
                    .QUERY{ SSES in 

                      let _TEMP1 = SDAI.TYPEOF(SSES, IS: eSURFACE_STYLE_SEGMENTATION_CURVE.self)
                      return _TEMP1 }
                  let _TEMP6 = _TEMP5?
                    .QUERY{ SSSC in 

                      let _TEMP1 = SDAI.TYPEOF(SSSC.GROUP_REF(eSURFACE_STYLE_SEGMENTATION_CURVE.self)?.STYLE_OF_SEGMENTATION_CURVE, 
                        IS: eCURVE_STYLE.self)
                      let _TEMP2 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP3 = SSSC.GROUP_REF(eSURFACE_STYLE_SEGMENTATION_CURVE.self)
                      let _TEMP4 = _TEMP3?.STYLE_OF_SEGMENTATION_CURVE
                      let _TEMP5 = _TEMP4?.GROUP_REF(eCURVE_STYLE.self)
                      let _TEMP6 = _TEMP5?.CURVE_COLOUR
                      let _TEMP7 = SDAI.TYPEOF(_TEMP6)
                      let _TEMP8 = SDAI.FORCE_OPTIONAL(_TEMP2) * SDAI.FORCE_OPTIONAL(_TEMP7)
                      let _TEMP9 = SDAI.SIZEOF(_TEMP8)
                      let _TEMP10 = _TEMP9 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP11 = _TEMP1 && _TEMP10
                      let _TEMP12 = SDAI.TYPEOF(SSSC.GROUP_REF(eSURFACE_STYLE_SEGMENTATION_CURVE.self)?.STYLE_OF_SEGMENTATION_CURVE
                        .GROUP_REF(eCURVE_STYLE.self)?.CURVE_WIDTH, IS: tPOSITIVE_LENGTH_MEASURE.self)
                      let _TEMP13 = _TEMP11 && _TEMP12
                      let _TEMP14 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP15 = SSSC.GROUP_REF(eSURFACE_STYLE_SEGMENTATION_CURVE.self)
                      let _TEMP16 = _TEMP15?.STYLE_OF_SEGMENTATION_CURVE
                      let _TEMP17 = _TEMP16?.GROUP_REF(eCURVE_STYLE.self)
                      let _TEMP18 = _TEMP17?.CURVE_FONT
                      let _TEMP19 = SDAI.TYPEOF(_TEMP18)
                      let _TEMP20 = SDAI.FORCE_OPTIONAL(_TEMP14) * SDAI.FORCE_OPTIONAL(_TEMP19)
                      let _TEMP21 = SDAI.SIZEOF(_TEMP20)
                      let _TEMP22 = _TEMP21 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP23 = _TEMP13 && _TEMP22
                      let _TEMP24 = SDAI.TYPEOF(SSSC.GROUP_REF(eSURFACE_STYLE_SEGMENTATION_CURVE.self)?.STYLE_OF_SEGMENTATION_CURVE, 
                        IS: eCURVE_STYLE_RENDERING.self)
                      let _TEMP25 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP26 = SSSC.GROUP_REF(eSURFACE_STYLE_SEGMENTATION_CURVE.self)
                      let _TEMP27 = _TEMP26?.STYLE_OF_SEGMENTATION_CURVE
                      let _TEMP28 = _TEMP27?.GROUP_REF(eCURVE_STYLE_RENDERING.self)
                      let _TEMP29 = _TEMP28?.RENDERING_PROPERTIES
                      let _TEMP30 = _TEMP29?.RENDERED_COLOUR
                      let _TEMP31 = SDAI.TYPEOF(_TEMP30)
                      let _TEMP32 = SDAI.FORCE_OPTIONAL(_TEMP25) * SDAI.FORCE_OPTIONAL(_TEMP31)
                      let _TEMP33 = SDAI.SIZEOF(_TEMP32)
                      let _TEMP34 = _TEMP33 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP35 = _TEMP24 && _TEMP34
                      let _TEMP36 = _TEMP23 || _TEMP35
                      let _TEMP37 =  !_TEMP36
                      return _TEMP37 }
                  let _TEMP7 = SDAI.SIZEOF(_TEMP6)
                  let _TEMP8 = _TEMP7 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
                  let _TEMP9 =  !_TEMP8
                  return _TEMP9 }
              let _TEMP4 = SDAI.SIZEOF(_TEMP3)
              let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP6 =  !_TEMP5
              return _TEMP6 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr14(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = SDAI.TYPEOF(PSS, IS: eSURFACE_STYLE_USAGE.self)
                  return _TEMP1 }
              let _TEMP3 = _TEMP2.QUERY{ SSU in 

                  let _TEMP1 = SSU.GROUP_REF(eSURFACE_STYLE_USAGE.self)
                  let _TEMP2 = _TEMP1?.STYLE
                  let _TEMP3 = _TEMP2?.GROUP_REF(eSURFACE_SIDE_STYLE.self)
                  let _TEMP4 = _TEMP3?.STYLES
                  let _TEMP5 = _TEMP4?
                    .QUERY{ SSES in 

                      let _TEMP1 = SDAI.TYPEOF(SSES, IS: eSURFACE_STYLE_BOUNDARY.self)
                      return _TEMP1 }
                  let _TEMP6 = _TEMP5?
                    .QUERY{ SSBD in 

                      let _TEMP1 = SDAI.TYPEOF(SSBD.GROUP_REF(eSURFACE_STYLE_BOUNDARY.self)?.STYLE_OF_BOUNDARY, 
                        IS: eCURVE_STYLE.self)
                      let _TEMP2 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP3 = SSBD.GROUP_REF(eSURFACE_STYLE_BOUNDARY.self)
                      let _TEMP4 = _TEMP3?.STYLE_OF_BOUNDARY
                      let _TEMP5 = _TEMP4?.GROUP_REF(eCURVE_STYLE.self)
                      let _TEMP6 = _TEMP5?.CURVE_COLOUR
                      let _TEMP7 = SDAI.TYPEOF(_TEMP6)
                      let _TEMP8 = SDAI.FORCE_OPTIONAL(_TEMP2) * SDAI.FORCE_OPTIONAL(_TEMP7)
                      let _TEMP9 = SDAI.SIZEOF(_TEMP8)
                      let _TEMP10 = _TEMP9 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP11 = _TEMP1 && _TEMP10
                      let _TEMP12 = SDAI.TYPEOF(SSBD.GROUP_REF(eSURFACE_STYLE_BOUNDARY.self)?.STYLE_OF_BOUNDARY
                        .GROUP_REF(eCURVE_STYLE.self)?.CURVE_WIDTH, IS: tPOSITIVE_LENGTH_MEASURE.self)
                      let _TEMP13 = _TEMP11 && _TEMP12
                      let _TEMP14 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP15 = SSBD.GROUP_REF(eSURFACE_STYLE_BOUNDARY.self)
                      let _TEMP16 = _TEMP15?.STYLE_OF_BOUNDARY
                      let _TEMP17 = _TEMP16?.GROUP_REF(eCURVE_STYLE.self)
                      let _TEMP18 = _TEMP17?.CURVE_FONT
                      let _TEMP19 = SDAI.TYPEOF(_TEMP18)
                      let _TEMP20 = SDAI.FORCE_OPTIONAL(_TEMP14) * SDAI.FORCE_OPTIONAL(_TEMP19)
                      let _TEMP21 = SDAI.SIZEOF(_TEMP20)
                      let _TEMP22 = _TEMP21 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP23 = _TEMP13 && _TEMP22
                      let _TEMP24 = SDAI.TYPEOF(SSBD.GROUP_REF(eSURFACE_STYLE_BOUNDARY.self)?.STYLE_OF_BOUNDARY, 
                        IS: eCURVE_STYLE_RENDERING.self)
                      let _TEMP25 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP26 = SSBD.GROUP_REF(eSURFACE_STYLE_BOUNDARY.self)
                      let _TEMP27 = _TEMP26?.STYLE_OF_BOUNDARY
                      let _TEMP28 = _TEMP27?.GROUP_REF(eCURVE_STYLE_RENDERING.self)
                      let _TEMP29 = _TEMP28?.RENDERING_PROPERTIES
                      let _TEMP30 = _TEMP29?.RENDERED_COLOUR
                      let _TEMP31 = SDAI.TYPEOF(_TEMP30)
                      let _TEMP32 = SDAI.FORCE_OPTIONAL(_TEMP25) * SDAI.FORCE_OPTIONAL(_TEMP31)
                      let _TEMP33 = SDAI.SIZEOF(_TEMP32)
                      let _TEMP34 = _TEMP33 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP35 = _TEMP24 && _TEMP34
                      let _TEMP36 = _TEMP23 || _TEMP35
                      let _TEMP37 =  !_TEMP36
                      return _TEMP37 }
                  let _TEMP7 = SDAI.SIZEOF(_TEMP6)
                  let _TEMP8 = _TEMP7 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
                  let _TEMP9 =  !_TEMP8
                  return _TEMP9 }
              let _TEMP4 = SDAI.SIZEOF(_TEMP3)
              let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP6 =  !_TEMP5
              return _TEMP6 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }
    public static func WHERE_wr15(SELF: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.ITEMS
      let _TEMP2 = _TEMP1.QUERY{ IT in 

          let _TEMP1 = SDAI.TYPEOF(IT, IS: eSTYLED_ITEM.self)
          return _TEMP1 }
      let _TEMP3 = _TEMP2.QUERY{ SI in 

          let _TEMP1 = SI.GROUP_REF(eSTYLED_ITEM.self)
          let _TEMP2 = _TEMP1?.STYLES
          let _TEMP3 = _TEMP2?.QUERY{ PSA in 

              let _TEMP1 = PSA.STYLES
              let _TEMP2 = _TEMP1.QUERY{ PSS in 

                  let _TEMP1 = SDAI.TYPEOF(PSS, IS: eSURFACE_STYLE_USAGE.self)
                  return _TEMP1 }
              let _TEMP3 = _TEMP2.QUERY{ SSU in 

                  let _TEMP1 = SSU.GROUP_REF(eSURFACE_STYLE_USAGE.self)
                  let _TEMP2 = _TEMP1?.STYLE
                  let _TEMP3 = _TEMP2?.GROUP_REF(eSURFACE_SIDE_STYLE.self)
                  let _TEMP4 = _TEMP3?.STYLES
                  let _TEMP5 = _TEMP4?
                    .QUERY{ SSES in 

                      let _TEMP1 = SDAI.TYPEOF(SSES, IS: eSURFACE_STYLE_RENDERING.self)
                      return _TEMP1 }
                  let _TEMP6 = _TEMP5?
                    .QUERY{ SSRE in 

                      let _TEMP1 = ([
                        SDAI.AIE(SDAI.STRING("AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB")), 
                        SDAI.AIE(SDAI.STRING(
                        "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR"))] 
                        as [SDAI.AggregationInitializerElement<SDAI.STRING>])
                      let _TEMP2 = SSRE.GROUP_REF(eSURFACE_STYLE_RENDERING.self)
                      let _TEMP3 = _TEMP2?.SURFACE_COLOUR
                      let _TEMP4 = SDAI.TYPEOF(_TEMP3)
                      let _TEMP5 = SDAI.FORCE_OPTIONAL(_TEMP1) * SDAI.FORCE_OPTIONAL(_TEMP4)
                      let _TEMP6 = SDAI.SIZEOF(_TEMP5)
                      let _TEMP7 = _TEMP6 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                      let _TEMP8 =  !_TEMP7
                      return _TEMP8 }
                  let _TEMP7 = SDAI.SIZEOF(_TEMP6)
                  let _TEMP8 = _TEMP7 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
                  let _TEMP9 =  !_TEMP8
                  return _TEMP9 }
              let _TEMP4 = SDAI.SIZEOF(_TEMP3)
              let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
              let _TEMP6 =  !_TEMP5
              return _TEMP6 }
          let _TEMP4 = SDAI.SIZEOF(_TEMP3)
          let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
          let _TEMP6 =  !_TEMP5
          return _TEMP6 }
      let _TEMP4 = SDAI.SIZEOF(_TEMP3)
      let _TEMP5 = _TEMP4 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP5
    }

    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init() {
      super.init(asAbstructSuperclass:())

    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 0
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      self.init( )
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY mechanical_design_shaded_presentation_representation
    SUBTYPE OF ( representation );
      SELF\representation.items  : SET [1 : ?] OF mechanical_design_shaded_presentation_representation_items;
    WHERE
      wr1 : ( SIZEOF( QUERY ( mi <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.MAPPED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SHAPE_REPRESENTATION', 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'MECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION' ] * TYPEOF( mi\mapped_item.
                mapping_source.mapped_representation ) ) = 1 ) ) ) ) = 0 );
      wr2 : ( SIZEOF( QUERY ( smi <* QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.MAPPED_ITEM'  IN TYPEOF( si\styled_item.item ) ) )
                | ( NOT ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SHAPE_REPRESENTATION' IN TYPEOF( 
                smi\styled_item.item\mapped_item.mapping_source.mapped_representation ) ) ) ) ) = 0 );
      wr3 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( pss <* psa.styles | ( 
                NOT ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POINT_STYLE', 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' ] * TYPEOF( pss ) ) = 1 ) ) ) ) 
                = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr4 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psbc <* QUERY ( psa <* si\styled_item.styles | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRESENTATION_STYLE_BY_CONTEXT'  IN TYPEOF( 
                psa ) ) ) | ( NOT ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'REPRESENTATION_ITEM' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.REPRESENTATION'] *
                TYPEOF( psbc\presentation_style_by_context.style_context ) ) = 1 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr5 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ps <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POINT_STYLE' IN TYPEOF( pss ) ) )
                | ( NOT ( ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.MARKER_TYPE' IN TYPEOF( ps\
                point_style.marker ) ) AND ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'POSITIVE_LENGTH_MEASURE'  IN TYPEOF( ps\point_style.marker_size ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                ps\point_style.marker_colour ) ) = 1 ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr6 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( cs <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE' IN TYPEOF( pss ) ) )
                | ( NOT ( ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB', 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                cs\curve_style.curve_colour ) ) = 1 ) AND ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'POSITIVE_LENGTH_MEASURE'  IN TYPEOF( cs\curve_style.curve_width ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * 
                TYPEOF( cs\curve_style.curve_font ) ) = 1 ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr7 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_SIDE_STYLE'  IN TYPEOF( ssu\surface_style_usage.style ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
      wr8 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( sses <* ssu\surface_style_usage.style\
                surface_side_style.styles | ( NOT ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_PARAMETER_LINE' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_CONTROL_GRID' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_SILHOUETTE' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_SEGMENTATION_CURVE' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_BOUNDARY' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_FILL_AREA' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_RENDERING' ] * TYPEOF( sses ) ) = 1 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
      wr9 : ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( ssfa <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_FILL_AREA'  IN TYPEOF( sses ) ) ) | ( NOT ( SIZEOF( QUERY ( fss <* ssfa\
                surface_style_fill_area.fill_area.fill_styles | ( NOT ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.FILL_AREA_STYLE_COLOUR'  IN TYPEOF( fss ) ) 
                AND ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB', 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                fss\fill_area_style_colour.fill_colour ) ) = 1 ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 ) ) ) ) = 0 );
      wr10: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( sspl <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_PARAMETER_LINE'  IN TYPEOF( sses ) ) ) | ( NOT ( ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE'  IN TYPEOF( sspl\
                surface_style_parameter_line.style_of_parameter_lines ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sspl\surface_style_parameter_line.style_of_parameter_lines\curve_style.curve_colour ) ) = 1 ) 
                AND ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POSITIVE_LENGTH_MEASURE' IN TYPEOF( 
                sspl\surface_style_parameter_line.style_of_parameter_lines\curve_style.curve_width ) ) AND ( 
                SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT', 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * 
                TYPEOF( sspl\surface_style_parameter_line.style_of_parameter_lines\curve_style.curve_font ) ) 
                = 1 ) ) OR ( ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_RENDERING' IN 
                TYPEOF( sspl\surface_style_parameter_line.style_of_parameter_lines ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sspl\surface_style_parameter_line.style_of_parameter_lines\curve_style_rendering.
                rendering_properties.rendered_colour ) ) = 1 ) ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
      wr11: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( sscg <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_CONTROL_GRID'  IN TYPEOF( sses ) ) ) | ( NOT ( ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE'  IN TYPEOF( sscg\
                surface_style_control_grid.style_of_control_grid ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sscg\surface_style_control_grid.style_of_control_grid\curve_style.curve_colour ) ) = 1 ) AND 
                ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POSITIVE_LENGTH_MEASURE' IN TYPEOF( sscg\
                surface_style_control_grid.style_of_control_grid\curve_style.curve_width ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * 
                TYPEOF( sscg\surface_style_control_grid.style_of_control_grid\curve_style.curve_font ) ) = 1 ) ) 
                OR ( ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_RENDERING' IN TYPEOF( 
                sscg\surface_style_control_grid.style_of_control_grid ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sscg\surface_style_control_grid.style_of_control_grid\curve_style_rendering.
                rendering_properties.rendered_colour ) ) = 1 ) ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
      wr12: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( sssh <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_SILHOUETTE'  IN TYPEOF( sses ) ) ) | ( NOT ( ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE'  IN TYPEOF( sssh\
                surface_style_silhouette.style_of_silhouette ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sssh\surface_style_silhouette.style_of_silhouette\curve_style.curve_colour ) ) = 1 ) AND ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POSITIVE_LENGTH_MEASURE'  IN TYPEOF( sssh\
                surface_style_silhouette.style_of_silhouette\curve_style.curve_width ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * 
                TYPEOF( sssh\surface_style_silhouette.style_of_silhouette\curve_style.curve_font ) ) = 1 ) ) 
                OR ( ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_RENDERING' IN TYPEOF( 
                sssh\surface_style_silhouette.style_of_silhouette ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sssh\surface_style_silhouette.style_of_silhouette\curve_style_rendering.rendering_properties.
                rendered_colour ) ) = 1 ) ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr13: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( sssc <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_SEGMENTATION_CURVE'  IN TYPEOF( sses ) ) ) | ( NOT ( ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE'  IN TYPEOF( sssc\
                surface_style_segmentation_curve.style_of_segmentation_curve ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sssc\surface_style_segmentation_curve.style_of_segmentation_curve\curve_style.curve_colour ) ) 
                = 1 ) AND ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POSITIVE_LENGTH_MEASURE' IN 
                TYPEOF( sssc\surface_style_segmentation_curve.style_of_segmentation_curve\curve_style.
                curve_width ) ) AND ( SIZEOF( [ 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'CURVE_STYLE_FONT' , 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * TYPEOF( sssc\surface_style_segmentation_curve.
                style_of_segmentation_curve\curve_style.curve_font ) ) = 1 ) ) OR ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_RENDERING'  IN TYPEOF( sssc\
                surface_style_segmentation_curve.style_of_segmentation_curve ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                sssc\surface_style_segmentation_curve.style_of_segmentation_curve\curve_style_rendering.
                rendering_properties.rendered_colour ) ) = 1 ) ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
      wr14: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( ssbd <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_BOUNDARY'  IN TYPEOF( sses ) ) ) | ( NOT ( ( ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE'  IN TYPEOF( ssbd\
                surface_style_boundary.style_of_boundary ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                ssbd\surface_style_boundary.style_of_boundary\curve_style.curve_colour ) ) = 1 ) AND ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.POSITIVE_LENGTH_MEASURE'  IN TYPEOF( ssbd\
                surface_style_boundary.style_of_boundary\curve_style.curve_width ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_FONT' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_CURVE_FONT' ] * 
                TYPEOF( ssbd\surface_style_boundary.style_of_boundary\curve_style.curve_font ) ) = 1 ) ) OR 
                ( ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CURVE_STYLE_RENDERING' IN TYPEOF( ssbd\
                surface_style_boundary.style_of_boundary ) ) AND ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                ssbd\surface_style_boundary.style_of_boundary\curve_style_rendering.rendering_properties.
                rendered_colour ) ) = 1 ) ) ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 );
      wr15: ( SIZEOF( QUERY ( si <* QUERY ( it <* SELF.items | ( 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.STYLED_ITEM'  IN TYPEOF( it ) ) ) | ( NOT ( 
                SIZEOF( QUERY ( psa <* si\styled_item.styles | ( NOT ( SIZEOF( QUERY ( ssu <* QUERY ( pss <* 
                psa.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SURFACE_STYLE_USAGE' IN 
                TYPEOF( pss ) ) ) | ( NOT ( SIZEOF( QUERY ( ssre <* QUERY ( sses <* ssu\surface_style_usage.
                style\surface_side_style.styles | ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
                + 'SURFACE_STYLE_RENDERING'  IN TYPEOF( sses ) ) ) | ( NOT ( SIZEOF( [
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COLOUR_RGB' , 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.DRAUGHTING_PRE_DEFINED_COLOUR' ] * TYPEOF( 
                ssre\surface_style_rendering.surface_colour ) ) = 1 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) = 0 ) ) ) ) 
                = 0 );
  END_ENTITY; -- mechanical_design_shaded_presentation_representation (line:20912 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _mechanical_design_shaded_presentation_representation.self
    }
    public let partialEntity: _mechanical_design_shaded_presentation_representation

    //MARK: SUPERTYPES
    public let super_eREPRESENTATION: eREPRESENTATION 	// [1]
    public var super_eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION { return self } 	// [2]

    //MARK: SUBTYPES

    //MARK: ATTRIBUTES
    /// __DERIVE__ attribute
    /// - origin: SUPER( ``eREPRESENTATION`` )
    public var DESCRIPTION: tTEXT?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"DESCRIPTION") {
          return cached.value as! tTEXT? 
        }
        let origin = super_eREPRESENTATION
        let value = tTEXT(origin.partialEntity._description__getter(SELF: origin))
        updateCache(derivedAttributeName:"DESCRIPTION", value:value)
        return value
      }
    }

    /// __EXPLICIT REDEF__ attribute
    /// - origin: SELF( ``eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION`` )
    public var ITEMS: SDAI.SET<sMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION_ITEMS>/*[1:nil]*/  {
      get {
        return SDAI.UNWRAP( SDAI.SET<sMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION_ITEMS>( super_eREPRESENTATION
          .partialEntity._items ) )
      }
      set(newValue) {
        let partial = super_eREPRESENTATION.partialEntity
        partial._items = SDAI.UNWRAP(
          SDAI.SET<eREPRESENTATION_ITEM>(newValue))
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUPER( ``eREPRESENTATION`` )
    public var ID: tIDENTIFIER?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"ID") {
          return cached.value as! tIDENTIFIER? 
        }
        let origin = super_eREPRESENTATION
        let value = tIDENTIFIER(origin.partialEntity._id__getter(SELF: origin))
        updateCache(derivedAttributeName:"ID", value:value)
        return value
      }
    }

    /// __EXPLICIT(DYNAMIC)(OBSERVED)__ attribute
    /// - origin: SUPER( ``eREPRESENTATION`` )
    public var CONTEXT_OF_ITEMS: eREPRESENTATION_CONTEXT {
      get {
        if let resolved = _representation._context_of_items__provider(complex: self.complexEntity) {
          let value = resolved._context_of_items__getter(complex: self.complexEntity)
          return value
        }
        else {
          return SDAI.UNWRAP( super_eREPRESENTATION.partialEntity._context_of_items )
        }
      }
      set(newValue) {
        if let _ = _representation._context_of_items__provider(complex: self.complexEntity) { return }

        let partial = super_eREPRESENTATION.partialEntity
        partial._context_of_items = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eREPRESENTATION`` )
    public var NAME: tLABEL {
      get {
        return SDAI.UNWRAP( super_eREPRESENTATION.partialEntity._name )
      }
      set(newValue) {
        let partial = super_eREPRESENTATION.partialEntity
        partial._name = SDAI.UNWRAP(newValue)
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_mechanical_design_shaded_presentation_representation.self) else { return nil }
      self.partialEntity = partial

      guard let super1 = complexEntity?.entityReference(eREPRESENTATION.self) else { return nil }
      self.super_eREPRESENTATION = super1

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }


    //MARK: WHERE RULE VALIDATION (ENTITY)
    public override class func validateWhereRules(instance:SDAI.EntityReference?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      guard let instance = instance as? Self else { return [:] }

      let prefix2 = prefix + " \(instance)"

      var result = super.validateWhereRules(instance:instance, prefix:prefix2)
      result[prefix2 + " .WHERE_wr1"] = _mechanical_design_shaded_presentation_representation.WHERE_wr1(SELF: instance)
      result[prefix2 + " .WHERE_wr2"] = _mechanical_design_shaded_presentation_representation.WHERE_wr2(SELF: instance)
      result[prefix2 + " .WHERE_wr3"] = _mechanical_design_shaded_presentation_representation.WHERE_wr3(SELF: instance)
      result[prefix2 + " .WHERE_wr4"] = _mechanical_design_shaded_presentation_representation.WHERE_wr4(SELF: instance)
      result[prefix2 + " .WHERE_wr5"] = _mechanical_design_shaded_presentation_representation.WHERE_wr5(SELF: instance)
      result[prefix2 + " .WHERE_wr6"] = _mechanical_design_shaded_presentation_representation.WHERE_wr6(SELF: instance)
      result[prefix2 + " .WHERE_wr7"] = _mechanical_design_shaded_presentation_representation.WHERE_wr7(SELF: instance)
      result[prefix2 + " .WHERE_wr8"] = _mechanical_design_shaded_presentation_representation.WHERE_wr8(SELF: instance)
      result[prefix2 + " .WHERE_wr9"] = _mechanical_design_shaded_presentation_representation.WHERE_wr9(SELF: instance)
      result[prefix2 + " .WHERE_wr10"] = _mechanical_design_shaded_presentation_representation.WHERE_wr10(SELF: instance)
      result[prefix2 + " .WHERE_wr11"] = _mechanical_design_shaded_presentation_representation.WHERE_wr11(SELF: instance)
      result[prefix2 + " .WHERE_wr12"] = _mechanical_design_shaded_presentation_representation.WHERE_wr12(SELF: instance)
      result[prefix2 + " .WHERE_wr13"] = _mechanical_design_shaded_presentation_representation.WHERE_wr13(SELF: instance)
      result[prefix2 + " .WHERE_wr14"] = _mechanical_design_shaded_presentation_representation.WHERE_wr14(SELF: instance)
      result[prefix2 + " .WHERE_wr15"] = _mechanical_design_shaded_presentation_representation.WHERE_wr15(SELF: instance)
      return result
    }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "MECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION", type: self, explicitAttributeCount: 0)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: eREPRESENTATION.self)
      entityDef.add(supertype: eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "DESCRIPTION", keyPath: \eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION.DESCRIPTION, 
        kind: .derived, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ITEMS", keyPath: \eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION.ITEMS, 
        kind: .explicitRedeclaring, source: .thisEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ID", keyPath: \eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION.ID, 
        kind: .derived, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "CONTEXT_OF_ITEMS", keyPath: \eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION.CONTEXT_OF_ITEMS, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NAME", keyPath: \eMECHANICAL_DESIGN_SHADED_PRESENTATION_REPRESENTATION.NAME, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: false)

      return entityDef
    }

  }
}
