/* file: a3m_equivalence_criterion_of_detailed_assembly_data_content.swift 	 generated: Sat Aug 14 13:46:02 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY a3m_equivalence_criterion_of_detailed_assembly_data_content
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            different_angle_of_assembly_constraint, 
            different_assembly_constraint_type, 
            different_component_type, 
            different_length_of_assembly_constraint, 
            different_placement_of_component ) )
    SUBTYPE OF ( a3m_equivalence_criterion_for_assembly );
    DERIVE
      SELF\a3m_equivalence_criterion.comparing_element_types : LIST [1 : 1] OF a3ma_element_type_name := [
                                          etna_product_definition_or_reference];
      SELF\a3m_equivalence_criterion.compared_element_types : LIST [1 : 1] OF a3ma_element_type_name := [
                                          etna_product_definition_or_reference];
  END_ENTITY; -- a3m_equivalence_criterion_of_detailed_assembly_data_content (line:6103 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  SUPER- ENTITY(1)	representation_item
    ATTR:  name,	TYPE: label -- EXPLICIT


  SUPER- ENTITY(2)	data_equivalence_criterion
    (no local attributes)

  SUPER- ENTITY(3)	data_equivalence_inspection_requirement
    (no local attributes)

  SUPER- ENTITY(4)	a3m_equivalence_criterion
    ATTR:  assessment_specification,	TYPE: a3m_equivalence_assessment_specification_select -- EXPLICIT
      -- possibly overriden by
          ENTITY: different_length_of_assembly_constraint,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_assembly_centroid_using_notional_solid,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: mismatch_of_component,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_number_of_closed_shell,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_curve_length,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: missing_assembly_constraint,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_angle_of_assembly_constraint,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_number_of_topological_elements_wireframe_model,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: missing_edge,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_number_of_geometric_elements,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: missing_face,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: mismatch_of_points,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: missing_component,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_placement_of_component,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_volume,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_component_identification_via_multi_level_reference,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_surface_area,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_centroid,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_bounding_box,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_assembly_volume,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: a3m_equivalence_criterion_of_component_property_difference,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_number_of_geometric_elements_wireframe_model,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: mismatch_of_edges,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: mismatch_of_faces,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_surface_normal,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_number_of_topological_elements,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_assembly_centroid,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: a3m_equivalence_assessment_by_numerical_test
          ENTITY: different_component_type,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_number_of_components,	TYPE: a3m_equivalence_assessment_by_logical_test
          ENTITY: different_assembly_constraint_type,	TYPE: a3m_equivalence_assessment_by_logical_test

    ATTR:  comparing_element_types,	TYPE: LIST [1 : ?] OF a3m_element_type_name -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: a3m_equivalence_criterion_of_representative_shape_property_value,	TYPE: LIST [1 : ?] OF a3m_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
      *** ENTITY: a3m_equivalence_criterion_of_detailed_assembly_data_content,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_points,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_component_shape,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: LIST [2 : 2] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_representative_assembly_property_value,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_shape_data_structure,	TYPE: LIST [1 : ?] OF a3m_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_assembly_data_structure,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: different_surface_normal,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_for_shape,	TYPE: LIST [1 : ?] OF a3ms_element_type_name
          ENTITY: a3m_equivalence_criterion_for_assembly,	TYPE: LIST [1 : ?] OF a3ma_element_type_name

    ATTR:  compared_element_types,	TYPE: LIST [1 : ?] OF a3m_element_type_name -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: different_number_of_closed_shell,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_curve_length,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
      *** ENTITY: a3m_equivalence_criterion_of_detailed_assembly_data_content,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements_wireframe_model,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: missing_edge,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements,	TYPE: LIST [2 : 2] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: missing_face,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_points,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_component_shape,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: different_volume,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_surface_area,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_centroid,	TYPE: LIST [3 : 3] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_representative_assembly_property_value,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: different_bounding_box,	TYPE: LIST [3 : 3] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements_wireframe_model,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_edges,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_assembly_data_structure,	TYPE: LIST [1 : 1] OF a3ma_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_faces,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_surface_normal,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements,	TYPE: LIST [2 : 2] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: LIST [1 : 1] OF a3ms_element_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_for_shape,	TYPE: LIST [1 : ?] OF a3ms_element_type_name
          ENTITY: a3m_equivalence_criterion_for_assembly,	TYPE: LIST [1 : ?] OF a3ma_element_type_name

    ATTR:  measured_data_type,	TYPE: a3m_measured_data_type_name -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: different_length_of_assembly_constraint,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_assembly_centroid_using_notional_solid,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_component,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_number_of_closed_shell,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_curve_length,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: missing_assembly_constraint,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_angle_of_assembly_constraint,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements_wireframe_model,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: missing_edge,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: missing_face,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_points,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: missing_component,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_placement_of_component,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_volume,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_component_identification_via_multi_level_reference,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_surface_area,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_centroid,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_bounding_box,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_assembly_volume,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_of_component_property_difference,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements_wireframe_model,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_edges,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_faces,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_surface_normal,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_assembly_centroid,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: a3ms_measured_data_type_name	(as DERIVED)
          ENTITY: different_component_type,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_for_shape,	TYPE: a3ms_measured_data_type_name
      *** ENTITY: a3m_equivalence_criterion_for_assembly,	TYPE: a3ma_measured_data_type_name
          ENTITY: different_number_of_components,	TYPE: a3ma_measured_data_type_name	(as DERIVED)
          ENTITY: different_assembly_constraint_type,	TYPE: a3ma_measured_data_type_name	(as DERIVED)

    ATTR:  detected_difference_types,	TYPE: LIST [0 : ?] OF a3m_detected_difference_type_name -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: different_length_of_assembly_constraint,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_assembly_centroid_using_notional_solid,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_component,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_number_of_closed_shell,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_curve_length,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: missing_assembly_constraint,	TYPE: LIST [2 : 2] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_angle_of_assembly_constraint,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements_wireframe_model,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: missing_edge,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: missing_face,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_points,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: missing_component,	TYPE: LIST [2 : 2] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_placement_of_component,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_component_shape,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_volume,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_component_identification_via_multi_level_reference,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_surface_area,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_centroid,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: LIST [3 : 3] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_bounding_box,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_assembly_volume,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements_wireframe_model,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_edges,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_faces,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_surface_normal,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements,	TYPE: LIST [1 : 1] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_assembly_centroid,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: LIST [2 : 2] OF a3ms_detected_difference_type_name	(as DERIVED)
          ENTITY: different_component_type,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_for_shape,	TYPE: LIST [1 : ?] OF a3ms_detected_difference_type_name
      *** ENTITY: a3m_equivalence_criterion_for_assembly,	TYPE: LIST [1 : ?] OF a3ma_detected_difference_type_name
          ENTITY: different_number_of_components,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)
          ENTITY: different_assembly_constraint_type,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name	(as DERIVED)

    ATTR:  accuracy_types,	TYPE: LIST [0 : ?] OF a3m_accuracy_type_name -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: different_number_of_closed_shell,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_curve_length,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_face_geometry,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements_wireframe_model,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: missing_edge,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: missing_face,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_points,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_volume,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces_boundary,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_surface_area,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_centroid,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_point_cloud_and_related_geometry,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_bounding_box,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_underlying_edge_geometry,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_surfaces,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_number_of_geometric_elements_wireframe_model,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_edges,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_faces,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_surface_normal,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: different_number_of_topological_elements,	TYPE: LIST [0 : 0] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: mismatch_of_arcwise_connected_curves,	TYPE: LIST [1 : 1] OF a3ms_accuracy_type_name	(as DERIVED)
          ENTITY: a3m_equivalence_criterion_for_shape,	TYPE: LIST [0 : ?] OF a3ms_accuracy_type_name
      *** ENTITY: a3m_equivalence_criterion_for_assembly,	TYPE: LIST [0 : 0] OF a3ma_accuracy_type_name	(as DERIVED)


  SUPER- ENTITY(5)	a3m_equivalence_criterion_for_assembly
    REDCR: comparing_element_types,	TYPE: LIST [1 : ?] OF a3ma_element_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : ?] OF a3ma_element_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : ?] OF a3ma_detected_difference_type_name -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: accuracy_types,	TYPE: LIST [0 : 0] OF a3ma_accuracy_type_name -- DERIVED (DYNAMIC)
      := []
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  ENTITY(SELF)	a3m_equivalence_criterion_of_detailed_assembly_data_content
    REDCR: comparing_element_types,	TYPE: LIST [1 : 1] OF a3ma_element_type_name -- DERIVED (DYNAMIC)
      := [etna_product_definition_or_reference]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: compared_element_types,	TYPE: LIST [1 : 1] OF a3ma_element_type_name -- DERIVED (DYNAMIC)
      := [etna_product_definition_or_reference]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(7)	different_length_of_assembly_constraint
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_length_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_binary_assembly_constraint]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(8)	different_angle_of_assembly_constraint
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_plane_angle_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_binary_assembly_constraint]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(9)	different_assembly_constraint_type
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_binary_assembly_constraint]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(10)	different_component_type
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_boolean_value
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_assembly_component_usage]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion


  SUB- ENTITY(11)	different_placement_of_component
    REDCR: assessment_specification,	TYPE: a3m_equivalence_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: measured_data_type,	TYPE: a3ma_measured_data_type_name -- DERIVED (DYNAMIC)
      := mdna_length_measure_and_context_dependent_measure
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    REDCR: detected_difference_types,	TYPE: LIST [1 : 1] OF a3ma_detected_difference_type_name -- DERIVED (DYNAMIC)
      := [ddna_context_dependent_shape_representation]
      -- OVERRIDING ENTITY: a3m_equivalence_criterion

    ATTR:  assessment_threshold_2,	TYPE: a3ma_equivalence_criterion_assessment_threshold_relationship -- INVERSE
      FOR relating_representation_item;


*/


//MARK: - Partial Entity
  public final class _a3m_equivalence_criterion_of_detailed_assembly_data_content : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.self
    }

    //ATTRIBUTES
    /// DERIVE ATTRIBUTE REDEFINITION(origin: eA3M_EQUIVALENCE_CRITERION)
    /// - attribute value provider protocol conformance wrapper
    internal func _comparing_element_types__getter(complex: SDAI.ComplexEntity) -> SDAI.LIST<
      nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/  {
      let SELF = complex.entityReference( eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.self )!
      return SDAI.UNWRAP( SDAI.LIST<nA3M_ELEMENT_TYPE_NAME>(SELF.COMPARING_ELEMENT_TYPES) )
    }
    /// DERIVE ATTRIBUTE REDEFINITION(origin: eA3M_EQUIVALENCE_CRITERION)
    /// - gut of derived attribute logic
    internal func _comparing_element_types__getter(SELF: eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT) -> 
      SDAI.LIST<nA3MA_ELEMENT_TYPE_NAME>/*[1:1]*/  {

      let _TEMP1 = SDAI.LIST<nA3MA_ELEMENT_TYPE_NAME>(bound1: SDAI.UNWRAP(SDAI.INTEGER(1)), bound2: SDAI.INTEGER(
        1), ([SDAI.AIE(nA3MA_ELEMENT_TYPE_NAME(/*nA3M_ELEMENT_TYPE_NAME*/ETNA_PRODUCT_DEFINITION_OR_REFERENCE))] 
        as [SDAI.AggregationInitializerElement<nA3MA_ELEMENT_TYPE_NAME>]))
      let value = _TEMP1
      return SDAI.UNWRAP( value )
    }

    /// DERIVE ATTRIBUTE REDEFINITION(origin: eA3M_EQUIVALENCE_CRITERION)
    /// - attribute value provider protocol conformance wrapper
    internal func _compared_element_types__getter(complex: SDAI.ComplexEntity) -> SDAI.LIST<
      nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/  {
      let SELF = complex.entityReference( eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.self )!
      return SDAI.UNWRAP( SDAI.LIST<nA3M_ELEMENT_TYPE_NAME>(SELF.COMPARED_ELEMENT_TYPES) )
    }
    /// DERIVE ATTRIBUTE REDEFINITION(origin: eA3M_EQUIVALENCE_CRITERION)
    /// - gut of derived attribute logic
    internal func _compared_element_types__getter(SELF: eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT) -> 
      SDAI.LIST<nA3MA_ELEMENT_TYPE_NAME>/*[1:1]*/  {

      let _TEMP1 = SDAI.LIST<nA3MA_ELEMENT_TYPE_NAME>(bound1: SDAI.UNWRAP(SDAI.INTEGER(1)), bound2: SDAI.INTEGER(
        1), ([SDAI.AIE(nA3MA_ELEMENT_TYPE_NAME(/*nA3M_ELEMENT_TYPE_NAME*/ETNA_PRODUCT_DEFINITION_OR_REFERENCE))] 
        as [SDAI.AggregationInitializerElement<nA3MA_ELEMENT_TYPE_NAME>]))
      let value = _TEMP1
      return SDAI.UNWRAP( value )
    }

    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init() {
      super.init(asAbstructSuperclass:())

    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 0
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      self.init( )
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY a3m_equivalence_criterion_of_detailed_assembly_data_content
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            different_angle_of_assembly_constraint, 
            different_assembly_constraint_type, 
            different_component_type, 
            different_length_of_assembly_constraint, 
            different_placement_of_component ) )
    SUBTYPE OF ( a3m_equivalence_criterion_for_assembly );
    DERIVE
      SELF\a3m_equivalence_criterion.comparing_element_types : LIST [1 : 1] OF a3ma_element_type_name := [
                                          etna_product_definition_or_reference];
      SELF\a3m_equivalence_criterion.compared_element_types : LIST [1 : 1] OF a3ma_element_type_name := [
                                          etna_product_definition_or_reference];
  END_ENTITY; -- a3m_equivalence_criterion_of_detailed_assembly_data_content (line:6103 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _a3m_equivalence_criterion_of_detailed_assembly_data_content.self
    }
    public let partialEntity: _a3m_equivalence_criterion_of_detailed_assembly_data_content

    //MARK: SUPERTYPES
    public let super_eREPRESENTATION_ITEM: eREPRESENTATION_ITEM 	// [1]
    public let super_eDATA_EQUIVALENCE_CRITERION: eDATA_EQUIVALENCE_CRITERION 	// [2]
    public let super_eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT: eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT 	// [3]
    public let super_eA3M_EQUIVALENCE_CRITERION: eA3M_EQUIVALENCE_CRITERION 	// [4]
    public let super_eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY: eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY 	// [5]
    public var super_eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT: eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT { return self } 	// [6]

    //MARK: SUBTYPES
    public var sub_eDIFFERENT_LENGTH_OF_ASSEMBLY_CONSTRAINT: eDIFFERENT_LENGTH_OF_ASSEMBLY_CONSTRAINT? {	// [7]
      return self.complexEntity.entityReference(eDIFFERENT_LENGTH_OF_ASSEMBLY_CONSTRAINT.self)
    }

    public var sub_eDIFFERENT_ANGLE_OF_ASSEMBLY_CONSTRAINT: eDIFFERENT_ANGLE_OF_ASSEMBLY_CONSTRAINT? {	// [8]
      return self.complexEntity.entityReference(eDIFFERENT_ANGLE_OF_ASSEMBLY_CONSTRAINT.self)
    }

    public var sub_eDIFFERENT_ASSEMBLY_CONSTRAINT_TYPE: eDIFFERENT_ASSEMBLY_CONSTRAINT_TYPE? {	// [9]
      return self.complexEntity.entityReference(eDIFFERENT_ASSEMBLY_CONSTRAINT_TYPE.self)
    }

    public var sub_eDIFFERENT_COMPONENT_TYPE: eDIFFERENT_COMPONENT_TYPE? {	// [10]
      return self.complexEntity.entityReference(eDIFFERENT_COMPONENT_TYPE.self)
    }

    public var sub_eDIFFERENT_PLACEMENT_OF_COMPONENT: eDIFFERENT_PLACEMENT_OF_COMPONENT? {	// [11]
      return self.complexEntity.entityReference(eDIFFERENT_PLACEMENT_OF_COMPONENT.self)
    }


    //MARK: ATTRIBUTES
    /// __EXPLICIT REDEF(DERIVE)__ attribute
    /// - origin: SUPER( ``eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY`` )
    public var ACCURACY_TYPES: SDAI.LIST<nA3MA_ACCURACY_TYPE_NAME>/*[0:0]*/  {
      get {
        if let cached = cachedValue(derivedAttributeName:"ACCURACY_TYPES") {
          return cached.value as! SDAI.LIST<nA3MA_ACCURACY_TYPE_NAME>/*[0:0]*/ 
        }
        let origin = super_eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY
        let value = SDAI.UNWRAP( SDAI.LIST<nA3MA_ACCURACY_TYPE_NAME>(
          origin.partialEntity._accuracy_types__getter(SELF: origin)) )
        updateCache(derivedAttributeName:"ACCURACY_TYPES", value:value)
        return value
      }
    }

    /// __EXPLICIT REDEF(DYNAMIC)__ attribute
    /// - origin: SUPER( ``eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY`` )
    public var DETECTED_DIFFERENCE_TYPES: SDAI.LIST<nA3MA_DETECTED_DIFFERENCE_TYPE_NAME>/*[1:nil]*/  {
      get {
        if let resolved = _a3m_equivalence_criterion._detected_difference_types__provider(complex: self.complexEntity) {
          let value = SDAI.UNWRAP( SDAI.LIST<nA3MA_DETECTED_DIFFERENCE_TYPE_NAME>(resolved
            ._detected_difference_types__getter(complex: self.complexEntity)) )
          return value
        }
        else {
          return SDAI.UNWRAP( SDAI.LIST<nA3MA_DETECTED_DIFFERENCE_TYPE_NAME>(super_eA3M_EQUIVALENCE_CRITERION
            .partialEntity._detected_difference_types) )
        }
      }
      set(newValue) {
        if let _ = _a3m_equivalence_criterion._detected_difference_types__provider(complex: self.complexEntity) { return }

        let partial = super_eA3M_EQUIVALENCE_CRITERION.partialEntity
        partial._detected_difference_types = SDAI.UNWRAP(
          SDAI.LIST<nA3M_DETECTED_DIFFERENCE_TYPE_NAME>(newValue))
      }
    }

    /// __INVERSE__ attribute
    /// observing eA3MA_EQUIVALENCE_CRITERION_ASSESSMENT_THRESHOLD_RELATIONSHIP .RELATING_REPRESENTATION_ITEM
    /// - origin: SUB( ``eDIFFERENT_PLACEMENT_OF_COMPONENT`` )
    public var ASSESSMENT_THRESHOLD_2: eA3MA_EQUIVALENCE_CRITERION_ASSESSMENT_THRESHOLD_RELATIONSHIP?  {
      get {
        return sub_eDIFFERENT_PLACEMENT_OF_COMPONENT?.partialEntity._assessment_threshold_2
      }
    }

    /// __EXPLICIT REDEF(DERIVE)__ attribute
    /// - origin: SELF( ``eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT`` )
    public var COMPARED_ELEMENT_TYPES: SDAI.LIST<nA3MA_ELEMENT_TYPE_NAME>/*[1:1]*/  {
      get {
        if let cached = cachedValue(derivedAttributeName:"COMPARED_ELEMENT_TYPES") {
          return cached.value as! SDAI.LIST<nA3MA_ELEMENT_TYPE_NAME>/*[1:1]*/ 
        }
        let origin = self
        let value = SDAI.UNWRAP( origin.partialEntity._compared_element_types__getter(SELF: origin) )
        updateCache(derivedAttributeName:"COMPARED_ELEMENT_TYPES", value:value)
        return value
      }
    }

    /// __EXPLICIT REDEF(DYNAMIC)__ attribute
    /// - origin: SUPER( ``eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY`` )
    public var MEASURED_DATA_TYPE: nA3MA_MEASURED_DATA_TYPE_NAME {
      get {
        if let resolved = _a3m_equivalence_criterion._measured_data_type__provider(complex: self.complexEntity) {
          let value = SDAI.UNWRAP( nA3MA_MEASURED_DATA_TYPE_NAME(resolved._measured_data_type__getter(
            complex: self.complexEntity)) )
          return value
        }
        else {
          return SDAI.UNWRAP( nA3MA_MEASURED_DATA_TYPE_NAME(super_eA3M_EQUIVALENCE_CRITERION.partialEntity
            ._measured_data_type) )
        }
      }
      set(newValue) {
        if let _ = _a3m_equivalence_criterion._measured_data_type__provider(complex: self.complexEntity) { return }

        let partial = super_eA3M_EQUIVALENCE_CRITERION.partialEntity
        partial._measured_data_type = SDAI.UNWRAP(
          nA3M_MEASURED_DATA_TYPE_NAME(newValue))
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eA3M_EQUIVALENCE_CRITERION`` )
    public var ASSESSMENT_SPECIFICATION: sA3M_EQUIVALENCE_ASSESSMENT_SPECIFICATION_SELECT {
      get {
        return SDAI.UNWRAP( super_eA3M_EQUIVALENCE_CRITERION.partialEntity._assessment_specification )
      }
      set(newValue) {
        let partial = super_eA3M_EQUIVALENCE_CRITERION.partialEntity
        partial._assessment_specification = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eREPRESENTATION_ITEM`` )
    public var NAME: tLABEL {
      get {
        return SDAI.UNWRAP( super_eREPRESENTATION_ITEM.partialEntity._name )
      }
      set(newValue) {
        let partial = super_eREPRESENTATION_ITEM.partialEntity
        partial._name = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT REDEF(DERIVE)__ attribute
    /// - origin: SELF( ``eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT`` )
    public var COMPARING_ELEMENT_TYPES: SDAI.LIST<nA3MA_ELEMENT_TYPE_NAME>/*[1:1]*/  {
      get {
        if let cached = cachedValue(derivedAttributeName:"COMPARING_ELEMENT_TYPES") {
          return cached.value as! SDAI.LIST<nA3MA_ELEMENT_TYPE_NAME>/*[1:1]*/ 
        }
        let origin = self
        let value = SDAI.UNWRAP( origin.partialEntity._comparing_element_types__getter(SELF: origin) )
        updateCache(derivedAttributeName:"COMPARING_ELEMENT_TYPES", value:value)
        return value
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_a3m_equivalence_criterion_of_detailed_assembly_data_content.self) else { return nil }
      self.partialEntity = partial

      guard let super1 = complexEntity?.entityReference(eREPRESENTATION_ITEM.self) else { return nil }
      self.super_eREPRESENTATION_ITEM = super1

      guard let super2 = complexEntity?.entityReference(eDATA_EQUIVALENCE_CRITERION.self) else { return nil }
      self.super_eDATA_EQUIVALENCE_CRITERION = super2

      guard let super3 = complexEntity?.entityReference(eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.self) else { return nil }
      self.super_eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT = super3

      guard let super4 = complexEntity?.entityReference(eA3M_EQUIVALENCE_CRITERION.self) else { return nil }
      self.super_eA3M_EQUIVALENCE_CRITERION = super4

      guard let super5 = complexEntity?.entityReference(eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY.self) else { return nil }
      self.super_eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY = super5

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "A3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT", type: self, explicitAttributeCount: 0)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: eREPRESENTATION_ITEM.self)
      entityDef.add(supertype: eDATA_EQUIVALENCE_CRITERION.self)
      entityDef.add(supertype: eDATA_EQUIVALENCE_INSPECTION_REQUIREMENT.self)
      entityDef.add(supertype: eA3M_EQUIVALENCE_CRITERION.self)
      entityDef.add(supertype: eA3M_EQUIVALENCE_CRITERION_FOR_ASSEMBLY.self)
      entityDef.add(supertype: eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "ACCURACY_TYPES", keyPath: \eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.ACCURACY_TYPES, 
        kind: .derivedRedeclaring, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "DETECTED_DIFFERENCE_TYPES", keyPath: \eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.DETECTED_DIFFERENCE_TYPES, 
        kind: .explicitRedeclaring, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ASSESSMENT_THRESHOLD_2", keyPath: \eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.ASSESSMENT_THRESHOLD_2, 
        kind: .inverse, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "COMPARED_ELEMENT_TYPES", keyPath: \eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.COMPARED_ELEMENT_TYPES, 
        kind: .derivedRedeclaring, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "MEASURED_DATA_TYPE", keyPath: \eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.MEASURED_DATA_TYPE, 
        kind: .explicitRedeclaring, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ASSESSMENT_SPECIFICATION", keyPath: \eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.ASSESSMENT_SPECIFICATION, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NAME", keyPath: \eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.NAME, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "COMPARING_ELEMENT_TYPES", keyPath: \eA3M_EQUIVALENCE_CRITERION_OF_DETAILED_ASSEMBLY_DATA_CONTENT.COMPARING_ELEMENT_TYPES, 
        kind: .derivedRedeclaring, source: .thisEntity, mayYieldEntityReference: false)

      return entityDef
    }

  }
}

//MARK: - partial Entity Dynamic Attribute Protocol Conformances
extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
  ._a3m_equivalence_criterion_of_detailed_assembly_data_content :
  eA3M_EQUIVALENCE_CRITERION__COMPARING_ELEMENT_TYPES__provider, 
  eA3M_EQUIVALENCE_CRITERION__COMPARED_ELEMENT_TYPES__provider {}
