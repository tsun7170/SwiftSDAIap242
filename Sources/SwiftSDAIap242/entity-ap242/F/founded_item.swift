/* file: founded_item.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY founded_item
    SUPERTYPE OF ( 
        ONEOF ( 
            b_spline_curve_knot_locator, 
            b_spline_curve_segment, 
            b_spline_surface_knot_locator, 
            b_spline_surface_patch, 
            b_spline_surface_strip, 
            boundary_curve_of_b_spline_or_rectangular_composite_surface, 
            box_domain, 
            character_glyph_style_outline, 
            character_glyph_style_stroke, 
            composite_curve_segment, 
            composite_curve_transition_locator, 
            curve_style, 
            curve_style_font, 
            curve_style_font_and_scaling, 
            curve_style_font_pattern, 
            externally_defined_style, 
            fill_area_style, 
            interpolated_configuration_segment, 
            kinematic_path_segment, 
            plane_angle_and_length_pair, 
            plane_angle_and_ratio_pair, 
            point_style, 
            presentation_style_assignment, 
            rectangular_composite_surface_transition_locator, 
            surface_patch, 
            surface_side_style, 
            surface_style_boundary, 
            surface_style_control_grid, 
            surface_style_fill_area, 
            surface_style_parameter_line, 
            surface_style_segmentation_curve, 
            surface_style_silhouette, 
            surface_style_usage, 
            symbol_style, 
            text_style, 
            view_volume ) 
        ANDOR
        ONEOF ( 
            character_glyph_style_outline, 
            character_glyph_style_stroke, 
            curve_style, 
            curve_style_font, 
            curve_style_font_and_scaling, 
            curve_style_font_pattern, 
            externally_defined_style, 
            fill_area_style, 
            point_style, 
            presentation_style_assignment, 
            surface_side_style, 
            surface_style_boundary, 
            surface_style_control_grid, 
            surface_style_fill_area, 
            surface_style_parameter_line, 
            surface_style_segmentation_curve, 
            surface_style_silhouette, 
            surface_style_usage, 
            symbol_style, 
            text_style ) );
    DERIVE
      users  : SET [0 : ?] OF founded_item_select := using_items( SELF, [] );
    WHERE
      wr1: ( SIZEOF( users ) > 0 );
      wr2: ( NOT ( SELF IN users ) );
  END_ENTITY; -- founded_item (line:15871 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  ENTITY(SELF)	founded_item
    ATTR:  users,	TYPE: SET [0 : ?] OF founded_item_select -- DERIVED
      := using_items( SELF, [] )


  SUB- ENTITY(2)	plane_angle_and_ratio_pair
    ATTR:  plane_angle_value,	TYPE: plane_angle_measure -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  ratio_value,	TYPE: ratio_measure -- EXPLICIT


  SUB- ENTITY(3)	single_texture_style_tessellation_specification
    ATTR:  texture_image,	TYPE: label -- EXPLICIT

    ATTR:  texture_coordinates,	TYPE: LIST [1 : ?] OF LIST [2 : 2] OF non_negative_real -- EXPLICIT

    ATTR:  texture_format,	TYPE: texture_file_type -- EXPLICIT

    ATTR:  repeating_pattern,	TYPE: BOOLEAN -- EXPLICIT


  SUB- ENTITY(4)	texture_style_tessellation_specification
    (no local attributes)

  SUB- ENTITY(5)	texture_style_specification
    (no local attributes)

  SUB- ENTITY(6)	b_spline_surface_patch
    ATTR:  basis_surface,	TYPE: b_spline_surface -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  u_start_knot_index,	TYPE: INTEGER -- EXPLICIT

    ATTR:  v_start_knot_index,	TYPE: INTEGER -- EXPLICIT


  SUB- ENTITY(7)	curve_style_font_and_scaling
    ATTR:  name,	TYPE: label -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  curve_font,	TYPE: curve_style_font_select -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  curve_font_scaling,	TYPE: REAL -- EXPLICIT


  SUB- ENTITY(8)	surface_patch
    ATTR:  parent_surface,	TYPE: bounded_surface -- EXPLICIT

    ATTR:  u_transition,	TYPE: transition_code -- EXPLICIT

    ATTR:  v_transition,	TYPE: transition_code -- EXPLICIT

    ATTR:  u_sense,	TYPE: BOOLEAN -- EXPLICIT

    ATTR:  v_sense,	TYPE: BOOLEAN -- EXPLICIT

    ATTR:  using_surfaces,	TYPE: BAG [1 : ?] OF rectangular_composite_surface -- INVERSE
      FOR segments;


  SUB- ENTITY(9)	fill_area_style
    ATTR:  name,	TYPE: label -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  fill_styles,	TYPE: SET [1 : ?] OF fill_style_select -- EXPLICIT


  SUB- ENTITY(10)	point_to_point_path
    REDCR: transition,	TYPE: transition_code -- DERIVED (DYNAMIC)	(AMBIGUOUS/MASKED)
      := discontinuous
      -- OVERRIDING ENTITY: kinematic_path_segment


  SUB- ENTITY(11)	circular_path
    ATTR:  via_point,	TYPE: cartesian_point -- EXPLICIT


  SUB- ENTITY(12)	linear_path
    REDCR: transition,	TYPE: transition_code -- DERIVED (DYNAMIC)	(AMBIGUOUS/MASKED)
      := continuous
      -- OVERRIDING ENTITY: kinematic_path_segment


  SUB- ENTITY(13)	curve_based_path
    ATTR:  path_curve,	TYPE: curve -- EXPLICIT


  SUB- ENTITY(14)	path_node
    ATTR:  placement_end,	TYPE: placement -- EXPLICIT


  SUB- ENTITY(15)	curve_based_path_with_orientation_and_parameters
    ATTR:  parameters,	TYPE: path_parameter_representation -- EXPLICIT


  SUB- ENTITY(16)	curve_based_path_with_orientation
    ATTR:  position_curve,	TYPE: bounded_curve -- EXPLICIT

    ATTR:  orientation_curve,	TYPE: bounded_curve -- EXPLICIT


  SUB- ENTITY(17)	kinematic_path_segment
    ATTR:  t_end,	TYPE: parameter_value -- EXPLICIT

    ATTR:  transition,	TYPE: transition_code -- EXPLICIT (DYNAMIC)	(AMBIGUOUS/MASKED)
      -- possibly overriden by
          ENTITY: point_to_point_path,	TYPE: transition_code	(as DERIVED)
          ENTITY: linear_path,	TYPE: transition_code	(as DERIVED)


  SUB- ENTITY(18)	b_spline_curve_knot_locator
    ATTR:  basis_curve,	TYPE: b_spline_curve -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  knot_index,	TYPE: INTEGER -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(19)	text_style_with_mirror
    ATTR:  mirror_placement,	TYPE: axis2_placement -- EXPLICIT


  SUB- ENTITY(20)	text_style_with_box_characteristics
    ATTR:  characteristics,	TYPE: SET [1 : 4] OF box_characteristic_select -- EXPLICIT


  SUB- ENTITY(21)	text_style_with_spacing
    ATTR:  character_spacing,	TYPE: character_spacing_select -- EXPLICIT


  SUB- ENTITY(22)	text_style
    ATTR:  name,	TYPE: label -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  character_appearance,	TYPE: character_style_select -- EXPLICIT


  SUB- ENTITY(23)	interpolated_configuration_segment
    ATTR:  state,	TYPE: mechanism_state_representation -- EXPLICIT

    ATTR:  t_parameter,	TYPE: parameter_value -- EXPLICIT

    ATTR:  interpolation,	TYPE: interpolation_type -- EXPLICIT


  SUB- ENTITY(24)	b_spline_curve_segment
    ATTR:  basis_curve,	TYPE: b_spline_curve -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  start_knot_index,	TYPE: INTEGER -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(25)	b_spline_surface_knot_locator
    ATTR:  basis_surface,	TYPE: b_spline_surface -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  knot_index,	TYPE: INTEGER -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  surface_parameter,	TYPE: u_or_v_parameter -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(26)	b_spline_surface_strip
    ATTR:  basis_surface,	TYPE: b_spline_surface -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  start_knot_index,	TYPE: INTEGER -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  surface_parameter,	TYPE: u_or_v_parameter -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(27)	boundary_curve_of_b_spline_or_rectangular_composite_surface
    ATTR:  basis_surface,	TYPE: b_spline_or_rectangular_composite_surface_select -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  boundary_type,	TYPE: surface_boundary_type -- EXPLICIT


  SUB- ENTITY(28)	box_domain
    ATTR:  corner,	TYPE: cartesian_point -- EXPLICIT

    ATTR:  xlength,	TYPE: positive_length_measure -- EXPLICIT

    ATTR:  ylength,	TYPE: positive_length_measure -- EXPLICIT

    ATTR:  zlength,	TYPE: positive_length_measure -- EXPLICIT


  SUB- ENTITY(29)	character_glyph_style_outline
    ATTR:  outline_style,	TYPE: curve_style -- EXPLICIT


  SUB- ENTITY(30)	character_glyph_style_stroke
    ATTR:  stroke_style,	TYPE: curve_style -- EXPLICIT


  SUB- ENTITY(31)	reparametrised_composite_curve_segment
    ATTR:  param_length,	TYPE: parameter_value -- EXPLICIT


  SUB- ENTITY(32)	composite_curve_segment
    ATTR:  transition,	TYPE: transition_code -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  same_sense,	TYPE: BOOLEAN -- EXPLICIT

    ATTR:  parent_curve,	TYPE: curve -- EXPLICIT

    ATTR:  using_curves,	TYPE: BAG [1 : ?] OF composite_curve -- INVERSE
      FOR segments;


  SUB- ENTITY(33)	composite_curve_transition_locator
    ATTR:  basis_curve,	TYPE: composite_curve -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  transition_index,	TYPE: INTEGER -- EXPLICIT


  SUB- ENTITY(34)	vector_style
    (no local attributes)

  SUB- ENTITY(35)	curve_style
    ATTR:  name,	TYPE: label -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  curve_font,	TYPE: OPTIONAL curve_font_or_scaled_curve_font_select -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  curve_width,	TYPE: OPTIONAL size_select -- EXPLICIT

    ATTR:  curve_colour,	TYPE: OPTIONAL colour -- EXPLICIT


  SUB- ENTITY(36)	user_defined_curve_font
    (no local attributes)

  SUB- ENTITY(37)	curve_style_font
    ATTR:  name,	TYPE: label -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  pattern_list,	TYPE: LIST [1 : ?] OF curve_style_font_pattern -- EXPLICIT


  SUB- ENTITY(38)	curve_style_font_pattern
    ATTR:  visible_segment_length,	TYPE: positive_length_measure -- EXPLICIT

    ATTR:  invisible_segment_length,	TYPE: positive_length_measure -- EXPLICIT


  SUB- ENTITY(39)	externally_defined_style
    (no local attributes)

  SUB- ENTITY(40)	plane_angle_and_length_pair
    ATTR:  plane_angle_value,	TYPE: plane_angle_measure -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  length_value,	TYPE: length_measure -- EXPLICIT


  SUB- ENTITY(41)	point_style
    ATTR:  name,	TYPE: label -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  marker,	TYPE: OPTIONAL marker_select -- EXPLICIT

    ATTR:  marker_size,	TYPE: OPTIONAL size_select -- EXPLICIT

    ATTR:  marker_colour,	TYPE: OPTIONAL colour -- EXPLICIT


  SUB- ENTITY(42)	presentation_style_by_context
    ATTR:  style_context,	TYPE: style_context_select -- EXPLICIT


  SUB- ENTITY(43)	presentation_style_assignment
    ATTR:  styles,	TYPE: SET [1 : ?] OF presentation_style_select -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(44)	rectangular_composite_surface_transition_locator
    ATTR:  basis_surface,	TYPE: rectangular_composite_surface -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  surface_parameter,	TYPE: u_or_v_parameter -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  u_transition_index,	TYPE: INTEGER -- EXPLICIT

    ATTR:  v_transition_index,	TYPE: INTEGER -- EXPLICIT


  SUB- ENTITY(45)	surface_side_style
    ATTR:  name,	TYPE: label -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  styles,	TYPE: SET [1 : 7] OF surface_style_element_select -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(46)	surface_style_boundary
    ATTR:  style_of_boundary,	TYPE: curve_or_render -- EXPLICIT


  SUB- ENTITY(47)	surface_style_control_grid
    ATTR:  style_of_control_grid,	TYPE: curve_or_render -- EXPLICIT


  SUB- ENTITY(48)	surface_style_fill_area
    ATTR:  fill_area,	TYPE: fill_area_style -- EXPLICIT


  SUB- ENTITY(49)	surface_style_parameter_line
    ATTR:  style_of_parameter_lines,	TYPE: curve_or_render -- EXPLICIT

    ATTR:  direction_counts,	TYPE: SET [1 : 2] OF direction_count_select -- EXPLICIT


  SUB- ENTITY(50)	surface_style_segmentation_curve
    ATTR:  style_of_segmentation_curve,	TYPE: curve_or_render -- EXPLICIT


  SUB- ENTITY(51)	surface_style_silhouette
    ATTR:  style_of_silhouette,	TYPE: curve_or_render -- EXPLICIT


  SUB- ENTITY(52)	surface_style_usage
    ATTR:  side,	TYPE: surface_side -- EXPLICIT

    ATTR:  style,	TYPE: surface_side_style_select -- EXPLICIT


  SUB- ENTITY(53)	symbol_style
    ATTR:  name,	TYPE: label -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  style_of_symbol,	TYPE: symbol_style_select -- EXPLICIT


  SUB- ENTITY(54)	view_volume
    ATTR:  projection_type,	TYPE: central_or_parallel -- EXPLICIT

    ATTR:  projection_point,	TYPE: cartesian_point -- EXPLICIT

    ATTR:  view_plane_distance,	TYPE: length_measure -- EXPLICIT

    ATTR:  front_plane_distance,	TYPE: length_measure -- EXPLICIT

    ATTR:  front_plane_clipping,	TYPE: BOOLEAN -- EXPLICIT

    ATTR:  back_plane_distance,	TYPE: length_measure -- EXPLICIT

    ATTR:  back_plane_clipping,	TYPE: BOOLEAN -- EXPLICIT

    ATTR:  view_volume_sides_clipping,	TYPE: BOOLEAN -- EXPLICIT

    ATTR:  view_window,	TYPE: planar_box -- EXPLICIT

    ATTR:  camera_usages,	TYPE: SET [1 : ?] OF camera_model_d3 -- INVERSE
      FOR perspective_of_volume;


*/


//MARK: - Partial Entity
  public final class _founded_item : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      eFOUNDED_ITEM.self
    }

    //ATTRIBUTES
    /// DERIVE ATTRIBUTE
    internal func _users__getter(SELF: eFOUNDED_ITEM) -> (SDAI.SET<sFOUNDED_ITEM_SELECT>/*[0:nil]*/ )?  {

      let _TEMP1 = SDAI.SET<sFOUNDED_ITEM_SELECT>(SDAI.EMPLY_AGGREGATE)
      let _TEMP2 = USING_ITEMS(ITEM: sFOUNDED_ITEM_SELECT(/*eFOUNDED_ITEM*/SELF), 
                               CHECKED_ITEMS: _TEMP1)
      return SDAI.SET<sFOUNDED_ITEM_SELECT>(bound1: SDAI.UNWRAP(SDAI.INTEGER(0)), bound2: (nil as SDAI.INTEGER?), 
        /*SDAI.SET<sFOUNDED_ITEM_SELECT>*/_TEMP2)
    }

    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      //SELECT data types (indirectly) referencing the current type as a member of the select list
      members.insert(SDAI.STRING(sFOUNDED_ITEM_SELECT.typeName)) // -> Self
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //MARK: WHERE RULES (ENTITY)
    public static func WHERE_wr1(SELF: eFOUNDED_ITEM?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SDAI.SIZEOF(SELF.USERS)
      let _TEMP2 = _TEMP1 > SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP2
    }
    public static func WHERE_wr2(SELF: eFOUNDED_ITEM?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SDAI.aggregate(SELF.USERS, contains: sFOUNDED_ITEM_SELECT(/*eFOUNDED_ITEM*/SELF))
      let _TEMP2 =  !_TEMP1
      return _TEMP2
    }

    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init() {
      super.init(asAbstructSuperclass:())

    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 0
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      self.init( )
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY founded_item
    SUPERTYPE OF ( 
        ONEOF ( 
            b_spline_curve_knot_locator, 
            b_spline_curve_segment, 
            b_spline_surface_knot_locator, 
            b_spline_surface_patch, 
            b_spline_surface_strip, 
            boundary_curve_of_b_spline_or_rectangular_composite_surface, 
            box_domain, 
            character_glyph_style_outline, 
            character_glyph_style_stroke, 
            composite_curve_segment, 
            composite_curve_transition_locator, 
            curve_style, 
            curve_style_font, 
            curve_style_font_and_scaling, 
            curve_style_font_pattern, 
            externally_defined_style, 
            fill_area_style, 
            interpolated_configuration_segment, 
            kinematic_path_segment, 
            plane_angle_and_length_pair, 
            plane_angle_and_ratio_pair, 
            point_style, 
            presentation_style_assignment, 
            rectangular_composite_surface_transition_locator, 
            surface_patch, 
            surface_side_style, 
            surface_style_boundary, 
            surface_style_control_grid, 
            surface_style_fill_area, 
            surface_style_parameter_line, 
            surface_style_segmentation_curve, 
            surface_style_silhouette, 
            surface_style_usage, 
            symbol_style, 
            text_style, 
            view_volume ) 
        ANDOR
        ONEOF ( 
            character_glyph_style_outline, 
            character_glyph_style_stroke, 
            curve_style, 
            curve_style_font, 
            curve_style_font_and_scaling, 
            curve_style_font_pattern, 
            externally_defined_style, 
            fill_area_style, 
            point_style, 
            presentation_style_assignment, 
            surface_side_style, 
            surface_style_boundary, 
            surface_style_control_grid, 
            surface_style_fill_area, 
            surface_style_parameter_line, 
            surface_style_segmentation_curve, 
            surface_style_silhouette, 
            surface_style_usage, 
            symbol_style, 
            text_style ) );
    DERIVE
      users  : SET [0 : ?] OF founded_item_select := using_items( SELF, [] );
    WHERE
      wr1: ( SIZEOF( users ) > 0 );
      wr2: ( NOT ( SELF IN users ) );
  END_ENTITY; -- founded_item (line:15871 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class eFOUNDED_ITEM : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _founded_item.self
    }
    public let partialEntity: _founded_item

    //MARK: SUPERTYPES
    public var super_eFOUNDED_ITEM: eFOUNDED_ITEM { return self } 	// [1]

    //MARK: SUBTYPES
    public var sub_ePLANE_ANGLE_AND_RATIO_PAIR: ePLANE_ANGLE_AND_RATIO_PAIR? {	// [2]
      return self.complexEntity.entityReference(ePLANE_ANGLE_AND_RATIO_PAIR.self)
    }

    public var sub_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION: eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION? {	// [3]
      return self.complexEntity.entityReference(eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION.self)
    }

    public var sub_eTEXTURE_STYLE_TESSELLATION_SPECIFICATION: eTEXTURE_STYLE_TESSELLATION_SPECIFICATION? {	// [4]
      return self.complexEntity.entityReference(eTEXTURE_STYLE_TESSELLATION_SPECIFICATION.self)
    }

    public var sub_eTEXTURE_STYLE_SPECIFICATION: eTEXTURE_STYLE_SPECIFICATION? {	// [5]
      return self.complexEntity.entityReference(eTEXTURE_STYLE_SPECIFICATION.self)
    }

    public var sub_eB_SPLINE_SURFACE_PATCH: eB_SPLINE_SURFACE_PATCH? {	// [6]
      return self.complexEntity.entityReference(eB_SPLINE_SURFACE_PATCH.self)
    }

    public var sub_eCURVE_STYLE_FONT_AND_SCALING: eCURVE_STYLE_FONT_AND_SCALING? {	// [7]
      return self.complexEntity.entityReference(eCURVE_STYLE_FONT_AND_SCALING.self)
    }

    public var sub_eSURFACE_PATCH: eSURFACE_PATCH? {	// [8]
      return self.complexEntity.entityReference(eSURFACE_PATCH.self)
    }

    public var sub_eFILL_AREA_STYLE: eFILL_AREA_STYLE? {	// [9]
      return self.complexEntity.entityReference(eFILL_AREA_STYLE.self)
    }

    public var sub_ePOINT_TO_POINT_PATH: ePOINT_TO_POINT_PATH? {	// [10]
      return self.complexEntity.entityReference(ePOINT_TO_POINT_PATH.self)
    }

    public var sub_eCIRCULAR_PATH: eCIRCULAR_PATH? {	// [11]
      return self.complexEntity.entityReference(eCIRCULAR_PATH.self)
    }

    public var sub_eLINEAR_PATH: eLINEAR_PATH? {	// [12]
      return self.complexEntity.entityReference(eLINEAR_PATH.self)
    }

    public var sub_eCURVE_BASED_PATH: eCURVE_BASED_PATH? {	// [13]
      return self.complexEntity.entityReference(eCURVE_BASED_PATH.self)
    }

    public var sub_ePATH_NODE: ePATH_NODE? {	// [14]
      return self.complexEntity.entityReference(ePATH_NODE.self)
    }

    public var sub_eCURVE_BASED_PATH_WITH_ORIENTATION_AND_PARAMETERS: eCURVE_BASED_PATH_WITH_ORIENTATION_AND_PARAMETERS? {	// [15]
      return self.complexEntity.entityReference(eCURVE_BASED_PATH_WITH_ORIENTATION_AND_PARAMETERS.self)
    }

    public var sub_eCURVE_BASED_PATH_WITH_ORIENTATION: eCURVE_BASED_PATH_WITH_ORIENTATION? {	// [16]
      return self.complexEntity.entityReference(eCURVE_BASED_PATH_WITH_ORIENTATION.self)
    }

    public var sub_eKINEMATIC_PATH_SEGMENT: eKINEMATIC_PATH_SEGMENT? {	// [17]
      return self.complexEntity.entityReference(eKINEMATIC_PATH_SEGMENT.self)
    }

    public var sub_eB_SPLINE_CURVE_KNOT_LOCATOR: eB_SPLINE_CURVE_KNOT_LOCATOR? {	// [18]
      return self.complexEntity.entityReference(eB_SPLINE_CURVE_KNOT_LOCATOR.self)
    }

    public var sub_eTEXT_STYLE_WITH_MIRROR: eTEXT_STYLE_WITH_MIRROR? {	// [19]
      return self.complexEntity.entityReference(eTEXT_STYLE_WITH_MIRROR.self)
    }

    public var sub_eTEXT_STYLE_WITH_BOX_CHARACTERISTICS: eTEXT_STYLE_WITH_BOX_CHARACTERISTICS? {	// [20]
      return self.complexEntity.entityReference(eTEXT_STYLE_WITH_BOX_CHARACTERISTICS.self)
    }

    public var sub_eTEXT_STYLE_WITH_SPACING: eTEXT_STYLE_WITH_SPACING? {	// [21]
      return self.complexEntity.entityReference(eTEXT_STYLE_WITH_SPACING.self)
    }

    public var sub_eTEXT_STYLE: eTEXT_STYLE? {	// [22]
      return self.complexEntity.entityReference(eTEXT_STYLE.self)
    }

    public var sub_eINTERPOLATED_CONFIGURATION_SEGMENT: eINTERPOLATED_CONFIGURATION_SEGMENT? {	// [23]
      return self.complexEntity.entityReference(eINTERPOLATED_CONFIGURATION_SEGMENT.self)
    }

    public var sub_eB_SPLINE_CURVE_SEGMENT: eB_SPLINE_CURVE_SEGMENT? {	// [24]
      return self.complexEntity.entityReference(eB_SPLINE_CURVE_SEGMENT.self)
    }

    public var sub_eB_SPLINE_SURFACE_KNOT_LOCATOR: eB_SPLINE_SURFACE_KNOT_LOCATOR? {	// [25]
      return self.complexEntity.entityReference(eB_SPLINE_SURFACE_KNOT_LOCATOR.self)
    }

    public var sub_eB_SPLINE_SURFACE_STRIP: eB_SPLINE_SURFACE_STRIP? {	// [26]
      return self.complexEntity.entityReference(eB_SPLINE_SURFACE_STRIP.self)
    }

    public var sub_eBOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE: eBOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE? {	// [27]
      return self.complexEntity.entityReference(eBOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE.self)
    }

    public var sub_eBOX_DOMAIN: eBOX_DOMAIN? {	// [28]
      return self.complexEntity.entityReference(eBOX_DOMAIN.self)
    }

    public var sub_eCHARACTER_GLYPH_STYLE_OUTLINE: eCHARACTER_GLYPH_STYLE_OUTLINE? {	// [29]
      return self.complexEntity.entityReference(eCHARACTER_GLYPH_STYLE_OUTLINE.self)
    }

    public var sub_eCHARACTER_GLYPH_STYLE_STROKE: eCHARACTER_GLYPH_STYLE_STROKE? {	// [30]
      return self.complexEntity.entityReference(eCHARACTER_GLYPH_STYLE_STROKE.self)
    }

    public var sub_eREPARAMETRISED_COMPOSITE_CURVE_SEGMENT: eREPARAMETRISED_COMPOSITE_CURVE_SEGMENT? {	// [31]
      return self.complexEntity.entityReference(eREPARAMETRISED_COMPOSITE_CURVE_SEGMENT.self)
    }

    public var sub_eCOMPOSITE_CURVE_SEGMENT: eCOMPOSITE_CURVE_SEGMENT? {	// [32]
      return self.complexEntity.entityReference(eCOMPOSITE_CURVE_SEGMENT.self)
    }

    public var sub_eCOMPOSITE_CURVE_TRANSITION_LOCATOR: eCOMPOSITE_CURVE_TRANSITION_LOCATOR? {	// [33]
      return self.complexEntity.entityReference(eCOMPOSITE_CURVE_TRANSITION_LOCATOR.self)
    }

    public var sub_eVECTOR_STYLE: eVECTOR_STYLE? {	// [34]
      return self.complexEntity.entityReference(eVECTOR_STYLE.self)
    }

    public var sub_eCURVE_STYLE: eCURVE_STYLE? {	// [35]
      return self.complexEntity.entityReference(eCURVE_STYLE.self)
    }

    public var sub_eUSER_DEFINED_CURVE_FONT: eUSER_DEFINED_CURVE_FONT? {	// [36]
      return self.complexEntity.entityReference(eUSER_DEFINED_CURVE_FONT.self)
    }

    public var sub_eCURVE_STYLE_FONT: eCURVE_STYLE_FONT? {	// [37]
      return self.complexEntity.entityReference(eCURVE_STYLE_FONT.self)
    }

    public var sub_eCURVE_STYLE_FONT_PATTERN: eCURVE_STYLE_FONT_PATTERN? {	// [38]
      return self.complexEntity.entityReference(eCURVE_STYLE_FONT_PATTERN.self)
    }

    public var sub_eEXTERNALLY_DEFINED_STYLE: eEXTERNALLY_DEFINED_STYLE? {	// [39]
      return self.complexEntity.entityReference(eEXTERNALLY_DEFINED_STYLE.self)
    }

    public var sub_ePLANE_ANGLE_AND_LENGTH_PAIR: ePLANE_ANGLE_AND_LENGTH_PAIR? {	// [40]
      return self.complexEntity.entityReference(ePLANE_ANGLE_AND_LENGTH_PAIR.self)
    }

    public var sub_ePOINT_STYLE: ePOINT_STYLE? {	// [41]
      return self.complexEntity.entityReference(ePOINT_STYLE.self)
    }

    public var sub_ePRESENTATION_STYLE_BY_CONTEXT: ePRESENTATION_STYLE_BY_CONTEXT? {	// [42]
      return self.complexEntity.entityReference(ePRESENTATION_STYLE_BY_CONTEXT.self)
    }

    public var sub_ePRESENTATION_STYLE_ASSIGNMENT: ePRESENTATION_STYLE_ASSIGNMENT? {	// [43]
      return self.complexEntity.entityReference(ePRESENTATION_STYLE_ASSIGNMENT.self)
    }

    public var sub_eRECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR: eRECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR? {	// [44]
      return self.complexEntity.entityReference(eRECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR.self)
    }

    public var sub_eSURFACE_SIDE_STYLE: eSURFACE_SIDE_STYLE? {	// [45]
      return self.complexEntity.entityReference(eSURFACE_SIDE_STYLE.self)
    }

    public var sub_eSURFACE_STYLE_BOUNDARY: eSURFACE_STYLE_BOUNDARY? {	// [46]
      return self.complexEntity.entityReference(eSURFACE_STYLE_BOUNDARY.self)
    }

    public var sub_eSURFACE_STYLE_CONTROL_GRID: eSURFACE_STYLE_CONTROL_GRID? {	// [47]
      return self.complexEntity.entityReference(eSURFACE_STYLE_CONTROL_GRID.self)
    }

    public var sub_eSURFACE_STYLE_FILL_AREA: eSURFACE_STYLE_FILL_AREA? {	// [48]
      return self.complexEntity.entityReference(eSURFACE_STYLE_FILL_AREA.self)
    }

    public var sub_eSURFACE_STYLE_PARAMETER_LINE: eSURFACE_STYLE_PARAMETER_LINE? {	// [49]
      return self.complexEntity.entityReference(eSURFACE_STYLE_PARAMETER_LINE.self)
    }

    public var sub_eSURFACE_STYLE_SEGMENTATION_CURVE: eSURFACE_STYLE_SEGMENTATION_CURVE? {	// [50]
      return self.complexEntity.entityReference(eSURFACE_STYLE_SEGMENTATION_CURVE.self)
    }

    public var sub_eSURFACE_STYLE_SILHOUETTE: eSURFACE_STYLE_SILHOUETTE? {	// [51]
      return self.complexEntity.entityReference(eSURFACE_STYLE_SILHOUETTE.self)
    }

    public var sub_eSURFACE_STYLE_USAGE: eSURFACE_STYLE_USAGE? {	// [52]
      return self.complexEntity.entityReference(eSURFACE_STYLE_USAGE.self)
    }

    public var sub_eSYMBOL_STYLE: eSYMBOL_STYLE? {	// [53]
      return self.complexEntity.entityReference(eSYMBOL_STYLE.self)
    }

    public var sub_eVIEW_VOLUME: eVIEW_VOLUME? {	// [54]
      return self.complexEntity.entityReference(eVIEW_VOLUME.self)
    }


    //MARK: ATTRIBUTES
    // SURFACE_PARAMETER: (3 AMBIGUOUS REFs)

    // BASIS_CURVE: (3 AMBIGUOUS REFs)

    // KNOT_INDEX: (2 AMBIGUOUS REFs)

    // TRANSITION: (4 AMBIGUOUS REFs)

    // CURVE_FONT: (2 AMBIGUOUS REFs)

    // STYLES: (2 AMBIGUOUS REFs)

    // BASIS_SURFACE: (5 AMBIGUOUS REFs)

    // PLANE_ANGLE_VALUE: (2 AMBIGUOUS REFs)

    // NAME: (8 AMBIGUOUS REFs)

    // START_KNOT_INDEX: (2 AMBIGUOUS REFs)

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCURVE_STYLE_FONT_PATTERN`` )
    public var INVISIBLE_SEGMENT_LENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      get {
        return sub_eCURVE_STYLE_FONT_PATTERN?.partialEntity._invisible_segment_length
      }
      set(newValue) {
        guard let partial = sub_eCURVE_STYLE_FONT_PATTERN?.super_eCURVE_STYLE_FONT_PATTERN.partialEntity
          else { return }
        partial._invisible_segment_length = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePRESENTATION_STYLE_BY_CONTEXT`` )
    public var STYLE_CONTEXT: sSTYLE_CONTEXT_SELECT?  {
      get {
        return sub_ePRESENTATION_STYLE_BY_CONTEXT?.partialEntity._style_context
      }
      set(newValue) {
        guard let partial = sub_ePRESENTATION_STYLE_BY_CONTEXT?.super_ePRESENTATION_STYLE_BY_CONTEXT
          .partialEntity else { return }
        partial._style_context = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION`` )
    public var TEXTURE_COORDINATES: (SDAI.LIST<SDAI.LIST<tNON_NEGATIVE_REAL>/*[2:2]*/ >/*[1:nil]*/ )?  {
      get {
        return sub_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION?.partialEntity._texture_coordinates
      }
      set(newValue) {
        guard let partial = sub_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION?.super_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION
          .partialEntity else { return }
        partial._texture_coordinates = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCURVE_STYLE_FONT_AND_SCALING`` )
    public var CURVE_FONT_SCALING: SDAI.REAL?  {
      get {
        return sub_eCURVE_STYLE_FONT_AND_SCALING?.partialEntity._curve_font_scaling
      }
      set(newValue) {
        guard let partial = sub_eCURVE_STYLE_FONT_AND_SCALING?.super_eCURVE_STYLE_FONT_AND_SCALING
          .partialEntity else { return }
        partial._curve_font_scaling = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eBOX_DOMAIN`` )
    public var ZLENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      get {
        return sub_eBOX_DOMAIN?.partialEntity._zlength
      }
      set(newValue) {
        guard let partial = sub_eBOX_DOMAIN?.super_eBOX_DOMAIN.partialEntity else { return }
        partial._zlength = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePOINT_STYLE`` )
    public var MARKER_COLOUR: eCOLOUR?  {
      get {
        return sub_ePOINT_STYLE?.partialEntity._marker_colour
      }
      set(newValue) {
        guard let partial = sub_ePOINT_STYLE?.super_ePOINT_STYLE.partialEntity else { return }
        partial._marker_colour = newValue
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSYMBOL_STYLE`` )
    public var STYLE_OF_SYMBOL: sSYMBOL_STYLE_SELECT?  {
      get {
        return sub_eSYMBOL_STYLE?.partialEntity._style_of_symbol
      }
      set(newValue) {
        guard let partial = sub_eSYMBOL_STYLE?.super_eSYMBOL_STYLE.partialEntity else { return }
        partial._style_of_symbol = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_PATCH`` )
    public var U_SENSE: SDAI.BOOLEAN?  {
      get {
        return sub_eSURFACE_PATCH?.partialEntity._u_sense
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_PATCH?.super_eSURFACE_PATCH.partialEntity else { return }
        partial._u_sense = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eVIEW_VOLUME`` )
    public var VIEW_PLANE_DISTANCE: tLENGTH_MEASURE?  {
      get {
        return sub_eVIEW_VOLUME?.partialEntity._view_plane_distance
      }
      set(newValue) {
        guard let partial = sub_eVIEW_VOLUME?.super_eVIEW_VOLUME.partialEntity else { return }
        partial._view_plane_distance = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eVIEW_VOLUME`` )
    public var VIEW_VOLUME_SIDES_CLIPPING: SDAI.BOOLEAN?  {
      get {
        return sub_eVIEW_VOLUME?.partialEntity._view_volume_sides_clipping
      }
      set(newValue) {
        guard let partial = sub_eVIEW_VOLUME?.super_eVIEW_VOLUME.partialEntity else { return }
        partial._view_volume_sides_clipping = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_STYLE_USAGE`` )
    public var SIDE: nSURFACE_SIDE?  {
      get {
        return sub_eSURFACE_STYLE_USAGE?.partialEntity._side
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_STYLE_USAGE?.super_eSURFACE_STYLE_USAGE.partialEntity
          else { return }
        partial._side = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCURVE_STYLE`` )
    public var CURVE_WIDTH: sSIZE_SELECT?  {
      get {
        return sub_eCURVE_STYLE?.partialEntity._curve_width
      }
      set(newValue) {
        guard let partial = sub_eCURVE_STYLE?.super_eCURVE_STYLE.partialEntity else { return }
        partial._curve_width = newValue
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eTEXT_STYLE`` )
    public var CHARACTER_APPEARANCE: sCHARACTER_STYLE_SELECT?  {
      get {
        return sub_eTEXT_STYLE?.partialEntity._character_appearance
      }
      set(newValue) {
        guard let partial = sub_eTEXT_STYLE?.super_eTEXT_STYLE.partialEntity else { return }
        partial._character_appearance = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eVIEW_VOLUME`` )
    public var PROJECTION_POINT: eCARTESIAN_POINT?  {
      get {
        return sub_eVIEW_VOLUME?.partialEntity._projection_point
      }
      set(newValue) {
        guard let partial = sub_eVIEW_VOLUME?.super_eVIEW_VOLUME.partialEntity else { return }
        partial._projection_point = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCURVE_STYLE_FONT`` )
    public var PATTERN_LIST: (SDAI.LIST<eCURVE_STYLE_FONT_PATTERN>/*[1:nil]*/ )?  {
      get {
        return sub_eCURVE_STYLE_FONT?.partialEntity._pattern_list
      }
      set(newValue) {
        guard let partial = sub_eCURVE_STYLE_FONT?.super_eCURVE_STYLE_FONT.partialEntity else { return }
        partial._pattern_list = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePOINT_STYLE`` )
    public var MARKER_SIZE: sSIZE_SELECT?  {
      get {
        return sub_ePOINT_STYLE?.partialEntity._marker_size
      }
      set(newValue) {
        guard let partial = sub_ePOINT_STYLE?.super_ePOINT_STYLE.partialEntity else { return }
        partial._marker_size = newValue
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCHARACTER_GLYPH_STYLE_OUTLINE`` )
    public var OUTLINE_STYLE: eCURVE_STYLE?  {
      get {
        return sub_eCHARACTER_GLYPH_STYLE_OUTLINE?.partialEntity._outline_style
      }
      set(newValue) {
        guard let partial = sub_eCHARACTER_GLYPH_STYLE_OUTLINE?.super_eCHARACTER_GLYPH_STYLE_OUTLINE
          .partialEntity else { return }
        partial._outline_style = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePOINT_STYLE`` )
    public var MARKER: sMARKER_SELECT?  {
      get {
        return sub_ePOINT_STYLE?.partialEntity._marker
      }
      set(newValue) {
        guard let partial = sub_ePOINT_STYLE?.super_ePOINT_STYLE.partialEntity else { return }
        partial._marker = newValue
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eTEXT_STYLE_WITH_SPACING`` )
    public var CHARACTER_SPACING: sCHARACTER_SPACING_SELECT?  {
      get {
        return sub_eTEXT_STYLE_WITH_SPACING?.partialEntity._character_spacing
      }
      set(newValue) {
        guard let partial = sub_eTEXT_STYLE_WITH_SPACING?.super_eTEXT_STYLE_WITH_SPACING.partialEntity
          else { return }
        partial._character_spacing = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SELF( ``eFOUNDED_ITEM`` )
    public var USERS: (SDAI.SET<sFOUNDED_ITEM_SELECT>/*[0:nil]*/ )?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"USERS") {
          return cached.value as! (SDAI.SET<sFOUNDED_ITEM_SELECT>/*[0:nil]*/ )? 
        }
        let origin = self
        let value = origin.partialEntity._users__getter(SELF: origin)
        updateCache(derivedAttributeName:"USERS", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eVIEW_VOLUME`` )
    public var BACK_PLANE_DISTANCE: tLENGTH_MEASURE?  {
      get {
        return sub_eVIEW_VOLUME?.partialEntity._back_plane_distance
      }
      set(newValue) {
        guard let partial = sub_eVIEW_VOLUME?.super_eVIEW_VOLUME.partialEntity else { return }
        partial._back_plane_distance = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCURVE_BASED_PATH_WITH_ORIENTATION_AND_PARAMETERS`` )
    public var PARAMETERS: ePATH_PARAMETER_REPRESENTATION?  {
      get {
        return sub_eCURVE_BASED_PATH_WITH_ORIENTATION_AND_PARAMETERS?.partialEntity._parameters
      }
      set(newValue) {
        guard let partial = sub_eCURVE_BASED_PATH_WITH_ORIENTATION_AND_PARAMETERS?.super_eCURVE_BASED_PATH_WITH_ORIENTATION_AND_PARAMETERS
          .partialEntity else { return }
        partial._parameters = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eVIEW_VOLUME`` )
    public var PROJECTION_TYPE: nCENTRAL_OR_PARALLEL?  {
      get {
        return sub_eVIEW_VOLUME?.partialEntity._projection_type
      }
      set(newValue) {
        guard let partial = sub_eVIEW_VOLUME?.super_eVIEW_VOLUME.partialEntity else { return }
        partial._projection_type = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_STYLE_SEGMENTATION_CURVE`` )
    public var STYLE_OF_SEGMENTATION_CURVE: sCURVE_OR_RENDER?  {
      get {
        return sub_eSURFACE_STYLE_SEGMENTATION_CURVE?.partialEntity._style_of_segmentation_curve
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_STYLE_SEGMENTATION_CURVE?.super_eSURFACE_STYLE_SEGMENTATION_CURVE
          .partialEntity else { return }
        partial._style_of_segmentation_curve = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION`` )
    public var TEXTURE_FORMAT: nTEXTURE_FILE_TYPE?  {
      get {
        return sub_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION?.partialEntity._texture_format
      }
      set(newValue) {
        guard let partial = sub_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION?.super_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION
          .partialEntity else { return }
        partial._texture_format = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eKINEMATIC_PATH_SEGMENT`` )
    public var T_END: tPARAMETER_VALUE?  {
      get {
        return sub_eKINEMATIC_PATH_SEGMENT?.partialEntity._t_end
      }
      set(newValue) {
        guard let partial = sub_eKINEMATIC_PATH_SEGMENT?.super_eKINEMATIC_PATH_SEGMENT.partialEntity
          else { return }
        partial._t_end = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eBOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE`` )
    public var BOUNDARY_TYPE: nSURFACE_BOUNDARY_TYPE?  {
      get {
        return sub_eBOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE?.partialEntity._boundary_type
      }
      set(newValue) {
        guard let partial = sub_eBOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE?.super_eBOUNDARY_CURVE_OF_B_SPLINE_OR_RECTANGULAR_COMPOSITE_SURFACE
          .partialEntity else { return }
        partial._boundary_type = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_STYLE_USAGE`` )
    public var STYLE: sSURFACE_SIDE_STYLE_SELECT?  {
      get {
        return sub_eSURFACE_STYLE_USAGE?.partialEntity._style
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_STYLE_USAGE?.super_eSURFACE_STYLE_USAGE.partialEntity
          else { return }
        partial._style = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eVIEW_VOLUME`` )
    public var FRONT_PLANE_DISTANCE: tLENGTH_MEASURE?  {
      get {
        return sub_eVIEW_VOLUME?.partialEntity._front_plane_distance
      }
      set(newValue) {
        guard let partial = sub_eVIEW_VOLUME?.super_eVIEW_VOLUME.partialEntity else { return }
        partial._front_plane_distance = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCURVE_STYLE`` )
    public var CURVE_COLOUR: eCOLOUR?  {
      get {
        return sub_eCURVE_STYLE?.partialEntity._curve_colour
      }
      set(newValue) {
        guard let partial = sub_eCURVE_STYLE?.super_eCURVE_STYLE.partialEntity else { return }
        partial._curve_colour = newValue
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_PATCH`` )
    public var PARENT_SURFACE: eBOUNDED_SURFACE?  {
      get {
        return sub_eSURFACE_PATCH?.partialEntity._parent_surface
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_PATCH?.super_eSURFACE_PATCH.partialEntity else { return }
        partial._parent_surface = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_STYLE_PARAMETER_LINE`` )
    public var STYLE_OF_PARAMETER_LINES: sCURVE_OR_RENDER?  {
      get {
        return sub_eSURFACE_STYLE_PARAMETER_LINE?.partialEntity._style_of_parameter_lines
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_STYLE_PARAMETER_LINE?.super_eSURFACE_STYLE_PARAMETER_LINE
          .partialEntity else { return }
        partial._style_of_parameter_lines = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eB_SPLINE_SURFACE_PATCH`` )
    public var V_START_KNOT_INDEX: SDAI.INTEGER?  {
      get {
        return sub_eB_SPLINE_SURFACE_PATCH?.partialEntity._v_start_knot_index
      }
      set(newValue) {
        guard let partial = sub_eB_SPLINE_SURFACE_PATCH?.super_eB_SPLINE_SURFACE_PATCH.partialEntity
          else { return }
        partial._v_start_knot_index = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCOMPOSITE_CURVE_TRANSITION_LOCATOR`` )
    public var TRANSITION_INDEX: SDAI.INTEGER?  {
      get {
        return sub_eCOMPOSITE_CURVE_TRANSITION_LOCATOR?.partialEntity._transition_index
      }
      set(newValue) {
        guard let partial = sub_eCOMPOSITE_CURVE_TRANSITION_LOCATOR?.super_eCOMPOSITE_CURVE_TRANSITION_LOCATOR
          .partialEntity else { return }
        partial._transition_index = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eVIEW_VOLUME`` )
    public var BACK_PLANE_CLIPPING: SDAI.BOOLEAN?  {
      get {
        return sub_eVIEW_VOLUME?.partialEntity._back_plane_clipping
      }
      set(newValue) {
        guard let partial = sub_eVIEW_VOLUME?.super_eVIEW_VOLUME.partialEntity else { return }
        partial._back_plane_clipping = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eBOX_DOMAIN`` )
    public var CORNER: eCARTESIAN_POINT?  {
      get {
        return sub_eBOX_DOMAIN?.partialEntity._corner
      }
      set(newValue) {
        guard let partial = sub_eBOX_DOMAIN?.super_eBOX_DOMAIN.partialEntity else { return }
        partial._corner = SDAI.UNWRAP(newValue)
      }
    }

    /// __INVERSE__ attribute
    /// observing eCOMPOSITE_CURVE .SEGMENTS
    /// - origin: SUB( ``eCOMPOSITE_CURVE_SEGMENT`` )
    public var USING_CURVES: (SDAI.BAG<eCOMPOSITE_CURVE>/*[1:nil]*/ )?  {
      get {
        return sub_eCOMPOSITE_CURVE_SEGMENT?.partialEntity._using_curves
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eTEXT_STYLE_WITH_MIRROR`` )
    public var MIRROR_PLACEMENT: sAXIS2_PLACEMENT?  {
      get {
        return sub_eTEXT_STYLE_WITH_MIRROR?.partialEntity._mirror_placement
      }
      set(newValue) {
        guard let partial = sub_eTEXT_STYLE_WITH_MIRROR?.super_eTEXT_STYLE_WITH_MIRROR.partialEntity
          else { return }
        partial._mirror_placement = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_PATCH`` )
    public var V_TRANSITION: nTRANSITION_CODE?  {
      get {
        return sub_eSURFACE_PATCH?.partialEntity._v_transition
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_PATCH?.super_eSURFACE_PATCH.partialEntity else { return }
        partial._v_transition = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eINTERPOLATED_CONFIGURATION_SEGMENT`` )
    public var T_PARAMETER: tPARAMETER_VALUE?  {
      get {
        return sub_eINTERPOLATED_CONFIGURATION_SEGMENT?.partialEntity._t_parameter
      }
      set(newValue) {
        guard let partial = sub_eINTERPOLATED_CONFIGURATION_SEGMENT?.super_eINTERPOLATED_CONFIGURATION_SEGMENT
          .partialEntity else { return }
        partial._t_parameter = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eVIEW_VOLUME`` )
    public var FRONT_PLANE_CLIPPING: SDAI.BOOLEAN?  {
      get {
        return sub_eVIEW_VOLUME?.partialEntity._front_plane_clipping
      }
      set(newValue) {
        guard let partial = sub_eVIEW_VOLUME?.super_eVIEW_VOLUME.partialEntity else { return }
        partial._front_plane_clipping = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_STYLE_CONTROL_GRID`` )
    public var STYLE_OF_CONTROL_GRID: sCURVE_OR_RENDER?  {
      get {
        return sub_eSURFACE_STYLE_CONTROL_GRID?.partialEntity._style_of_control_grid
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_STYLE_CONTROL_GRID?.super_eSURFACE_STYLE_CONTROL_GRID.partialEntity
          else { return }
        partial._style_of_control_grid = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_STYLE_PARAMETER_LINE`` )
    public var DIRECTION_COUNTS: (SDAI.SET<sDIRECTION_COUNT_SELECT>/*[1:2]*/ )?  {
      get {
        return sub_eSURFACE_STYLE_PARAMETER_LINE?.partialEntity._direction_counts
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_STYLE_PARAMETER_LINE?.super_eSURFACE_STYLE_PARAMETER_LINE
          .partialEntity else { return }
        partial._direction_counts = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_STYLE_BOUNDARY`` )
    public var STYLE_OF_BOUNDARY: sCURVE_OR_RENDER?  {
      get {
        return sub_eSURFACE_STYLE_BOUNDARY?.partialEntity._style_of_boundary
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_STYLE_BOUNDARY?.super_eSURFACE_STYLE_BOUNDARY.partialEntity
          else { return }
        partial._style_of_boundary = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCOMPOSITE_CURVE_SEGMENT`` )
    public var PARENT_CURVE: eCURVE?  {
      get {
        return sub_eCOMPOSITE_CURVE_SEGMENT?.partialEntity._parent_curve
      }
      set(newValue) {
        guard let partial = sub_eCOMPOSITE_CURVE_SEGMENT?.super_eCOMPOSITE_CURVE_SEGMENT.partialEntity
          else { return }
        partial._parent_curve = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCURVE_BASED_PATH_WITH_ORIENTATION`` )
    public var ORIENTATION_CURVE: eBOUNDED_CURVE?  {
      get {
        return sub_eCURVE_BASED_PATH_WITH_ORIENTATION?.partialEntity._orientation_curve
      }
      set(newValue) {
        guard let partial = sub_eCURVE_BASED_PATH_WITH_ORIENTATION?.super_eCURVE_BASED_PATH_WITH_ORIENTATION
          .partialEntity else { return }
        partial._orientation_curve = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eVIEW_VOLUME`` )
    public var VIEW_WINDOW: ePLANAR_BOX?  {
      get {
        return sub_eVIEW_VOLUME?.partialEntity._view_window
      }
      set(newValue) {
        guard let partial = sub_eVIEW_VOLUME?.super_eVIEW_VOLUME.partialEntity else { return }
        partial._view_window = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_PATCH`` )
    public var V_SENSE: SDAI.BOOLEAN?  {
      get {
        return sub_eSURFACE_PATCH?.partialEntity._v_sense
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_PATCH?.super_eSURFACE_PATCH.partialEntity else { return }
        partial._v_sense = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION`` )
    public var REPEATING_PATTERN: SDAI.BOOLEAN?  {
      get {
        return sub_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION?.partialEntity._repeating_pattern
      }
      set(newValue) {
        guard let partial = sub_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION?.super_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION
          .partialEntity else { return }
        partial._repeating_pattern = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eINTERPOLATED_CONFIGURATION_SEGMENT`` )
    public var INTERPOLATION: nINTERPOLATION_TYPE?  {
      get {
        return sub_eINTERPOLATED_CONFIGURATION_SEGMENT?.partialEntity._interpolation
      }
      set(newValue) {
        guard let partial = sub_eINTERPOLATED_CONFIGURATION_SEGMENT?.super_eINTERPOLATED_CONFIGURATION_SEGMENT
          .partialEntity else { return }
        partial._interpolation = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCHARACTER_GLYPH_STYLE_STROKE`` )
    public var STROKE_STYLE: eCURVE_STYLE?  {
      get {
        return sub_eCHARACTER_GLYPH_STYLE_STROKE?.partialEntity._stroke_style
      }
      set(newValue) {
        guard let partial = sub_eCHARACTER_GLYPH_STYLE_STROKE?.super_eCHARACTER_GLYPH_STYLE_STROKE
          .partialEntity else { return }
        partial._stroke_style = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_STYLE_FILL_AREA`` )
    public var FILL_AREA: eFILL_AREA_STYLE?  {
      get {
        return sub_eSURFACE_STYLE_FILL_AREA?.partialEntity._fill_area
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_STYLE_FILL_AREA?.super_eSURFACE_STYLE_FILL_AREA.partialEntity
          else { return }
        partial._fill_area = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCURVE_BASED_PATH_WITH_ORIENTATION`` )
    public var POSITION_CURVE: eBOUNDED_CURVE?  {
      get {
        return sub_eCURVE_BASED_PATH_WITH_ORIENTATION?.partialEntity._position_curve
      }
      set(newValue) {
        guard let partial = sub_eCURVE_BASED_PATH_WITH_ORIENTATION?.super_eCURVE_BASED_PATH_WITH_ORIENTATION
          .partialEntity else { return }
        partial._position_curve = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eFILL_AREA_STYLE`` )
    public var FILL_STYLES: (SDAI.SET<sFILL_STYLE_SELECT>/*[1:nil]*/ )?  {
      get {
        return sub_eFILL_AREA_STYLE?.partialEntity._fill_styles
      }
      set(newValue) {
        guard let partial = sub_eFILL_AREA_STYLE?.super_eFILL_AREA_STYLE.partialEntity else { return }
        partial._fill_styles = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eRECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR`` )
    public var U_TRANSITION_INDEX: SDAI.INTEGER?  {
      get {
        return sub_eRECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR?.partialEntity._u_transition_index
      }
      set(newValue) {
        guard let partial = sub_eRECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR?.super_eRECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR
          .partialEntity else { return }
        partial._u_transition_index = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eREPARAMETRISED_COMPOSITE_CURVE_SEGMENT`` )
    public var PARAM_LENGTH: tPARAMETER_VALUE?  {
      get {
        return sub_eREPARAMETRISED_COMPOSITE_CURVE_SEGMENT?.partialEntity._param_length
      }
      set(newValue) {
        guard let partial = sub_eREPARAMETRISED_COMPOSITE_CURVE_SEGMENT?.super_eREPARAMETRISED_COMPOSITE_CURVE_SEGMENT
          .partialEntity else { return }
        partial._param_length = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_STYLE_SILHOUETTE`` )
    public var STYLE_OF_SILHOUETTE: sCURVE_OR_RENDER?  {
      get {
        return sub_eSURFACE_STYLE_SILHOUETTE?.partialEntity._style_of_silhouette
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_STYLE_SILHOUETTE?.super_eSURFACE_STYLE_SILHOUETTE.partialEntity
          else { return }
        partial._style_of_silhouette = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION`` )
    public var TEXTURE_IMAGE: tLABEL?  {
      get {
        return sub_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION?.partialEntity._texture_image
      }
      set(newValue) {
        guard let partial = sub_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION?.super_eSINGLE_TEXTURE_STYLE_TESSELLATION_SPECIFICATION
          .partialEntity else { return }
        partial._texture_image = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePLANE_ANGLE_AND_LENGTH_PAIR`` )
    public var LENGTH_VALUE: tLENGTH_MEASURE?  {
      get {
        return sub_ePLANE_ANGLE_AND_LENGTH_PAIR?.partialEntity._length_value
      }
      set(newValue) {
        guard let partial = sub_ePLANE_ANGLE_AND_LENGTH_PAIR?.super_ePLANE_ANGLE_AND_LENGTH_PAIR
          .partialEntity else { return }
        partial._length_value = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCIRCULAR_PATH`` )
    public var VIA_POINT: eCARTESIAN_POINT?  {
      get {
        return sub_eCIRCULAR_PATH?.partialEntity._via_point
      }
      set(newValue) {
        guard let partial = sub_eCIRCULAR_PATH?.super_eCIRCULAR_PATH.partialEntity else { return }
        partial._via_point = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCURVE_BASED_PATH`` )
    public var PATH_CURVE: eCURVE?  {
      get {
        return sub_eCURVE_BASED_PATH?.partialEntity._path_curve
      }
      set(newValue) {
        guard let partial = sub_eCURVE_BASED_PATH?.super_eCURVE_BASED_PATH.partialEntity else { return }
        partial._path_curve = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eINTERPOLATED_CONFIGURATION_SEGMENT`` )
    public var STATE: eMECHANISM_STATE_REPRESENTATION?  {
      get {
        return sub_eINTERPOLATED_CONFIGURATION_SEGMENT?.partialEntity._state
      }
      set(newValue) {
        guard let partial = sub_eINTERPOLATED_CONFIGURATION_SEGMENT?.super_eINTERPOLATED_CONFIGURATION_SEGMENT
          .partialEntity else { return }
        partial._state = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCOMPOSITE_CURVE_SEGMENT`` )
    public var SAME_SENSE: SDAI.BOOLEAN?  {
      get {
        return sub_eCOMPOSITE_CURVE_SEGMENT?.partialEntity._same_sense
      }
      set(newValue) {
        guard let partial = sub_eCOMPOSITE_CURVE_SEGMENT?.super_eCOMPOSITE_CURVE_SEGMENT.partialEntity
          else { return }
        partial._same_sense = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eRECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR`` )
    public var V_TRANSITION_INDEX: SDAI.INTEGER?  {
      get {
        return sub_eRECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR?.partialEntity._v_transition_index
      }
      set(newValue) {
        guard let partial = sub_eRECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR?.super_eRECTANGULAR_COMPOSITE_SURFACE_TRANSITION_LOCATOR
          .partialEntity else { return }
        partial._v_transition_index = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCURVE_STYLE_FONT_PATTERN`` )
    public var VISIBLE_SEGMENT_LENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      get {
        return sub_eCURVE_STYLE_FONT_PATTERN?.partialEntity._visible_segment_length
      }
      set(newValue) {
        guard let partial = sub_eCURVE_STYLE_FONT_PATTERN?.super_eCURVE_STYLE_FONT_PATTERN.partialEntity
          else { return }
        partial._visible_segment_length = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePATH_NODE`` )
    public var PLACEMENT_END: ePLACEMENT?  {
      get {
        return sub_ePATH_NODE?.partialEntity._placement_end
      }
      set(newValue) {
        guard let partial = sub_ePATH_NODE?.super_ePATH_NODE.partialEntity else { return }
        partial._placement_end = SDAI.UNWRAP(newValue)
      }
    }

    /// __INVERSE__ attribute
    /// observing eCAMERA_MODEL_D3 .PERSPECTIVE_OF_VOLUME
    /// - origin: SUB( ``eVIEW_VOLUME`` )
    public var CAMERA_USAGES: (SDAI.SET<eCAMERA_MODEL_D3>/*[1:nil]*/ )?  {
      get {
        return sub_eVIEW_VOLUME?.partialEntity._camera_usages
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eTEXT_STYLE_WITH_BOX_CHARACTERISTICS`` )
    public var CHARACTERISTICS: (SDAI.SET<sBOX_CHARACTERISTIC_SELECT>/*[1:4]*/ )?  {
      get {
        return sub_eTEXT_STYLE_WITH_BOX_CHARACTERISTICS?.partialEntity._characteristics
      }
      set(newValue) {
        guard let partial = sub_eTEXT_STYLE_WITH_BOX_CHARACTERISTICS?.super_eTEXT_STYLE_WITH_BOX_CHARACTERISTICS
          .partialEntity else { return }
        partial._characteristics = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eBOX_DOMAIN`` )
    public var YLENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      get {
        return sub_eBOX_DOMAIN?.partialEntity._ylength
      }
      set(newValue) {
        guard let partial = sub_eBOX_DOMAIN?.super_eBOX_DOMAIN.partialEntity else { return }
        partial._ylength = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eBOX_DOMAIN`` )
    public var XLENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      get {
        return sub_eBOX_DOMAIN?.partialEntity._xlength
      }
      set(newValue) {
        guard let partial = sub_eBOX_DOMAIN?.super_eBOX_DOMAIN.partialEntity else { return }
        partial._xlength = SDAI.UNWRAP(newValue)
      }
    }

    /// __INVERSE__ attribute
    /// observing eRECTANGULAR_COMPOSITE_SURFACE .SEGMENTS
    /// - origin: SUB( ``eSURFACE_PATCH`` )
    public var USING_SURFACES: (SDAI.BAG<eRECTANGULAR_COMPOSITE_SURFACE>/*[1:nil]*/ )?  {
      get {
        return sub_eSURFACE_PATCH?.partialEntity._using_surfaces
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePLANE_ANGLE_AND_RATIO_PAIR`` )
    public var RATIO_VALUE: tRATIO_MEASURE?  {
      get {
        return sub_ePLANE_ANGLE_AND_RATIO_PAIR?.partialEntity._ratio_value
      }
      set(newValue) {
        guard let partial = sub_ePLANE_ANGLE_AND_RATIO_PAIR?.super_ePLANE_ANGLE_AND_RATIO_PAIR.partialEntity
          else { return }
        partial._ratio_value = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSURFACE_PATCH`` )
    public var U_TRANSITION: nTRANSITION_CODE?  {
      get {
        return sub_eSURFACE_PATCH?.partialEntity._u_transition
      }
      set(newValue) {
        guard let partial = sub_eSURFACE_PATCH?.super_eSURFACE_PATCH.partialEntity else { return }
        partial._u_transition = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eB_SPLINE_SURFACE_PATCH`` )
    public var U_START_KNOT_INDEX: SDAI.INTEGER?  {
      get {
        return sub_eB_SPLINE_SURFACE_PATCH?.partialEntity._u_start_knot_index
      }
      set(newValue) {
        guard let partial = sub_eB_SPLINE_SURFACE_PATCH?.super_eB_SPLINE_SURFACE_PATCH.partialEntity
          else { return }
        partial._u_start_knot_index = SDAI.UNWRAP(newValue)
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_founded_item.self) else { return nil }
      self.partialEntity = partial

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }

    //SIMPLE ENTITY REFERENCE
    public convenience init?(_ partial:_founded_item) {
      let complex = SDAI.ComplexEntity(entities:[partial])
      self.init(complex: complex)
    }


    //MARK: WHERE RULE VALIDATION (ENTITY)
    public override class func validateWhereRules(instance:SDAI.EntityReference?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      guard let instance = instance as? Self else { return [:] }

      let prefix2 = prefix + " \(instance)"

      var result = super.validateWhereRules(instance:instance, prefix:prefix2)
      result[prefix2 + " .WHERE_wr1"] = _founded_item.WHERE_wr1(SELF: instance)
      result[prefix2 + " .WHERE_wr2"] = _founded_item.WHERE_wr2(SELF: instance)
      return result
    }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "FOUNDED_ITEM", type: self, explicitAttributeCount: 0)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: eFOUNDED_ITEM.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "INVISIBLE_SEGMENT_LENGTH", keyPath: \eFOUNDED_ITEM.INVISIBLE_SEGMENT_LENGTH, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "STYLE_CONTEXT", keyPath: \eFOUNDED_ITEM.STYLE_CONTEXT, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "TEXTURE_COORDINATES", keyPath: \eFOUNDED_ITEM.TEXTURE_COORDINATES, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "CURVE_FONT_SCALING", keyPath: \eFOUNDED_ITEM.CURVE_FONT_SCALING, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ZLENGTH", keyPath: \eFOUNDED_ITEM.ZLENGTH, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "MARKER_COLOUR", keyPath: \eFOUNDED_ITEM.MARKER_COLOUR, 
        kind: .explicitOptional, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "STYLE_OF_SYMBOL", keyPath: \eFOUNDED_ITEM.STYLE_OF_SYMBOL, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "U_SENSE", keyPath: \eFOUNDED_ITEM.U_SENSE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "VIEW_PLANE_DISTANCE", keyPath: \eFOUNDED_ITEM.VIEW_PLANE_DISTANCE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "VIEW_VOLUME_SIDES_CLIPPING", keyPath: \eFOUNDED_ITEM.VIEW_VOLUME_SIDES_CLIPPING, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "SIDE", keyPath: \eFOUNDED_ITEM.SIDE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "CURVE_WIDTH", keyPath: \eFOUNDED_ITEM.CURVE_WIDTH, 
        kind: .explicitOptional, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "CHARACTER_APPEARANCE", keyPath: \eFOUNDED_ITEM.CHARACTER_APPEARANCE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "PROJECTION_POINT", keyPath: \eFOUNDED_ITEM.PROJECTION_POINT, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "PATTERN_LIST", keyPath: \eFOUNDED_ITEM.PATTERN_LIST, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "MARKER_SIZE", keyPath: \eFOUNDED_ITEM.MARKER_SIZE, 
        kind: .explicitOptional, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "OUTLINE_STYLE", keyPath: \eFOUNDED_ITEM.OUTLINE_STYLE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "MARKER", keyPath: \eFOUNDED_ITEM.MARKER, 
        kind: .explicitOptional, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "CHARACTER_SPACING", keyPath: \eFOUNDED_ITEM.CHARACTER_SPACING, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "USERS", keyPath: \eFOUNDED_ITEM.USERS, 
        kind: .derived, source: .thisEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "BACK_PLANE_DISTANCE", keyPath: \eFOUNDED_ITEM.BACK_PLANE_DISTANCE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "PARAMETERS", keyPath: \eFOUNDED_ITEM.PARAMETERS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "PROJECTION_TYPE", keyPath: \eFOUNDED_ITEM.PROJECTION_TYPE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "STYLE_OF_SEGMENTATION_CURVE", keyPath: \eFOUNDED_ITEM.STYLE_OF_SEGMENTATION_CURVE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "TEXTURE_FORMAT", keyPath: \eFOUNDED_ITEM.TEXTURE_FORMAT, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "T_END", keyPath: \eFOUNDED_ITEM.T_END, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "BOUNDARY_TYPE", keyPath: \eFOUNDED_ITEM.BOUNDARY_TYPE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "STYLE", keyPath: \eFOUNDED_ITEM.STYLE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "FRONT_PLANE_DISTANCE", keyPath: \eFOUNDED_ITEM.FRONT_PLANE_DISTANCE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "CURVE_COLOUR", keyPath: \eFOUNDED_ITEM.CURVE_COLOUR, 
        kind: .explicitOptional, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "PARENT_SURFACE", keyPath: \eFOUNDED_ITEM.PARENT_SURFACE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "STYLE_OF_PARAMETER_LINES", keyPath: \eFOUNDED_ITEM.STYLE_OF_PARAMETER_LINES, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "V_START_KNOT_INDEX", keyPath: \eFOUNDED_ITEM.V_START_KNOT_INDEX, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "TRANSITION_INDEX", keyPath: \eFOUNDED_ITEM.TRANSITION_INDEX, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "BACK_PLANE_CLIPPING", keyPath: \eFOUNDED_ITEM.BACK_PLANE_CLIPPING, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "CORNER", keyPath: \eFOUNDED_ITEM.CORNER, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "USING_CURVES", keyPath: \eFOUNDED_ITEM.USING_CURVES, 
        kind: .inverse, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "MIRROR_PLACEMENT", keyPath: \eFOUNDED_ITEM.MIRROR_PLACEMENT, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "V_TRANSITION", keyPath: \eFOUNDED_ITEM.V_TRANSITION, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "T_PARAMETER", keyPath: \eFOUNDED_ITEM.T_PARAMETER, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "FRONT_PLANE_CLIPPING", keyPath: \eFOUNDED_ITEM.FRONT_PLANE_CLIPPING, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "STYLE_OF_CONTROL_GRID", keyPath: \eFOUNDED_ITEM.STYLE_OF_CONTROL_GRID, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "DIRECTION_COUNTS", keyPath: \eFOUNDED_ITEM.DIRECTION_COUNTS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "STYLE_OF_BOUNDARY", keyPath: \eFOUNDED_ITEM.STYLE_OF_BOUNDARY, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "PARENT_CURVE", keyPath: \eFOUNDED_ITEM.PARENT_CURVE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ORIENTATION_CURVE", keyPath: \eFOUNDED_ITEM.ORIENTATION_CURVE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "VIEW_WINDOW", keyPath: \eFOUNDED_ITEM.VIEW_WINDOW, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "V_SENSE", keyPath: \eFOUNDED_ITEM.V_SENSE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "REPEATING_PATTERN", keyPath: \eFOUNDED_ITEM.REPEATING_PATTERN, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "INTERPOLATION", keyPath: \eFOUNDED_ITEM.INTERPOLATION, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "STROKE_STYLE", keyPath: \eFOUNDED_ITEM.STROKE_STYLE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "FILL_AREA", keyPath: \eFOUNDED_ITEM.FILL_AREA, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "POSITION_CURVE", keyPath: \eFOUNDED_ITEM.POSITION_CURVE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "FILL_STYLES", keyPath: \eFOUNDED_ITEM.FILL_STYLES, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "U_TRANSITION_INDEX", keyPath: \eFOUNDED_ITEM.U_TRANSITION_INDEX, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "PARAM_LENGTH", keyPath: \eFOUNDED_ITEM.PARAM_LENGTH, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "STYLE_OF_SILHOUETTE", keyPath: \eFOUNDED_ITEM.STYLE_OF_SILHOUETTE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "TEXTURE_IMAGE", keyPath: \eFOUNDED_ITEM.TEXTURE_IMAGE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "LENGTH_VALUE", keyPath: \eFOUNDED_ITEM.LENGTH_VALUE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "VIA_POINT", keyPath: \eFOUNDED_ITEM.VIA_POINT, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "PATH_CURVE", keyPath: \eFOUNDED_ITEM.PATH_CURVE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "STATE", keyPath: \eFOUNDED_ITEM.STATE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "SAME_SENSE", keyPath: \eFOUNDED_ITEM.SAME_SENSE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "V_TRANSITION_INDEX", keyPath: \eFOUNDED_ITEM.V_TRANSITION_INDEX, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "VISIBLE_SEGMENT_LENGTH", keyPath: \eFOUNDED_ITEM.VISIBLE_SEGMENT_LENGTH, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "PLACEMENT_END", keyPath: \eFOUNDED_ITEM.PLACEMENT_END, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "CAMERA_USAGES", keyPath: \eFOUNDED_ITEM.CAMERA_USAGES, 
        kind: .inverse, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "CHARACTERISTICS", keyPath: \eFOUNDED_ITEM.CHARACTERISTICS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "YLENGTH", keyPath: \eFOUNDED_ITEM.YLENGTH, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "XLENGTH", keyPath: \eFOUNDED_ITEM.XLENGTH, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "USING_SURFACES", keyPath: \eFOUNDED_ITEM.USING_SURFACES, 
        kind: .inverse, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RATIO_VALUE", keyPath: \eFOUNDED_ITEM.RATIO_VALUE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "U_TRANSITION", keyPath: \eFOUNDED_ITEM.U_TRANSITION, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "U_START_KNOT_INDEX", keyPath: \eFOUNDED_ITEM.U_START_KNOT_INDEX, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)

      return entityDef
    }

  }
}
