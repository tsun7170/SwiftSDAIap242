/* file: characterized_object.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY characterized_object;
      name         : label;
      description  : OPTIONAL text;
  END_ENTITY; -- characterized_object (line:9250 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  ENTITY(SELF)	characterized_object
    ATTR:  name,	TYPE: label -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: shape_feature_definition_element_relationship,	TYPE: label	(as DERIVED)
          ENTITY: shape_feature_fit_relationship,	TYPE: label	(as DERIVED)
          ENTITY: characterized_representation,	TYPE: label	(as DERIVED)
          ENTITY: shape_feature_definition_relationship,	TYPE: label	(as DERIVED)

    ATTR:  description,	TYPE: OPTIONAL text -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: shape_feature_definition_element_relationship,	TYPE: text	(as DERIVED)
          ENTITY: shape_feature_fit_relationship,	TYPE: text	(as DERIVED)
          ENTITY: characterized_representation,	TYPE: text	(as DERIVED)
          ENTITY: shape_feature_definition_relationship,	TYPE: text	(as DERIVED)


  SUB- ENTITY(2)	product_specification
    (no local attributes)

  SUB- ENTITY(3)	product_identification
    REDCR: item_concept,	TYPE: product_class -- EXPLICIT
      -- OVERRIDING ENTITY: configuration_item


  SUB- ENTITY(4)	envelope
    (no local attributes)

  SUB- ENTITY(5)	statechar_relationship_object
    (no local attributes)

  SUB- ENTITY(6)	characterized_product_concept_feature
    (no local attributes)

  SUB- ENTITY(7)	statechar_type_applied_object
    (no local attributes)

  SUB- ENTITY(8)	characterized_location_object
    (no local attributes)

  SUB- ENTITY(9)	statechar_object
    (no local attributes)

  SUB- ENTITY(10)	characterized_class
    (no local attributes)

  SUB- ENTITY(11)	characterized_chain_based_item_within_representation
    ATTR:  nodes,	TYPE: LIST [2 : ?] OF UNIQUE representation -- EXPLICIT

    ATTR:  undirected_link,	TYPE: LIST [1 : ?] OF chained_representation_link -- EXPLICIT

    ATTR:  root,	TYPE: representation -- DERIVED
      := nodes[1]

    ATTR:  directed_link,	TYPE: LIST [1 : ?] OF representation_relationship -- DERIVED
      := get_directed_link( nodes, undirected_link )

    ATTR:  leaf,	TYPE: representation -- DERIVED
      := SELF\characterized_item_within_representation.rep


  SUB- ENTITY(12)	default_model_geometric_view
    REDCR: product_definitional,	TYPE: LOGICAL -- DERIVED (DYNAMIC)
      := FALSE
      -- OVERRIDING ENTITY: shape_aspect


  SUB- ENTITY(13)	model_geometric_view
    REDCR: rep,	TYPE: draughting_model -- EXPLICIT
      -- OVERRIDING ENTITY: characterized_item_within_representation

    REDCR: item,	TYPE: camera_model -- EXPLICIT
      -- OVERRIDING ENTITY: characterized_item_within_representation


  SUB- ENTITY(14)	characterized_item_within_representation
    ATTR:  item,	TYPE: representation_item -- EXPLICIT
      -- possibly overriden by
          ENTITY: model_geometric_view,	TYPE: camera_model

    ATTR:  rep,	TYPE: representation -- EXPLICIT
      -- possibly overriden by
          ENTITY: model_geometric_view,	TYPE: draughting_model


  SUB- ENTITY(15)	shape_feature_definition_element_relationship
    REDCR: name,	TYPE: label -- DERIVED (DYNAMIC)
      := SELF\shape_aspect_relationship.name
      -- OVERRIDING ENTITY: characterized_object

    REDCR: description,	TYPE: text -- DERIVED (DYNAMIC)
      := SELF\shape_aspect_relationship.description
      -- OVERRIDING ENTITY: characterized_object


  SUB- ENTITY(16)	partial_document_with_structured_text_representation_assignment
    (no local attributes)

  SUB- ENTITY(17)	delete_element
    (no local attributes)

  SUB- ENTITY(18)	add_element
    (no local attributes)

  SUB- ENTITY(19)	modify_element
    (no local attributes)

  SUB- ENTITY(20)	change_element
    (no local attributes)

  SUB- ENTITY(21)	circular_pattern
    (no local attributes)

  SUB- ENTITY(22)	rectangular_pattern
    (no local attributes)

  SUB- ENTITY(23)	feature_pattern
    (no local attributes)

  SUB- ENTITY(24)	replicate_feature
    (no local attributes)

  SUB- ENTITY(25)	outer_round
    (no local attributes)

  SUB- ENTITY(26)	boss
    (no local attributes)

  SUB- ENTITY(27)	instanced_feature
    (no local attributes)

  SUB- ENTITY(28)	spherical_cap
    (no local attributes)

  SUB- ENTITY(29)	simplified_counterdrill_hole_definition
    (no local attributes)

  SUB- ENTITY(30)	counterdrill_hole_definition
    ATTR:  counterbore,	TYPE: explicit_round_hole -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  counterdrill_angle,	TYPE: positive_plane_angle_measure_with_unit -- EXPLICIT

    ATTR:  counterdrill_angle_tolerance,	TYPE: tolerance_value -- EXPLICIT

    ATTR:  drilled_hole_depth,	TYPE: OPTIONAL positive_length_measure_with_unit -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  drilled_hole_depth_tolerance,	TYPE: OPTIONAL tolerance_value -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  drilled_hole_diameter,	TYPE: positive_length_measure_with_unit -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  drilled_hole_diameter_tolerance,	TYPE: OPTIONAL tolerance_value_or_limits_and_fits -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  through_hole,	TYPE: BOOLEAN -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(31)	simplified_countersink_hole_definition
    (no local attributes)

  SUB- ENTITY(32)	countersink_hole_definition
    ATTR:  countersink_angle,	TYPE: positive_plane_angle_measure_with_unit -- EXPLICIT

    ATTR:  countersink_angle_tolerance,	TYPE: tolerance_value -- EXPLICIT

    ATTR:  countersink_diameter,	TYPE: positive_length_measure_with_unit -- EXPLICIT

    ATTR:  countersink_diameter_tolerance,	TYPE: OPTIONAL tolerance_value_or_limits_and_fits -- EXPLICIT

    ATTR:  drilled_hole_depth,	TYPE: OPTIONAL positive_length_measure_with_unit -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  drilled_hole_depth_tolerance,	TYPE: OPTIONAL tolerance_value -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  drilled_hole_diameter,	TYPE: positive_length_measure_with_unit -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  drilled_hole_diameter_tolerance,	TYPE: OPTIONAL tolerance_value_or_limits_and_fits -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  through_hole,	TYPE: BOOLEAN -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(33)	simplified_spotface_hole_definition
    (no local attributes)

  SUB- ENTITY(34)	spotface_hole_definition
    REDCR: counterbore,	TYPE: LIST [1 : ?] OF UNIQUE spotface_definition -- EXPLICIT	(AMBIGUOUS/MASKED)
      -- OVERRIDING ENTITY: counterbore_hole_definition

    ATTR:  spotface,	TYPE: LIST [1 : ?] OF UNIQUE spotface_definition -- DERIVED
      := SELF\counterbore_hole_definition.counterbore


  SUB- ENTITY(35)	simplified_counterbore_hole_definition
    (no local attributes)

  SUB- ENTITY(36)	counterbore_hole_definition
    ATTR:  counterbore,	TYPE: LIST [1 : ?] OF UNIQUE explicit_round_hole -- EXPLICIT	(AMBIGUOUS/MASKED)
      -- possibly overriden by
          ENTITY: spotface_hole_definition,	TYPE: LIST [1 : ?] OF UNIQUE spotface_definition

    ATTR:  drilled_hole_depth,	TYPE: OPTIONAL positive_length_measure_with_unit -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  drilled_hole_depth_tolerance,	TYPE: OPTIONAL tolerance_value -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  drilled_hole_diameter,	TYPE: positive_length_measure_with_unit -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  drilled_hole_diameter_tolerance,	TYPE: OPTIONAL tolerance_value_or_limits_and_fits -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  through_hole,	TYPE: BOOLEAN -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(37)	explicit_composite_hole
    ATTR:  placement,	TYPE: shape_representation -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  explicit_shape,	TYPE: SET [0 : ?] OF item_identified_representation_usage -- INVERSE
      FOR definition;


  SUB- ENTITY(38)	composite_hole
    (no local attributes)

  SUB- ENTITY(39)	compound_feature
    (no local attributes)

  SUB- ENTITY(40)	rounded_end
    (no local attributes)

  SUB- ENTITY(41)	outside_profile
    (no local attributes)

  SUB- ENTITY(42)	flat_face
    (no local attributes)

  SUB- ENTITY(43)	general_feature
    (no local attributes)

  SUB- ENTITY(44)	feature_definition_with_connection_area
    (no local attributes)

  SUB- ENTITY(45)	contact_feature_definition
    (no local attributes)

  SUB- ENTITY(46)	shape_feature_definition
    (no local attributes)

  SUB- ENTITY(47)	slot
    (no local attributes)

  SUB- ENTITY(48)	externally_defined_feature_definition
    (no local attributes)

  SUB- ENTITY(49)	gear
    (no local attributes)

  SUB- ENTITY(50)	marking
    (no local attributes)

  SUB- ENTITY(51)	pocket
    (no local attributes)

  SUB- ENTITY(52)	protrusion
    (no local attributes)

  SUB- ENTITY(53)	removal_volume
    (no local attributes)

  SUB- ENTITY(54)	revolved_profile
    (no local attributes)

  SUB- ENTITY(55)	rib_top
    (no local attributes)

  SUB- ENTITY(56)	spotface_definition
    ATTR:  spotface_radius,	TYPE: positive_length_measure_with_unit -- EXPLICIT

    ATTR:  spotface_radius_tolerance,	TYPE: OPTIONAL tolerance_value -- EXPLICIT


  SUB- ENTITY(57)	explicit_round_hole
    ATTR:  depth,	TYPE: positive_length_measure_with_unit -- EXPLICIT

    ATTR:  depth_tolerance,	TYPE: OPTIONAL tolerance_value -- EXPLICIT

    ATTR:  diameter,	TYPE: positive_length_measure_with_unit -- EXPLICIT

    ATTR:  diameter_tolerance,	TYPE: OPTIONAL tolerance_value_or_limits_and_fits -- EXPLICIT

    ATTR:  placement,	TYPE: shape_representation -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(58)	round_hole
    (no local attributes)

  SUB- ENTITY(59)	step
    (no local attributes)

  SUB- ENTITY(60)	thread
    (no local attributes)

  SUB- ENTITY(61)	turned_knurl
    (no local attributes)

  SUB- ENTITY(62)	locator
    (no local attributes)

  SUB- ENTITY(63)	barring_hole
    (no local attributes)

  SUB- ENTITY(64)	bead
    (no local attributes)

  SUB- ENTITY(65)	hole_in_panel
    (no local attributes)

  SUB- ENTITY(66)	feature_in_panel
    (no local attributes)

  SUB- ENTITY(67)	joggle
    (no local attributes)

  SUB- ENTITY(68)	feature_definition
    (no local attributes)

  SUB- ENTITY(69)	product_group_membership
    ATTR:  member,	TYPE: product_select -- EXPLICIT


  SUB- ENTITY(70)	feature_component_definition
    (no local attributes)

  SUB- ENTITY(71)	breakdown_element_realization
    (no local attributes)

  SUB- ENTITY(72)	characterized_product_concept_feature_category
    (no local attributes)

  SUB- ENTITY(73)	statechar_type_relationship_object
    (no local attributes)

  SUB- ENTITY(74)	product_class
    (no local attributes)

  SUB- ENTITY(75)	extent
    (no local attributes)

  SUB- ENTITY(76)	contact_feature_fit_relationship
    REDCR: relating_shape_aspect,	TYPE: contact_feature -- EXPLICIT
      -- OVERRIDING ENTITY: shape_aspect_relationship

    REDCR: related_shape_aspect,	TYPE: contact_feature -- EXPLICIT
      -- OVERRIDING ENTITY: shape_aspect_relationship


  SUB- ENTITY(77)	shape_feature_fit_relationship
    REDCR: name,	TYPE: label -- DERIVED (DYNAMIC)
      := SELF\shape_aspect_relationship.name
      -- OVERRIDING ENTITY: characterized_object

    REDCR: description,	TYPE: text -- DERIVED (DYNAMIC)
      := SELF\shape_aspect_relationship.description
      -- OVERRIDING ENTITY: characterized_object


  SUB- ENTITY(78)	characterized_representation
    REDCR: name,	TYPE: label -- DERIVED (DYNAMIC)
      := SELF\representation.name
      -- OVERRIDING ENTITY: characterized_object

    REDCR: description,	TYPE: text -- DERIVED (DYNAMIC)
      := SELF\representation.description
      -- OVERRIDING ENTITY: characterized_object


  SUB- ENTITY(79)	contact_feature_definition_fit_relationship
    REDCR: relating_object,	TYPE: contact_feature_definition -- EXPLICIT
      -- OVERRIDING ENTITY: characterized_object_relationship

    REDCR: related_object,	TYPE: contact_feature_definition -- EXPLICIT
      -- OVERRIDING ENTITY: characterized_object_relationship


  SUB- ENTITY(80)	shape_feature_definition_fit_relationship
    (no local attributes)

  SUB- ENTITY(81)	shape_feature_definition_relationship
    REDCR: relating_object,	TYPE: shape_feature_definition -- EXPLICIT
      -- OVERRIDING ENTITY: characterized_object_relationship

    REDCR: related_object,	TYPE: shape_feature_definition -- EXPLICIT
      -- OVERRIDING ENTITY: characterized_object_relationship

    REDCR: name,	TYPE: label -- DERIVED (DYNAMIC)
      := SELF\characterized_object_relationship.name
      -- OVERRIDING ENTITY: characterized_object

    REDCR: description,	TYPE: text -- DERIVED (DYNAMIC)
      := SELF\characterized_object_relationship.description
      -- OVERRIDING ENTITY: characterized_object


  SUB- ENTITY(82)	document_file
    (no local attributes)

  SUB- ENTITY(83)	statechar_type_object
    (no local attributes)

  SUB- ENTITY(84)	statechar_applied_object
    (no local attributes)

  SUB- ENTITY(85)	requirement_assignment
    (no local attributes)

*/


//MARK: - Partial Entity
  public final class _characterized_object : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      eCHARACTERIZED_OBJECT.self
    }

    //ATTRIBUTES
    /// EXPLICIT ATTRIBUTE 
    /// - see the corresponding attribute accesser in the entity reference definition for the attribute value dynamic lookup logic
    public internal(set) var _name: tLABEL?  // PLAIN EXPLICIT ATTRIBUTE

    internal static func _name__provider(complex: SDAI.ComplexEntity) -> eCHARACTERIZED_OBJECT__NAME__provider? {
      let resolved = complex.resolvePartialEntityInstance(from: [
        _shape_feature_definition_element_relationship.typeIdentity, 
        _shape_feature_fit_relationship.typeIdentity, _characterized_representation.typeIdentity, 
        _shape_feature_definition_relationship.typeIdentity])
      return resolved as? eCHARACTERIZED_OBJECT__NAME__provider
    }

    /// EXPLICIT ATTRIBUTE 
    /// - see the corresponding attribute accesser in the entity reference definition for the attribute value dynamic lookup logic
    public internal(set) var _description: tTEXT?  // PLAIN EXPLICIT ATTRIBUTE

    internal static func _description__provider(complex: SDAI.ComplexEntity) -> eCHARACTERIZED_OBJECT__DESCRIPTION__provider? {
      let resolved = complex.resolvePartialEntityInstance(from: [
        _shape_feature_definition_element_relationship.typeIdentity, 
        _shape_feature_fit_relationship.typeIdentity, _characterized_representation.typeIdentity, 
        _shape_feature_definition_relationship.typeIdentity])
      return resolved as? eCHARACTERIZED_OBJECT__DESCRIPTION__provider
    }

    //PARTIAL COMPLEX ENTITY SUPPORT
    final public override class func fixupPartialComplexEntityAttributes(partialComplex: SDAI.ComplexEntity, baseComplex: SDAI.ComplexEntity) {
      guard let pe = partialComplex.partialEntityInstance(_characterized_object.self) else { return }

      if pe._name == nil, self._name__provider(complex: partialComplex) == nil, 
        let base__name__provider = self._name__provider(complex: baseComplex) {
        pe._name = base__name__provider._name__getter(complex: baseComplex)
      }
    }
    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      //SELECT data types (indirectly) referencing the current type as a member of the select list
      members.insert(SDAI.STRING(sCLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_ITEMS.typeName)) // -> sCLASSIFICATION_ITEM
      members.insert(SDAI.STRING(sCHANGE_MANAGEMENT_OBJECT.typeName)) // -> sACTION_ITEMS
      members.insert(SDAI.STRING(sIR_USAGE_ITEM.typeName)) // -> sCLASSIFICATION_ITEM
      members.insert(SDAI.STRING(sITEM_IDENTIFIED_REPRESENTATION_USAGE_DEFINITION.typeName)) // -> Self
      members.insert(SDAI.STRING(sREQUIREMENT_SOURCE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sREQUIREMENT_ASSIGNED_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sREQUIREMENT_SATISFACTION_ITEM.typeName)) // -> sREQUIREMENT_ASSIGNED_ITEM
      members.insert(SDAI.STRING(sSHAPE_ASPECT_OR_CHARACTERIZED_OBJECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sCHARACTERIZED_DEFINITION.typeName)) // -> Self
      members.insert(SDAI.STRING(sDOCUMENT_REFERENCE_ITEM.typeName)) // -> Self
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
      self._name?.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._description?.value.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      if let comp = self._name?.value.isValueEqualOptionally(to: rhs._name?.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._description?.value.isValueEqualOptionally(to: rhs._description?.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._name?.value.isValueEqualOptionally(to: rhs._name?.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._description?.value.isValueEqualOptionally(to: rhs._description?.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init(NAME: tLABEL? , DESCRIPTION: tTEXT? ) {
      self._name = NAME
      self._description = DESCRIPTION
      super.init(asAbstructSuperclass:())

    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 2
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      guard case .success(let p0) = exchangeStructure.recoverOmittableParameter(as: tLABEL.self, from: parameters[0])
      else { exchangeStructure.add(errorContext: "while recovering parameter #0 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p1) = exchangeStructure.recoverOmittableOptionalParameter(as: tTEXT.self, from: parameters[1])
      else { exchangeStructure.add(errorContext: "while recovering parameter #1 for entity(\(Self.entityName)) constructor"); return nil }

      self.init( NAME: p0, DESCRIPTION: p1 )
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY characterized_object;
      name         : label;
      description  : OPTIONAL text;
  END_ENTITY; -- characterized_object (line:9250 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class eCHARACTERIZED_OBJECT : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _characterized_object.self
    }
    public let partialEntity: _characterized_object

    //MARK: SUPERTYPES
    public var super_eCHARACTERIZED_OBJECT: eCHARACTERIZED_OBJECT { return self } 	// [1]

    //MARK: SUBTYPES
    public var sub_ePRODUCT_SPECIFICATION: ePRODUCT_SPECIFICATION? {	// [2]
      return self.complexEntity.entityReference(ePRODUCT_SPECIFICATION.self)
    }

    public var sub_ePRODUCT_IDENTIFICATION: ePRODUCT_IDENTIFICATION? {	// [3]
      return self.complexEntity.entityReference(ePRODUCT_IDENTIFICATION.self)
    }

    public var sub_eENVELOPE: eENVELOPE? {	// [4]
      return self.complexEntity.entityReference(eENVELOPE.self)
    }

    public var sub_eSTATECHAR_RELATIONSHIP_OBJECT: eSTATECHAR_RELATIONSHIP_OBJECT? {	// [5]
      return self.complexEntity.entityReference(eSTATECHAR_RELATIONSHIP_OBJECT.self)
    }

    public var sub_eCHARACTERIZED_PRODUCT_CONCEPT_FEATURE: eCHARACTERIZED_PRODUCT_CONCEPT_FEATURE? {	// [6]
      return self.complexEntity.entityReference(eCHARACTERIZED_PRODUCT_CONCEPT_FEATURE.self)
    }

    public var sub_eSTATECHAR_TYPE_APPLIED_OBJECT: eSTATECHAR_TYPE_APPLIED_OBJECT? {	// [7]
      return self.complexEntity.entityReference(eSTATECHAR_TYPE_APPLIED_OBJECT.self)
    }

    public var sub_eCHARACTERIZED_LOCATION_OBJECT: eCHARACTERIZED_LOCATION_OBJECT? {	// [8]
      return self.complexEntity.entityReference(eCHARACTERIZED_LOCATION_OBJECT.self)
    }

    public var sub_eSTATECHAR_OBJECT: eSTATECHAR_OBJECT? {	// [9]
      return self.complexEntity.entityReference(eSTATECHAR_OBJECT.self)
    }

    public var sub_eCHARACTERIZED_CLASS: eCHARACTERIZED_CLASS? {	// [10]
      return self.complexEntity.entityReference(eCHARACTERIZED_CLASS.self)
    }

    public var sub_eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION: eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION? {	// [11]
      return self.complexEntity.entityReference(eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION.self)
    }

    public var sub_eDEFAULT_MODEL_GEOMETRIC_VIEW: eDEFAULT_MODEL_GEOMETRIC_VIEW? {	// [12]
      return self.complexEntity.entityReference(eDEFAULT_MODEL_GEOMETRIC_VIEW.self)
    }

    public var sub_eMODEL_GEOMETRIC_VIEW: eMODEL_GEOMETRIC_VIEW? {	// [13]
      return self.complexEntity.entityReference(eMODEL_GEOMETRIC_VIEW.self)
    }

    public var sub_eCHARACTERIZED_ITEM_WITHIN_REPRESENTATION: eCHARACTERIZED_ITEM_WITHIN_REPRESENTATION? {	// [14]
      return self.complexEntity.entityReference(eCHARACTERIZED_ITEM_WITHIN_REPRESENTATION.self)
    }

    public var sub_eSHAPE_FEATURE_DEFINITION_ELEMENT_RELATIONSHIP: eSHAPE_FEATURE_DEFINITION_ELEMENT_RELATIONSHIP? {	// [15]
      return self.complexEntity.entityReference(eSHAPE_FEATURE_DEFINITION_ELEMENT_RELATIONSHIP.self)
    }

    public var sub_ePARTIAL_DOCUMENT_WITH_STRUCTURED_TEXT_REPRESENTATION_ASSIGNMENT: ePARTIAL_DOCUMENT_WITH_STRUCTURED_TEXT_REPRESENTATION_ASSIGNMENT? {	// [16]
      return self.complexEntity.entityReference(ePARTIAL_DOCUMENT_WITH_STRUCTURED_TEXT_REPRESENTATION_ASSIGNMENT.self)
    }

    public var sub_eDELETE_ELEMENT: eDELETE_ELEMENT? {	// [17]
      return self.complexEntity.entityReference(eDELETE_ELEMENT.self)
    }

    public var sub_eADD_ELEMENT: eADD_ELEMENT? {	// [18]
      return self.complexEntity.entityReference(eADD_ELEMENT.self)
    }

    public var sub_eMODIFY_ELEMENT: eMODIFY_ELEMENT? {	// [19]
      return self.complexEntity.entityReference(eMODIFY_ELEMENT.self)
    }

    public var sub_eCHANGE_ELEMENT: eCHANGE_ELEMENT? {	// [20]
      return self.complexEntity.entityReference(eCHANGE_ELEMENT.self)
    }

    public var sub_eCIRCULAR_PATTERN: eCIRCULAR_PATTERN? {	// [21]
      return self.complexEntity.entityReference(eCIRCULAR_PATTERN.self)
    }

    public var sub_eRECTANGULAR_PATTERN: eRECTANGULAR_PATTERN? {	// [22]
      return self.complexEntity.entityReference(eRECTANGULAR_PATTERN.self)
    }

    public var sub_eFEATURE_PATTERN: eFEATURE_PATTERN? {	// [23]
      return self.complexEntity.entityReference(eFEATURE_PATTERN.self)
    }

    public var sub_eREPLICATE_FEATURE: eREPLICATE_FEATURE? {	// [24]
      return self.complexEntity.entityReference(eREPLICATE_FEATURE.self)
    }

    public var sub_eOUTER_ROUND: eOUTER_ROUND? {	// [25]
      return self.complexEntity.entityReference(eOUTER_ROUND.self)
    }

    public var sub_eBOSS: eBOSS? {	// [26]
      return self.complexEntity.entityReference(eBOSS.self)
    }

    public var sub_eINSTANCED_FEATURE: eINSTANCED_FEATURE? {	// [27]
      return self.complexEntity.entityReference(eINSTANCED_FEATURE.self)
    }

    public var sub_eSPHERICAL_CAP: eSPHERICAL_CAP? {	// [28]
      return self.complexEntity.entityReference(eSPHERICAL_CAP.self)
    }

    public var sub_eSIMPLIFIED_COUNTERDRILL_HOLE_DEFINITION: eSIMPLIFIED_COUNTERDRILL_HOLE_DEFINITION? {	// [29]
      return self.complexEntity.entityReference(eSIMPLIFIED_COUNTERDRILL_HOLE_DEFINITION.self)
    }

    public var sub_eCOUNTERDRILL_HOLE_DEFINITION: eCOUNTERDRILL_HOLE_DEFINITION? {	// [30]
      return self.complexEntity.entityReference(eCOUNTERDRILL_HOLE_DEFINITION.self)
    }

    public var sub_eSIMPLIFIED_COUNTERSINK_HOLE_DEFINITION: eSIMPLIFIED_COUNTERSINK_HOLE_DEFINITION? {	// [31]
      return self.complexEntity.entityReference(eSIMPLIFIED_COUNTERSINK_HOLE_DEFINITION.self)
    }

    public var sub_eCOUNTERSINK_HOLE_DEFINITION: eCOUNTERSINK_HOLE_DEFINITION? {	// [32]
      return self.complexEntity.entityReference(eCOUNTERSINK_HOLE_DEFINITION.self)
    }

    public var sub_eSIMPLIFIED_SPOTFACE_HOLE_DEFINITION: eSIMPLIFIED_SPOTFACE_HOLE_DEFINITION? {	// [33]
      return self.complexEntity.entityReference(eSIMPLIFIED_SPOTFACE_HOLE_DEFINITION.self)
    }

    public var sub_eSPOTFACE_HOLE_DEFINITION: eSPOTFACE_HOLE_DEFINITION? {	// [34]
      return self.complexEntity.entityReference(eSPOTFACE_HOLE_DEFINITION.self)
    }

    public var sub_eSIMPLIFIED_COUNTERBORE_HOLE_DEFINITION: eSIMPLIFIED_COUNTERBORE_HOLE_DEFINITION? {	// [35]
      return self.complexEntity.entityReference(eSIMPLIFIED_COUNTERBORE_HOLE_DEFINITION.self)
    }

    public var sub_eCOUNTERBORE_HOLE_DEFINITION: eCOUNTERBORE_HOLE_DEFINITION? {	// [36]
      return self.complexEntity.entityReference(eCOUNTERBORE_HOLE_DEFINITION.self)
    }

    public var sub_eEXPLICIT_COMPOSITE_HOLE: eEXPLICIT_COMPOSITE_HOLE? {	// [37]
      return self.complexEntity.entityReference(eEXPLICIT_COMPOSITE_HOLE.self)
    }

    public var sub_eCOMPOSITE_HOLE: eCOMPOSITE_HOLE? {	// [38]
      return self.complexEntity.entityReference(eCOMPOSITE_HOLE.self)
    }

    public var sub_eCOMPOUND_FEATURE: eCOMPOUND_FEATURE? {	// [39]
      return self.complexEntity.entityReference(eCOMPOUND_FEATURE.self)
    }

    public var sub_eROUNDED_END: eROUNDED_END? {	// [40]
      return self.complexEntity.entityReference(eROUNDED_END.self)
    }

    public var sub_eOUTSIDE_PROFILE: eOUTSIDE_PROFILE? {	// [41]
      return self.complexEntity.entityReference(eOUTSIDE_PROFILE.self)
    }

    public var sub_eFLAT_FACE: eFLAT_FACE? {	// [42]
      return self.complexEntity.entityReference(eFLAT_FACE.self)
    }

    public var sub_eGENERAL_FEATURE: eGENERAL_FEATURE? {	// [43]
      return self.complexEntity.entityReference(eGENERAL_FEATURE.self)
    }

    public var sub_eFEATURE_DEFINITION_WITH_CONNECTION_AREA: eFEATURE_DEFINITION_WITH_CONNECTION_AREA? {	// [44]
      return self.complexEntity.entityReference(eFEATURE_DEFINITION_WITH_CONNECTION_AREA.self)
    }

    public var sub_eCONTACT_FEATURE_DEFINITION: eCONTACT_FEATURE_DEFINITION? {	// [45]
      return self.complexEntity.entityReference(eCONTACT_FEATURE_DEFINITION.self)
    }

    public var sub_eSHAPE_FEATURE_DEFINITION: eSHAPE_FEATURE_DEFINITION? {	// [46]
      return self.complexEntity.entityReference(eSHAPE_FEATURE_DEFINITION.self)
    }

    public var sub_eSLOT: eSLOT? {	// [47]
      return self.complexEntity.entityReference(eSLOT.self)
    }

    public var sub_eEXTERNALLY_DEFINED_FEATURE_DEFINITION: eEXTERNALLY_DEFINED_FEATURE_DEFINITION? {	// [48]
      return self.complexEntity.entityReference(eEXTERNALLY_DEFINED_FEATURE_DEFINITION.self)
    }

    public var sub_eGEAR: eGEAR? {	// [49]
      return self.complexEntity.entityReference(eGEAR.self)
    }

    public var sub_eMARKING: eMARKING? {	// [50]
      return self.complexEntity.entityReference(eMARKING.self)
    }

    public var sub_ePOCKET: ePOCKET? {	// [51]
      return self.complexEntity.entityReference(ePOCKET.self)
    }

    public var sub_ePROTRUSION: ePROTRUSION? {	// [52]
      return self.complexEntity.entityReference(ePROTRUSION.self)
    }

    public var sub_eREMOVAL_VOLUME: eREMOVAL_VOLUME? {	// [53]
      return self.complexEntity.entityReference(eREMOVAL_VOLUME.self)
    }

    public var sub_eREVOLVED_PROFILE: eREVOLVED_PROFILE? {	// [54]
      return self.complexEntity.entityReference(eREVOLVED_PROFILE.self)
    }

    public var sub_eRIB_TOP: eRIB_TOP? {	// [55]
      return self.complexEntity.entityReference(eRIB_TOP.self)
    }

    public var sub_eSPOTFACE_DEFINITION: eSPOTFACE_DEFINITION? {	// [56]
      return self.complexEntity.entityReference(eSPOTFACE_DEFINITION.self)
    }

    public var sub_eEXPLICIT_ROUND_HOLE: eEXPLICIT_ROUND_HOLE? {	// [57]
      return self.complexEntity.entityReference(eEXPLICIT_ROUND_HOLE.self)
    }

    public var sub_eROUND_HOLE: eROUND_HOLE? {	// [58]
      return self.complexEntity.entityReference(eROUND_HOLE.self)
    }

    public var sub_eSTEP: eSTEP? {	// [59]
      return self.complexEntity.entityReference(eSTEP.self)
    }

    public var sub_eTHREAD: eTHREAD? {	// [60]
      return self.complexEntity.entityReference(eTHREAD.self)
    }

    public var sub_eTURNED_KNURL: eTURNED_KNURL? {	// [61]
      return self.complexEntity.entityReference(eTURNED_KNURL.self)
    }

    public var sub_eLOCATOR: eLOCATOR? {	// [62]
      return self.complexEntity.entityReference(eLOCATOR.self)
    }

    public var sub_eBARRING_HOLE: eBARRING_HOLE? {	// [63]
      return self.complexEntity.entityReference(eBARRING_HOLE.self)
    }

    public var sub_eBEAD: eBEAD? {	// [64]
      return self.complexEntity.entityReference(eBEAD.self)
    }

    public var sub_eHOLE_IN_PANEL: eHOLE_IN_PANEL? {	// [65]
      return self.complexEntity.entityReference(eHOLE_IN_PANEL.self)
    }

    public var sub_eFEATURE_IN_PANEL: eFEATURE_IN_PANEL? {	// [66]
      return self.complexEntity.entityReference(eFEATURE_IN_PANEL.self)
    }

    public var sub_eJOGGLE: eJOGGLE? {	// [67]
      return self.complexEntity.entityReference(eJOGGLE.self)
    }

    public var sub_eFEATURE_DEFINITION: eFEATURE_DEFINITION? {	// [68]
      return self.complexEntity.entityReference(eFEATURE_DEFINITION.self)
    }

    public var sub_ePRODUCT_GROUP_MEMBERSHIP: ePRODUCT_GROUP_MEMBERSHIP? {	// [69]
      return self.complexEntity.entityReference(ePRODUCT_GROUP_MEMBERSHIP.self)
    }

    public var sub_eFEATURE_COMPONENT_DEFINITION: eFEATURE_COMPONENT_DEFINITION? {	// [70]
      return self.complexEntity.entityReference(eFEATURE_COMPONENT_DEFINITION.self)
    }

    public var sub_eBREAKDOWN_ELEMENT_REALIZATION: eBREAKDOWN_ELEMENT_REALIZATION? {	// [71]
      return self.complexEntity.entityReference(eBREAKDOWN_ELEMENT_REALIZATION.self)
    }

    public var sub_eCHARACTERIZED_PRODUCT_CONCEPT_FEATURE_CATEGORY: eCHARACTERIZED_PRODUCT_CONCEPT_FEATURE_CATEGORY? {	// [72]
      return self.complexEntity.entityReference(eCHARACTERIZED_PRODUCT_CONCEPT_FEATURE_CATEGORY.self)
    }

    public var sub_eSTATECHAR_TYPE_RELATIONSHIP_OBJECT: eSTATECHAR_TYPE_RELATIONSHIP_OBJECT? {	// [73]
      return self.complexEntity.entityReference(eSTATECHAR_TYPE_RELATIONSHIP_OBJECT.self)
    }

    public var sub_ePRODUCT_CLASS: ePRODUCT_CLASS? {	// [74]
      return self.complexEntity.entityReference(ePRODUCT_CLASS.self)
    }

    public var sub_eEXTENT: eEXTENT? {	// [75]
      return self.complexEntity.entityReference(eEXTENT.self)
    }

    public var sub_eCONTACT_FEATURE_FIT_RELATIONSHIP: eCONTACT_FEATURE_FIT_RELATIONSHIP? {	// [76]
      return self.complexEntity.entityReference(eCONTACT_FEATURE_FIT_RELATIONSHIP.self)
    }

    public var sub_eSHAPE_FEATURE_FIT_RELATIONSHIP: eSHAPE_FEATURE_FIT_RELATIONSHIP? {	// [77]
      return self.complexEntity.entityReference(eSHAPE_FEATURE_FIT_RELATIONSHIP.self)
    }

    public var sub_eCHARACTERIZED_REPRESENTATION: eCHARACTERIZED_REPRESENTATION? {	// [78]
      return self.complexEntity.entityReference(eCHARACTERIZED_REPRESENTATION.self)
    }

    public var sub_eCONTACT_FEATURE_DEFINITION_FIT_RELATIONSHIP: eCONTACT_FEATURE_DEFINITION_FIT_RELATIONSHIP? {	// [79]
      return self.complexEntity.entityReference(eCONTACT_FEATURE_DEFINITION_FIT_RELATIONSHIP.self)
    }

    public var sub_eSHAPE_FEATURE_DEFINITION_FIT_RELATIONSHIP: eSHAPE_FEATURE_DEFINITION_FIT_RELATIONSHIP? {	// [80]
      return self.complexEntity.entityReference(eSHAPE_FEATURE_DEFINITION_FIT_RELATIONSHIP.self)
    }

    public var sub_eSHAPE_FEATURE_DEFINITION_RELATIONSHIP: eSHAPE_FEATURE_DEFINITION_RELATIONSHIP? {	// [81]
      return self.complexEntity.entityReference(eSHAPE_FEATURE_DEFINITION_RELATIONSHIP.self)
    }

    public var sub_eDOCUMENT_FILE: eDOCUMENT_FILE? {	// [82]
      return self.complexEntity.entityReference(eDOCUMENT_FILE.self)
    }

    public var sub_eSTATECHAR_TYPE_OBJECT: eSTATECHAR_TYPE_OBJECT? {	// [83]
      return self.complexEntity.entityReference(eSTATECHAR_TYPE_OBJECT.self)
    }

    public var sub_eSTATECHAR_APPLIED_OBJECT: eSTATECHAR_APPLIED_OBJECT? {	// [84]
      return self.complexEntity.entityReference(eSTATECHAR_APPLIED_OBJECT.self)
    }

    public var sub_eREQUIREMENT_ASSIGNMENT: eREQUIREMENT_ASSIGNMENT? {	// [85]
      return self.complexEntity.entityReference(eREQUIREMENT_ASSIGNMENT.self)
    }


    //MARK: ATTRIBUTES
    // DRILLED_HOLE_DEPTH: (3 AMBIGUOUS REFs)

    // DRILLED_HOLE_DIAMETER_TOLERANCE: (3 AMBIGUOUS REFs)

    // PLACEMENT: (2 AMBIGUOUS REFs)

    // THROUGH_HOLE: (3 AMBIGUOUS REFs)

    // COUNTERBORE: (3 AMBIGUOUS REFs)

    // DRILLED_HOLE_DIAMETER: (3 AMBIGUOUS REFs)

    // DRILLED_HOLE_DEPTH_TOLERANCE: (3 AMBIGUOUS REFs)

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION`` )
    public var UNDIRECTED_LINK: (SDAI.LIST<sCHAINED_REPRESENTATION_LINK>/*[1:nil]*/ )?  {
      get {
        return sub_eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION?.partialEntity._undirected_link
      }
      set(newValue) {
        guard let partial = sub_eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION?.super_eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION
          .partialEntity else { return }
        partial._undirected_link = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eEXPLICIT_ROUND_HOLE`` )
    public var DIAMETER_TOLERANCE: sTOLERANCE_VALUE_OR_LIMITS_AND_FITS?  {
      get {
        return sub_eEXPLICIT_ROUND_HOLE?.partialEntity._diameter_tolerance
      }
      set(newValue) {
        guard let partial = sub_eEXPLICIT_ROUND_HOLE?.super_eEXPLICIT_ROUND_HOLE.partialEntity
          else { return }
        partial._diameter_tolerance = newValue
      }
    }

    /// __EXPLICIT REDEF(DERIVE)__ attribute
    /// - origin: SUB( ``eDEFAULT_MODEL_GEOMETRIC_VIEW`` )
    public var PRODUCT_DEFINITIONAL: SDAI.LOGICAL {
      get {
        if let cached = cachedValue(derivedAttributeName:"PRODUCT_DEFINITIONAL") {
          return cached.value as! SDAI.LOGICAL
        }
        guard let origin = sub_eDEFAULT_MODEL_GEOMETRIC_VIEW else { return nil }
        let value = SDAI.LOGICAL( SDAI.LOGICAL(
          origin.partialEntity._product_definitional__getter(SELF: origin)) )
        updateCache(derivedAttributeName:"PRODUCT_DEFINITIONAL", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eEXPLICIT_ROUND_HOLE`` )
    public var DEPTH_TOLERANCE: eTOLERANCE_VALUE?  {
      get {
        return sub_eEXPLICIT_ROUND_HOLE?.partialEntity._depth_tolerance
      }
      set(newValue) {
        guard let partial = sub_eEXPLICIT_ROUND_HOLE?.super_eEXPLICIT_ROUND_HOLE.partialEntity
          else { return }
        partial._depth_tolerance = newValue
      }
    }

    /// __EXPLICIT(DYNAMIC)__ attribute
    /// - origin: SELF( ``eCHARACTERIZED_OBJECT`` )
    public var DESCRIPTION: tTEXT?  {
      get {
        if let resolved = _characterized_object._description__provider(complex: self.complexEntity) {
          let value = resolved._description__getter(complex: self.complexEntity)
          return value
        }
        else {
          return self.partialEntity._description
        }
      }
      set(newValue) {
        if let _ = _characterized_object._description__provider(complex: self.complexEntity) { return }

        let partial = self.partialEntity
        partial._description = newValue
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCOUNTERDRILL_HOLE_DEFINITION`` )
    public var COUNTERDRILL_ANGLE_TOLERANCE: eTOLERANCE_VALUE?  {
      get {
        return sub_eCOUNTERDRILL_HOLE_DEFINITION?.partialEntity._counterdrill_angle_tolerance
      }
      set(newValue) {
        guard let partial = sub_eCOUNTERDRILL_HOLE_DEFINITION?.super_eCOUNTERDRILL_HOLE_DEFINITION
          .partialEntity else { return }
        partial._counterdrill_angle_tolerance = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION`` )
    public var LEAF: eREPRESENTATION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"LEAF") {
          return cached.value as! eREPRESENTATION? 
        }
        guard let origin = sub_eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION else { return nil }
        let value = eREPRESENTATION(origin.partialEntity._leaf__getter(SELF: origin))
        updateCache(derivedAttributeName:"LEAF", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCHARACTERIZED_ITEM_WITHIN_REPRESENTATION`` )
    public var ITEM: eREPRESENTATION_ITEM?  {
      get {
        return sub_eCHARACTERIZED_ITEM_WITHIN_REPRESENTATION?.partialEntity._item
      }
      set(newValue) {
        guard let partial = sub_eCHARACTERIZED_ITEM_WITHIN_REPRESENTATION?.super_eCHARACTERIZED_ITEM_WITHIN_REPRESENTATION
          .partialEntity else { return }
        partial._item = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCOUNTERSINK_HOLE_DEFINITION`` )
    public var COUNTERSINK_DIAMETER: ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  {
      get {
        return sub_eCOUNTERSINK_HOLE_DEFINITION?.partialEntity._countersink_diameter
      }
      set(newValue) {
        guard let partial = sub_eCOUNTERSINK_HOLE_DEFINITION?.super_eCOUNTERSINK_HOLE_DEFINITION
          .partialEntity else { return }
        partial._countersink_diameter = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT REDEF__ attribute
    /// - origin: SUB( ``eSHAPE_FEATURE_DEFINITION_RELATIONSHIP`` )
    public var RELATED_OBJECT: eSHAPE_FEATURE_DEFINITION?  {
      get {
        return eSHAPE_FEATURE_DEFINITION( sub_eSHAPE_FEATURE_DEFINITION_RELATIONSHIP?.super_eCHARACTERIZED_OBJECT_RELATIONSHIP
          .partialEntity._related_object )
      }
      set(newValue) {
        guard let partial = sub_eSHAPE_FEATURE_DEFINITION_RELATIONSHIP?.super_eCHARACTERIZED_OBJECT_RELATIONSHIP
          .partialEntity else { return }
        partial._related_object = SDAI.UNWRAP(
          eCHARACTERIZED_OBJECT(newValue))
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCOUNTERSINK_HOLE_DEFINITION`` )
    public var COUNTERSINK_ANGLE: ePOSITIVE_PLANE_ANGLE_MEASURE_WITH_UNIT?  {
      get {
        return sub_eCOUNTERSINK_HOLE_DEFINITION?.partialEntity._countersink_angle
      }
      set(newValue) {
        guard let partial = sub_eCOUNTERSINK_HOLE_DEFINITION?.super_eCOUNTERSINK_HOLE_DEFINITION
          .partialEntity else { return }
        partial._countersink_angle = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePRODUCT_GROUP_MEMBERSHIP`` )
    public var MEMBER: sPRODUCT_SELECT?  {
      get {
        return sub_ePRODUCT_GROUP_MEMBERSHIP?.partialEntity._member
      }
      set(newValue) {
        guard let partial = sub_ePRODUCT_GROUP_MEMBERSHIP?.super_ePRODUCT_GROUP_MEMBERSHIP.partialEntity
          else { return }
        partial._member = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eEXPLICIT_ROUND_HOLE`` )
    public var DIAMETER: ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  {
      get {
        return sub_eEXPLICIT_ROUND_HOLE?.partialEntity._diameter
      }
      set(newValue) {
        guard let partial = sub_eEXPLICIT_ROUND_HOLE?.super_eEXPLICIT_ROUND_HOLE.partialEntity
          else { return }
        partial._diameter = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eSPOTFACE_HOLE_DEFINITION`` )
    public var SPOTFACE: (SDAI.LIST_UNIQUE<eSPOTFACE_DEFINITION>/*[1:nil]*/ )?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"SPOTFACE") {
          return cached.value as! (SDAI.LIST_UNIQUE<eSPOTFACE_DEFINITION>/*[1:nil]*/ )? 
        }
        guard let origin = sub_eSPOTFACE_HOLE_DEFINITION else { return nil }
        let value = SDAI.LIST_UNIQUE<eSPOTFACE_DEFINITION>(
          origin.partialEntity._spotface__getter(SELF: origin))
        updateCache(derivedAttributeName:"SPOTFACE", value:value)
        return value
      }
    }

    /// __EXPLICIT REDEF__ attribute
    /// - origin: SUB( ``ePRODUCT_IDENTIFICATION`` )
    public var ITEM_CONCEPT: ePRODUCT_CLASS?  {
      get {
        return ePRODUCT_CLASS( sub_ePRODUCT_IDENTIFICATION?.super_eCONFIGURATION_ITEM.partialEntity
          ._item_concept )
      }
      set(newValue) {
        guard let partial = sub_ePRODUCT_IDENTIFICATION?.super_eCONFIGURATION_ITEM.partialEntity
          else { return }
        partial._item_concept = SDAI.UNWRAP(
          ePRODUCT_CONCEPT(newValue))
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCOUNTERDRILL_HOLE_DEFINITION`` )
    public var COUNTERDRILL_ANGLE: ePOSITIVE_PLANE_ANGLE_MEASURE_WITH_UNIT?  {
      get {
        return sub_eCOUNTERDRILL_HOLE_DEFINITION?.partialEntity._counterdrill_angle
      }
      set(newValue) {
        guard let partial = sub_eCOUNTERDRILL_HOLE_DEFINITION?.super_eCOUNTERDRILL_HOLE_DEFINITION
          .partialEntity else { return }
        partial._counterdrill_angle = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCOUNTERSINK_HOLE_DEFINITION`` )
    public var COUNTERSINK_ANGLE_TOLERANCE: eTOLERANCE_VALUE?  {
      get {
        return sub_eCOUNTERSINK_HOLE_DEFINITION?.partialEntity._countersink_angle_tolerance
      }
      set(newValue) {
        guard let partial = sub_eCOUNTERSINK_HOLE_DEFINITION?.super_eCOUNTERSINK_HOLE_DEFINITION
          .partialEntity else { return }
        partial._countersink_angle_tolerance = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCHARACTERIZED_ITEM_WITHIN_REPRESENTATION`` )
    public var REP: eREPRESENTATION?  {
      get {
        return sub_eCHARACTERIZED_ITEM_WITHIN_REPRESENTATION?.partialEntity._rep
      }
      set(newValue) {
        guard let partial = sub_eCHARACTERIZED_ITEM_WITHIN_REPRESENTATION?.super_eCHARACTERIZED_ITEM_WITHIN_REPRESENTATION
          .partialEntity else { return }
        partial._rep = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT REDEF__ attribute
    /// - origin: SUB( ``eSHAPE_FEATURE_DEFINITION_RELATIONSHIP`` )
    public var RELATING_OBJECT: eSHAPE_FEATURE_DEFINITION?  {
      get {
        return eSHAPE_FEATURE_DEFINITION( sub_eSHAPE_FEATURE_DEFINITION_RELATIONSHIP?.super_eCHARACTERIZED_OBJECT_RELATIONSHIP
          .partialEntity._relating_object )
      }
      set(newValue) {
        guard let partial = sub_eSHAPE_FEATURE_DEFINITION_RELATIONSHIP?.super_eCHARACTERIZED_OBJECT_RELATIONSHIP
          .partialEntity else { return }
        partial._relating_object = SDAI.UNWRAP(
          eCHARACTERIZED_OBJECT(newValue))
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION`` )
    public var ROOT: eREPRESENTATION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"ROOT") {
          return cached.value as! eREPRESENTATION? 
        }
        guard let origin = sub_eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION else { return nil }
        let value = eREPRESENTATION(origin.partialEntity._root__getter(SELF: origin))
        updateCache(derivedAttributeName:"ROOT", value:value)
        return value
      }
    }

    /// __INVERSE__ attribute
    /// observing eITEM_IDENTIFIED_REPRESENTATION_USAGE .DEFINITION
    /// - origin: SUB( ``eEXPLICIT_COMPOSITE_HOLE`` )
    public var EXPLICIT_SHAPE: (SDAI.SET<eITEM_IDENTIFIED_REPRESENTATION_USAGE>/*[0:nil]*/ )?  {
      get {
        return sub_eEXPLICIT_COMPOSITE_HOLE?.partialEntity._explicit_shape
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION`` )
    public var NODES: (SDAI.LIST_UNIQUE<eREPRESENTATION>/*[2:nil]*/ )?  {
      get {
        return sub_eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION?.partialEntity._nodes
      }
      set(newValue) {
        guard let partial = sub_eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION?.super_eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION
          .partialEntity else { return }
        partial._nodes = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT REDEF__ attribute
    /// - origin: SUB( ``eCONTACT_FEATURE_FIT_RELATIONSHIP`` )
    public var RELATED_SHAPE_ASPECT: eCONTACT_FEATURE?  {
      get {
        return eCONTACT_FEATURE( sub_eCONTACT_FEATURE_FIT_RELATIONSHIP?.super_eSHAPE_ASPECT_RELATIONSHIP
          .partialEntity._related_shape_aspect )
      }
      set(newValue) {
        guard let partial = sub_eCONTACT_FEATURE_FIT_RELATIONSHIP?.super_eSHAPE_ASPECT_RELATIONSHIP
          .partialEntity else { return }
        partial._related_shape_aspect = SDAI.UNWRAP(
          eSHAPE_ASPECT(newValue))
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSPOTFACE_DEFINITION`` )
    public var SPOTFACE_RADIUS: ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  {
      get {
        return sub_eSPOTFACE_DEFINITION?.partialEntity._spotface_radius
      }
      set(newValue) {
        guard let partial = sub_eSPOTFACE_DEFINITION?.super_eSPOTFACE_DEFINITION.partialEntity
          else { return }
        partial._spotface_radius = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION`` )
    public var DIRECTED_LINK: (SDAI.LIST<eREPRESENTATION_RELATIONSHIP>/*[1:nil]*/ )?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"DIRECTED_LINK") {
          return cached.value as! (SDAI.LIST<eREPRESENTATION_RELATIONSHIP>/*[1:nil]*/ )? 
        }
        guard let origin = sub_eCHARACTERIZED_CHAIN_BASED_ITEM_WITHIN_REPRESENTATION else { return nil }
        let value = SDAI.LIST<eREPRESENTATION_RELATIONSHIP>(
          origin.partialEntity._directed_link__getter(SELF: origin))
        updateCache(derivedAttributeName:"DIRECTED_LINK", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSPOTFACE_DEFINITION`` )
    public var SPOTFACE_RADIUS_TOLERANCE: eTOLERANCE_VALUE?  {
      get {
        return sub_eSPOTFACE_DEFINITION?.partialEntity._spotface_radius_tolerance
      }
      set(newValue) {
        guard let partial = sub_eSPOTFACE_DEFINITION?.super_eSPOTFACE_DEFINITION.partialEntity
          else { return }
        partial._spotface_radius_tolerance = newValue
      }
    }

    /// __EXPLICIT(DYNAMIC)__ attribute
    /// - origin: SELF( ``eCHARACTERIZED_OBJECT`` )
    public var NAME: tLABEL {
      get {
        if let resolved = _characterized_object._name__provider(complex: self.complexEntity) {
          let value = resolved._name__getter(complex: self.complexEntity)
          return value
        }
        else {
          return SDAI.UNWRAP( self.partialEntity._name )
        }
      }
      set(newValue) {
        if let _ = _characterized_object._name__provider(complex: self.complexEntity) { return }

        let partial = self.partialEntity
        partial._name = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eEXPLICIT_ROUND_HOLE`` )
    public var DEPTH: ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  {
      get {
        return sub_eEXPLICIT_ROUND_HOLE?.partialEntity._depth
      }
      set(newValue) {
        guard let partial = sub_eEXPLICIT_ROUND_HOLE?.super_eEXPLICIT_ROUND_HOLE.partialEntity
          else { return }
        partial._depth = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eCOUNTERSINK_HOLE_DEFINITION`` )
    public var COUNTERSINK_DIAMETER_TOLERANCE: sTOLERANCE_VALUE_OR_LIMITS_AND_FITS?  {
      get {
        return sub_eCOUNTERSINK_HOLE_DEFINITION?.partialEntity._countersink_diameter_tolerance
      }
      set(newValue) {
        guard let partial = sub_eCOUNTERSINK_HOLE_DEFINITION?.super_eCOUNTERSINK_HOLE_DEFINITION
          .partialEntity else { return }
        partial._countersink_diameter_tolerance = newValue
      }
    }

    /// __EXPLICIT REDEF__ attribute
    /// - origin: SUB( ``eCONTACT_FEATURE_FIT_RELATIONSHIP`` )
    public var RELATING_SHAPE_ASPECT: eCONTACT_FEATURE?  {
      get {
        return eCONTACT_FEATURE( sub_eCONTACT_FEATURE_FIT_RELATIONSHIP?.super_eSHAPE_ASPECT_RELATIONSHIP
          .partialEntity._relating_shape_aspect )
      }
      set(newValue) {
        guard let partial = sub_eCONTACT_FEATURE_FIT_RELATIONSHIP?.super_eSHAPE_ASPECT_RELATIONSHIP
          .partialEntity else { return }
        partial._relating_shape_aspect = SDAI.UNWRAP(
          eSHAPE_ASPECT(newValue))
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_characterized_object.self) else { return nil }
      self.partialEntity = partial

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }

    //SIMPLE ENTITY REFERENCE
    public convenience init?(_ partial:_characterized_object) {
      let complex = SDAI.ComplexEntity(entities:[partial])
      self.init(complex: complex)
    }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "CHARACTERIZED_OBJECT", type: self, explicitAttributeCount: 2)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: eCHARACTERIZED_OBJECT.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "UNDIRECTED_LINK", keyPath: \eCHARACTERIZED_OBJECT.UNDIRECTED_LINK, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "DIAMETER_TOLERANCE", keyPath: \eCHARACTERIZED_OBJECT.DIAMETER_TOLERANCE, 
        kind: .explicitOptional, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "PRODUCT_DEFINITIONAL", keyPath: \eCHARACTERIZED_OBJECT.PRODUCT_DEFINITIONAL, 
        kind: .derivedRedeclaring, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "DEPTH_TOLERANCE", keyPath: \eCHARACTERIZED_OBJECT.DEPTH_TOLERANCE, 
        kind: .explicitOptional, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "DESCRIPTION", keyPath: \eCHARACTERIZED_OBJECT.DESCRIPTION, 
        kind: .explicitOptional, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "COUNTERDRILL_ANGLE_TOLERANCE", keyPath: \eCHARACTERIZED_OBJECT.COUNTERDRILL_ANGLE_TOLERANCE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "LEAF", keyPath: \eCHARACTERIZED_OBJECT.LEAF, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ITEM", keyPath: \eCHARACTERIZED_OBJECT.ITEM, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "COUNTERSINK_DIAMETER", keyPath: \eCHARACTERIZED_OBJECT.COUNTERSINK_DIAMETER, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATED_OBJECT", keyPath: \eCHARACTERIZED_OBJECT.RELATED_OBJECT, 
        kind: .explicitRedeclaring, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "COUNTERSINK_ANGLE", keyPath: \eCHARACTERIZED_OBJECT.COUNTERSINK_ANGLE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "MEMBER", keyPath: \eCHARACTERIZED_OBJECT.MEMBER, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "DIAMETER", keyPath: \eCHARACTERIZED_OBJECT.DIAMETER, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "SPOTFACE", keyPath: \eCHARACTERIZED_OBJECT.SPOTFACE, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ITEM_CONCEPT", keyPath: \eCHARACTERIZED_OBJECT.ITEM_CONCEPT, 
        kind: .explicitRedeclaring, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "COUNTERDRILL_ANGLE", keyPath: \eCHARACTERIZED_OBJECT.COUNTERDRILL_ANGLE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "COUNTERSINK_ANGLE_TOLERANCE", keyPath: \eCHARACTERIZED_OBJECT.COUNTERSINK_ANGLE_TOLERANCE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "REP", keyPath: \eCHARACTERIZED_OBJECT.REP, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATING_OBJECT", keyPath: \eCHARACTERIZED_OBJECT.RELATING_OBJECT, 
        kind: .explicitRedeclaring, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ROOT", keyPath: \eCHARACTERIZED_OBJECT.ROOT, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "EXPLICIT_SHAPE", keyPath: \eCHARACTERIZED_OBJECT.EXPLICIT_SHAPE, 
        kind: .inverse, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NODES", keyPath: \eCHARACTERIZED_OBJECT.NODES, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATED_SHAPE_ASPECT", keyPath: \eCHARACTERIZED_OBJECT.RELATED_SHAPE_ASPECT, 
        kind: .explicitRedeclaring, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "SPOTFACE_RADIUS", keyPath: \eCHARACTERIZED_OBJECT.SPOTFACE_RADIUS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "DIRECTED_LINK", keyPath: \eCHARACTERIZED_OBJECT.DIRECTED_LINK, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "SPOTFACE_RADIUS_TOLERANCE", keyPath: \eCHARACTERIZED_OBJECT.SPOTFACE_RADIUS_TOLERANCE, 
        kind: .explicitOptional, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NAME", keyPath: \eCHARACTERIZED_OBJECT.NAME, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "DEPTH", keyPath: \eCHARACTERIZED_OBJECT.DEPTH, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "COUNTERSINK_DIAMETER_TOLERANCE", keyPath: \eCHARACTERIZED_OBJECT.COUNTERSINK_DIAMETER_TOLERANCE, 
        kind: .explicitOptional, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATING_SHAPE_ASPECT", keyPath: \eCHARACTERIZED_OBJECT.RELATING_SHAPE_ASPECT, 
        kind: .explicitRedeclaring, source: .subEntity, mayYieldEntityReference: true)

      return entityDef
    }

  }
}

//MARK: - Entity Dynamic Attribute Protocols
internal protocol eCHARACTERIZED_OBJECT__NAME__provider {
  func _name__getter(complex: SDAI.ComplexEntity) -> AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL
}
internal protocol eCHARACTERIZED_OBJECT__DESCRIPTION__provider {
  func _description__getter(complex: SDAI.ComplexEntity) -> 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT? 
}
