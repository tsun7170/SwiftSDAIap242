/* file: shape_representation.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY shape_representation
    SUBTYPE OF ( representation );
  END_ENTITY; -- shape_representation (line:28944 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  SUPER- ENTITY(1)	representation
    ATTR:  name,	TYPE: label -- EXPLICIT

    ATTR:  items,	TYPE: SET [1 : ?] OF representation_item -- EXPLICIT
      -- observed by
        ENTITY(1): hidden_element_over_riding_styled_item,	ATTR: container,	TYPE: SET [1 : ?] OF
          presentation_view
      -- possibly overriden by
          ENTITY: shape_representation_with_parameters,	TYPE: SET [1 : ?] OF shape_representation_with_parameters_items
          ENTITY: mechanical_design_shaded_presentation_area,	TYPE: SET [1 : ?] OF mechanical_design_shaded_presentation_area_items
          ENTITY: mechanical_design_shaded_presentation_representation,	TYPE: SET [1 : ?] OF mechanical_design_shaded_presentation_representation_items
          ENTITY: connected_edge_with_length_set_representation,	TYPE: SET [1 : ?] OF connected_edge_with_length_set_items
          ENTITY: mechanism_state_representation,	TYPE: SET [1 : ?] OF pair_value
          ENTITY: reinforcement_orientation_basis,	TYPE: SET [1 : 1] OF basis_11_direction_member
          ENTITY: externally_defined_representation,	TYPE: SET [1 : ?] OF externally_defined_representation_item
          ENTITY: kinematic_topology_network_structure,	TYPE: SET [1 : ?] OF kinematic_loop
          ENTITY: kinematic_topology_structure,	TYPE: SET [1 : ?] OF kinematic_joint
          ENTITY: single_area_csg_2d_shape_representation,	TYPE: SET [1 : ?] OF csg_2d_area_select
          ENTITY: draughting_model,	TYPE: SET [1 : ?] OF draughting_model_item_select
          ENTITY: shape_dimension_representation,	TYPE: SET [1 : ?] OF shape_dimension_representation_item
          ENTITY: point_placement_shape_representation,	TYPE: SET [1 : ?] OF point_placement_shape_representation_item
          ENTITY: link_motion_representation_along_path,	TYPE: SET [1 : ?] OF kinematic_path
          ENTITY: kinematic_topology_directed_structure,	TYPE: SET [1 : ?] OF oriented_joint
          ENTITY: scan_data_shape_representation,	TYPE: SET [1 : ?] OF scanned_data_item
          ENTITY: mechanical_design_geometric_presentation_area,	TYPE: SET [1 : ?] OF mechanical_design_geometric_presentation_area_items
          ENTITY: procedural_shape_representation,	TYPE: SET [1 : ?] OF procedural_shape_representation_sequence
          ENTITY: path_parameter_representation,	TYPE: SET [1 : ?] OF bounded_curve
          ENTITY: csg_2d_shape_representation,	TYPE: SET [1 : ?] OF csg_2d_shape_select
          ENTITY: ply_angle_representation,	TYPE: SET [1 : 1] OF measure_representation_item
          ENTITY: text_string_representation,	TYPE: SET [1 : ?] OF text_string_representation_item
          ENTITY: procedural_representation,	TYPE: SET [1 : ?] OF procedural_representation_sequence
          ENTITY: draughting_subfigure_representation,	TYPE: SET [1 : ?] OF draughting_subfigure_representation_item
          ENTITY: picture_representation,	TYPE: SET [2 : ?] OF picture_representation_item_select
          ENTITY: structured_text_representation,	TYPE: SET [1 : ?] OF string_representation_item_select
          ENTITY: interpolated_configuration_representation,	TYPE: SET [1 : ?] OF interpolated_configuration_sequence
          ENTITY: mechanical_design_presentation_representation_with_draughting,	TYPE: SET [1 : ?] OF camera_model_d3
          ENTITY: mechanism_representation,	TYPE: SET [1 : ?] OF pair_representation_relationship
          ENTITY: mechanical_design_geometric_presentation_representation,	TYPE: SET [1 : ?] OF mechanical_design_geometric_presentation_representation_items
          ENTITY: kinematic_link_representation,	TYPE: SET [1 : ?] OF kinematic_link_representation_items
          ENTITY: neutral_sketch_representation,	TYPE: SET [1 : ?] OF sketch_element_select
          ENTITY: draughting_symbol_representation,	TYPE: SET [1 : ?] OF draughting_symbol_representation_item

    ATTR:  context_of_items,	TYPE: representation_context -- EXPLICIT (DYNAMIC)
      -- observed by
        ENTITY(1): representation_context,	ATTR: representations_in_context,	TYPE: SET [1 : ?] OF
          representation
      -- possibly overriden by
          ENTITY: mechanism_state_representation,	TYPE: geometric_representation_context	(as DERIVED)
          ENTITY: presentation_representation,	TYPE: geometric_representation_context
          ENTITY: link_motion_representation_along_path,	TYPE: geometric_representation_context_with_parameter
          ENTITY: path_parameter_representation,	TYPE: path_parameter_representation_context
          ENTITY: analysis_model,	TYPE: analysis_representation_context
          ENTITY: interpolated_configuration_representation,	TYPE: geometric_representation_context_with_parameter
          ENTITY: mechanism_representation,	TYPE: geometric_representation_context
          ENTITY: kinematic_link_representation,	TYPE: geometric_representation_context

    ATTR:  id,	TYPE: identifier -- DERIVED
      := get_id_value( SELF )

    ATTR:  description,	TYPE: text -- DERIVED
      := get_description_value( SELF )


  ENTITY(SELF)	shape_representation
    (no local attributes)

  SUB- ENTITY(3)	faceted_brep_shape_representation
    (no local attributes)

  SUB- ENTITY(4)	shape_representation_with_parameters
    REDCR: items,	TYPE: SET [1 : ?] OF shape_representation_with_parameters_items -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(5)	location_shape_representation
    (no local attributes)

  SUB- ENTITY(6)	beveled_sheet_representation
    (no local attributes)

  SUB- ENTITY(7)	advanced_brep_shape_representation
    (no local attributes)

  SUB- ENTITY(8)	direction_shape_representation
    (no local attributes)

  SUB- ENTITY(9)	edge_based_wireframe_shape_representation
    (no local attributes)

  SUB- ENTITY(10)	manifold_subsurface_shape_representation
    (no local attributes)

  SUB- ENTITY(11)	composite_sheet_representation
    (no local attributes)

  SUB- ENTITY(12)	curve_swept_solid_shape_representation
    (no local attributes)

  SUB- ENTITY(13)	geometrically_bounded_2d_wireframe_representation
    (no local attributes)

  SUB- ENTITY(14)	planar_shape_representation
    (no local attributes)

  SUB- ENTITY(15)	path_shape_representation
    (no local attributes)

  SUB- ENTITY(16)	shape_dimension_representation
    REDCR: items,	TYPE: SET [1 : ?] OF shape_dimension_representation_item -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(17)	geometrically_bounded_wireframe_shape_representation
    (no local attributes)

  SUB- ENTITY(18)	point_placement_shape_representation
    REDCR: items,	TYPE: SET [1 : ?] OF point_placement_shape_representation_item -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(19)	scan_data_shape_representation
    REDCR: items,	TYPE: SET [1 : ?] OF scanned_data_item -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(20)	procedural_shape_representation
    REDCR: items,	TYPE: SET [1 : ?] OF procedural_shape_representation_sequence -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(21)	single_boundary_csg_2d_shape_representation
    (no local attributes)

  SUB- ENTITY(22)	single_area_csg_2d_shape_representation
    REDCR: items,	TYPE: SET [1 : ?] OF csg_2d_area_select -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(23)	csg_2d_shape_representation
    REDCR: items,	TYPE: SET [1 : ?] OF csg_2d_shape_select -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(24)	non_manifold_surface_shape_representation
    (no local attributes)

  SUB- ENTITY(25)	compound_shape_representation
    (no local attributes)

  SUB- ENTITY(26)	representative_shape_representation
    (no local attributes)

  SUB- ENTITY(27)	elementary_brep_shape_representation
    (no local attributes)

  SUB- ENTITY(28)	manifold_surface_shape_representation
    (no local attributes)

  SUB- ENTITY(29)	geometrically_bounded_surface_shape_representation
    (no local attributes)

  SUB- ENTITY(30)	face_shape_representation
    (no local attributes)

  SUB- ENTITY(31)	shell_based_wireframe_shape_representation
    (no local attributes)

  SUB- ENTITY(32)	csg_shape_representation
    (no local attributes)

  SUB- ENTITY(33)	neutral_sketch_representation
    ATTR:  neutral_sketch_semantics,	TYPE: curves_or_area -- EXPLICIT

    REDCR: items,	TYPE: SET [1 : ?] OF sketch_element_select -- EXPLICIT
      -- OVERRIDING ENTITY: representation


  SUB- ENTITY(34)	tessellated_shape_representation_with_accuracy_parameters
    ATTR:  tessellation_accuracy_parameters,	TYPE: SET [1 : ?] OF tessellation_accuracy_parameter_item -- EXPLICIT


  SUB- ENTITY(35)	tessellated_shape_representation
    (no local attributes)

*/


//MARK: - Partial Entity
  public final class _shape_representation : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      eSHAPE_REPRESENTATION.self
    }

    //ATTRIBUTES
    // (no local attributes)

    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      //SELECT data types (indirectly) referencing the current type as a member of the select list
      members.insert(SDAI.STRING(sDATE_AND_TIME_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sMULTI_LANGUAGE_ATTRIBUTE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sEXTERNAL_IDENTIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sLINK_OR_SHAPE_REPRESENTATION.typeName)) // -> Self
      members.insert(SDAI.STRING(sIDENTIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_ITEMS.typeName)) // -> sIDENTIFICATION_ITEM
      members.insert(SDAI.STRING(sCHANGE_MANAGEMENT_OBJECT.typeName)) // -> sACTION_ITEMS
      members.insert(SDAI.STRING(sIR_USAGE_ITEM.typeName)) // -> sIDENTIFICATION_ITEM
      members.insert(SDAI.STRING(sTIME_INTERVAL_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sSECURITY_CLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_REQUEST_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCONSTRUCTIVE_GEOMETRY_REPRESENTATION_OR_SHAPE_REPRESENTATION.typeName)) // -> Self
      members.insert(SDAI.STRING(sA3MS_INSPECTED_EQUIVALENCE_ELEMENT_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sEQUIVALENCE_DETECTED_DIFFERENCE_SELECT.typeName)) // -> sA3MS_INSPECTED_EQUIVALENCE_ELEMENT_SELECT
      members.insert(SDAI.STRING(sDATE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sAPPROVAL_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sMECHANICAL_DESIGN_AND_DRAUGHTING_RELATIONSHIP_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sSHAPE_MODEL.typeName)) // -> Self
      members.insert(SDAI.STRING(sPERSON_AND_ORGANIZATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sGENERAL_ORGANIZATIONAL_DATA_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sEVENT_OCCURRENCE_ITEM.typeName)) // -> sGENERAL_ORGANIZATIONAL_DATA_SELECT
      members.insert(SDAI.STRING(sORGANIZATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sATTRIBUTE_LANGUAGE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sINSPECTED_EQUIVALENCE_ELEMENT_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sEFFECTIVITY_ITEM.typeName)) // -> Self
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init() {
      super.init(asAbstructSuperclass:())

    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 0
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      self.init( )
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY shape_representation
    SUBTYPE OF ( representation );
  END_ENTITY; -- shape_representation (line:28944 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class eSHAPE_REPRESENTATION : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _shape_representation.self
    }
    public let partialEntity: _shape_representation

    //MARK: SUPERTYPES
    public let super_eREPRESENTATION: eREPRESENTATION 	// [1]
    public var super_eSHAPE_REPRESENTATION: eSHAPE_REPRESENTATION { return self } 	// [2]

    //MARK: SUBTYPES
    public var sub_eFACETED_BREP_SHAPE_REPRESENTATION: eFACETED_BREP_SHAPE_REPRESENTATION? {	// [3]
      return self.complexEntity.entityReference(eFACETED_BREP_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSHAPE_REPRESENTATION_WITH_PARAMETERS: eSHAPE_REPRESENTATION_WITH_PARAMETERS? {	// [4]
      return self.complexEntity.entityReference(eSHAPE_REPRESENTATION_WITH_PARAMETERS.self)
    }

    public var sub_eLOCATION_SHAPE_REPRESENTATION: eLOCATION_SHAPE_REPRESENTATION? {	// [5]
      return self.complexEntity.entityReference(eLOCATION_SHAPE_REPRESENTATION.self)
    }

    public var sub_eBEVELED_SHEET_REPRESENTATION: eBEVELED_SHEET_REPRESENTATION? {	// [6]
      return self.complexEntity.entityReference(eBEVELED_SHEET_REPRESENTATION.self)
    }

    public var sub_eADVANCED_BREP_SHAPE_REPRESENTATION: eADVANCED_BREP_SHAPE_REPRESENTATION? {	// [7]
      return self.complexEntity.entityReference(eADVANCED_BREP_SHAPE_REPRESENTATION.self)
    }

    public var sub_eDIRECTION_SHAPE_REPRESENTATION: eDIRECTION_SHAPE_REPRESENTATION? {	// [8]
      return self.complexEntity.entityReference(eDIRECTION_SHAPE_REPRESENTATION.self)
    }

    public var sub_eEDGE_BASED_WIREFRAME_SHAPE_REPRESENTATION: eEDGE_BASED_WIREFRAME_SHAPE_REPRESENTATION? {	// [9]
      return self.complexEntity.entityReference(eEDGE_BASED_WIREFRAME_SHAPE_REPRESENTATION.self)
    }

    public var sub_eMANIFOLD_SUBSURFACE_SHAPE_REPRESENTATION: eMANIFOLD_SUBSURFACE_SHAPE_REPRESENTATION? {	// [10]
      return self.complexEntity.entityReference(eMANIFOLD_SUBSURFACE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eCOMPOSITE_SHEET_REPRESENTATION: eCOMPOSITE_SHEET_REPRESENTATION? {	// [11]
      return self.complexEntity.entityReference(eCOMPOSITE_SHEET_REPRESENTATION.self)
    }

    public var sub_eCURVE_SWEPT_SOLID_SHAPE_REPRESENTATION: eCURVE_SWEPT_SOLID_SHAPE_REPRESENTATION? {	// [12]
      return self.complexEntity.entityReference(eCURVE_SWEPT_SOLID_SHAPE_REPRESENTATION.self)
    }

    public var sub_eGEOMETRICALLY_BOUNDED_2D_WIREFRAME_REPRESENTATION: eGEOMETRICALLY_BOUNDED_2D_WIREFRAME_REPRESENTATION? {	// [13]
      return self.complexEntity.entityReference(eGEOMETRICALLY_BOUNDED_2D_WIREFRAME_REPRESENTATION.self)
    }

    public var sub_ePLANAR_SHAPE_REPRESENTATION: ePLANAR_SHAPE_REPRESENTATION? {	// [14]
      return self.complexEntity.entityReference(ePLANAR_SHAPE_REPRESENTATION.self)
    }

    public var sub_ePATH_SHAPE_REPRESENTATION: ePATH_SHAPE_REPRESENTATION? {	// [15]
      return self.complexEntity.entityReference(ePATH_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSHAPE_DIMENSION_REPRESENTATION: eSHAPE_DIMENSION_REPRESENTATION? {	// [16]
      return self.complexEntity.entityReference(eSHAPE_DIMENSION_REPRESENTATION.self)
    }

    public var sub_eGEOMETRICALLY_BOUNDED_WIREFRAME_SHAPE_REPRESENTATION: eGEOMETRICALLY_BOUNDED_WIREFRAME_SHAPE_REPRESENTATION? {	// [17]
      return self.complexEntity.entityReference(eGEOMETRICALLY_BOUNDED_WIREFRAME_SHAPE_REPRESENTATION.self)
    }

    public var sub_ePOINT_PLACEMENT_SHAPE_REPRESENTATION: ePOINT_PLACEMENT_SHAPE_REPRESENTATION? {	// [18]
      return self.complexEntity.entityReference(ePOINT_PLACEMENT_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSCAN_DATA_SHAPE_REPRESENTATION: eSCAN_DATA_SHAPE_REPRESENTATION? {	// [19]
      return self.complexEntity.entityReference(eSCAN_DATA_SHAPE_REPRESENTATION.self)
    }

    public var sub_ePROCEDURAL_SHAPE_REPRESENTATION: ePROCEDURAL_SHAPE_REPRESENTATION? {	// [20]
      return self.complexEntity.entityReference(ePROCEDURAL_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSINGLE_BOUNDARY_CSG_2D_SHAPE_REPRESENTATION: eSINGLE_BOUNDARY_CSG_2D_SHAPE_REPRESENTATION? {	// [21]
      return self.complexEntity.entityReference(eSINGLE_BOUNDARY_CSG_2D_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSINGLE_AREA_CSG_2D_SHAPE_REPRESENTATION: eSINGLE_AREA_CSG_2D_SHAPE_REPRESENTATION? {	// [22]
      return self.complexEntity.entityReference(eSINGLE_AREA_CSG_2D_SHAPE_REPRESENTATION.self)
    }

    public var sub_eCSG_2D_SHAPE_REPRESENTATION: eCSG_2D_SHAPE_REPRESENTATION? {	// [23]
      return self.complexEntity.entityReference(eCSG_2D_SHAPE_REPRESENTATION.self)
    }

    public var sub_eNON_MANIFOLD_SURFACE_SHAPE_REPRESENTATION: eNON_MANIFOLD_SURFACE_SHAPE_REPRESENTATION? {	// [24]
      return self.complexEntity.entityReference(eNON_MANIFOLD_SURFACE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eCOMPOUND_SHAPE_REPRESENTATION: eCOMPOUND_SHAPE_REPRESENTATION? {	// [25]
      return self.complexEntity.entityReference(eCOMPOUND_SHAPE_REPRESENTATION.self)
    }

    public var sub_eREPRESENTATIVE_SHAPE_REPRESENTATION: eREPRESENTATIVE_SHAPE_REPRESENTATION? {	// [26]
      return self.complexEntity.entityReference(eREPRESENTATIVE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eELEMENTARY_BREP_SHAPE_REPRESENTATION: eELEMENTARY_BREP_SHAPE_REPRESENTATION? {	// [27]
      return self.complexEntity.entityReference(eELEMENTARY_BREP_SHAPE_REPRESENTATION.self)
    }

    public var sub_eMANIFOLD_SURFACE_SHAPE_REPRESENTATION: eMANIFOLD_SURFACE_SHAPE_REPRESENTATION? {	// [28]
      return self.complexEntity.entityReference(eMANIFOLD_SURFACE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eGEOMETRICALLY_BOUNDED_SURFACE_SHAPE_REPRESENTATION: eGEOMETRICALLY_BOUNDED_SURFACE_SHAPE_REPRESENTATION? {	// [29]
      return self.complexEntity.entityReference(eGEOMETRICALLY_BOUNDED_SURFACE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eFACE_SHAPE_REPRESENTATION: eFACE_SHAPE_REPRESENTATION? {	// [30]
      return self.complexEntity.entityReference(eFACE_SHAPE_REPRESENTATION.self)
    }

    public var sub_eSHELL_BASED_WIREFRAME_SHAPE_REPRESENTATION: eSHELL_BASED_WIREFRAME_SHAPE_REPRESENTATION? {	// [31]
      return self.complexEntity.entityReference(eSHELL_BASED_WIREFRAME_SHAPE_REPRESENTATION.self)
    }

    public var sub_eCSG_SHAPE_REPRESENTATION: eCSG_SHAPE_REPRESENTATION? {	// [32]
      return self.complexEntity.entityReference(eCSG_SHAPE_REPRESENTATION.self)
    }

    public var sub_eNEUTRAL_SKETCH_REPRESENTATION: eNEUTRAL_SKETCH_REPRESENTATION? {	// [33]
      return self.complexEntity.entityReference(eNEUTRAL_SKETCH_REPRESENTATION.self)
    }

    public var sub_eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS: eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS? {	// [34]
      return self.complexEntity.entityReference(eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS.self)
    }

    public var sub_eTESSELLATED_SHAPE_REPRESENTATION: eTESSELLATED_SHAPE_REPRESENTATION? {	// [35]
      return self.complexEntity.entityReference(eTESSELLATED_SHAPE_REPRESENTATION.self)
    }


    //MARK: ATTRIBUTES
    /// __DERIVE__ attribute
    /// - origin: SUPER( ``eREPRESENTATION`` )
    public var DESCRIPTION: tTEXT?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"DESCRIPTION") {
          return cached.value as! tTEXT? 
        }
        let origin = super_eREPRESENTATION
        let value = tTEXT(origin.partialEntity._description__getter(SELF: origin))
        updateCache(derivedAttributeName:"DESCRIPTION", value:value)
        return value
      }
    }

    /// __EXPLICIT(OBSERVED)__ attribute
    /// - origin: SUPER( ``eREPRESENTATION`` )
    public var ITEMS: SDAI.SET<eREPRESENTATION_ITEM>/*[1:nil]*/  {
      get {
        return SDAI.UNWRAP( super_eREPRESENTATION.partialEntity._items )
      }
      set(newValue) {
        let partial = super_eREPRESENTATION.partialEntity
        partial._items = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS`` )
    public var TESSELLATION_ACCURACY_PARAMETERS: (SDAI.SET<sTESSELLATION_ACCURACY_PARAMETER_ITEM>/*[1:nil]*/ )?  {
      get {
        return sub_eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS?.partialEntity
          ._tessellation_accuracy_parameters
      }
      set(newValue) {
        guard let partial = sub_eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS?.super_eTESSELLATED_SHAPE_REPRESENTATION_WITH_ACCURACY_PARAMETERS
          .partialEntity else { return }
        partial._tessellation_accuracy_parameters = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUPER( ``eREPRESENTATION`` )
    public var ID: tIDENTIFIER?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"ID") {
          return cached.value as! tIDENTIFIER? 
        }
        let origin = super_eREPRESENTATION
        let value = tIDENTIFIER(origin.partialEntity._id__getter(SELF: origin))
        updateCache(derivedAttributeName:"ID", value:value)
        return value
      }
    }

    /// __EXPLICIT(DYNAMIC)(OBSERVED)__ attribute
    /// - origin: SUPER( ``eREPRESENTATION`` )
    public var CONTEXT_OF_ITEMS: eREPRESENTATION_CONTEXT {
      get {
        if let resolved = _representation._context_of_items__provider(complex: self.complexEntity) {
          let value = resolved._context_of_items__getter(complex: self.complexEntity)
          return value
        }
        else {
          return SDAI.UNWRAP( super_eREPRESENTATION.partialEntity._context_of_items )
        }
      }
      set(newValue) {
        if let _ = _representation._context_of_items__provider(complex: self.complexEntity) { return }

        let partial = super_eREPRESENTATION.partialEntity
        partial._context_of_items = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eNEUTRAL_SKETCH_REPRESENTATION`` )
    public var NEUTRAL_SKETCH_SEMANTICS: nCURVES_OR_AREA?  {
      get {
        return sub_eNEUTRAL_SKETCH_REPRESENTATION?.partialEntity._neutral_sketch_semantics
      }
      set(newValue) {
        guard let partial = sub_eNEUTRAL_SKETCH_REPRESENTATION?.super_eNEUTRAL_SKETCH_REPRESENTATION
          .partialEntity else { return }
        partial._neutral_sketch_semantics = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eREPRESENTATION`` )
    public var NAME: tLABEL {
      get {
        return SDAI.UNWRAP( super_eREPRESENTATION.partialEntity._name )
      }
      set(newValue) {
        let partial = super_eREPRESENTATION.partialEntity
        partial._name = SDAI.UNWRAP(newValue)
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_shape_representation.self) else { return nil }
      self.partialEntity = partial

      guard let super1 = complexEntity?.entityReference(eREPRESENTATION.self) else { return nil }
      self.super_eREPRESENTATION = super1

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "SHAPE_REPRESENTATION", type: self, explicitAttributeCount: 0)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: eREPRESENTATION.self)
      entityDef.add(supertype: eSHAPE_REPRESENTATION.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "DESCRIPTION", keyPath: \eSHAPE_REPRESENTATION.DESCRIPTION, 
        kind: .derived, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ITEMS", keyPath: \eSHAPE_REPRESENTATION.ITEMS, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "TESSELLATION_ACCURACY_PARAMETERS", keyPath: \eSHAPE_REPRESENTATION.TESSELLATION_ACCURACY_PARAMETERS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ID", keyPath: \eSHAPE_REPRESENTATION.ID, 
        kind: .derived, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "CONTEXT_OF_ITEMS", keyPath: \eSHAPE_REPRESENTATION.CONTEXT_OF_ITEMS, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NEUTRAL_SKETCH_SEMANTICS", keyPath: \eSHAPE_REPRESENTATION.NEUTRAL_SKETCH_SEMANTICS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "NAME", keyPath: \eSHAPE_REPRESENTATION.NAME, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: false)

      return entityDef
    }

  }
}
