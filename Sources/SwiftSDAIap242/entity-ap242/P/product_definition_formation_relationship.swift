/* file: product_definition_formation_relationship.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY product_definition_formation_relationship;
      id                              : identifier;
      name                            : label;
      description                     : OPTIONAL text;
      relating_product_definition_formation : product_definition_formation;
      related_product_definition_formation : product_definition_formation;
  END_ENTITY; -- product_definition_formation_relationship (line:26083 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  ENTITY(SELF)	product_definition_formation_relationship
    ATTR:  id,	TYPE: identifier -- EXPLICIT

    ATTR:  name,	TYPE: label -- EXPLICIT

    ATTR:  description,	TYPE: OPTIONAL text -- EXPLICIT

    ATTR:  relating_product_definition_formation,	TYPE: product_definition_formation -- EXPLICIT
      -- possibly overriden by
          ENTITY: attachment_slot_planned_to_realized,	TYPE: attachment_slot_as_planned
          ENTITY: collection_version_relationship,	TYPE: collection_version
          ENTITY: attachment_slot_design_to_realized,	TYPE: attachment_slot_design
          ENTITY: attachment_slot_design_to_planned,	TYPE: attachment_slot_design
          ENTITY: collection_version_sequence_relationship,	TYPE: collection_version
          ENTITY: interface_connector_planned_to_realized,	TYPE: interface_connector_as_planned
          ENTITY: interface_connector_design_to_realized,	TYPE: interface_connector_design
          ENTITY: interface_connector_design_to_planned,	TYPE: interface_connector_design

    ATTR:  related_product_definition_formation,	TYPE: product_definition_formation -- EXPLICIT
      -- possibly overriden by
          ENTITY: attachment_slot_planned_to_realized,	TYPE: attachment_slot_as_realized
          ENTITY: collection_version_relationship,	TYPE: collection_version
          ENTITY: attachment_slot_design_to_realized,	TYPE: attachment_slot_as_realized
          ENTITY: attachment_slot_design_to_planned,	TYPE: attachment_slot_as_planned
          ENTITY: collection_version_sequence_relationship,	TYPE: collection_version
          ENTITY: interface_connector_planned_to_realized,	TYPE: interface_connector_as_realized
          ENTITY: interface_connector_design_to_realized,	TYPE: interface_connector_as_realized
          ENTITY: interface_connector_design_to_planned,	TYPE: interface_connector_as_planned


  SUB- ENTITY(2)	attachment_slot_planned_to_realized
    REDCR: relating_product_definition_formation,	TYPE: attachment_slot_as_planned -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship

    REDCR: related_product_definition_formation,	TYPE: attachment_slot_as_realized -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship


  SUB- ENTITY(3)	collection_version_relationship
    REDCR: relating_product_definition_formation,	TYPE: collection_version -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship

    REDCR: related_product_definition_formation,	TYPE: collection_version -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship

    ATTR:  related_version,	TYPE: collection_version -- DERIVED
      := SELF\product_definition_formation_relationship.related_product_definition_formation

    ATTR:  relating_version,	TYPE: collection_version -- DERIVED
      := SELF\product_definition_formation_relationship.relating_product_definition_formation


  SUB- ENTITY(4)	alternative_solution_relationship
    ATTR:  relation_type,	TYPE: STRING -- EXPLICIT


  SUB- ENTITY(5)	product_planned_to_realized
    ATTR:  planned_product,	TYPE: product_definition_formation -- DERIVED
      := SELF\product_definition_formation_relationship.relating_product_definition_formation

    ATTR:  realized_product,	TYPE: product_definition_formation -- DERIVED
      := SELF\product_definition_formation_relationship.related_product_definition_formation


  SUB- ENTITY(6)	product_design_version_to_individual
    ATTR:  individual_product,	TYPE: product_definition_formation -- DERIVED
      := SELF\product_definition_formation_relationship.related_product_definition_formation

    ATTR:  product_design_version,	TYPE: product_definition_formation -- DERIVED
      := SELF\product_definition_formation_relationship.relating_product_definition_formation


  SUB- ENTITY(7)	attachment_slot_design_to_realized
    REDCR: relating_product_definition_formation,	TYPE: attachment_slot_design -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship

    REDCR: related_product_definition_formation,	TYPE: attachment_slot_as_realized -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship


  SUB- ENTITY(8)	attachment_slot_design_to_planned
    REDCR: relating_product_definition_formation,	TYPE: attachment_slot_design -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship

    REDCR: related_product_definition_formation,	TYPE: attachment_slot_as_planned -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship


  SUB- ENTITY(9)	collection_version_sequence_relationship
    REDCR: relating_product_definition_formation,	TYPE: collection_version -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship

    REDCR: related_product_definition_formation,	TYPE: collection_version -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship

    ATTR:  predecessor,	TYPE: collection_version -- DERIVED
      := SELF\product_definition_formation_relationship.relating_product_definition_formation

    ATTR:  successor,	TYPE: collection_version -- DERIVED
      := SELF\product_definition_formation_relationship.related_product_definition_formation


  SUB- ENTITY(10)	interface_connector_planned_to_realized
    REDCR: relating_product_definition_formation,	TYPE: interface_connector_as_planned -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship

    REDCR: related_product_definition_formation,	TYPE: interface_connector_as_realized -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship


  SUB- ENTITY(11)	interface_connector_design_to_realized
    REDCR: relating_product_definition_formation,	TYPE: interface_connector_design -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship

    REDCR: related_product_definition_formation,	TYPE: interface_connector_as_realized -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship


  SUB- ENTITY(12)	interface_connector_design_to_planned
    REDCR: relating_product_definition_formation,	TYPE: interface_connector_design -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship

    REDCR: related_product_definition_formation,	TYPE: interface_connector_as_planned -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_formation_relationship


*/


//MARK: - Partial Entity
  public final class _product_definition_formation_relationship : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.self
    }

    //ATTRIBUTES
    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _id: tIDENTIFIER // PLAIN EXPLICIT ATTRIBUTE

    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _name: tLABEL // PLAIN EXPLICIT ATTRIBUTE

    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _description: tTEXT?  // PLAIN EXPLICIT ATTRIBUTE

    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _relating_product_definition_formation: ePRODUCT_DEFINITION_FORMATION // PLAIN EXPLICIT ATTRIBUTE

    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _related_product_definition_formation: ePRODUCT_DEFINITION_FORMATION // PLAIN EXPLICIT ATTRIBUTE

    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      //SELECT data types (indirectly) referencing the current type as a member of the select list
      members.insert(SDAI.STRING(sDATE_AND_TIME_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_ITEMS.typeName)) // -> sCLASSIFICATION_ITEM
      members.insert(SDAI.STRING(sCHANGE_MANAGEMENT_OBJECT.typeName)) // -> sACTION_ITEMS
      members.insert(SDAI.STRING(sIR_USAGE_ITEM.typeName)) // -> sCLASSIFICATION_ITEM
      members.insert(SDAI.STRING(sMULTI_LANGUAGE_ATTRIBUTE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCHANGE_RELATIONSHIP_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sIDENTIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sTIME_INTERVAL_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sATTRIBUTE_CLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sEVIDENCE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sSECURITY_CLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_REQUEST_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCONTRACT_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sDATE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sANALYSED_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sAPPROVAL_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_METHOD_ITEMS.typeName)) // -> Self
      members.insert(SDAI.STRING(sPERSON_AND_ORGANIZATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sGENERAL_ORGANIZATIONAL_DATA_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sEVENT_OCCURRENCE_ITEM.typeName)) // -> sGENERAL_ORGANIZATIONAL_DATA_SELECT
      members.insert(SDAI.STRING(sORGANIZATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sDESCRIPTION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sATTRIBUTE_LANGUAGE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sDOCUMENT_REFERENCE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sGROUPABLE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCERTIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sEFFECTIVITY_ITEM.typeName)) // -> Self
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
      self._id.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._name.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._description?.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._relating_product_definition_formation.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._related_product_definition_formation.value.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      if let comp = self._id.value.isValueEqualOptionally(to: rhs._id.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._name.value.isValueEqualOptionally(to: rhs._name.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._description?.value.isValueEqualOptionally(to: rhs._description?.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._relating_product_definition_formation.value.isValueEqualOptionally(to: rhs._relating_product_definition_formation.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._related_product_definition_formation.value.isValueEqualOptionally(to: rhs._related_product_definition_formation.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._id.value.isValueEqualOptionally(to: rhs._id.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._name.value.isValueEqualOptionally(to: rhs._name.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._description?.value.isValueEqualOptionally(to: rhs._description?.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._relating_product_definition_formation.value.isValueEqualOptionally(to: rhs._relating_product_definition_formation.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._related_product_definition_formation.value.isValueEqualOptionally(to: rhs._related_product_definition_formation.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init(ID: tIDENTIFIER, NAME: tLABEL, DESCRIPTION: tTEXT? , RELATING_PRODUCT_DEFINITION_FORMATION: 
                ePRODUCT_DEFINITION_FORMATION, RELATED_PRODUCT_DEFINITION_FORMATION: 
                ePRODUCT_DEFINITION_FORMATION) {
      self._id = ID
      self._name = NAME
      self._description = DESCRIPTION
      self._relating_product_definition_formation = RELATING_PRODUCT_DEFINITION_FORMATION
      self._related_product_definition_formation = RELATED_PRODUCT_DEFINITION_FORMATION
      super.init(asAbstructSuperclass:())

    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 5
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      guard case .success(let p0) = exchangeStructure.recoverRequiredParameter(as: tIDENTIFIER.self, from: parameters[0])
      else { exchangeStructure.add(errorContext: "while recovering parameter #0 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p1) = exchangeStructure.recoverRequiredParameter(as: tLABEL.self, from: parameters[1])
      else { exchangeStructure.add(errorContext: "while recovering parameter #1 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p2) = exchangeStructure.recoverOptionalParameter(as: tTEXT.self, from: parameters[2])
      else { exchangeStructure.add(errorContext: "while recovering parameter #2 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p3) = exchangeStructure.recoverRequiredParameter(as: 
        ePRODUCT_DEFINITION_FORMATION.self, from: parameters[3])
      else { exchangeStructure.add(errorContext: "while recovering parameter #3 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p4) = exchangeStructure.recoverRequiredParameter(as: 
        ePRODUCT_DEFINITION_FORMATION.self, from: parameters[4])
      else { exchangeStructure.add(errorContext: "while recovering parameter #4 for entity(\(Self.entityName)) constructor"); return nil }

      self.init( ID: p0, NAME: p1, DESCRIPTION: p2, RELATING_PRODUCT_DEFINITION_FORMATION: p3, RELATED_PRODUCT_DEFINITION_FORMATION: p4 )
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY product_definition_formation_relationship;
      id                              : identifier;
      name                            : label;
      description                     : OPTIONAL text;
      relating_product_definition_formation : product_definition_formation;
      related_product_definition_formation : product_definition_formation;
  END_ENTITY; -- product_definition_formation_relationship (line:26083 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _product_definition_formation_relationship.self
    }
    public let partialEntity: _product_definition_formation_relationship

    //MARK: SUPERTYPES
    public var super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP: ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP { return self } 	// [1]

    //MARK: SUBTYPES
    public var sub_eATTACHMENT_SLOT_PLANNED_TO_REALIZED: eATTACHMENT_SLOT_PLANNED_TO_REALIZED? {	// [2]
      return self.complexEntity.entityReference(eATTACHMENT_SLOT_PLANNED_TO_REALIZED.self)
    }

    public var sub_eCOLLECTION_VERSION_RELATIONSHIP: eCOLLECTION_VERSION_RELATIONSHIP? {	// [3]
      return self.complexEntity.entityReference(eCOLLECTION_VERSION_RELATIONSHIP.self)
    }

    public var sub_eALTERNATIVE_SOLUTION_RELATIONSHIP: eALTERNATIVE_SOLUTION_RELATIONSHIP? {	// [4]
      return self.complexEntity.entityReference(eALTERNATIVE_SOLUTION_RELATIONSHIP.self)
    }

    public var sub_ePRODUCT_PLANNED_TO_REALIZED: ePRODUCT_PLANNED_TO_REALIZED? {	// [5]
      return self.complexEntity.entityReference(ePRODUCT_PLANNED_TO_REALIZED.self)
    }

    public var sub_ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL: ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL? {	// [6]
      return self.complexEntity.entityReference(ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL.self)
    }

    public var sub_eATTACHMENT_SLOT_DESIGN_TO_REALIZED: eATTACHMENT_SLOT_DESIGN_TO_REALIZED? {	// [7]
      return self.complexEntity.entityReference(eATTACHMENT_SLOT_DESIGN_TO_REALIZED.self)
    }

    public var sub_eATTACHMENT_SLOT_DESIGN_TO_PLANNED: eATTACHMENT_SLOT_DESIGN_TO_PLANNED? {	// [8]
      return self.complexEntity.entityReference(eATTACHMENT_SLOT_DESIGN_TO_PLANNED.self)
    }

    public var sub_eCOLLECTION_VERSION_SEQUENCE_RELATIONSHIP: eCOLLECTION_VERSION_SEQUENCE_RELATIONSHIP? {	// [9]
      return self.complexEntity.entityReference(eCOLLECTION_VERSION_SEQUENCE_RELATIONSHIP.self)
    }

    public var sub_eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED: eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED? {	// [10]
      return self.complexEntity.entityReference(eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED.self)
    }

    public var sub_eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED: eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED? {	// [11]
      return self.complexEntity.entityReference(eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED.self)
    }

    public var sub_eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED: eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED? {	// [12]
      return self.complexEntity.entityReference(eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED.self)
    }


    //MARK: ATTRIBUTES
    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var DESCRIPTION: tTEXT?  {
      get {
        return self.partialEntity._description
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._description = newValue
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``ePRODUCT_PLANNED_TO_REALIZED`` )
    public var REALIZED_PRODUCT: ePRODUCT_DEFINITION_FORMATION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"REALIZED_PRODUCT") {
          return cached.value as! ePRODUCT_DEFINITION_FORMATION? 
        }
        guard let origin = sub_ePRODUCT_PLANNED_TO_REALIZED else { return nil }
        let value = ePRODUCT_DEFINITION_FORMATION(origin.partialEntity._realized_product__getter(SELF: origin))
        updateCache(derivedAttributeName:"REALIZED_PRODUCT", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var RELATED_PRODUCT_DEFINITION_FORMATION: ePRODUCT_DEFINITION_FORMATION {
      get {
        return SDAI.UNWRAP( self.partialEntity._related_product_definition_formation )
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._related_product_definition_formation = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL`` )
    public var PRODUCT_DESIGN_VERSION: ePRODUCT_DEFINITION_FORMATION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"PRODUCT_DESIGN_VERSION") {
          return cached.value as! ePRODUCT_DEFINITION_FORMATION? 
        }
        guard let origin = sub_ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL else { return nil }
        let value = ePRODUCT_DEFINITION_FORMATION(
          origin.partialEntity._product_design_version__getter(SELF: origin))
        updateCache(derivedAttributeName:"PRODUCT_DESIGN_VERSION", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var RELATING_PRODUCT_DEFINITION_FORMATION: ePRODUCT_DEFINITION_FORMATION {
      get {
        return SDAI.UNWRAP( self.partialEntity._relating_product_definition_formation )
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._relating_product_definition_formation = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eCOLLECTION_VERSION_RELATIONSHIP`` )
    public var RELATING_VERSION: eCOLLECTION_VERSION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"RELATING_VERSION") {
          return cached.value as! eCOLLECTION_VERSION? 
        }
        guard let origin = sub_eCOLLECTION_VERSION_RELATIONSHIP else { return nil }
        let value = eCOLLECTION_VERSION(origin.partialEntity._relating_version__getter(SELF: origin))
        updateCache(derivedAttributeName:"RELATING_VERSION", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eALTERNATIVE_SOLUTION_RELATIONSHIP`` )
    public var RELATION_TYPE: SDAI.STRING?  {
      get {
        return sub_eALTERNATIVE_SOLUTION_RELATIONSHIP?.partialEntity._relation_type
      }
      set(newValue) {
        guard let partial = sub_eALTERNATIVE_SOLUTION_RELATIONSHIP?.super_eALTERNATIVE_SOLUTION_RELATIONSHIP
          .partialEntity else { return }
        partial._relation_type = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``ePRODUCT_PLANNED_TO_REALIZED`` )
    public var PLANNED_PRODUCT: ePRODUCT_DEFINITION_FORMATION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"PLANNED_PRODUCT") {
          return cached.value as! ePRODUCT_DEFINITION_FORMATION? 
        }
        guard let origin = sub_ePRODUCT_PLANNED_TO_REALIZED else { return nil }
        let value = ePRODUCT_DEFINITION_FORMATION(origin.partialEntity._planned_product__getter(SELF: origin))
        updateCache(derivedAttributeName:"PLANNED_PRODUCT", value:value)
        return value
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eCOLLECTION_VERSION_SEQUENCE_RELATIONSHIP`` )
    public var SUCCESSOR: eCOLLECTION_VERSION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"SUCCESSOR") {
          return cached.value as! eCOLLECTION_VERSION? 
        }
        guard let origin = sub_eCOLLECTION_VERSION_SEQUENCE_RELATIONSHIP else { return nil }
        let value = eCOLLECTION_VERSION(origin.partialEntity._successor__getter(SELF: origin))
        updateCache(derivedAttributeName:"SUCCESSOR", value:value)
        return value
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL`` )
    public var INDIVIDUAL_PRODUCT: ePRODUCT_DEFINITION_FORMATION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"INDIVIDUAL_PRODUCT") {
          return cached.value as! ePRODUCT_DEFINITION_FORMATION? 
        }
        guard let origin = sub_ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL else { return nil }
        let value = ePRODUCT_DEFINITION_FORMATION(
          origin.partialEntity._individual_product__getter(SELF: origin))
        updateCache(derivedAttributeName:"INDIVIDUAL_PRODUCT", value:value)
        return value
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eCOLLECTION_VERSION_RELATIONSHIP`` )
    public var RELATED_VERSION: eCOLLECTION_VERSION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"RELATED_VERSION") {
          return cached.value as! eCOLLECTION_VERSION? 
        }
        guard let origin = sub_eCOLLECTION_VERSION_RELATIONSHIP else { return nil }
        let value = eCOLLECTION_VERSION(origin.partialEntity._related_version__getter(SELF: origin))
        updateCache(derivedAttributeName:"RELATED_VERSION", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var ID: tIDENTIFIER {
      get {
        return SDAI.UNWRAP( self.partialEntity._id )
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._id = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var NAME: tLABEL {
      get {
        return SDAI.UNWRAP( self.partialEntity._name )
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._name = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eCOLLECTION_VERSION_SEQUENCE_RELATIONSHIP`` )
    public var PREDECESSOR: eCOLLECTION_VERSION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"PREDECESSOR") {
          return cached.value as! eCOLLECTION_VERSION? 
        }
        guard let origin = sub_eCOLLECTION_VERSION_SEQUENCE_RELATIONSHIP else { return nil }
        let value = eCOLLECTION_VERSION(origin.partialEntity._predecessor__getter(SELF: origin))
        updateCache(derivedAttributeName:"PREDECESSOR", value:value)
        return value
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_product_definition_formation_relationship.self) else { return nil }
      self.partialEntity = partial

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }

    //SIMPLE ENTITY REFERENCE
    public convenience init?(_ partial:_product_definition_formation_relationship) {
      let complex = SDAI.ComplexEntity(entities:[partial])
      self.init(complex: complex)
    }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "PRODUCT_DEFINITION_FORMATION_RELATIONSHIP", type: self, explicitAttributeCount: 5)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "DESCRIPTION", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.DESCRIPTION, 
        kind: .explicitOptional, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "REALIZED_PRODUCT", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.REALIZED_PRODUCT, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATED_PRODUCT_DEFINITION_FORMATION", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION_FORMATION, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "PRODUCT_DESIGN_VERSION", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.PRODUCT_DESIGN_VERSION, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATING_PRODUCT_DEFINITION_FORMATION", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION_FORMATION, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATING_VERSION", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.RELATING_VERSION, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATION_TYPE", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.RELATION_TYPE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "PLANNED_PRODUCT", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.PLANNED_PRODUCT, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "SUCCESSOR", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.SUCCESSOR, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "INDIVIDUAL_PRODUCT", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.INDIVIDUAL_PRODUCT, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATED_VERSION", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.RELATED_VERSION, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ID", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.ID, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "NAME", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.NAME, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "PREDECESSOR", keyPath: \ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.PREDECESSOR, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)

      return entityDef
    }

  }
}
