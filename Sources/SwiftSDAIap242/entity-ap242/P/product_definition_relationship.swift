/* file: product_definition_relationship.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY product_definition_relationship;
      id                           : identifier;
      name                         : label;
      description                  : OPTIONAL text;
      relating_product_definition  : product_definition_or_reference;
      related_product_definition   : product_definition_or_reference; (* observed by
          product_definition_occurrence.assembly_usages
          *)
  END_ENTITY; -- product_definition_relationship (line:26187 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  ENTITY(SELF)	product_definition_relationship
    ATTR:  id,	TYPE: identifier -- EXPLICIT

    ATTR:  name,	TYPE: label -- EXPLICIT

    ATTR:  description,	TYPE: OPTIONAL text -- EXPLICIT

    ATTR:  relating_product_definition,	TYPE: product_definition_or_reference -- EXPLICIT (DYNAMIC)
      -- possibly overriden by
          ENTITY: linear_array_component_definition_link,	TYPE: linear_array_placement_group_component
          ENTITY: multi_level_reference_designator,	TYPE: product_definition	(as DERIVED)
          ENTITY: assembly_group_component_definition_placement_link,	TYPE: assembly_component

    ATTR:  related_product_definition,	TYPE: product_definition_or_reference -- EXPLICIT (DYNAMIC)
      -- observed by
        ENTITY(1): product_definition_occurrence,	ATTR: assembly_usages,	TYPE: SET [0 : ?] OF
          assembly_component_usage
      -- possibly overriden by
          ENTITY: linear_array_component_definition_link,	TYPE: linear_array_placement_group_component
          ENTITY: multi_level_reference_designator,	TYPE: product_definition_or_reference	(as DERIVED)
          ENTITY: component_definition,	TYPE: component_definition	(as DERIVED)
          ENTITY: assembly_group_component_definition_placement_link,	TYPE: assembly_component


  SUB- ENTITY(2)	interface_definition_connection
    (no local attributes)

  SUB- ENTITY(3)	product_in_attachment_slot
    (no local attributes)

  SUB- ENTITY(4)	product_material_composition_relationship
    ATTR:  class,	TYPE: label -- EXPLICIT

    ATTR:  constituent_amount,	TYPE: SET [1 : ?] OF characterized_product_composition_value -- EXPLICIT

    ATTR:  composition_basis,	TYPE: label -- EXPLICIT

    ATTR:  determination_method,	TYPE: text -- EXPLICIT


  SUB- ENTITY(5)	linear_array_component_definition_link
    REDCR: relating_product_definition,	TYPE: linear_array_placement_group_component -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_relationship

    REDCR: related_product_definition,	TYPE: linear_array_placement_group_component -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_relationship


  SUB- ENTITY(6)	mated_part_relationship
    ATTR:  items,	TYPE: SET [0 : ?] OF product_definition -- EXPLICIT

    REDCR: assigned_group,	TYPE: mated_part_relationship -- DERIVED (DYNAMIC)
      := SELF
      -- OVERRIDING ENTITY: group_assignment

    REDCR: definition,	TYPE: mated_part_relationship -- DERIVED (DYNAMIC)
      := SELF
      -- OVERRIDING ENTITY: property_definition

    REDCR: of_shape,	TYPE: mated_part_relationship -- DERIVED (DYNAMIC)
      := SELF
      -- OVERRIDING ENTITY: shape_aspect


  SUB- ENTITY(7)	make_from_usage_option
    ATTR:  ranking,	TYPE: INTEGER -- EXPLICIT

    ATTR:  ranking_rationale,	TYPE: text -- EXPLICIT

    ATTR:  quantity,	TYPE: measure_with_unit -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(8)	specified_higher_usage_occurrence
    ATTR:  upper_usage,	TYPE: assembly_component_usage -- EXPLICIT

    ATTR:  next_usage,	TYPE: next_assembly_usage_occurrence -- EXPLICIT


  SUB- ENTITY(9)	quantified_assembly_component_usage
    ATTR:  quantity,	TYPE: measure_with_unit -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(10)	additive_manufacturing_build_plate_relationship
    (no local attributes)

  SUB- ENTITY(11)	additive_manufacturing_support_structure_geometry_relationship
    (no local attributes)

  SUB- ENTITY(12)	additive_manufacturing_setup_workpiece_relationship
    (no local attributes)

  SUB- ENTITY(13)	additive_manufacturing_setup_relationship
    (no local attributes)

  SUB- ENTITY(14)	next_assembly_usage_occurrence
    ATTR:  product_definition_occurrence_id,	TYPE: identifier -- DERIVED
      := SELF\product_definition_relationship.related_product_definition\product_definition_occurrence.id


  SUB- ENTITY(15)	multi_level_reference_designator
    ATTR:  location,	TYPE: LIST [1 : ?] OF UNIQUE next_assembly_usage_occurrence -- EXPLICIT

    REDCR: relating_product_definition,	TYPE: product_definition -- DERIVED (DYNAMIC)
      := location[1]\product_definition_relationship.relating_product_definition
      -- OVERRIDING ENTITY: product_definition_relationship

    REDCR: related_product_definition,	TYPE: product_definition_or_reference -- DERIVED (DYNAMIC)
      := location[HIINDEX( location )]\product_definition_relationship.related_product_definition
      -- OVERRIDING ENTITY: product_definition_relationship

    ATTR:  leaf,	TYPE: product_definition_or_reference -- DERIVED
      := related_product_definition

    ATTR:  root,	TYPE: product_definition -- DERIVED
      := relating_product_definition


  SUB- ENTITY(16)	promissory_usage_occurrence
    (no local attributes)

  SUB- ENTITY(17)	assembly_component_usage
    ATTR:  reference_designator,	TYPE: OPTIONAL identifier -- EXPLICIT


  SUB- ENTITY(18)	definitional_product_definition_usage
    (no local attributes)

  SUB- ENTITY(19)	product_definition_usage
    (no local attributes)

  SUB- ENTITY(20)	design_make_from_relationship
    (no local attributes)

  SUB- ENTITY(21)	zone_breakdown_context
    (no local attributes)

  SUB- ENTITY(22)	system_breakdown_context
    (no local attributes)

  SUB- ENTITY(23)	physical_breakdown_context
    (no local attributes)

  SUB- ENTITY(24)	functional_breakdown_context
    (no local attributes)

  SUB- ENTITY(25)	breakdown_context
    (no local attributes)

  SUB- ENTITY(26)	breakdown_of
    (no local attributes)

  SUB- ENTITY(27)	interface_definition_for
    (no local attributes)

  SUB- ENTITY(28)	attachment_slot_on_product
    (no local attributes)

  SUB- ENTITY(29)	requirement_view_definition_relationship
    (no local attributes)

  SUB- ENTITY(30)	functional_element_usage
    (no local attributes)

  SUB- ENTITY(31)	zone_element_usage
    (no local attributes)

  SUB- ENTITY(32)	system_element_usage
    (no local attributes)

  SUB- ENTITY(33)	physical_element_usage
    (no local attributes)

  SUB- ENTITY(34)	breakdown_element_usage
    (no local attributes)

  SUB- ENTITY(35)	interface_component
    (no local attributes)

  SUB- ENTITY(36)	physical_component
    (no local attributes)

  SUB- ENTITY(37)	thermal_component
    (no local attributes)

  SUB- ENTITY(38)	linear_array_placement_group_component
    (no local attributes)

  SUB- ENTITY(39)	rectangular_array_placement_group_component
    (no local attributes)

  SUB- ENTITY(40)	array_placement_group
    (no local attributes)

  SUB- ENTITY(41)	interfaced_group_component
    (no local attributes)

  SUB- ENTITY(42)	assembly_group_component
    (no local attributes)

  SUB- ENTITY(43)	assembly_component
    REDCR: definition,	TYPE: assembly_component -- DERIVED (DYNAMIC)
      := SELF
      -- OVERRIDING ENTITY: property_definition


  SUB- ENTITY(44)	component_definition
    REDCR: related_product_definition,	TYPE: component_definition -- DERIVED (DYNAMIC)
      := SELF
      -- OVERRIDING ENTITY: product_definition_relationship


  SUB- ENTITY(45)	supplied_part_relationship
    (no local attributes)

  SUB- ENTITY(46)	assembly_group_component_definition_placement_link
    REDCR: relating_product_definition,	TYPE: assembly_component -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_relationship

    REDCR: related_product_definition,	TYPE: assembly_component -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_relationship


*/


//MARK: - Partial Entity
  public final class _product_definition_relationship : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      ePRODUCT_DEFINITION_RELATIONSHIP.self
    }

    //ATTRIBUTES
    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _id: tIDENTIFIER // PLAIN EXPLICIT ATTRIBUTE

    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _name: tLABEL // PLAIN EXPLICIT ATTRIBUTE

    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _description: tTEXT?  // PLAIN EXPLICIT ATTRIBUTE

    /// EXPLICIT ATTRIBUTE 
    /// - see the corresponding attribute accesser in the entity reference definition for the attribute value dynamic lookup logic
    public internal(set) var _relating_product_definition: sPRODUCT_DEFINITION_OR_REFERENCE?  // PLAIN EXPLICIT ATTRIBUTE

    internal static func _relating_product_definition__provider(complex: SDAI.ComplexEntity) -> ePRODUCT_DEFINITION_RELATIONSHIP__RELATING_PRODUCT_DEFINITION__provider? {
      let resolved = complex.resolvePartialEntityInstance(from: [
        _multi_level_reference_designator.typeIdentity])
      return resolved as? ePRODUCT_DEFINITION_RELATIONSHIP__RELATING_PRODUCT_DEFINITION__provider
    }

    /// EXPLICIT ATTRIBUTE (OBSERVED)
    /// - see the corresponding attribute accesser in the entity reference definition for the attribute value dynamic lookup logic
    public internal(set) var _related_product_definition: sPRODUCT_DEFINITION_OR_REFERENCE? { // OBSERVED EXPLICIT ATTRIBUTE
      get {
        return __related_product_definition?.copy()
      } // getter
      set {
        var newValue = newValue
        let observer = SDAI.EntityReferenceObserver(referencer: self, observerCode: _related_product_definition__observer.self)
        newValue?.configure(with: observer)
        observer.observe(removing: SDAI.UNWRAP(seq:__related_product_definition?.entityReferences),
          adding: SDAI.UNWRAP(seq: newValue?.entityReferences) )
      } // setter
    }

    /// backing storage for observed attribute
    /// - see the corresponding attribute accesser in the entity reference definition for the attribute value dynamic lookup logic
    private var __related_product_definition: sPRODUCT_DEFINITION_OR_REFERENCE? 

    /// attribute observer code
    internal class _related_product_definition__observer: SDAI.EntityReferenceObserver.ObserverCode {
      final override class func observe<RemovingEntities: Sequence, AddingEntities: Sequence>(
        referencer: SDAI.PartialEntity, removing: RemovingEntities, adding: AddingEntities )
        where RemovingEntities.Element: SDAI.EntityReference, AddingEntities.Element: SDAI.EntityReference
      {
        for referencedComplex in removing.map({ $0.complexEntity }) {
          for referencerOwner in referencer.owners {
            //OBSERVING ENTITY: ePRODUCT_DEFINITION_OCCURRENCE
            referencedComplex.partialEntityInstance(_product_definition_occurrence.self)?
              ._assembly_usages__observeRemovedReference(in: referencerOwner)
          }
        }

        for referencedComplex in adding.map({ $0.complexEntity }) {
          for referencerOwner in referencer.owners {
            //OBSERVING ENTITY: ePRODUCT_DEFINITION_OCCURRENCE
            referencedComplex.partialEntityInstance(_product_definition_occurrence.self)?
              ._assembly_usages__observeAddedReference(in: referencerOwner)
          }
        }
      }

      final override class func observe(newReferencerOwner referencerOwner: SDAI.ComplexEntity) {
        guard let attrValue = referencerOwner.partialEntityInstance(_product_definition_relationship.self)?._related_product_definition else { return }
        for referencedComplex in attrValue.entityReferences.map({ $0.complexEntity }) {
        //OBSERVING ENTITY: ePRODUCT_DEFINITION_OCCURRENCE
        referencedComplex.partialEntityInstance(_product_definition_occurrence.self)?
          ._assembly_usages__observeAddedReference(in: referencerOwner)
        }
      }

      final override class func observe(leavingReferencerOwner referencerOwner: SDAI.ComplexEntity) {
        guard let attrValue = referencerOwner.partialEntityInstance(_product_definition_relationship.self)?._related_product_definition else { return }
        for referencedComplex in attrValue.entityReferences.map({ $0.complexEntity }) {
        //OBSERVING ENTITY: ePRODUCT_DEFINITION_OCCURRENCE
        referencedComplex.partialEntityInstance(_product_definition_occurrence.self)?
          ._assembly_usages__observe(leavingReferencerOwner: referencerOwner)
        }
      }

    }

    internal static func _related_product_definition__provider(complex: SDAI.ComplexEntity) -> ePRODUCT_DEFINITION_RELATIONSHIP__RELATED_PRODUCT_DEFINITION__provider? {
      let resolved = complex.resolvePartialEntityInstance(from: [
        _multi_level_reference_designator.typeIdentity, _component_definition.typeIdentity])
      return resolved as? ePRODUCT_DEFINITION_RELATIONSHIP__RELATED_PRODUCT_DEFINITION__provider
    }

    //PARTIAL COMPLEX ENTITY SUPPORT
    final public override class func fixupPartialComplexEntityAttributes(partialComplex: SDAI.ComplexEntity, baseComplex: SDAI.ComplexEntity) {
      guard let pe = partialComplex.partialEntityInstance(_product_definition_relationship.self) else { return }

      if pe._relating_product_definition == nil, 
        self._relating_product_definition__provider(complex: partialComplex) == nil, 
        let base__relating_product_definition__provider = self._relating_product_definition__provider(complex: baseComplex) {
        pe._relating_product_definition = base__relating_product_definition__provider._relating_product_definition__getter(complex: baseComplex)
      }

      if pe._related_product_definition == nil, 
        self._related_product_definition__provider(complex: partialComplex) == nil, 
        let base__related_product_definition__provider = self._related_product_definition__provider(complex: baseComplex) {
        pe._related_product_definition = base__related_product_definition__provider._related_product_definition__getter(complex: baseComplex)
      }
    }
    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      //SELECT data types (indirectly) referencing the current type as a member of the select list
      members.insert(SDAI.STRING(sDATE_AND_TIME_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_ITEMS.typeName)) // -> sCLASSIFICATION_ITEM
      members.insert(SDAI.STRING(sCHANGE_MANAGEMENT_OBJECT.typeName)) // -> sACTION_ITEMS
      members.insert(SDAI.STRING(sIR_USAGE_ITEM.typeName)) // -> sCLASSIFICATION_ITEM
      members.insert(SDAI.STRING(sMULTI_LANGUAGE_ATTRIBUTE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sSTATE_OBSERVED_OF_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCHANGE_RELATIONSHIP_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sPRESENTED_ITEM_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sITEM_IDENTIFIED_REPRESENTATION_USAGE_DEFINITION.typeName)) // -> Self
      members.insert(SDAI.STRING(sIDENTIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sTIME_INTERVAL_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sATTRIBUTE_CLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sREQUIREMENT_SOURCE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sEVIDENCE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sSECURITY_CLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_REQUEST_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCONTRACT_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sDRAUGHTING_MODEL_ITEM_DEFINITION.typeName)) // -> Self
      members.insert(SDAI.STRING(sDATE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sSTATE_TYPE_OF_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sANALYSED_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sAPPROVAL_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_METHOD_ITEMS.typeName)) // -> Self
      members.insert(SDAI.STRING(sLOCATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sREQUIREMENT_ASSIGNED_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sREQUIREMENT_SATISFACTION_ITEM.typeName)) // -> sREQUIREMENT_ASSIGNED_ITEM
      members.insert(SDAI.STRING(sCHARACTERIZED_PRODUCT_DEFINITION.typeName)) // -> Self
      members.insert(SDAI.STRING(sCHARACTERIZED_DEFINITION.typeName)) // -> sCHARACTERIZED_PRODUCT_DEFINITION
      members.insert(SDAI.STRING(sPERSON_AND_ORGANIZATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sGENERAL_ORGANIZATIONAL_DATA_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sEVENT_OCCURRENCE_ITEM.typeName)) // -> sGENERAL_ORGANIZATIONAL_DATA_SELECT
      members.insert(SDAI.STRING(sORGANIZATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sINSTANCE_USAGE_CONTEXT_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sDESCRIPTION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sEQUIVALENCE_PRODUCT_DATA_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sATTRIBUTE_LANGUAGE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sDOCUMENT_REFERENCE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sGROUPABLE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCERTIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sEFFECTIVITY_ITEM.typeName)) // -> Self
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
      self._id.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._name.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._description?.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._relating_product_definition?.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._related_product_definition?.value.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      if let comp = self._id.value.isValueEqualOptionally(to: rhs._id.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._name.value.isValueEqualOptionally(to: rhs._name.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._description?.value.isValueEqualOptionally(to: rhs._description?.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._relating_product_definition?.value.isValueEqualOptionally(to: rhs._relating_product_definition?.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._related_product_definition?.value.isValueEqualOptionally(to: rhs._related_product_definition?.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._id.value.isValueEqualOptionally(to: rhs._id.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._name.value.isValueEqualOptionally(to: rhs._name.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._description?.value.isValueEqualOptionally(to: rhs._description?.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._relating_product_definition?.value.isValueEqualOptionally(to: rhs._relating_product_definition?.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._related_product_definition?.value.isValueEqualOptionally(to: rhs._related_product_definition?.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init(ID: tIDENTIFIER, NAME: tLABEL, DESCRIPTION: tTEXT? , RELATING_PRODUCT_DEFINITION: 
                sPRODUCT_DEFINITION_OR_REFERENCE? , RELATED_PRODUCT_DEFINITION: 
                sPRODUCT_DEFINITION_OR_REFERENCE? ) {
      self._id = ID
      self._name = NAME
      self._description = DESCRIPTION
      self._relating_product_definition = RELATING_PRODUCT_DEFINITION
      self.__related_product_definition = RELATED_PRODUCT_DEFINITION
      super.init(asAbstructSuperclass:())

      self._related_product_definition?.configure(with: SDAI.EntityReferenceObserver(referencer: self, observerCode: _related_product_definition__observer.self))
    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 5
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      guard case .success(let p0) = exchangeStructure.recoverRequiredParameter(as: tIDENTIFIER.self, from: parameters[0])
      else { exchangeStructure.add(errorContext: "while recovering parameter #0 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p1) = exchangeStructure.recoverRequiredParameter(as: tLABEL.self, from: parameters[1])
      else { exchangeStructure.add(errorContext: "while recovering parameter #1 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p2) = exchangeStructure.recoverOptionalParameter(as: tTEXT.self, from: parameters[2])
      else { exchangeStructure.add(errorContext: "while recovering parameter #2 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p3) = exchangeStructure.recoverOmittableParameter(as: 
        sPRODUCT_DEFINITION_OR_REFERENCE.self, from: parameters[3])
      else { exchangeStructure.add(errorContext: "while recovering parameter #3 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p4) = exchangeStructure.recoverOmittableParameter(as: 
        sPRODUCT_DEFINITION_OR_REFERENCE.self, from: parameters[4])
      else { exchangeStructure.add(errorContext: "while recovering parameter #4 for entity(\(Self.entityName)) constructor"); return nil }

      self.init( ID: p0, NAME: p1, DESCRIPTION: p2, RELATING_PRODUCT_DEFINITION: p3, RELATED_PRODUCT_DEFINITION: p4 )
    }

    /// broadcasting a new complex entity becoming an owner of the partial entity
    final public override func broadcast(addedToComplex complex: SDAI.ComplexEntity) {
      _related_product_definition__observer.observe(newReferencerOwner: complex)
    }

    /// broadcasting a complex entity withdrawing an owner of the partial entity
    final public override func broadcast(removedFromComplex complex: SDAI.ComplexEntity) {
      _related_product_definition__observer.observe(leavingReferencerOwner: complex)
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY product_definition_relationship;
      id                           : identifier;
      name                         : label;
      description                  : OPTIONAL text;
      relating_product_definition  : product_definition_or_reference;
      related_product_definition   : product_definition_or_reference; (* observed by
          product_definition_occurrence.assembly_usages
          *)
  END_ENTITY; -- product_definition_relationship (line:26187 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class ePRODUCT_DEFINITION_RELATIONSHIP : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _product_definition_relationship.self
    }
    public let partialEntity: _product_definition_relationship

    //MARK: SUPERTYPES
    public var super_ePRODUCT_DEFINITION_RELATIONSHIP: ePRODUCT_DEFINITION_RELATIONSHIP { return self } 	// [1]

    //MARK: SUBTYPES
    public var sub_eINTERFACE_DEFINITION_CONNECTION: eINTERFACE_DEFINITION_CONNECTION? {	// [2]
      return self.complexEntity.entityReference(eINTERFACE_DEFINITION_CONNECTION.self)
    }

    public var sub_ePRODUCT_IN_ATTACHMENT_SLOT: ePRODUCT_IN_ATTACHMENT_SLOT? {	// [3]
      return self.complexEntity.entityReference(ePRODUCT_IN_ATTACHMENT_SLOT.self)
    }

    public var sub_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP: ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP? {	// [4]
      return self.complexEntity.entityReference(ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP.self)
    }

    public var sub_eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK: eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK? {	// [5]
      return self.complexEntity.entityReference(eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK.self)
    }

    public var sub_eMATED_PART_RELATIONSHIP: eMATED_PART_RELATIONSHIP? {	// [6]
      return self.complexEntity.entityReference(eMATED_PART_RELATIONSHIP.self)
    }

    public var sub_eMAKE_FROM_USAGE_OPTION: eMAKE_FROM_USAGE_OPTION? {	// [7]
      return self.complexEntity.entityReference(eMAKE_FROM_USAGE_OPTION.self)
    }

    public var sub_eSPECIFIED_HIGHER_USAGE_OCCURRENCE: eSPECIFIED_HIGHER_USAGE_OCCURRENCE? {	// [8]
      return self.complexEntity.entityReference(eSPECIFIED_HIGHER_USAGE_OCCURRENCE.self)
    }

    public var sub_eQUANTIFIED_ASSEMBLY_COMPONENT_USAGE: eQUANTIFIED_ASSEMBLY_COMPONENT_USAGE? {	// [9]
      return self.complexEntity.entityReference(eQUANTIFIED_ASSEMBLY_COMPONENT_USAGE.self)
    }

    public var sub_eADDITIVE_MANUFACTURING_BUILD_PLATE_RELATIONSHIP: eADDITIVE_MANUFACTURING_BUILD_PLATE_RELATIONSHIP? {	// [10]
      return self.complexEntity.entityReference(eADDITIVE_MANUFACTURING_BUILD_PLATE_RELATIONSHIP.self)
    }

    public var sub_eADDITIVE_MANUFACTURING_SUPPORT_STRUCTURE_GEOMETRY_RELATIONSHIP: eADDITIVE_MANUFACTURING_SUPPORT_STRUCTURE_GEOMETRY_RELATIONSHIP? {	// [11]
      return self.complexEntity.entityReference(eADDITIVE_MANUFACTURING_SUPPORT_STRUCTURE_GEOMETRY_RELATIONSHIP.self)
    }

    public var sub_eADDITIVE_MANUFACTURING_SETUP_WORKPIECE_RELATIONSHIP: eADDITIVE_MANUFACTURING_SETUP_WORKPIECE_RELATIONSHIP? {	// [12]
      return self.complexEntity.entityReference(eADDITIVE_MANUFACTURING_SETUP_WORKPIECE_RELATIONSHIP.self)
    }

    public var sub_eADDITIVE_MANUFACTURING_SETUP_RELATIONSHIP: eADDITIVE_MANUFACTURING_SETUP_RELATIONSHIP? {	// [13]
      return self.complexEntity.entityReference(eADDITIVE_MANUFACTURING_SETUP_RELATIONSHIP.self)
    }

    public var sub_eNEXT_ASSEMBLY_USAGE_OCCURRENCE: eNEXT_ASSEMBLY_USAGE_OCCURRENCE? {	// [14]
      return self.complexEntity.entityReference(eNEXT_ASSEMBLY_USAGE_OCCURRENCE.self)
    }

    public var sub_eMULTI_LEVEL_REFERENCE_DESIGNATOR: eMULTI_LEVEL_REFERENCE_DESIGNATOR? {	// [15]
      return self.complexEntity.entityReference(eMULTI_LEVEL_REFERENCE_DESIGNATOR.self)
    }

    public var sub_ePROMISSORY_USAGE_OCCURRENCE: ePROMISSORY_USAGE_OCCURRENCE? {	// [16]
      return self.complexEntity.entityReference(ePROMISSORY_USAGE_OCCURRENCE.self)
    }

    public var sub_eASSEMBLY_COMPONENT_USAGE: eASSEMBLY_COMPONENT_USAGE? {	// [17]
      return self.complexEntity.entityReference(eASSEMBLY_COMPONENT_USAGE.self)
    }

    public var sub_eDEFINITIONAL_PRODUCT_DEFINITION_USAGE: eDEFINITIONAL_PRODUCT_DEFINITION_USAGE? {	// [18]
      return self.complexEntity.entityReference(eDEFINITIONAL_PRODUCT_DEFINITION_USAGE.self)
    }

    public var sub_ePRODUCT_DEFINITION_USAGE: ePRODUCT_DEFINITION_USAGE? {	// [19]
      return self.complexEntity.entityReference(ePRODUCT_DEFINITION_USAGE.self)
    }

    public var sub_eDESIGN_MAKE_FROM_RELATIONSHIP: eDESIGN_MAKE_FROM_RELATIONSHIP? {	// [20]
      return self.complexEntity.entityReference(eDESIGN_MAKE_FROM_RELATIONSHIP.self)
    }

    public var sub_eZONE_BREAKDOWN_CONTEXT: eZONE_BREAKDOWN_CONTEXT? {	// [21]
      return self.complexEntity.entityReference(eZONE_BREAKDOWN_CONTEXT.self)
    }

    public var sub_eSYSTEM_BREAKDOWN_CONTEXT: eSYSTEM_BREAKDOWN_CONTEXT? {	// [22]
      return self.complexEntity.entityReference(eSYSTEM_BREAKDOWN_CONTEXT.self)
    }

    public var sub_ePHYSICAL_BREAKDOWN_CONTEXT: ePHYSICAL_BREAKDOWN_CONTEXT? {	// [23]
      return self.complexEntity.entityReference(ePHYSICAL_BREAKDOWN_CONTEXT.self)
    }

    public var sub_eFUNCTIONAL_BREAKDOWN_CONTEXT: eFUNCTIONAL_BREAKDOWN_CONTEXT? {	// [24]
      return self.complexEntity.entityReference(eFUNCTIONAL_BREAKDOWN_CONTEXT.self)
    }

    public var sub_eBREAKDOWN_CONTEXT: eBREAKDOWN_CONTEXT? {	// [25]
      return self.complexEntity.entityReference(eBREAKDOWN_CONTEXT.self)
    }

    public var sub_eBREAKDOWN_OF: eBREAKDOWN_OF? {	// [26]
      return self.complexEntity.entityReference(eBREAKDOWN_OF.self)
    }

    public var sub_eINTERFACE_DEFINITION_FOR: eINTERFACE_DEFINITION_FOR? {	// [27]
      return self.complexEntity.entityReference(eINTERFACE_DEFINITION_FOR.self)
    }

    public var sub_eATTACHMENT_SLOT_ON_PRODUCT: eATTACHMENT_SLOT_ON_PRODUCT? {	// [28]
      return self.complexEntity.entityReference(eATTACHMENT_SLOT_ON_PRODUCT.self)
    }

    public var sub_eREQUIREMENT_VIEW_DEFINITION_RELATIONSHIP: eREQUIREMENT_VIEW_DEFINITION_RELATIONSHIP? {	// [29]
      return self.complexEntity.entityReference(eREQUIREMENT_VIEW_DEFINITION_RELATIONSHIP.self)
    }

    public var sub_eFUNCTIONAL_ELEMENT_USAGE: eFUNCTIONAL_ELEMENT_USAGE? {	// [30]
      return self.complexEntity.entityReference(eFUNCTIONAL_ELEMENT_USAGE.self)
    }

    public var sub_eZONE_ELEMENT_USAGE: eZONE_ELEMENT_USAGE? {	// [31]
      return self.complexEntity.entityReference(eZONE_ELEMENT_USAGE.self)
    }

    public var sub_eSYSTEM_ELEMENT_USAGE: eSYSTEM_ELEMENT_USAGE? {	// [32]
      return self.complexEntity.entityReference(eSYSTEM_ELEMENT_USAGE.self)
    }

    public var sub_ePHYSICAL_ELEMENT_USAGE: ePHYSICAL_ELEMENT_USAGE? {	// [33]
      return self.complexEntity.entityReference(ePHYSICAL_ELEMENT_USAGE.self)
    }

    public var sub_eBREAKDOWN_ELEMENT_USAGE: eBREAKDOWN_ELEMENT_USAGE? {	// [34]
      return self.complexEntity.entityReference(eBREAKDOWN_ELEMENT_USAGE.self)
    }

    public var sub_eINTERFACE_COMPONENT: eINTERFACE_COMPONENT? {	// [35]
      return self.complexEntity.entityReference(eINTERFACE_COMPONENT.self)
    }

    public var sub_ePHYSICAL_COMPONENT: ePHYSICAL_COMPONENT? {	// [36]
      return self.complexEntity.entityReference(ePHYSICAL_COMPONENT.self)
    }

    public var sub_eTHERMAL_COMPONENT: eTHERMAL_COMPONENT? {	// [37]
      return self.complexEntity.entityReference(eTHERMAL_COMPONENT.self)
    }

    public var sub_eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT: eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT? {	// [38]
      return self.complexEntity.entityReference(eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT.self)
    }

    public var sub_eRECTANGULAR_ARRAY_PLACEMENT_GROUP_COMPONENT: eRECTANGULAR_ARRAY_PLACEMENT_GROUP_COMPONENT? {	// [39]
      return self.complexEntity.entityReference(eRECTANGULAR_ARRAY_PLACEMENT_GROUP_COMPONENT.self)
    }

    public var sub_eARRAY_PLACEMENT_GROUP: eARRAY_PLACEMENT_GROUP? {	// [40]
      return self.complexEntity.entityReference(eARRAY_PLACEMENT_GROUP.self)
    }

    public var sub_eINTERFACED_GROUP_COMPONENT: eINTERFACED_GROUP_COMPONENT? {	// [41]
      return self.complexEntity.entityReference(eINTERFACED_GROUP_COMPONENT.self)
    }

    public var sub_eASSEMBLY_GROUP_COMPONENT: eASSEMBLY_GROUP_COMPONENT? {	// [42]
      return self.complexEntity.entityReference(eASSEMBLY_GROUP_COMPONENT.self)
    }

    public var sub_eASSEMBLY_COMPONENT: eASSEMBLY_COMPONENT? {	// [43]
      return self.complexEntity.entityReference(eASSEMBLY_COMPONENT.self)
    }

    public var sub_eCOMPONENT_DEFINITION: eCOMPONENT_DEFINITION? {	// [44]
      return self.complexEntity.entityReference(eCOMPONENT_DEFINITION.self)
    }

    public var sub_eSUPPLIED_PART_RELATIONSHIP: eSUPPLIED_PART_RELATIONSHIP? {	// [45]
      return self.complexEntity.entityReference(eSUPPLIED_PART_RELATIONSHIP.self)
    }

    public var sub_eASSEMBLY_GROUP_COMPONENT_DEFINITION_PLACEMENT_LINK: eASSEMBLY_GROUP_COMPONENT_DEFINITION_PLACEMENT_LINK? {	// [46]
      return self.complexEntity.entityReference(eASSEMBLY_GROUP_COMPONENT_DEFINITION_PLACEMENT_LINK.self)
    }


    //MARK: ATTRIBUTES
    // QUANTITY: (2 AMBIGUOUS REFs)

    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var DESCRIPTION: tTEXT?  {
      get {
        return self.partialEntity._description
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._description = newValue
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eMULTI_LEVEL_REFERENCE_DESIGNATOR`` )
    public var LEAF: sPRODUCT_DEFINITION_OR_REFERENCE?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"LEAF") {
          return cached.value as! sPRODUCT_DEFINITION_OR_REFERENCE? 
        }
        guard let origin = sub_eMULTI_LEVEL_REFERENCE_DESIGNATOR else { return nil }
        let value = sPRODUCT_DEFINITION_OR_REFERENCE(origin.partialEntity._leaf__getter(SELF: origin))
        updateCache(derivedAttributeName:"LEAF", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSPECIFIED_HIGHER_USAGE_OCCURRENCE`` )
    public var NEXT_USAGE: eNEXT_ASSEMBLY_USAGE_OCCURRENCE?  {
      get {
        return sub_eSPECIFIED_HIGHER_USAGE_OCCURRENCE?.partialEntity._next_usage
      }
      set(newValue) {
        guard let partial = sub_eSPECIFIED_HIGHER_USAGE_OCCURRENCE?.super_eSPECIFIED_HIGHER_USAGE_OCCURRENCE
          .partialEntity else { return }
        partial._next_usage = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eASSEMBLY_COMPONENT_USAGE`` )
    public var REFERENCE_DESIGNATOR: tIDENTIFIER?  {
      get {
        return sub_eASSEMBLY_COMPONENT_USAGE?.partialEntity._reference_designator
      }
      set(newValue) {
        guard let partial = sub_eASSEMBLY_COMPONENT_USAGE?.super_eASSEMBLY_COMPONENT_USAGE.partialEntity
          else { return }
        partial._reference_designator = newValue
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP`` )
    public var CONSTITUENT_AMOUNT: (SDAI.SET<sCHARACTERIZED_PRODUCT_COMPOSITION_VALUE>/*[1:nil]*/ )?  {
      get {
        return sub_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP?.partialEntity._constituent_amount
      }
      set(newValue) {
        guard let partial = sub_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP?.super_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP
          .partialEntity else { return }
        partial._constituent_amount = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSPECIFIED_HIGHER_USAGE_OCCURRENCE`` )
    public var UPPER_USAGE: eASSEMBLY_COMPONENT_USAGE?  {
      get {
        return sub_eSPECIFIED_HIGHER_USAGE_OCCURRENCE?.partialEntity._upper_usage
      }
      set(newValue) {
        guard let partial = sub_eSPECIFIED_HIGHER_USAGE_OCCURRENCE?.super_eSPECIFIED_HIGHER_USAGE_OCCURRENCE
          .partialEntity else { return }
        partial._upper_usage = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eMAKE_FROM_USAGE_OPTION`` )
    public var RANKING_RATIONALE: tTEXT?  {
      get {
        return sub_eMAKE_FROM_USAGE_OPTION?.partialEntity._ranking_rationale
      }
      set(newValue) {
        guard let partial = sub_eMAKE_FROM_USAGE_OPTION?.super_eMAKE_FROM_USAGE_OPTION.partialEntity
          else { return }
        partial._ranking_rationale = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP`` )
    public var CLASS: tLABEL?  {
      get {
        return sub_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP?.partialEntity._class
      }
      set(newValue) {
        guard let partial = sub_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP?.super_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP
          .partialEntity else { return }
        partial._class = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eMATED_PART_RELATIONSHIP`` )
    public var ITEMS: (SDAI.SET<ePRODUCT_DEFINITION>/*[0:nil]*/ )?  {
      get {
        return sub_eMATED_PART_RELATIONSHIP?.partialEntity._items
      }
      set(newValue) {
        guard let partial = sub_eMATED_PART_RELATIONSHIP?.super_eMATED_PART_RELATIONSHIP.partialEntity
          else { return }
        partial._items = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT REDEF(DERIVE)__ attribute
    /// - origin: SUB( ``eMATED_PART_RELATIONSHIP`` )
    public var OF_SHAPE: eMATED_PART_RELATIONSHIP?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"OF_SHAPE") {
          return cached.value as! eMATED_PART_RELATIONSHIP? 
        }
        guard let origin = sub_eMATED_PART_RELATIONSHIP else { return nil }
        let value = eMATED_PART_RELATIONSHIP(origin.partialEntity._of_shape__getter(SELF: origin))
        updateCache(derivedAttributeName:"OF_SHAPE", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eMAKE_FROM_USAGE_OPTION`` )
    public var RANKING: SDAI.INTEGER?  {
      get {
        return sub_eMAKE_FROM_USAGE_OPTION?.partialEntity._ranking
      }
      set(newValue) {
        guard let partial = sub_eMAKE_FROM_USAGE_OPTION?.super_eMAKE_FROM_USAGE_OPTION.partialEntity
          else { return }
        partial._ranking = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP`` )
    public var COMPOSITION_BASIS: tLABEL?  {
      get {
        return sub_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP?.partialEntity._composition_basis
      }
      set(newValue) {
        guard let partial = sub_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP?.super_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP
          .partialEntity else { return }
        partial._composition_basis = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP`` )
    public var DETERMINATION_METHOD: tTEXT?  {
      get {
        return sub_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP?.partialEntity._determination_method
      }
      set(newValue) {
        guard let partial = sub_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP?.super_ePRODUCT_MATERIAL_COMPOSITION_RELATIONSHIP
          .partialEntity else { return }
        partial._determination_method = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eMULTI_LEVEL_REFERENCE_DESIGNATOR`` )
    public var ROOT: ePRODUCT_DEFINITION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"ROOT") {
          return cached.value as! ePRODUCT_DEFINITION? 
        }
        guard let origin = sub_eMULTI_LEVEL_REFERENCE_DESIGNATOR else { return nil }
        let value = ePRODUCT_DEFINITION(origin.partialEntity._root__getter(SELF: origin))
        updateCache(derivedAttributeName:"ROOT", value:value)
        return value
      }
    }

    /// __EXPLICIT(DYNAMIC)__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var RELATING_PRODUCT_DEFINITION: sPRODUCT_DEFINITION_OR_REFERENCE {
      get {
        if let resolved = _product_definition_relationship._relating_product_definition__provider(complex: self.complexEntity) {
          let value = resolved._relating_product_definition__getter(complex: self.complexEntity)
          return value
        }
        else {
          return SDAI.UNWRAP( self.partialEntity._relating_product_definition )
        }
      }
      set(newValue) {
        if let _ = _product_definition_relationship._relating_product_definition__provider(complex: self.complexEntity) { return }

        let partial = self.partialEntity
        partial._relating_product_definition = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var ID: tIDENTIFIER {
      get {
        return SDAI.UNWRAP( self.partialEntity._id )
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._id = SDAI.UNWRAP(newValue)
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eNEXT_ASSEMBLY_USAGE_OCCURRENCE`` )
    public var PRODUCT_DEFINITION_OCCURRENCE_ID: tIDENTIFIER?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"PRODUCT_DEFINITION_OCCURRENCE_ID") {
          return cached.value as! tIDENTIFIER? 
        }
        guard let origin = sub_eNEXT_ASSEMBLY_USAGE_OCCURRENCE else { return nil }
        let value = tIDENTIFIER(origin.partialEntity._product_definition_occurrence_id__getter(SELF: origin))
        updateCache(derivedAttributeName:"PRODUCT_DEFINITION_OCCURRENCE_ID", value:value)
        return value
      }
    }

    /// __EXPLICIT REDEF(DERIVE)__ attribute
    /// - origin: SUB( ``eMATED_PART_RELATIONSHIP`` )
    public var ASSIGNED_GROUP: eMATED_PART_RELATIONSHIP?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"ASSIGNED_GROUP") {
          return cached.value as! eMATED_PART_RELATIONSHIP? 
        }
        guard let origin = sub_eMATED_PART_RELATIONSHIP else { return nil }
        let value = eMATED_PART_RELATIONSHIP(origin.partialEntity._assigned_group__getter(SELF: origin))
        updateCache(derivedAttributeName:"ASSIGNED_GROUP", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eMULTI_LEVEL_REFERENCE_DESIGNATOR`` )
    public var LOCATION: (SDAI.LIST_UNIQUE<eNEXT_ASSEMBLY_USAGE_OCCURRENCE>/*[1:nil]*/ )?  {
      get {
        return sub_eMULTI_LEVEL_REFERENCE_DESIGNATOR?.partialEntity._location
      }
      set(newValue) {
        guard let partial = sub_eMULTI_LEVEL_REFERENCE_DESIGNATOR?.super_eMULTI_LEVEL_REFERENCE_DESIGNATOR
          .partialEntity else { return }
        partial._location = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT REDEF(DERIVE)__ attribute
    /// - origin: SUB( ``eMATED_PART_RELATIONSHIP`` )
    public var DEFINITION: eMATED_PART_RELATIONSHIP?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"DEFINITION") {
          return cached.value as! eMATED_PART_RELATIONSHIP? 
        }
        guard let origin = sub_eMATED_PART_RELATIONSHIP else { return nil }
        let value = eMATED_PART_RELATIONSHIP(origin.partialEntity._definition__getter(SELF: origin))
        updateCache(derivedAttributeName:"DEFINITION", value:value)
        return value
      }
    }

    /// __EXPLICIT(DYNAMIC)(OBSERVED)__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var RELATED_PRODUCT_DEFINITION: sPRODUCT_DEFINITION_OR_REFERENCE {
      get {
        if let resolved = _product_definition_relationship._related_product_definition__provider(complex: self.complexEntity) {
          let value = resolved._related_product_definition__getter(complex: self.complexEntity)
          return value
        }
        else {
          return SDAI.UNWRAP( self.partialEntity._related_product_definition )
        }
      }
      set(newValue) {
        if let _ = _product_definition_relationship._related_product_definition__provider(complex: self.complexEntity) { return }

        let partial = self.partialEntity
        partial._related_product_definition = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var NAME: tLABEL {
      get {
        return SDAI.UNWRAP( self.partialEntity._name )
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._name = SDAI.UNWRAP(newValue)
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_product_definition_relationship.self) else { return nil }
      self.partialEntity = partial

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }

    //SIMPLE ENTITY REFERENCE
    public convenience init?(_ partial:_product_definition_relationship) {
      let complex = SDAI.ComplexEntity(entities:[partial])
      self.init(complex: complex)
    }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "PRODUCT_DEFINITION_RELATIONSHIP", type: self, explicitAttributeCount: 5)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: ePRODUCT_DEFINITION_RELATIONSHIP.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "DESCRIPTION", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.DESCRIPTION, 
        kind: .explicitOptional, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "LEAF", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.LEAF, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NEXT_USAGE", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.NEXT_USAGE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "REFERENCE_DESIGNATOR", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.REFERENCE_DESIGNATOR, 
        kind: .explicitOptional, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "CONSTITUENT_AMOUNT", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.CONSTITUENT_AMOUNT, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "UPPER_USAGE", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.UPPER_USAGE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RANKING_RATIONALE", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.RANKING_RATIONALE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "CLASS", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.CLASS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ITEMS", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.ITEMS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "OF_SHAPE", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.OF_SHAPE, 
        kind: .derivedRedeclaring, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RANKING", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.RANKING, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "COMPOSITION_BASIS", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.COMPOSITION_BASIS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "DETERMINATION_METHOD", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.DETERMINATION_METHOD, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ROOT", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.ROOT, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATING_PRODUCT_DEFINITION", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.RELATING_PRODUCT_DEFINITION, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ID", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.ID, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "PRODUCT_DEFINITION_OCCURRENCE_ID", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.PRODUCT_DEFINITION_OCCURRENCE_ID, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ASSIGNED_GROUP", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.ASSIGNED_GROUP, 
        kind: .derivedRedeclaring, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "LOCATION", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.LOCATION, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "DEFINITION", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.DEFINITION, 
        kind: .derivedRedeclaring, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATED_PRODUCT_DEFINITION", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NAME", keyPath: \ePRODUCT_DEFINITION_RELATIONSHIP.NAME, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: false)

      return entityDef
    }

  }
}

//MARK: - Entity Dynamic Attribute Protocols
internal protocol ePRODUCT_DEFINITION_RELATIONSHIP__RELATING_PRODUCT_DEFINITION__provider {
  func _relating_product_definition__getter(complex: SDAI.ComplexEntity) -> 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE
}
internal protocol ePRODUCT_DEFINITION_RELATIONSHIP__RELATED_PRODUCT_DEFINITION__provider {
  func _related_product_definition__getter(complex: SDAI.ComplexEntity) -> 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE
}
