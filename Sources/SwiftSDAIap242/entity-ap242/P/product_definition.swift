/* file: product_definition.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY product_definition
    SUPERTYPE OF ( 
        ONEOF ( 
            composite_assembly_sequence_definition, 
            laminate_table, 
            ply_laminate_sequence_definition ) );
      id                  : identifier;
      description         : OPTIONAL text;
      formation           : product_definition_formation; (* observed by
          final_solution.specification
          *)
      frame_of_reference  : product_definition_context;
    DERIVE
      name  : label := get_name_value( SELF );
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM' ) ) 
               <= 1 );
  END_ENTITY; -- product_definition (line:26019 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  ENTITY(SELF)	product_definition
    ATTR:  id,	TYPE: identifier -- EXPLICIT

    ATTR:  description,	TYPE: OPTIONAL text -- EXPLICIT

    ATTR:  formation,	TYPE: product_definition_formation -- EXPLICIT
      -- observed by
        ENTITY(1): final_solution,	ATTR: specification,	TYPE: SET [1 : ?] OF product_definition
      -- possibly overriden by
          ENTITY: collection_view_definition,	TYPE: collection_version

    ATTR:  frame_of_reference,	TYPE: product_definition_context -- EXPLICIT

    ATTR:  name,	TYPE: label -- DERIVED
      := get_name_value( SELF )


  SUB- ENTITY(2)	composite_assembly_sequence_definition
    (no local attributes)

  SUB- ENTITY(3)	specification_definition
    (no local attributes)

  SUB- ENTITY(4)	collection_view_definition
    REDCR: formation,	TYPE: collection_version -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition

    ATTR:  defined_version,	TYPE: collection_version -- DERIVED
      := SELF\product_definition.formation


  SUB- ENTITY(5)	ply_laminate_table
    (no local attributes)

  SUB- ENTITY(6)	composite_assembly_table
    (no local attributes)

  SUB- ENTITY(7)	part_laminate_table
    (no local attributes)

  SUB- ENTITY(8)	smeared_material_definition
    (no local attributes)

  SUB- ENTITY(9)	thickness_laminate_table
    (no local attributes)

  SUB- ENTITY(10)	percentage_laminate_table
    (no local attributes)

  SUB- ENTITY(11)	zone_structural_makeup
    (no local attributes)

  SUB- ENTITY(12)	laminate_table
    (no local attributes)

  SUB- ENTITY(13)	product_definition_with_associated_documents
    ATTR:  documentation_ids,	TYPE: SET [1 : ?] OF document -- EXPLICIT


  SUB- ENTITY(14)	product_definition_resource
    (no local attributes)

  SUB- ENTITY(15)	linear_array_component_definition_link
    REDCR: relating_product_definition,	TYPE: linear_array_placement_group_component -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_relationship

    REDCR: related_product_definition,	TYPE: linear_array_placement_group_component -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_relationship


  SUB- ENTITY(16)	evaluation_product_definition
    (no local attributes)

  SUB- ENTITY(17)	ply_laminate_sequence_definition
    (no local attributes)

  SUB- ENTITY(18)	product_definition_reference_with_local_representation
    (no local attributes)

  SUB- ENTITY(19)	interface_connector_definition
    (no local attributes)

  SUB- ENTITY(20)	interface_component
    (no local attributes)

  SUB- ENTITY(21)	physical_component
    (no local attributes)

  SUB- ENTITY(22)	thermal_component
    (no local attributes)

  SUB- ENTITY(23)	linear_array_placement_group_component
    (no local attributes)

  SUB- ENTITY(24)	rectangular_array_placement_group_component
    (no local attributes)

  SUB- ENTITY(25)	array_placement_group
    (no local attributes)

  SUB- ENTITY(26)	interfaced_group_component
    (no local attributes)

  SUB- ENTITY(27)	assembly_group_component
    (no local attributes)

  SUB- ENTITY(28)	assembly_component
    REDCR: definition,	TYPE: assembly_component -- DERIVED (DYNAMIC)
      := SELF
      -- OVERRIDING ENTITY: property_definition


  SUB- ENTITY(29)	component_definition
    REDCR: related_product_definition,	TYPE: component_definition -- DERIVED (DYNAMIC)
      := SELF
      -- OVERRIDING ENTITY: product_definition_relationship


  SUB- ENTITY(30)	assembly_group_component_definition_placement_link
    REDCR: relating_product_definition,	TYPE: assembly_component -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_relationship

    REDCR: related_product_definition,	TYPE: assembly_component -- EXPLICIT
      -- OVERRIDING ENTITY: product_definition_relationship


  SUB- ENTITY(31)	forward_chaining_rule
    (no local attributes)

  SUB- ENTITY(32)	back_chaining_rule
    (no local attributes)

  SUB- ENTITY(33)	rule_definition
    (no local attributes)

  SUB- ENTITY(34)	rule_set_group
    (no local attributes)

  SUB- ENTITY(35)	rule_set
    (no local attributes)

  SUB- ENTITY(36)	rule_software_definition
    (no local attributes)

  SUB- ENTITY(37)	interface_specification_definition
    (no local attributes)

*/


//MARK: - Partial Entity
  public final class _product_definition : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      ePRODUCT_DEFINITION.self
    }

    //ATTRIBUTES
    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _id: tIDENTIFIER // PLAIN EXPLICIT ATTRIBUTE

    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _description: tTEXT?  // PLAIN EXPLICIT ATTRIBUTE

    /// EXPLICIT ATTRIBUTE (OBSERVED)
    public internal(set) var _formation: ePRODUCT_DEFINITION_FORMATION{ // OBSERVED EXPLICIT ATTRIBUTE
      get {
        return __formation.copy()
      } // getter
      set {
        let newValue = newValue
        let observer = SDAI.EntityReferenceObserver(referencer: self, observerCode: _formation__observer.self)
        newValue.configure(with: observer)
        observer.observe(removing: SDAI.UNWRAP(seq:__formation.entityReferences),
          adding: SDAI.UNWRAP(seq: newValue.entityReferences) )
      } // setter
    }

    /// backing storage for observed attribute
    private var __formation: ePRODUCT_DEFINITION_FORMATION

    /// attribute observer code
    internal class _formation__observer: SDAI.EntityReferenceObserver.ObserverCode {
      final override class func observe<RemovingEntities: Sequence, AddingEntities: Sequence>(
        referencer: SDAI.PartialEntity, removing: RemovingEntities, adding: AddingEntities )
        where RemovingEntities.Element: SDAI.EntityReference, AddingEntities.Element: SDAI.EntityReference
      {
        for referencedComplex in removing.map({ $0.complexEntity }) {
          for referencerOwner in referencer.owners {
            //OBSERVING ENTITY: eFINAL_SOLUTION
            referencedComplex.partialEntityInstance(_final_solution.self)?
              ._specification__observeRemovedReference(in: referencerOwner)
          }
        }

        for referencedComplex in adding.map({ $0.complexEntity }) {
          for referencerOwner in referencer.owners {
            //OBSERVING ENTITY: eFINAL_SOLUTION
            referencedComplex.partialEntityInstance(_final_solution.self)?
              ._specification__observeAddedReference(in: referencerOwner)
          }
        }
      }

      final override class func observe(newReferencerOwner referencerOwner: SDAI.ComplexEntity) {
        guard let attrValue = referencerOwner.partialEntityInstance(_product_definition.self)?._formation else { return }
        for referencedComplex in attrValue.entityReferences.map({ $0.complexEntity }) {
        //OBSERVING ENTITY: eFINAL_SOLUTION
        referencedComplex.partialEntityInstance(_final_solution.self)?
          ._specification__observeAddedReference(in: referencerOwner)
        }
      }

      final override class func observe(leavingReferencerOwner referencerOwner: SDAI.ComplexEntity) {
        guard let attrValue = referencerOwner.partialEntityInstance(_product_definition.self)?._formation else { return }
        for referencedComplex in attrValue.entityReferences.map({ $0.complexEntity }) {
        //OBSERVING ENTITY: eFINAL_SOLUTION
        referencedComplex.partialEntityInstance(_final_solution.self)?
          ._specification__observe(leavingReferencerOwner: referencerOwner)
        }
      }

    }

    /// EXPLICIT ATTRIBUTE 
    public internal(set) var _frame_of_reference: ePRODUCT_DEFINITION_CONTEXT // PLAIN EXPLICIT ATTRIBUTE

    /// DERIVE ATTRIBUTE
    internal func _name__getter(SELF: ePRODUCT_DEFINITION) -> tLABEL?  {

      let _TEMP1 = GET_NAME_VALUE(sNAME_ATTRIBUTE_SELECT(/*ePRODUCT_DEFINITION*/SELF))
      return _TEMP1
    }

    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      //SELECT data types (indirectly) referencing the current type as a member of the select list
      members.insert(SDAI.STRING(sCLASS_USAGE_EFFECTIVITY_CONTEXT_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sDATE_AND_TIME_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_ITEMS.typeName)) // -> sCLASSIFICATION_ITEM
      members.insert(SDAI.STRING(sCHANGE_MANAGEMENT_OBJECT.typeName)) // -> sACTION_ITEMS
      members.insert(SDAI.STRING(sIR_USAGE_ITEM.typeName)) // -> sCLASSIFICATION_ITEM
      members.insert(SDAI.STRING(sPRODUCT_DEFINITION_OR_ASSEMBLY_RELATIONSHIP.typeName)) // -> Self
      members.insert(SDAI.STRING(sMULTI_LANGUAGE_ATTRIBUTE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sSTATE_OBSERVED_OF_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sPRODUCT_DEFINITION_OR_PRODUCT_DEFINITION_RELATIONSHIP.typeName)) // -> Self
      members.insert(SDAI.STRING(sEXTERNAL_IDENTIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sPRESENTED_ITEM_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sPRODUCT_DEFINITION_OR_BREAKDOWN_ELEMENT_USAGE.typeName)) // -> Self
      members.insert(SDAI.STRING(sIDENTIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sTIME_INTERVAL_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sATTRIBUTE_CLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sREQUIREMENT_SOURCE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sEVIDENCE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sSECURITY_CLASSIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_REQUEST_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCONTRACT_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sPRODUCT_DEFINITION_OR_REFERENCE_OR_OCCURRENCE.typeName)) // -> Self
      members.insert(SDAI.STRING(sA3MS_INSPECTED_EQUIVALENCE_ELEMENT_SELECT.typeName)) // -> sPRODUCT_DEFINITION_OR_REFERENCE_OR_OCCURRENCE
      members.insert(SDAI.STRING(sEQUIVALENCE_DETECTED_DIFFERENCE_SELECT.typeName)) // -> sA3MS_INSPECTED_EQUIVALENCE_ELEMENT_SELECT
      members.insert(SDAI.STRING(sEQUIVALENCE_PRODUCT_DATA_SELECT.typeName)) // -> sPRODUCT_DEFINITION_OR_REFERENCE_OR_OCCURRENCE
      members.insert(SDAI.STRING(sINSPECTED_EQUIVALENCE_ELEMENT_SELECT.typeName)) // -> sPRODUCT_DEFINITION_OR_REFERENCE_OR_OCCURRENCE
      members.insert(SDAI.STRING(sDATE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sSTATE_TYPE_OF_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCC_PERSON_ORGANIZATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sANALYSED_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sAPPROVAL_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sACTION_METHOD_ITEMS.typeName)) // -> Self
      members.insert(SDAI.STRING(sCLASSIFIED_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sLOCATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sNAME_ATTRIBUTE_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sREQUIREMENT_ASSIGNED_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sREQUIREMENT_SATISFACTION_ITEM.typeName)) // -> sREQUIREMENT_ASSIGNED_ITEM
      members.insert(SDAI.STRING(sCC_SPECIFIED_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCHARACTERIZED_PRODUCT_DEFINITION.typeName)) // -> Self
      members.insert(SDAI.STRING(sCHARACTERIZED_DEFINITION.typeName)) // -> sCHARACTERIZED_PRODUCT_DEFINITION
      members.insert(SDAI.STRING(sPERSON_AND_ORGANIZATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sGENERAL_ORGANIZATIONAL_DATA_SELECT.typeName)) // -> Self
      members.insert(SDAI.STRING(sEVENT_OCCURRENCE_ITEM.typeName)) // -> sGENERAL_ORGANIZATIONAL_DATA_SELECT
      members.insert(SDAI.STRING(sORGANIZATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sIDRM_MARKED_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sNAME_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sPRODUCT_DEFINITION_OR_REFERENCE.typeName)) // -> Self
      members.insert(SDAI.STRING(sDESCRIPTION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sPROJECT_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sATTRIBUTE_LANGUAGE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sPRODUCT_OR_FORMATION_OR_DEFINITION.typeName)) // -> Self
      members.insert(SDAI.STRING(sCONFIGURED_EFFECTIVITY_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sDATE_TIME_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCONFIGURATION_DESIGN_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sDOCUMENT_REFERENCE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sGROUPABLE_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sCERTIFICATION_ITEM.typeName)) // -> Self
      members.insert(SDAI.STRING(sEFFECTIVITY_ITEM.typeName)) // -> Self
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
      self._id.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._description?.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._formation.value.hashAsValue(into: &hasher, visited: &complexEntities)
      self._frame_of_reference.value.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      if let comp = self._id.value.isValueEqualOptionally(to: rhs._id.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._description?.value.isValueEqualOptionally(to: rhs._description?.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._formation.value.isValueEqualOptionally(to: rhs._formation.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      if let comp = self._frame_of_reference.value.isValueEqualOptionally(to: rhs._frame_of_reference.value, visited: &comppairs)	{
        if !comp { return false }
      }
      else { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._id.value.isValueEqualOptionally(to: rhs._id.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._description?.value.isValueEqualOptionally(to: rhs._description?.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._formation.value.isValueEqualOptionally(to: rhs._formation.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      if let comp = self._frame_of_reference.value.isValueEqualOptionally(to: rhs._frame_of_reference.value, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //MARK: WHERE RULES (ENTITY)
    public static func WHERE_wr1(SELF: ePRODUCT_DEFINITION?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SDAI.USEDIN(T: SELF, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
        .eNAME_ATTRIBUTE.NAMED_ITEM)
      let _TEMP2 = SDAI.SIZEOF(_TEMP1)
      let _TEMP3 = _TEMP2 <= SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
      return _TEMP3
    }

    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init(ID: tIDENTIFIER, DESCRIPTION: tTEXT? , FORMATION: ePRODUCT_DEFINITION_FORMATION, 
                FRAME_OF_REFERENCE: ePRODUCT_DEFINITION_CONTEXT) {
      self._id = ID
      self._description = DESCRIPTION
      self.__formation = FORMATION
      self._frame_of_reference = FRAME_OF_REFERENCE
      super.init(asAbstructSuperclass:())

      self._formation.configure(with: SDAI.EntityReferenceObserver(referencer: self, observerCode: _formation__observer.self))
    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 4
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      guard case .success(let p0) = exchangeStructure.recoverRequiredParameter(as: tIDENTIFIER.self, from: parameters[0])
      else { exchangeStructure.add(errorContext: "while recovering parameter #0 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p1) = exchangeStructure.recoverOptionalParameter(as: tTEXT.self, from: parameters[1])
      else { exchangeStructure.add(errorContext: "while recovering parameter #1 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p2) = exchangeStructure.recoverRequiredParameter(as: 
        ePRODUCT_DEFINITION_FORMATION.self, from: parameters[2])
      else { exchangeStructure.add(errorContext: "while recovering parameter #2 for entity(\(Self.entityName)) constructor"); return nil }

      guard case .success(let p3) = exchangeStructure.recoverRequiredParameter(as: 
        ePRODUCT_DEFINITION_CONTEXT.self, from: parameters[3])
      else { exchangeStructure.add(errorContext: "while recovering parameter #3 for entity(\(Self.entityName)) constructor"); return nil }

      self.init( ID: p0, DESCRIPTION: p1, FORMATION: p2, FRAME_OF_REFERENCE: p3 )
    }

    /// broadcasting a new complex entity becoming an owner of the partial entity
    final public override func broadcast(addedToComplex complex: SDAI.ComplexEntity) {
      _formation__observer.observe(newReferencerOwner: complex)
    }

    /// broadcasting a complex entity withdrawing an owner of the partial entity
    final public override func broadcast(removedFromComplex complex: SDAI.ComplexEntity) {
      _formation__observer.observe(leavingReferencerOwner: complex)
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY product_definition
    SUPERTYPE OF ( 
        ONEOF ( 
            composite_assembly_sequence_definition, 
            laminate_table, 
            ply_laminate_sequence_definition ) );
      id                  : identifier;
      description         : OPTIONAL text;
      formation           : product_definition_formation; (* observed by
          final_solution.specification
          *)
      frame_of_reference  : product_definition_context;
    DERIVE
      name  : label := get_name_value( SELF );
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.NAME_ATTRIBUTE.NAMED_ITEM' ) ) 
               <= 1 );
  END_ENTITY; -- product_definition (line:26019 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class ePRODUCT_DEFINITION : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _product_definition.self
    }
    public let partialEntity: _product_definition

    //MARK: SUPERTYPES
    public var super_ePRODUCT_DEFINITION: ePRODUCT_DEFINITION { return self } 	// [1]

    //MARK: SUBTYPES
    public var sub_eCOMPOSITE_ASSEMBLY_SEQUENCE_DEFINITION: eCOMPOSITE_ASSEMBLY_SEQUENCE_DEFINITION? {	// [2]
      return self.complexEntity.entityReference(eCOMPOSITE_ASSEMBLY_SEQUENCE_DEFINITION.self)
    }

    public var sub_eSPECIFICATION_DEFINITION: eSPECIFICATION_DEFINITION? {	// [3]
      return self.complexEntity.entityReference(eSPECIFICATION_DEFINITION.self)
    }

    public var sub_eCOLLECTION_VIEW_DEFINITION: eCOLLECTION_VIEW_DEFINITION? {	// [4]
      return self.complexEntity.entityReference(eCOLLECTION_VIEW_DEFINITION.self)
    }

    public var sub_ePLY_LAMINATE_TABLE: ePLY_LAMINATE_TABLE? {	// [5]
      return self.complexEntity.entityReference(ePLY_LAMINATE_TABLE.self)
    }

    public var sub_eCOMPOSITE_ASSEMBLY_TABLE: eCOMPOSITE_ASSEMBLY_TABLE? {	// [6]
      return self.complexEntity.entityReference(eCOMPOSITE_ASSEMBLY_TABLE.self)
    }

    public var sub_ePART_LAMINATE_TABLE: ePART_LAMINATE_TABLE? {	// [7]
      return self.complexEntity.entityReference(ePART_LAMINATE_TABLE.self)
    }

    public var sub_eSMEARED_MATERIAL_DEFINITION: eSMEARED_MATERIAL_DEFINITION? {	// [8]
      return self.complexEntity.entityReference(eSMEARED_MATERIAL_DEFINITION.self)
    }

    public var sub_eTHICKNESS_LAMINATE_TABLE: eTHICKNESS_LAMINATE_TABLE? {	// [9]
      return self.complexEntity.entityReference(eTHICKNESS_LAMINATE_TABLE.self)
    }

    public var sub_ePERCENTAGE_LAMINATE_TABLE: ePERCENTAGE_LAMINATE_TABLE? {	// [10]
      return self.complexEntity.entityReference(ePERCENTAGE_LAMINATE_TABLE.self)
    }

    public var sub_eZONE_STRUCTURAL_MAKEUP: eZONE_STRUCTURAL_MAKEUP? {	// [11]
      return self.complexEntity.entityReference(eZONE_STRUCTURAL_MAKEUP.self)
    }

    public var sub_eLAMINATE_TABLE: eLAMINATE_TABLE? {	// [12]
      return self.complexEntity.entityReference(eLAMINATE_TABLE.self)
    }

    public var sub_ePRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS: ePRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS? {	// [13]
      return self.complexEntity.entityReference(ePRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS.self)
    }

    public var sub_ePRODUCT_DEFINITION_RESOURCE: ePRODUCT_DEFINITION_RESOURCE? {	// [14]
      return self.complexEntity.entityReference(ePRODUCT_DEFINITION_RESOURCE.self)
    }

    public var sub_eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK: eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK? {	// [15]
      return self.complexEntity.entityReference(eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK.self)
    }

    public var sub_eEVALUATION_PRODUCT_DEFINITION: eEVALUATION_PRODUCT_DEFINITION? {	// [16]
      return self.complexEntity.entityReference(eEVALUATION_PRODUCT_DEFINITION.self)
    }

    public var sub_ePLY_LAMINATE_SEQUENCE_DEFINITION: ePLY_LAMINATE_SEQUENCE_DEFINITION? {	// [17]
      return self.complexEntity.entityReference(ePLY_LAMINATE_SEQUENCE_DEFINITION.self)
    }

    public var sub_ePRODUCT_DEFINITION_REFERENCE_WITH_LOCAL_REPRESENTATION: ePRODUCT_DEFINITION_REFERENCE_WITH_LOCAL_REPRESENTATION? {	// [18]
      return self.complexEntity.entityReference(ePRODUCT_DEFINITION_REFERENCE_WITH_LOCAL_REPRESENTATION.self)
    }

    public var sub_eINTERFACE_CONNECTOR_DEFINITION: eINTERFACE_CONNECTOR_DEFINITION? {	// [19]
      return self.complexEntity.entityReference(eINTERFACE_CONNECTOR_DEFINITION.self)
    }

    public var sub_eINTERFACE_COMPONENT: eINTERFACE_COMPONENT? {	// [20]
      return self.complexEntity.entityReference(eINTERFACE_COMPONENT.self)
    }

    public var sub_ePHYSICAL_COMPONENT: ePHYSICAL_COMPONENT? {	// [21]
      return self.complexEntity.entityReference(ePHYSICAL_COMPONENT.self)
    }

    public var sub_eTHERMAL_COMPONENT: eTHERMAL_COMPONENT? {	// [22]
      return self.complexEntity.entityReference(eTHERMAL_COMPONENT.self)
    }

    public var sub_eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT: eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT? {	// [23]
      return self.complexEntity.entityReference(eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT.self)
    }

    public var sub_eRECTANGULAR_ARRAY_PLACEMENT_GROUP_COMPONENT: eRECTANGULAR_ARRAY_PLACEMENT_GROUP_COMPONENT? {	// [24]
      return self.complexEntity.entityReference(eRECTANGULAR_ARRAY_PLACEMENT_GROUP_COMPONENT.self)
    }

    public var sub_eARRAY_PLACEMENT_GROUP: eARRAY_PLACEMENT_GROUP? {	// [25]
      return self.complexEntity.entityReference(eARRAY_PLACEMENT_GROUP.self)
    }

    public var sub_eINTERFACED_GROUP_COMPONENT: eINTERFACED_GROUP_COMPONENT? {	// [26]
      return self.complexEntity.entityReference(eINTERFACED_GROUP_COMPONENT.self)
    }

    public var sub_eASSEMBLY_GROUP_COMPONENT: eASSEMBLY_GROUP_COMPONENT? {	// [27]
      return self.complexEntity.entityReference(eASSEMBLY_GROUP_COMPONENT.self)
    }

    public var sub_eASSEMBLY_COMPONENT: eASSEMBLY_COMPONENT? {	// [28]
      return self.complexEntity.entityReference(eASSEMBLY_COMPONENT.self)
    }

    public var sub_eCOMPONENT_DEFINITION: eCOMPONENT_DEFINITION? {	// [29]
      return self.complexEntity.entityReference(eCOMPONENT_DEFINITION.self)
    }

    public var sub_eASSEMBLY_GROUP_COMPONENT_DEFINITION_PLACEMENT_LINK: eASSEMBLY_GROUP_COMPONENT_DEFINITION_PLACEMENT_LINK? {	// [30]
      return self.complexEntity.entityReference(eASSEMBLY_GROUP_COMPONENT_DEFINITION_PLACEMENT_LINK.self)
    }

    public var sub_eFORWARD_CHAINING_RULE: eFORWARD_CHAINING_RULE? {	// [31]
      return self.complexEntity.entityReference(eFORWARD_CHAINING_RULE.self)
    }

    public var sub_eBACK_CHAINING_RULE: eBACK_CHAINING_RULE? {	// [32]
      return self.complexEntity.entityReference(eBACK_CHAINING_RULE.self)
    }

    public var sub_eRULE_DEFINITION: eRULE_DEFINITION? {	// [33]
      return self.complexEntity.entityReference(eRULE_DEFINITION.self)
    }

    public var sub_eRULE_SET_GROUP: eRULE_SET_GROUP? {	// [34]
      return self.complexEntity.entityReference(eRULE_SET_GROUP.self)
    }

    public var sub_eRULE_SET: eRULE_SET? {	// [35]
      return self.complexEntity.entityReference(eRULE_SET.self)
    }

    public var sub_eRULE_SOFTWARE_DEFINITION: eRULE_SOFTWARE_DEFINITION? {	// [36]
      return self.complexEntity.entityReference(eRULE_SOFTWARE_DEFINITION.self)
    }

    public var sub_eINTERFACE_SPECIFICATION_DEFINITION: eINTERFACE_SPECIFICATION_DEFINITION? {	// [37]
      return self.complexEntity.entityReference(eINTERFACE_SPECIFICATION_DEFINITION.self)
    }


    //MARK: ATTRIBUTES
    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION`` )
    public var DESCRIPTION: tTEXT?  {
      get {
        return self.partialEntity._description
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._description = newValue
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SUB( ``eCOLLECTION_VIEW_DEFINITION`` )
    public var DEFINED_VERSION: eCOLLECTION_VERSION?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"DEFINED_VERSION") {
          return cached.value as! eCOLLECTION_VERSION? 
        }
        guard let origin = sub_eCOLLECTION_VIEW_DEFINITION else { return nil }
        let value = eCOLLECTION_VERSION(origin.partialEntity._defined_version__getter(SELF: origin))
        updateCache(derivedAttributeName:"DEFINED_VERSION", value:value)
        return value
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``ePRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS`` )
    public var DOCUMENTATION_IDS: (SDAI.SET<eDOCUMENT>/*[1:nil]*/ )?  {
      get {
        return sub_ePRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS?.partialEntity._documentation_ids
      }
      set(newValue) {
        guard let partial = sub_ePRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS?.super_ePRODUCT_DEFINITION_WITH_ASSOCIATED_DOCUMENTS
          .partialEntity else { return }
        partial._documentation_ids = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT REDEF(DYNAMIC)__ attribute
    /// - origin: SUB( ``eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK`` )
    public var RELATING_PRODUCT_DEFINITION: eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT?  {
      get {
        if let resolved = _product_definition_relationship._relating_product_definition__provider(complex: self.complexEntity) {
          let value = eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT(resolved._relating_product_definition__getter(
            complex: self.complexEntity))
          return value
        }
        else {
          return eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT(sub_eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK?.super_ePRODUCT_DEFINITION_RELATIONSHIP
            .partialEntity._relating_product_definition)
        }
      }
      set(newValue) {
        if let _ = _product_definition_relationship._relating_product_definition__provider(complex: self.complexEntity) { return }

        guard let partial = sub_eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK?.super_ePRODUCT_DEFINITION_RELATIONSHIP
          .partialEntity else { return }
        partial._relating_product_definition = SDAI.UNWRAP(
          sPRODUCT_DEFINITION_OR_REFERENCE(newValue))
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION`` )
    public var ID: tIDENTIFIER {
      get {
        return SDAI.UNWRAP( self.partialEntity._id )
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._id = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION`` )
    public var FRAME_OF_REFERENCE: ePRODUCT_DEFINITION_CONTEXT {
      get {
        return SDAI.UNWRAP( self.partialEntity._frame_of_reference )
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._frame_of_reference = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT REDEF(DERIVE)__ attribute
    /// - origin: SUB( ``eASSEMBLY_COMPONENT`` )
    public var DEFINITION: eASSEMBLY_COMPONENT?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"DEFINITION") {
          return cached.value as! eASSEMBLY_COMPONENT? 
        }
        guard let origin = sub_eASSEMBLY_COMPONENT else { return nil }
        let value = eASSEMBLY_COMPONENT(origin.partialEntity._definition__getter(SELF: origin))
        updateCache(derivedAttributeName:"DEFINITION", value:value)
        return value
      }
    }

    /// __EXPLICIT REDEF(DYNAMIC)__ attribute
    /// - origin: SUB( ``eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK`` )
    public var RELATED_PRODUCT_DEFINITION: eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT?  {
      get {
        if let resolved = _product_definition_relationship._related_product_definition__provider(complex: self.complexEntity) {
          let value = eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT(resolved._related_product_definition__getter(
            complex: self.complexEntity))
          return value
        }
        else {
          return eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT(sub_eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK?.super_ePRODUCT_DEFINITION_RELATIONSHIP
            .partialEntity._related_product_definition)
        }
      }
      set(newValue) {
        if let _ = _product_definition_relationship._related_product_definition__provider(complex: self.complexEntity) { return }

        guard let partial = sub_eLINEAR_ARRAY_COMPONENT_DEFINITION_LINK?.super_ePRODUCT_DEFINITION_RELATIONSHIP
          .partialEntity else { return }
        partial._related_product_definition = SDAI.UNWRAP(
          sPRODUCT_DEFINITION_OR_REFERENCE(newValue))
      }
    }

    /// __DERIVE__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION`` )
    public var NAME: tLABEL?  {
      get {
        if let cached = cachedValue(derivedAttributeName:"NAME") {
          return cached.value as! tLABEL? 
        }
        let origin = self
        let value = origin.partialEntity._name__getter(SELF: origin)
        updateCache(derivedAttributeName:"NAME", value:value)
        return value
      }
    }

    /// __EXPLICIT(OBSERVED)__ attribute
    /// - origin: SELF( ``ePRODUCT_DEFINITION`` )
    public var FORMATION: ePRODUCT_DEFINITION_FORMATION {
      get {
        return SDAI.UNWRAP( self.partialEntity._formation )
      }
      set(newValue) {
        let partial = self.partialEntity
        partial._formation = SDAI.UNWRAP(newValue)
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_product_definition.self) else { return nil }
      self.partialEntity = partial

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }

    //SIMPLE ENTITY REFERENCE
    public convenience init?(_ partial:_product_definition) {
      let complex = SDAI.ComplexEntity(entities:[partial])
      self.init(complex: complex)
    }


    //MARK: WHERE RULE VALIDATION (ENTITY)
    public override class func validateWhereRules(instance:SDAI.EntityReference?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      guard let instance = instance as? Self else { return [:] }

      let prefix2 = prefix + " \(instance)"

      var result = super.validateWhereRules(instance:instance, prefix:prefix2)
      result[prefix2 + " .WHERE_wr1"] = _product_definition.WHERE_wr1(SELF: instance)
      return result
    }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "PRODUCT_DEFINITION", type: self, explicitAttributeCount: 4)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: ePRODUCT_DEFINITION.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "DESCRIPTION", keyPath: \ePRODUCT_DEFINITION.DESCRIPTION, 
        kind: .explicitOptional, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "DEFINED_VERSION", keyPath: \ePRODUCT_DEFINITION.DEFINED_VERSION, 
        kind: .derived, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "DOCUMENTATION_IDS", keyPath: \ePRODUCT_DEFINITION.DOCUMENTATION_IDS, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATING_PRODUCT_DEFINITION", keyPath: \ePRODUCT_DEFINITION.RELATING_PRODUCT_DEFINITION, 
        kind: .explicitRedeclaring, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ID", keyPath: \ePRODUCT_DEFINITION.ID, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "FRAME_OF_REFERENCE", keyPath: \ePRODUCT_DEFINITION.FRAME_OF_REFERENCE, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "DEFINITION", keyPath: \ePRODUCT_DEFINITION.DEFINITION, 
        kind: .derivedRedeclaring, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "RELATED_PRODUCT_DEFINITION", keyPath: \ePRODUCT_DEFINITION.RELATED_PRODUCT_DEFINITION, 
        kind: .explicitRedeclaring, source: .subEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NAME", keyPath: \ePRODUCT_DEFINITION.NAME, 
        kind: .derived, source: .thisEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "FORMATION", keyPath: \ePRODUCT_DEFINITION.FORMATION, 
        kind: .explicit, source: .thisEntity, mayYieldEntityReference: true)

      return entityDef
    }

  }
}
