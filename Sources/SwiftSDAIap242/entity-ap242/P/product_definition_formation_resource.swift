/* file: product_definition_formation_resource.swift 	 generated: Sat Aug 14 13:46:02 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY product_definition_formation_resource
    SUBTYPE OF ( action_resource, product_definition_formation );
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
               + 'REQUIREMENT_FOR_ACTION_RESOURCE.RESOURCES'  ) ) > 0 );
      wr2: ( SIZEOF( QUERY ( prpc <* USEDIN( SELF\product_definition_formation.of_product, 
               'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS'  )
               | ( prpc.name = 'part' ) ) ) <> 0 );
      wr3: ( SELF\action_resource.name = SELF\product_definition_formation.id );
      wr4: ( SELF\action_resource.description = SELF\product_definition_formation.description );
  END_ENTITY; -- product_definition_formation_resource (line:26076 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  SUPER- ENTITY(1)	action_resource
    ATTR:  name,	TYPE: label -- EXPLICIT

    ATTR:  description,	TYPE: OPTIONAL text -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  usage,	TYPE: SET [1 : ?] OF supported_item -- EXPLICIT

    ATTR:  kind,	TYPE: action_resource_type -- EXPLICIT


  SUPER- ENTITY(2)	product_definition_formation
    ATTR:  id,	TYPE: identifier -- EXPLICIT

    ATTR:  description,	TYPE: OPTIONAL text -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  of_product,	TYPE: product -- EXPLICIT
      -- possibly overriden by
          ENTITY: collection_version,	TYPE: collection


  ENTITY(SELF)	product_definition_formation_resource
    (no local attributes)

*/


//MARK: - Partial Entity
  public final class _product_definition_formation_resource : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      ePRODUCT_DEFINITION_FORMATION_RESOURCE.self
    }

    //ATTRIBUTES
    // (no local attributes)

    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //MARK: WHERE RULES (ENTITY)
    public static func WHERE_wr1(SELF: ePRODUCT_DEFINITION_FORMATION_RESOURCE?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SDAI.USEDIN(T: SELF, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
        .eREQUIREMENT_FOR_ACTION_RESOURCE.RESOURCES)
      let _TEMP2 = SDAI.SIZEOF(_TEMP1)
      let _TEMP3 = _TEMP2 > SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP3
    }
    public static func WHERE_wr2(SELF: ePRODUCT_DEFINITION_FORMATION_RESOURCE?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.GROUP_REF(ePRODUCT_DEFINITION_FORMATION.self)
      let _TEMP2 = _TEMP1?.OF_PRODUCT
      let _TEMP3 = SDAI.USEDIN(T: _TEMP2, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
        .ePRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS)
      let _TEMP4 = _TEMP3?.QUERY{ PRPC in 

          let _TEMP1 = /*runtime*/PRPC.NAME
          let _TEMP2 = SDAI.FORCE_OPTIONAL(/*runtime*/_TEMP1) .==. SDAI.FORCE_OPTIONAL(SDAI.STRING("part"))
          return _TEMP2 }
      let _TEMP5 = SDAI.SIZEOF(_TEMP4)
      let _TEMP6 = _TEMP5 .!=. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      return _TEMP6
    }
    public static func WHERE_wr3(SELF: ePRODUCT_DEFINITION_FORMATION_RESOURCE?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.GROUP_REF(eACTION_RESOURCE.self)
      let _TEMP2 = _TEMP1?.NAME
      let _TEMP3 = SELF.GROUP_REF(ePRODUCT_DEFINITION_FORMATION.self)
      let _TEMP4 = _TEMP3?.ID
      let _TEMP5 = _TEMP2 .==. _TEMP4
      return _TEMP5
    }
    public static func WHERE_wr4(SELF: ePRODUCT_DEFINITION_FORMATION_RESOURCE?) -> SDAI.LOGICAL {
      guard let SELF = SELF else { return SDAI.UNKNOWN }

      let _TEMP1 = SELF.GROUP_REF(eACTION_RESOURCE.self)
      let _TEMP2 = _TEMP1?.DESCRIPTION
      let _TEMP3 = SELF.GROUP_REF(ePRODUCT_DEFINITION_FORMATION.self)
      let _TEMP4 = _TEMP3?.DESCRIPTION
      let _TEMP5 = _TEMP2 .==. _TEMP4
      return _TEMP5
    }

    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init() {
      super.init(asAbstructSuperclass:())

    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 0
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      self.init( )
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY product_definition_formation_resource
    SUBTYPE OF ( action_resource, product_definition_formation );
    WHERE
      wr1: ( SIZEOF( USEDIN( SELF, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
               + 'REQUIREMENT_FOR_ACTION_RESOURCE.RESOURCES'  ) ) > 0 );
      wr2: ( SIZEOF( QUERY ( prpc <* USEDIN( SELF\product_definition_formation.of_product, 
               'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_RELATED_PRODUCT_CATEGORY.PRODUCTS'  )
               | ( prpc.name = 'part' ) ) ) <> 0 );
      wr3: ( SELF\action_resource.name = SELF\product_definition_formation.id );
      wr4: ( SELF\action_resource.description = SELF\product_definition_formation.description );
  END_ENTITY; -- product_definition_formation_resource (line:26076 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class ePRODUCT_DEFINITION_FORMATION_RESOURCE : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _product_definition_formation_resource.self
    }
    public let partialEntity: _product_definition_formation_resource

    //MARK: SUPERTYPES
    public let super_eACTION_RESOURCE: eACTION_RESOURCE 	// [1]
    public let super_ePRODUCT_DEFINITION_FORMATION: ePRODUCT_DEFINITION_FORMATION 	// [2]
    public var super_ePRODUCT_DEFINITION_FORMATION_RESOURCE: ePRODUCT_DEFINITION_FORMATION_RESOURCE { return self } 	// [3]

    //MARK: SUBTYPES

    //MARK: ATTRIBUTES
    // DESCRIPTION: (2 AMBIGUOUS REFs)

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eACTION_RESOURCE`` )
    public var KIND: eACTION_RESOURCE_TYPE {
      get {
        return SDAI.UNWRAP( super_eACTION_RESOURCE.partialEntity._kind )
      }
      set(newValue) {
        let partial = super_eACTION_RESOURCE.partialEntity
        partial._kind = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``ePRODUCT_DEFINITION_FORMATION`` )
    public var ID: tIDENTIFIER {
      get {
        return SDAI.UNWRAP( super_ePRODUCT_DEFINITION_FORMATION.partialEntity._id )
      }
      set(newValue) {
        let partial = super_ePRODUCT_DEFINITION_FORMATION.partialEntity
        partial._id = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``ePRODUCT_DEFINITION_FORMATION`` )
    public var OF_PRODUCT: ePRODUCT {
      get {
        return SDAI.UNWRAP( super_ePRODUCT_DEFINITION_FORMATION.partialEntity._of_product )
      }
      set(newValue) {
        let partial = super_ePRODUCT_DEFINITION_FORMATION.partialEntity
        partial._of_product = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eACTION_RESOURCE`` )
    public var NAME: tLABEL {
      get {
        return SDAI.UNWRAP( super_eACTION_RESOURCE.partialEntity._name )
      }
      set(newValue) {
        let partial = super_eACTION_RESOURCE.partialEntity
        partial._name = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eACTION_RESOURCE`` )
    public var USAGE: SDAI.SET<sSUPPORTED_ITEM>/*[1:nil]*/  {
      get {
        return SDAI.UNWRAP( super_eACTION_RESOURCE.partialEntity._usage )
      }
      set(newValue) {
        let partial = super_eACTION_RESOURCE.partialEntity
        partial._usage = SDAI.UNWRAP(newValue)
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_product_definition_formation_resource.self) else { return nil }
      self.partialEntity = partial

      guard let super1 = complexEntity?.entityReference(eACTION_RESOURCE.self) else { return nil }
      self.super_eACTION_RESOURCE = super1

      guard let super2 = complexEntity?.entityReference(ePRODUCT_DEFINITION_FORMATION.self) else { return nil }
      self.super_ePRODUCT_DEFINITION_FORMATION = super2

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }


    //MARK: WHERE RULE VALIDATION (ENTITY)
    public override class func validateWhereRules(instance:SDAI.EntityReference?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      guard let instance = instance as? Self else { return [:] }

      let prefix2 = prefix + " \(instance)"

      var result = super.validateWhereRules(instance:instance, prefix:prefix2)
      result[prefix2 + " .WHERE_wr1"] = _product_definition_formation_resource.WHERE_wr1(SELF: instance)
      result[prefix2 + " .WHERE_wr2"] = _product_definition_formation_resource.WHERE_wr2(SELF: instance)
      result[prefix2 + " .WHERE_wr3"] = _product_definition_formation_resource.WHERE_wr3(SELF: instance)
      result[prefix2 + " .WHERE_wr4"] = _product_definition_formation_resource.WHERE_wr4(SELF: instance)
      return result
    }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "PRODUCT_DEFINITION_FORMATION_RESOURCE", type: self, explicitAttributeCount: 0)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: eACTION_RESOURCE.self)
      entityDef.add(supertype: ePRODUCT_DEFINITION_FORMATION.self)
      entityDef.add(supertype: ePRODUCT_DEFINITION_FORMATION_RESOURCE.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "KIND", keyPath: \ePRODUCT_DEFINITION_FORMATION_RESOURCE.KIND, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "ID", keyPath: \ePRODUCT_DEFINITION_FORMATION_RESOURCE.ID, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "OF_PRODUCT", keyPath: \ePRODUCT_DEFINITION_FORMATION_RESOURCE.OF_PRODUCT, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NAME", keyPath: \ePRODUCT_DEFINITION_FORMATION_RESOURCE.NAME, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "USAGE", keyPath: \ePRODUCT_DEFINITION_FORMATION_RESOURCE.USAGE, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: true)

      return entityDef
    }

  }
}
