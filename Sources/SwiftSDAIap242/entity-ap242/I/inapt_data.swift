/* file: inapt_data.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -ENTITY DEFINITION in EXPRESS
/*

  ENTITY inapt_data
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            inapt_topology, 
            inapt_geometry, 
            inapt_topology_and_geometry_relationship, 
            inapt_manifold_solid_brep ) )
    SUBTYPE OF ( shape_data_quality_criterion );
  END_ENTITY; -- inapt_data (line:17952 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES
/*
  SUPER- ENTITY(1)	representation_item
    ATTR:  name,	TYPE: label -- EXPLICIT


  SUPER- ENTITY(2)	data_quality_criterion
    (no local attributes)

  SUPER- ENTITY(3)	data_quality_measurement_requirement
    (no local attributes)

  SUPER- ENTITY(4)	shape_data_quality_criterion
    ATTR:  assessment_specification,	TYPE: shape_data_quality_assessment_specification_select -- EXPLICIT
      -- possibly overriden by
          ENTITY: multiply_defined_placements,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: steep_angle_between_adjacent_edges,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: multiply_defined_directions,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: short_length_edge,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: wrongly_placed_void,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: g1_discontinuous_surface,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: short_length_curve,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: non_manifold_at_edge,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: multiply_defined_cartesian_points,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: small_area_surface,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: g2_discontinuity_between_adjacent_faces,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: indistinct_surface_knots,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: excessively_high_degree_curve,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: solid_with_wrong_number_of_voids,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: wrongly_oriented_void,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: entirely_narrow_surface,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: excessively_high_degree_surface,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: wrongly_placed_loop,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: self_intersecting_surface,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: curve_with_small_curvature_radius,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: self_intersecting_shell,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: entirely_narrow_solid,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: gap_between_pcurves_related_to_an_edge,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: inconsistent_face_and_surface_normals,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: intersecting_connected_face_sets,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: inconsistent_face_and_closed_shell_normals,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: indistinct_curve_knots,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: surface_with_excessive_patches_in_one_direction,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: non_manifold_at_vertex,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: partly_overlapping_edges,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: gap_between_edge_and_base_surface,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: inconsistent_curve_transition_code,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: free_edge,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: multiply_defined_faces,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: multiply_defined_edges,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: open_closed_shell,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: steep_angle_between_adjacent_faces,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: intersecting_shells_in_solid,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: intersecting_loops_in_face,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: erroneous_b_spline_curve_definition,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: entirely_narrow_face,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: unused_patches,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: g2_discontinuous_curve,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: solid_with_excessive_number_of_voids,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: partly_overlapping_solids,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: small_area_surface_patch,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: nearly_degenerate_surface_boundary,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: g2_discontinuous_surface,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: partly_overlapping_surfaces,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: gap_between_vertex_and_edge,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: high_degree_linear_curve,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: multiply_defined_solids,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: high_degree_planar_surface,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: inconsistent_edge_and_curve_directions,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: edge_with_excessive_segments,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: g1_discontinuity_between_adjacent_faces,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: partly_overlapping_curves,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: self_intersecting_curve,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: gap_between_adjacent_edges_in_loop,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: g1_discontinuous_curve,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: small_volume_solid,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: surface_with_small_curvature_radius,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: short_length_curve_segment,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: over_used_vertex,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: zero_surface_normal,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: disconnected_face_set,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: multiply_defined_surfaces,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: partly_overlapping_faces,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: narrow_surface_patch,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: multiply_defined_curves,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: self_intersecting_loop,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: curve_with_excessive_segments,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: multiply_defined_vertices,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: gap_between_faces_related_to_an_edge,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: extreme_patch_width_variation,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: inconsistent_adjacent_face_normals,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: inconsistent_surface_transition_code,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: nearly_degenerate_surface_patch,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: erroneous_b_spline_surface_definition,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: face_surface_with_excessive_patches_in_one_direction,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: high_degree_axi_symmetric_surface,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: open_edge_loop,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: small_area_face,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: abrupt_change_of_surface_normal,	TYPE: shape_data_quality_assessment_by_logical_test
          ENTITY: high_degree_conic,	TYPE: shape_data_quality_assessment_by_numerical_test
          ENTITY: gap_between_vertex_and_base_surface,	TYPE: shape_data_quality_assessment_by_numerical_test


  ENTITY(SELF)	inapt_data
    (no local attributes)

  SUB- ENTITY(6)	short_length_curve
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(7)	small_area_surface
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(8)	entirely_narrow_surface
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  width_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(9)	nearly_degenerate_geometry
    (no local attributes)

  SUB- ENTITY(10)	g1_discontinuous_surface
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(11)	g2_discontinuous_curve
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  assessment_specification_2,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  flat_curvature_radius_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(12)	g2_discontinuous_surface
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  assessment_specification_2,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  flat_curvature_radius_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(13)	g1_discontinuous_curve
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(14)	discontinuous_geometry
    (no local attributes)

  SUB- ENTITY(15)	self_intersecting_surface
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  geodesic_separation_factor,	TYPE: REAL -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  interference_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(16)	self_intersecting_curve
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  arc_length_separation_factor,	TYPE: REAL -- EXPLICIT

    ATTR:  interference_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(17)	self_intersecting_geometry
    (no local attributes)

  SUB- ENTITY(18)	indistinct_surface_knots
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(19)	curve_with_small_curvature_radius
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(20)	indistinct_curve_knots
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(21)	short_length_curve_segment
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(22)	surface_with_small_curvature_radius
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(23)	small_area_surface_patch
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(24)	narrow_surface_patch
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  width_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(25)	nearly_degenerate_surface_boundary
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(26)	nearly_degenerate_surface_patch
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(27)	geometry_with_local_near_degeneracy
    (no local attributes)

  SUB- ENTITY(28)	partly_overlapping_curves
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  interference_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(29)	partly_overlapping_surfaces
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  interference_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(30)	overlapping_geometry
    (no local attributes)

  SUB- ENTITY(31)	multiply_defined_placements
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  assessment_specification_2,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(32)	multiply_defined_directions
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(33)	multiply_defined_cartesian_points
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(34)	multiply_defined_surfaces
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(35)	multiply_defined_curves
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(36)	multiply_defined_geometry
    (no local attributes)

  SUB- ENTITY(37)	extreme_patch_width_variation
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(38)	zero_surface_normal
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(39)	abrupt_change_of_surface_normal
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  small_vector_tolerance,	TYPE: length_measure -- EXPLICIT

    ATTR:  test_point_distance_tolerance,	TYPE: length_measure -- EXPLICIT


  SUB- ENTITY(40)	geometry_with_local_irregularity
    (no local attributes)

  SUB- ENTITY(41)	excessively_high_degree_curve
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(42)	excessively_high_degree_surface
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(43)	surface_with_excessive_patches_in_one_direction
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(44)	high_degree_linear_curve
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  approximation_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(45)	high_degree_planar_surface
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  approximation_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(46)	curve_with_excessive_segments
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(47)	high_degree_axi_symmetric_surface
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  approximation_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(48)	high_degree_conic
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  approximation_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(49)	overcomplex_geometry
    (no local attributes)

  SUB- ENTITY(50)	inapt_geometry
    (no local attributes)

  SUB- ENTITY(51)	self_intersecting_shell
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  geodesic_separation_factor,	TYPE: REAL -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  interference_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(52)	intersecting_connected_face_sets
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  interference_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(53)	self_intersecting_loop
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  arc_length_distance_factor,	TYPE: REAL -- EXPLICIT

    ATTR:  interference_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(54)	topology_related_to_self_intersecting_geometry
    (no local attributes)

  SUB- ENTITY(55)	short_length_edge
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(56)	small_area_face
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(57)	entirely_narrow_face
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  width_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(58)	topology_related_to_nearly_degenerate_geometry
    (no local attributes)

  SUB- ENTITY(59)	multiply_defined_faces
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(60)	multiply_defined_edges
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(61)	multiply_defined_vertices
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(62)	topology_related_to_multiply_defined_geometry
    (no local attributes)

  SUB- ENTITY(63)	gap_between_pcurves_related_to_an_edge
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(64)	gap_between_edge_and_base_surface
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(65)	gap_between_vertex_and_edge
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(66)	gap_between_adjacent_edges_in_loop
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(67)	gap_between_faces_related_to_an_edge
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(68)	gap_between_vertex_and_base_surface
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(69)	geometric_gap_in_topology
    (no local attributes)

  SUB- ENTITY(70)	g2_discontinuity_between_adjacent_faces
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  assessment_specification_2,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT	(AMBIGUOUS/MASKED)

    ATTR:  flat_curvature_radius_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(71)	g1_discontinuity_between_adjacent_faces
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(72)	non_smooth_geometry_transition_across_edge
    (no local attributes)

  SUB- ENTITY(73)	steep_angle_between_adjacent_edges
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(74)	steep_angle_between_adjacent_faces
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(75)	steep_geometry_transition_across_edge
    (no local attributes)

  SUB- ENTITY(76)	partly_overlapping_edges
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  interference_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(77)	partly_overlapping_faces
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  interference_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(78)	topology_related_to_overlapping_geometry
    (no local attributes)

  SUB- ENTITY(79)	unused_patches
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(80)	edge_with_excessive_segments
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(81)	face_surface_with_excessive_patches_in_one_direction
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(82)	overcomplex_topology_and_geometry_relationship
    (no local attributes)

  SUB- ENTITY(83)	inapt_topology_and_geometry_relationship
    (no local attributes)

  SUB- ENTITY(84)	non_manifold_at_edge
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(85)	non_manifold_at_vertex
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(86)	free_edge
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(87)	over_used_vertex
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(88)	inapt_topology
    (no local attributes)

  SUB- ENTITY(89)	entirely_narrow_solid
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_logical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  width_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(90)	solid_with_excessive_number_of_voids
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(91)	partly_overlapping_solids
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion

    ATTR:  interference_tolerance,	TYPE: length_measure -- EXPLICIT	(AMBIGUOUS/MASKED)


  SUB- ENTITY(92)	multiply_defined_solids
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(93)	small_volume_solid
    REDCR: assessment_specification,	TYPE: shape_data_quality_assessment_by_numerical_test -- EXPLICIT
      -- OVERRIDING ENTITY: shape_data_quality_criterion


  SUB- ENTITY(94)	inapt_manifold_solid_brep
    (no local attributes)

*/


//MARK: - Partial Entity
  public final class _inapt_data : SDAI.PartialEntity {
    public override class var entityReferenceType: SDAI.EntityReference.Type {
      eINAPT_DATA.self
    }

    //ATTRIBUTES
    // (no local attributes)

    public override var typeMembers: Set<SDAI.STRING> {
      var members = Set<SDAI.STRING>()
      members.insert(SDAI.STRING(Self.typeName))
      return members
    }


    //VALUE COMPARISON SUPPORT
    public override func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      super.hashAsValue(into: &hasher, visited: &complexEntities)
    }

    public override func isValueEqual(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      guard let rhs = rhs as? Self else { return false }
      if !super.isValueEqual(to: rhs, visited: &comppairs) { return false }
      return true
    }

    public override func isValueEqualOptionally(to rhs: SDAI.PartialEntity, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      guard let rhs = rhs as? Self else { return false }
      var result: Bool? = true
      if let comp = super.isValueEqualOptionally(to: rhs, visited: &comppairs) {
        if !comp { return false }
      }
      else { result = nil }
      return result
    }


    //EXPRESS IMPLICIT PARTIAL ENTITY CONSTRUCTOR
    public init() {
      super.init(asAbstructSuperclass:())

    }

    //p21 PARTIAL ENTITY CONSTRUCTOR
    public required convenience init?(parameters: [P21Decode.ExchangeStructure.Parameter], exchangeStructure: P21Decode.ExchangeStructure) {
      let numParams = 0
      guard parameters.count == numParams
      else { exchangeStructure.error = "number of p21 parameters(\(parameters.count)) are different from expected(\(numParams)) for entity(\(Self.entityName)) constructor"; return nil }

      self.init( )
    }
  }


//MARK: - Entity Reference

/** ENTITY reference
- EXPRESS:
```express
  ENTITY inapt_data
    ABSTRACT SUPERTYPE OF ( 
        ONEOF ( 
            inapt_topology, 
            inapt_geometry, 
            inapt_topology_and_geometry_relationship, 
            inapt_manifold_solid_brep ) )
    SUBTYPE OF ( shape_data_quality_criterion );
  END_ENTITY; -- inapt_data (line:17952 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public final class eINAPT_DATA : SDAI.EntityReference {

    //MARK: PARTIAL ENTITY
    public override class var partialEntityType: SDAI.PartialEntity.Type {
      _inapt_data.self
    }
    public let partialEntity: _inapt_data

    //MARK: SUPERTYPES
    public let super_eREPRESENTATION_ITEM: eREPRESENTATION_ITEM 	// [1]
    public let super_eDATA_QUALITY_CRITERION: eDATA_QUALITY_CRITERION 	// [2]
    public let super_eDATA_QUALITY_MEASUREMENT_REQUIREMENT: eDATA_QUALITY_MEASUREMENT_REQUIREMENT 	// [3]
    public let super_eSHAPE_DATA_QUALITY_CRITERION: eSHAPE_DATA_QUALITY_CRITERION 	// [4]
    public var super_eINAPT_DATA: eINAPT_DATA { return self } 	// [5]

    //MARK: SUBTYPES
    public var sub_eSHORT_LENGTH_CURVE: eSHORT_LENGTH_CURVE? {	// [6]
      return self.complexEntity.entityReference(eSHORT_LENGTH_CURVE.self)
    }

    public var sub_eSMALL_AREA_SURFACE: eSMALL_AREA_SURFACE? {	// [7]
      return self.complexEntity.entityReference(eSMALL_AREA_SURFACE.self)
    }

    public var sub_eENTIRELY_NARROW_SURFACE: eENTIRELY_NARROW_SURFACE? {	// [8]
      return self.complexEntity.entityReference(eENTIRELY_NARROW_SURFACE.self)
    }

    public var sub_eNEARLY_DEGENERATE_GEOMETRY: eNEARLY_DEGENERATE_GEOMETRY? {	// [9]
      return self.complexEntity.entityReference(eNEARLY_DEGENERATE_GEOMETRY.self)
    }

    public var sub_eG1_DISCONTINUOUS_SURFACE: eG1_DISCONTINUOUS_SURFACE? {	// [10]
      return self.complexEntity.entityReference(eG1_DISCONTINUOUS_SURFACE.self)
    }

    public var sub_eG2_DISCONTINUOUS_CURVE: eG2_DISCONTINUOUS_CURVE? {	// [11]
      return self.complexEntity.entityReference(eG2_DISCONTINUOUS_CURVE.self)
    }

    public var sub_eG2_DISCONTINUOUS_SURFACE: eG2_DISCONTINUOUS_SURFACE? {	// [12]
      return self.complexEntity.entityReference(eG2_DISCONTINUOUS_SURFACE.self)
    }

    public var sub_eG1_DISCONTINUOUS_CURVE: eG1_DISCONTINUOUS_CURVE? {	// [13]
      return self.complexEntity.entityReference(eG1_DISCONTINUOUS_CURVE.self)
    }

    public var sub_eDISCONTINUOUS_GEOMETRY: eDISCONTINUOUS_GEOMETRY? {	// [14]
      return self.complexEntity.entityReference(eDISCONTINUOUS_GEOMETRY.self)
    }

    public var sub_eSELF_INTERSECTING_SURFACE: eSELF_INTERSECTING_SURFACE? {	// [15]
      return self.complexEntity.entityReference(eSELF_INTERSECTING_SURFACE.self)
    }

    public var sub_eSELF_INTERSECTING_CURVE: eSELF_INTERSECTING_CURVE? {	// [16]
      return self.complexEntity.entityReference(eSELF_INTERSECTING_CURVE.self)
    }

    public var sub_eSELF_INTERSECTING_GEOMETRY: eSELF_INTERSECTING_GEOMETRY? {	// [17]
      return self.complexEntity.entityReference(eSELF_INTERSECTING_GEOMETRY.self)
    }

    public var sub_eINDISTINCT_SURFACE_KNOTS: eINDISTINCT_SURFACE_KNOTS? {	// [18]
      return self.complexEntity.entityReference(eINDISTINCT_SURFACE_KNOTS.self)
    }

    public var sub_eCURVE_WITH_SMALL_CURVATURE_RADIUS: eCURVE_WITH_SMALL_CURVATURE_RADIUS? {	// [19]
      return self.complexEntity.entityReference(eCURVE_WITH_SMALL_CURVATURE_RADIUS.self)
    }

    public var sub_eINDISTINCT_CURVE_KNOTS: eINDISTINCT_CURVE_KNOTS? {	// [20]
      return self.complexEntity.entityReference(eINDISTINCT_CURVE_KNOTS.self)
    }

    public var sub_eSHORT_LENGTH_CURVE_SEGMENT: eSHORT_LENGTH_CURVE_SEGMENT? {	// [21]
      return self.complexEntity.entityReference(eSHORT_LENGTH_CURVE_SEGMENT.self)
    }

    public var sub_eSURFACE_WITH_SMALL_CURVATURE_RADIUS: eSURFACE_WITH_SMALL_CURVATURE_RADIUS? {	// [22]
      return self.complexEntity.entityReference(eSURFACE_WITH_SMALL_CURVATURE_RADIUS.self)
    }

    public var sub_eSMALL_AREA_SURFACE_PATCH: eSMALL_AREA_SURFACE_PATCH? {	// [23]
      return self.complexEntity.entityReference(eSMALL_AREA_SURFACE_PATCH.self)
    }

    public var sub_eNARROW_SURFACE_PATCH: eNARROW_SURFACE_PATCH? {	// [24]
      return self.complexEntity.entityReference(eNARROW_SURFACE_PATCH.self)
    }

    public var sub_eNEARLY_DEGENERATE_SURFACE_BOUNDARY: eNEARLY_DEGENERATE_SURFACE_BOUNDARY? {	// [25]
      return self.complexEntity.entityReference(eNEARLY_DEGENERATE_SURFACE_BOUNDARY.self)
    }

    public var sub_eNEARLY_DEGENERATE_SURFACE_PATCH: eNEARLY_DEGENERATE_SURFACE_PATCH? {	// [26]
      return self.complexEntity.entityReference(eNEARLY_DEGENERATE_SURFACE_PATCH.self)
    }

    public var sub_eGEOMETRY_WITH_LOCAL_NEAR_DEGENERACY: eGEOMETRY_WITH_LOCAL_NEAR_DEGENERACY? {	// [27]
      return self.complexEntity.entityReference(eGEOMETRY_WITH_LOCAL_NEAR_DEGENERACY.self)
    }

    public var sub_ePARTLY_OVERLAPPING_CURVES: ePARTLY_OVERLAPPING_CURVES? {	// [28]
      return self.complexEntity.entityReference(ePARTLY_OVERLAPPING_CURVES.self)
    }

    public var sub_ePARTLY_OVERLAPPING_SURFACES: ePARTLY_OVERLAPPING_SURFACES? {	// [29]
      return self.complexEntity.entityReference(ePARTLY_OVERLAPPING_SURFACES.self)
    }

    public var sub_eOVERLAPPING_GEOMETRY: eOVERLAPPING_GEOMETRY? {	// [30]
      return self.complexEntity.entityReference(eOVERLAPPING_GEOMETRY.self)
    }

    public var sub_eMULTIPLY_DEFINED_PLACEMENTS: eMULTIPLY_DEFINED_PLACEMENTS? {	// [31]
      return self.complexEntity.entityReference(eMULTIPLY_DEFINED_PLACEMENTS.self)
    }

    public var sub_eMULTIPLY_DEFINED_DIRECTIONS: eMULTIPLY_DEFINED_DIRECTIONS? {	// [32]
      return self.complexEntity.entityReference(eMULTIPLY_DEFINED_DIRECTIONS.self)
    }

    public var sub_eMULTIPLY_DEFINED_CARTESIAN_POINTS: eMULTIPLY_DEFINED_CARTESIAN_POINTS? {	// [33]
      return self.complexEntity.entityReference(eMULTIPLY_DEFINED_CARTESIAN_POINTS.self)
    }

    public var sub_eMULTIPLY_DEFINED_SURFACES: eMULTIPLY_DEFINED_SURFACES? {	// [34]
      return self.complexEntity.entityReference(eMULTIPLY_DEFINED_SURFACES.self)
    }

    public var sub_eMULTIPLY_DEFINED_CURVES: eMULTIPLY_DEFINED_CURVES? {	// [35]
      return self.complexEntity.entityReference(eMULTIPLY_DEFINED_CURVES.self)
    }

    public var sub_eMULTIPLY_DEFINED_GEOMETRY: eMULTIPLY_DEFINED_GEOMETRY? {	// [36]
      return self.complexEntity.entityReference(eMULTIPLY_DEFINED_GEOMETRY.self)
    }

    public var sub_eEXTREME_PATCH_WIDTH_VARIATION: eEXTREME_PATCH_WIDTH_VARIATION? {	// [37]
      return self.complexEntity.entityReference(eEXTREME_PATCH_WIDTH_VARIATION.self)
    }

    public var sub_eZERO_SURFACE_NORMAL: eZERO_SURFACE_NORMAL? {	// [38]
      return self.complexEntity.entityReference(eZERO_SURFACE_NORMAL.self)
    }

    public var sub_eABRUPT_CHANGE_OF_SURFACE_NORMAL: eABRUPT_CHANGE_OF_SURFACE_NORMAL? {	// [39]
      return self.complexEntity.entityReference(eABRUPT_CHANGE_OF_SURFACE_NORMAL.self)
    }

    public var sub_eGEOMETRY_WITH_LOCAL_IRREGULARITY: eGEOMETRY_WITH_LOCAL_IRREGULARITY? {	// [40]
      return self.complexEntity.entityReference(eGEOMETRY_WITH_LOCAL_IRREGULARITY.self)
    }

    public var sub_eEXCESSIVELY_HIGH_DEGREE_CURVE: eEXCESSIVELY_HIGH_DEGREE_CURVE? {	// [41]
      return self.complexEntity.entityReference(eEXCESSIVELY_HIGH_DEGREE_CURVE.self)
    }

    public var sub_eEXCESSIVELY_HIGH_DEGREE_SURFACE: eEXCESSIVELY_HIGH_DEGREE_SURFACE? {	// [42]
      return self.complexEntity.entityReference(eEXCESSIVELY_HIGH_DEGREE_SURFACE.self)
    }

    public var sub_eSURFACE_WITH_EXCESSIVE_PATCHES_IN_ONE_DIRECTION: eSURFACE_WITH_EXCESSIVE_PATCHES_IN_ONE_DIRECTION? {	// [43]
      return self.complexEntity.entityReference(eSURFACE_WITH_EXCESSIVE_PATCHES_IN_ONE_DIRECTION.self)
    }

    public var sub_eHIGH_DEGREE_LINEAR_CURVE: eHIGH_DEGREE_LINEAR_CURVE? {	// [44]
      return self.complexEntity.entityReference(eHIGH_DEGREE_LINEAR_CURVE.self)
    }

    public var sub_eHIGH_DEGREE_PLANAR_SURFACE: eHIGH_DEGREE_PLANAR_SURFACE? {	// [45]
      return self.complexEntity.entityReference(eHIGH_DEGREE_PLANAR_SURFACE.self)
    }

    public var sub_eCURVE_WITH_EXCESSIVE_SEGMENTS: eCURVE_WITH_EXCESSIVE_SEGMENTS? {	// [46]
      return self.complexEntity.entityReference(eCURVE_WITH_EXCESSIVE_SEGMENTS.self)
    }

    public var sub_eHIGH_DEGREE_AXI_SYMMETRIC_SURFACE: eHIGH_DEGREE_AXI_SYMMETRIC_SURFACE? {	// [47]
      return self.complexEntity.entityReference(eHIGH_DEGREE_AXI_SYMMETRIC_SURFACE.self)
    }

    public var sub_eHIGH_DEGREE_CONIC: eHIGH_DEGREE_CONIC? {	// [48]
      return self.complexEntity.entityReference(eHIGH_DEGREE_CONIC.self)
    }

    public var sub_eOVERCOMPLEX_GEOMETRY: eOVERCOMPLEX_GEOMETRY? {	// [49]
      return self.complexEntity.entityReference(eOVERCOMPLEX_GEOMETRY.self)
    }

    public var sub_eINAPT_GEOMETRY: eINAPT_GEOMETRY? {	// [50]
      return self.complexEntity.entityReference(eINAPT_GEOMETRY.self)
    }

    public var sub_eSELF_INTERSECTING_SHELL: eSELF_INTERSECTING_SHELL? {	// [51]
      return self.complexEntity.entityReference(eSELF_INTERSECTING_SHELL.self)
    }

    public var sub_eINTERSECTING_CONNECTED_FACE_SETS: eINTERSECTING_CONNECTED_FACE_SETS? {	// [52]
      return self.complexEntity.entityReference(eINTERSECTING_CONNECTED_FACE_SETS.self)
    }

    public var sub_eSELF_INTERSECTING_LOOP: eSELF_INTERSECTING_LOOP? {	// [53]
      return self.complexEntity.entityReference(eSELF_INTERSECTING_LOOP.self)
    }

    public var sub_eTOPOLOGY_RELATED_TO_SELF_INTERSECTING_GEOMETRY: eTOPOLOGY_RELATED_TO_SELF_INTERSECTING_GEOMETRY? {	// [54]
      return self.complexEntity.entityReference(eTOPOLOGY_RELATED_TO_SELF_INTERSECTING_GEOMETRY.self)
    }

    public var sub_eSHORT_LENGTH_EDGE: eSHORT_LENGTH_EDGE? {	// [55]
      return self.complexEntity.entityReference(eSHORT_LENGTH_EDGE.self)
    }

    public var sub_eSMALL_AREA_FACE: eSMALL_AREA_FACE? {	// [56]
      return self.complexEntity.entityReference(eSMALL_AREA_FACE.self)
    }

    public var sub_eENTIRELY_NARROW_FACE: eENTIRELY_NARROW_FACE? {	// [57]
      return self.complexEntity.entityReference(eENTIRELY_NARROW_FACE.self)
    }

    public var sub_eTOPOLOGY_RELATED_TO_NEARLY_DEGENERATE_GEOMETRY: eTOPOLOGY_RELATED_TO_NEARLY_DEGENERATE_GEOMETRY? {	// [58]
      return self.complexEntity.entityReference(eTOPOLOGY_RELATED_TO_NEARLY_DEGENERATE_GEOMETRY.self)
    }

    public var sub_eMULTIPLY_DEFINED_FACES: eMULTIPLY_DEFINED_FACES? {	// [59]
      return self.complexEntity.entityReference(eMULTIPLY_DEFINED_FACES.self)
    }

    public var sub_eMULTIPLY_DEFINED_EDGES: eMULTIPLY_DEFINED_EDGES? {	// [60]
      return self.complexEntity.entityReference(eMULTIPLY_DEFINED_EDGES.self)
    }

    public var sub_eMULTIPLY_DEFINED_VERTICES: eMULTIPLY_DEFINED_VERTICES? {	// [61]
      return self.complexEntity.entityReference(eMULTIPLY_DEFINED_VERTICES.self)
    }

    public var sub_eTOPOLOGY_RELATED_TO_MULTIPLY_DEFINED_GEOMETRY: eTOPOLOGY_RELATED_TO_MULTIPLY_DEFINED_GEOMETRY? {	// [62]
      return self.complexEntity.entityReference(eTOPOLOGY_RELATED_TO_MULTIPLY_DEFINED_GEOMETRY.self)
    }

    public var sub_eGAP_BETWEEN_PCURVES_RELATED_TO_AN_EDGE: eGAP_BETWEEN_PCURVES_RELATED_TO_AN_EDGE? {	// [63]
      return self.complexEntity.entityReference(eGAP_BETWEEN_PCURVES_RELATED_TO_AN_EDGE.self)
    }

    public var sub_eGAP_BETWEEN_EDGE_AND_BASE_SURFACE: eGAP_BETWEEN_EDGE_AND_BASE_SURFACE? {	// [64]
      return self.complexEntity.entityReference(eGAP_BETWEEN_EDGE_AND_BASE_SURFACE.self)
    }

    public var sub_eGAP_BETWEEN_VERTEX_AND_EDGE: eGAP_BETWEEN_VERTEX_AND_EDGE? {	// [65]
      return self.complexEntity.entityReference(eGAP_BETWEEN_VERTEX_AND_EDGE.self)
    }

    public var sub_eGAP_BETWEEN_ADJACENT_EDGES_IN_LOOP: eGAP_BETWEEN_ADJACENT_EDGES_IN_LOOP? {	// [66]
      return self.complexEntity.entityReference(eGAP_BETWEEN_ADJACENT_EDGES_IN_LOOP.self)
    }

    public var sub_eGAP_BETWEEN_FACES_RELATED_TO_AN_EDGE: eGAP_BETWEEN_FACES_RELATED_TO_AN_EDGE? {	// [67]
      return self.complexEntity.entityReference(eGAP_BETWEEN_FACES_RELATED_TO_AN_EDGE.self)
    }

    public var sub_eGAP_BETWEEN_VERTEX_AND_BASE_SURFACE: eGAP_BETWEEN_VERTEX_AND_BASE_SURFACE? {	// [68]
      return self.complexEntity.entityReference(eGAP_BETWEEN_VERTEX_AND_BASE_SURFACE.self)
    }

    public var sub_eGEOMETRIC_GAP_IN_TOPOLOGY: eGEOMETRIC_GAP_IN_TOPOLOGY? {	// [69]
      return self.complexEntity.entityReference(eGEOMETRIC_GAP_IN_TOPOLOGY.self)
    }

    public var sub_eG2_DISCONTINUITY_BETWEEN_ADJACENT_FACES: eG2_DISCONTINUITY_BETWEEN_ADJACENT_FACES? {	// [70]
      return self.complexEntity.entityReference(eG2_DISCONTINUITY_BETWEEN_ADJACENT_FACES.self)
    }

    public var sub_eG1_DISCONTINUITY_BETWEEN_ADJACENT_FACES: eG1_DISCONTINUITY_BETWEEN_ADJACENT_FACES? {	// [71]
      return self.complexEntity.entityReference(eG1_DISCONTINUITY_BETWEEN_ADJACENT_FACES.self)
    }

    public var sub_eNON_SMOOTH_GEOMETRY_TRANSITION_ACROSS_EDGE: eNON_SMOOTH_GEOMETRY_TRANSITION_ACROSS_EDGE? {	// [72]
      return self.complexEntity.entityReference(eNON_SMOOTH_GEOMETRY_TRANSITION_ACROSS_EDGE.self)
    }

    public var sub_eSTEEP_ANGLE_BETWEEN_ADJACENT_EDGES: eSTEEP_ANGLE_BETWEEN_ADJACENT_EDGES? {	// [73]
      return self.complexEntity.entityReference(eSTEEP_ANGLE_BETWEEN_ADJACENT_EDGES.self)
    }

    public var sub_eSTEEP_ANGLE_BETWEEN_ADJACENT_FACES: eSTEEP_ANGLE_BETWEEN_ADJACENT_FACES? {	// [74]
      return self.complexEntity.entityReference(eSTEEP_ANGLE_BETWEEN_ADJACENT_FACES.self)
    }

    public var sub_eSTEEP_GEOMETRY_TRANSITION_ACROSS_EDGE: eSTEEP_GEOMETRY_TRANSITION_ACROSS_EDGE? {	// [75]
      return self.complexEntity.entityReference(eSTEEP_GEOMETRY_TRANSITION_ACROSS_EDGE.self)
    }

    public var sub_ePARTLY_OVERLAPPING_EDGES: ePARTLY_OVERLAPPING_EDGES? {	// [76]
      return self.complexEntity.entityReference(ePARTLY_OVERLAPPING_EDGES.self)
    }

    public var sub_ePARTLY_OVERLAPPING_FACES: ePARTLY_OVERLAPPING_FACES? {	// [77]
      return self.complexEntity.entityReference(ePARTLY_OVERLAPPING_FACES.self)
    }

    public var sub_eTOPOLOGY_RELATED_TO_OVERLAPPING_GEOMETRY: eTOPOLOGY_RELATED_TO_OVERLAPPING_GEOMETRY? {	// [78]
      return self.complexEntity.entityReference(eTOPOLOGY_RELATED_TO_OVERLAPPING_GEOMETRY.self)
    }

    public var sub_eUNUSED_PATCHES: eUNUSED_PATCHES? {	// [79]
      return self.complexEntity.entityReference(eUNUSED_PATCHES.self)
    }

    public var sub_eEDGE_WITH_EXCESSIVE_SEGMENTS: eEDGE_WITH_EXCESSIVE_SEGMENTS? {	// [80]
      return self.complexEntity.entityReference(eEDGE_WITH_EXCESSIVE_SEGMENTS.self)
    }

    public var sub_eFACE_SURFACE_WITH_EXCESSIVE_PATCHES_IN_ONE_DIRECTION: eFACE_SURFACE_WITH_EXCESSIVE_PATCHES_IN_ONE_DIRECTION? {	// [81]
      return self.complexEntity.entityReference(eFACE_SURFACE_WITH_EXCESSIVE_PATCHES_IN_ONE_DIRECTION.self)
    }

    public var sub_eOVERCOMPLEX_TOPOLOGY_AND_GEOMETRY_RELATIONSHIP: eOVERCOMPLEX_TOPOLOGY_AND_GEOMETRY_RELATIONSHIP? {	// [82]
      return self.complexEntity.entityReference(eOVERCOMPLEX_TOPOLOGY_AND_GEOMETRY_RELATIONSHIP.self)
    }

    public var sub_eINAPT_TOPOLOGY_AND_GEOMETRY_RELATIONSHIP: eINAPT_TOPOLOGY_AND_GEOMETRY_RELATIONSHIP? {	// [83]
      return self.complexEntity.entityReference(eINAPT_TOPOLOGY_AND_GEOMETRY_RELATIONSHIP.self)
    }

    public var sub_eNON_MANIFOLD_AT_EDGE: eNON_MANIFOLD_AT_EDGE? {	// [84]
      return self.complexEntity.entityReference(eNON_MANIFOLD_AT_EDGE.self)
    }

    public var sub_eNON_MANIFOLD_AT_VERTEX: eNON_MANIFOLD_AT_VERTEX? {	// [85]
      return self.complexEntity.entityReference(eNON_MANIFOLD_AT_VERTEX.self)
    }

    public var sub_eFREE_EDGE: eFREE_EDGE? {	// [86]
      return self.complexEntity.entityReference(eFREE_EDGE.self)
    }

    public var sub_eOVER_USED_VERTEX: eOVER_USED_VERTEX? {	// [87]
      return self.complexEntity.entityReference(eOVER_USED_VERTEX.self)
    }

    public var sub_eINAPT_TOPOLOGY: eINAPT_TOPOLOGY? {	// [88]
      return self.complexEntity.entityReference(eINAPT_TOPOLOGY.self)
    }

    public var sub_eENTIRELY_NARROW_SOLID: eENTIRELY_NARROW_SOLID? {	// [89]
      return self.complexEntity.entityReference(eENTIRELY_NARROW_SOLID.self)
    }

    public var sub_eSOLID_WITH_EXCESSIVE_NUMBER_OF_VOIDS: eSOLID_WITH_EXCESSIVE_NUMBER_OF_VOIDS? {	// [90]
      return self.complexEntity.entityReference(eSOLID_WITH_EXCESSIVE_NUMBER_OF_VOIDS.self)
    }

    public var sub_ePARTLY_OVERLAPPING_SOLIDS: ePARTLY_OVERLAPPING_SOLIDS? {	// [91]
      return self.complexEntity.entityReference(ePARTLY_OVERLAPPING_SOLIDS.self)
    }

    public var sub_eMULTIPLY_DEFINED_SOLIDS: eMULTIPLY_DEFINED_SOLIDS? {	// [92]
      return self.complexEntity.entityReference(eMULTIPLY_DEFINED_SOLIDS.self)
    }

    public var sub_eSMALL_VOLUME_SOLID: eSMALL_VOLUME_SOLID? {	// [93]
      return self.complexEntity.entityReference(eSMALL_VOLUME_SOLID.self)
    }

    public var sub_eINAPT_MANIFOLD_SOLID_BREP: eINAPT_MANIFOLD_SOLID_BREP? {	// [94]
      return self.complexEntity.entityReference(eINAPT_MANIFOLD_SOLID_BREP.self)
    }


    //MARK: ATTRIBUTES
    // FLAT_CURVATURE_RADIUS_TOLERANCE: (3 AMBIGUOUS REFs)

    // INTERFERENCE_TOLERANCE: (10 AMBIGUOUS REFs)

    // WIDTH_TOLERANCE: (4 AMBIGUOUS REFs)

    // APPROXIMATION_TOLERANCE: (4 AMBIGUOUS REFs)

    // ASSESSMENT_SPECIFICATION_2: (4 AMBIGUOUS REFs)

    // GEODESIC_SEPARATION_FACTOR: (2 AMBIGUOUS REFs)

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSELF_INTERSECTING_LOOP`` )
    public var ARC_LENGTH_DISTANCE_FACTOR: SDAI.REAL?  {
      get {
        return sub_eSELF_INTERSECTING_LOOP?.partialEntity._arc_length_distance_factor
      }
      set(newValue) {
        guard let partial = sub_eSELF_INTERSECTING_LOOP?.super_eSELF_INTERSECTING_LOOP.partialEntity
          else { return }
        partial._arc_length_distance_factor = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eABRUPT_CHANGE_OF_SURFACE_NORMAL`` )
    public var TEST_POINT_DISTANCE_TOLERANCE: tLENGTH_MEASURE?  {
      get {
        return sub_eABRUPT_CHANGE_OF_SURFACE_NORMAL?.partialEntity._test_point_distance_tolerance
      }
      set(newValue) {
        guard let partial = sub_eABRUPT_CHANGE_OF_SURFACE_NORMAL?.super_eABRUPT_CHANGE_OF_SURFACE_NORMAL
          .partialEntity else { return }
        partial._test_point_distance_tolerance = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eSELF_INTERSECTING_CURVE`` )
    public var ARC_LENGTH_SEPARATION_FACTOR: SDAI.REAL?  {
      get {
        return sub_eSELF_INTERSECTING_CURVE?.partialEntity._arc_length_separation_factor
      }
      set(newValue) {
        guard let partial = sub_eSELF_INTERSECTING_CURVE?.super_eSELF_INTERSECTING_CURVE.partialEntity
          else { return }
        partial._arc_length_separation_factor = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eSHAPE_DATA_QUALITY_CRITERION`` )
    public var ASSESSMENT_SPECIFICATION: sSHAPE_DATA_QUALITY_ASSESSMENT_SPECIFICATION_SELECT {
      get {
        return SDAI.UNWRAP( super_eSHAPE_DATA_QUALITY_CRITERION.partialEntity._assessment_specification )
      }
      set(newValue) {
        let partial = super_eSHAPE_DATA_QUALITY_CRITERION.partialEntity
        partial._assessment_specification = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUPER( ``eREPRESENTATION_ITEM`` )
    public var NAME: tLABEL {
      get {
        return SDAI.UNWRAP( super_eREPRESENTATION_ITEM.partialEntity._name )
      }
      set(newValue) {
        let partial = super_eREPRESENTATION_ITEM.partialEntity
        partial._name = SDAI.UNWRAP(newValue)
      }
    }

    /// __EXPLICIT__ attribute
    /// - origin: SUB( ``eABRUPT_CHANGE_OF_SURFACE_NORMAL`` )
    public var SMALL_VECTOR_TOLERANCE: tLENGTH_MEASURE?  {
      get {
        return sub_eABRUPT_CHANGE_OF_SURFACE_NORMAL?.partialEntity._small_vector_tolerance
      }
      set(newValue) {
        guard let partial = sub_eABRUPT_CHANGE_OF_SURFACE_NORMAL?.super_eABRUPT_CHANGE_OF_SURFACE_NORMAL
          .partialEntity else { return }
        partial._small_vector_tolerance = SDAI.UNWRAP(newValue)
      }
    }


    //MARK: INITIALIZERS
    public convenience init?(_ entityRef: SDAI.EntityReference?) {
      let complex = entityRef?.complexEntity
      self.init(complex: complex)
    }

    public required init?(complex complexEntity: SDAI.ComplexEntity?) {
      guard let partial = complexEntity?.partialEntityInstance(_inapt_data.self) else { return nil }
      self.partialEntity = partial

      guard let super1 = complexEntity?.entityReference(eREPRESENTATION_ITEM.self) else { return nil }
      self.super_eREPRESENTATION_ITEM = super1

      guard let super2 = complexEntity?.entityReference(eDATA_QUALITY_CRITERION.self) else { return nil }
      self.super_eDATA_QUALITY_CRITERION = super2

      guard let super3 = complexEntity?.entityReference(eDATA_QUALITY_MEASUREMENT_REQUIREMENT.self) else { return nil }
      self.super_eDATA_QUALITY_MEASUREMENT_REQUIREMENT = super3

      guard let super4 = complexEntity?.entityReference(eSHAPE_DATA_QUALITY_CRITERION.self) else { return nil }
      self.super_eSHAPE_DATA_QUALITY_CRITERION = super4

      super.init(complex: complexEntity)
    }

    public required convenience init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let entityRef = generic?.entityReference else { return nil }
      self.init(complex: entityRef.complexEntity)
    }

    public convenience init?<S: SDAISelectType>(_ select: S?) { self.init(possiblyFrom: select) }
    public convenience init?(_ complex: SDAI.ComplexEntity?) { self.init(complex: complex) }


    //MARK: DICTIONARY DEFINITION
    public class override var entityDefinition: SDAIDictionarySchema.EntityDefinition { _entityDefinition }
    private static let _entityDefinition: SDAIDictionarySchema.EntityDefinition = createEntityDefinition()

    private static func createEntityDefinition() -> SDAIDictionarySchema.EntityDefinition {
      let entityDef = SDAIDictionarySchema.EntityDefinition(name: "INAPT_DATA", type: self, explicitAttributeCount: 0)

      //MARK: SUPERTYPE REGISTRATIONS
      entityDef.add(supertype: eREPRESENTATION_ITEM.self)
      entityDef.add(supertype: eDATA_QUALITY_CRITERION.self)
      entityDef.add(supertype: eDATA_QUALITY_MEASUREMENT_REQUIREMENT.self)
      entityDef.add(supertype: eSHAPE_DATA_QUALITY_CRITERION.self)
      entityDef.add(supertype: eINAPT_DATA.self)

      //MARK: ATTRIBUTE REGISTRATIONS
      entityDef.addAttribute(name: "ARC_LENGTH_DISTANCE_FACTOR", keyPath: \eINAPT_DATA.ARC_LENGTH_DISTANCE_FACTOR, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "TEST_POINT_DISTANCE_TOLERANCE", keyPath: \eINAPT_DATA.TEST_POINT_DISTANCE_TOLERANCE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ARC_LENGTH_SEPARATION_FACTOR", keyPath: \eINAPT_DATA.ARC_LENGTH_SEPARATION_FACTOR, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "ASSESSMENT_SPECIFICATION", keyPath: \eINAPT_DATA.ASSESSMENT_SPECIFICATION, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: true)
      entityDef.addAttribute(name: "NAME", keyPath: \eINAPT_DATA.NAME, 
        kind: .explicit, source: .superEntity, mayYieldEntityReference: false)
      entityDef.addAttribute(name: "SMALL_VECTOR_TOLERANCE", keyPath: \eINAPT_DATA.SMALL_VECTOR_TOLERANCE, 
        kind: .explicit, source: .subEntity, mayYieldEntityReference: false)

      return entityDef
    }

  }
}
