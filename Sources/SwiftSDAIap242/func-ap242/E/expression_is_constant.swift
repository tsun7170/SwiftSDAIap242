/* file: expression_is_constant.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION expression_is_constant(
               expr : generic_expression
           ) : BOOLEAN;
    RETURN( bool( SIZEOF( free_variables_of( expr ) ) = 0 ) );

  END_FUNCTION; -- expression_is_constant (line:40584 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func EXPRESSION_IS_CONSTANT(_ EXPR: eGENERIC_EXPRESSION? ) 
    -> SDAI.BOOLEAN? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( EXPR )
    if case .available(let _cached_value) = _expression_is_constant__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.BOOLEAN
    }

    var EXPR = EXPR; SDAI.TOUCH(var: &EXPR)

    
    let _TEMP1 = FREE_VARIABLES_OF(EXPR)
    let _TEMP2 = SDAI.SIZEOF(_TEMP1)
    let _TEMP3 = _TEMP2 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let _TEMP4 = BOOL(SDAI.LOGICAL(_TEMP3))
    return _expression_is_constant__cache.updateCache(params: _params, value: _TEMP4)
  }

}

//MARK: - function result cache
private var _expression_is_constant__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

