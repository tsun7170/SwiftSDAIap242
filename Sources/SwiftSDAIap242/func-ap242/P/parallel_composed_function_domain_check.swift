/* file: parallel_composed_function_domain_check.swift 	 generated: Sat Aug 14 13:46:02 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION parallel_composed_function_domain_check(
               comdom : tuple_space;
               funcs : LIST OF maths_function
           ) : BOOLEAN;
    REPEAT i := 1 TO SIZEOF( funcs ) BY 1;
      IF NOT compatible_spaces( comdom, funcs[i].domain ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION; -- parallel_composed_function_domain_check (line:43872 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func PARALLEL_COMPOSED_FUNCTION_DOMAIN_CHECK(
    COMDOM: sTUPLE_SPACE? , FUNCS: SDAI.LIST<eMATHS_FUNCTION>? ) 
    -> SDAI.BOOLEAN? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( COMDOM, FUNCS )
    if case .available(let _cached_value) = _parallel_composed_function_domain_check__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.BOOLEAN
    }

    var COMDOM = COMDOM; SDAI.TOUCH(var: &COMDOM)
    var FUNCS = FUNCS; SDAI.TOUCH(var: &FUNCS)

    if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/SDAI.SIZEOF(
      FUNCS)) {
      for I in incrementControl {
        
        let _TEMP1 = FUNCS?[I]
        let _TEMP2 = _TEMP1?.DOMAIN
        let _TEMP3 = COMPATIBLE_SPACES(
          SP1: eMATHS_SPACE(/*sTUPLE_SPACE*/COMDOM), 
          SP2: eMATHS_SPACE(/*sTUPLE_SPACE*/_TEMP2))
        let _TEMP4 =  !_TEMP3
        if SDAI.IS_TRUE( _TEMP4 ) {
          return _parallel_composed_function_domain_check__cache.updateCache(params: _params, value: SDAI.BOOLEAN(
            SDAI.FALSE))
        }
      }
    }
    return _parallel_composed_function_domain_check__cache.updateCache(params: _params, value: SDAI.BOOLEAN(
      SDAI.TRUE))
  }

}

//MARK: - function result cache
private var _parallel_composed_function_domain_check__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

