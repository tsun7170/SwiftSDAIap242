/* file: bool.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION bool(
               lgcl : LOGICAL
           ) : BOOLEAN;
    IF NOT EXISTS( lgcl ) THEN
      RETURN( FALSE );
    END_IF;
    IF lgcl <> TRUE THEN
      RETURN( FALSE );
    END_IF;
    RETURN( TRUE );

  END_FUNCTION; -- bool (line:35686 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func BOOL(_ LGCL: SDAI.LOGICAL) -> SDAI.BOOLEAN? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( LGCL )
    if case .available(let _cached_value) = _bool__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.BOOLEAN
    }

    var LGCL = LGCL; SDAI.TOUCH(var: &LGCL)

    
    let _TEMP1 = SDAI.EXISTS(LGCL)
    let _TEMP2 =  !_TEMP1
    if SDAI.IS_TRUE( _TEMP2 ) {
      return _bool__cache.updateCache(params: _params, value: SDAI.BOOLEAN(SDAI.FALSE))
    }
    
    let _TEMP3 = SDAI.FORCE_OPTIONAL(LGCL) .!=. SDAI.FORCE_OPTIONAL(SDAI.LOGICAL(SDAI.TRUE))
    if SDAI.IS_TRUE( _TEMP3 ) {
      return _bool__cache.updateCache(params: _params, value: SDAI.BOOLEAN(SDAI.FALSE))
    }
    return _bool__cache.updateCache(params: _params, value: SDAI.BOOLEAN(SDAI.TRUE))
  }

}

//MARK: - function result cache
private var _bool__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

