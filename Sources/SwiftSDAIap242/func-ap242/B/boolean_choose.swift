/* file: boolean_choose.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION boolean_choose(
               b : BOOLEAN;
               choice1 : GENERIC:item;
               choice2 : GENERIC:item
           ) : GENERIC:item;
    IF b THEN
      RETURN( choice1 );
    ELSE
      RETURN( choice2 );
    END_IF;

  END_FUNCTION; -- boolean_choose (line:35712 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func BOOLEAN_CHOOSE<gITEM: SDAIGenericType>(
    B: SDAI.BOOLEAN? , CHOICE1: gITEM? , CHOICE2: gITEM? ) 
    -> gITEM? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( B, CHOICE1, CHOICE2 )
    if case .available(let _cached_value) = _boolean_choose__cache.cachedValue(params: _params) {
      return _cached_value as? gITEM
    }

    var B = B; SDAI.TOUCH(var: &B)
    var CHOICE1 = CHOICE1; SDAI.TOUCH(var: &CHOICE1)
    var CHOICE2 = CHOICE2; SDAI.TOUCH(var: &CHOICE2)

    if SDAI.IS_TRUE( B ) {
      return _boolean_choose__cache.updateCache(params: _params, value: CHOICE1)
    }
    else {
      return _boolean_choose__cache.updateCache(params: _params, value: CHOICE2)
    }
  }

}

//MARK: - function result cache
private var _boolean_choose__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

