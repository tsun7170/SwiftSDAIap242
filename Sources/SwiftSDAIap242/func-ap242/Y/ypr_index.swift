/* file: ypr_index.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION ypr_index(
               ypr : ypr_enumeration
           ) : INTEGER;
    CASE ypr OF
      yaw       :         RETURN( 1 );
      pitch     :         RETURN( 2 );
      roll      :         RETURN( 3 );
    END_CASE;
    RETURN( ? );

  END_FUNCTION; -- ypr_index (line:48820 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func YPR_INDEX(_ YPR: nYPR_ENUMERATION? ) 
    -> SDAI.INTEGER? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( YPR )
    if case .available(let _cached_value) = _ypr_index__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.INTEGER
    }

    var YPR = YPR; SDAI.TOUCH(var: &YPR)

    if let selector = YPR {
      switch selector {
      case YAW:
        return _ypr_index__cache.updateCache(params: _params, value: SDAI.INTEGER(1))

      case PITCH:
        return _ypr_index__cache.updateCache(params: _params, value: SDAI.INTEGER(2))

      case ROLL:
        return _ypr_index__cache.updateCache(params: _params, value: SDAI.INTEGER(3))

      default: break
      } //end switch
    }
    return _ypr_index__cache.updateCache(params: _params, value: (nil as SDAI.INTEGER?))
  }

}

//MARK: - function result cache
private var _ypr_index__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

