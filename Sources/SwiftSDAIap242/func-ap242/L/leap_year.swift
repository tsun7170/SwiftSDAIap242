/* file: leap_year.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION leap_year(
               year : year_number
           ) : BOOLEAN;
    IF ( ( ( year MOD 4 ) = 0 ) AND ( ( year MOD 100 ) <> 0 ) ) OR ( ( year MOD 400 ) = 0 ) THEN
      RETURN( TRUE );
    ELSE
      RETURN( FALSE );
    END_IF;

  END_FUNCTION; -- leap_year (line:42423 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func LEAP_YEAR(_ YEAR: tYEAR_NUMBER? ) 
    -> SDAI.BOOLEAN? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( YEAR )
    if case .available(let _cached_value) = _leap_year__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.BOOLEAN
    }

    var YEAR = YEAR; SDAI.TOUCH(var: &YEAR)

    
    let _TEMP1 = YEAR % SDAI.FORCE_OPTIONAL(SDAI.INTEGER(4))
    let _TEMP2 = _TEMP1 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let _TEMP3 = YEAR % SDAI.FORCE_OPTIONAL(SDAI.INTEGER(100))
    let _TEMP4 = _TEMP3 .!=. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let _TEMP5 = _TEMP2 && _TEMP4
    let _TEMP6 = YEAR % SDAI.FORCE_OPTIONAL(SDAI.INTEGER(400))
    let _TEMP7 = _TEMP6 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    let _TEMP8 = _TEMP5 || _TEMP7
    if SDAI.IS_TRUE( _TEMP8 ) {
      return _leap_year__cache.updateCache(params: _params, value: SDAI.BOOLEAN(SDAI.TRUE))
    }
    else {
      return _leap_year__cache.updateCache(params: _params, value: SDAI.BOOLEAN(SDAI.FALSE))
    }
  }

}

//MARK: - function result cache
private var _leap_year__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

