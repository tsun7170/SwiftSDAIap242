/* file: list_face_loops.swift 	 generated: Sat Aug 14 13:46:02 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION list_face_loops(
               f : face
           ) : LIST [0 : ?] OF loop;

    LOCAL
      loops : LIST [0 : ?] OF loop := [];
    END_LOCAL;
    REPEAT i := 1 TO SIZEOF( f.bounds ) BY 1;
      loops := loops + f.bounds[i].bound;
    END_REPEAT;
    RETURN( loops );

  END_FUNCTION; -- list_face_loops (line:42418 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func LIST_FACE_LOOPS(_ F: eFACE? ) 
    -> (SDAI.LIST<eLOOP>/*[0:nil]*/ )? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( F )
    if case .available(let _cached_value) = _list_face_loops__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.LIST<eLOOP>
    }

    var F = F; SDAI.TOUCH(var: &F)

    //LOCAL
    var LOOPS: (SDAI.LIST<eLOOP>/*[0:nil]*/ )?  = SDAI.LIST<eLOOP>(bound1: SDAI.UNWRAP(SDAI.INTEGER(0)), 
                                                  bound2: (nil as SDAI.INTEGER?), 
                                                  SDAI.EMPLY_AGGREGATE); SDAI.TOUCH(var: &LOOPS)

    if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/SDAI.SIZEOF(
      F?.BOUNDS)) {
      for I in incrementControl {
        
        let _TEMP1 = F?.BOUNDS
        let _TEMP2 = _TEMP1?[I]
        let _TEMP3 = _TEMP2?.BOUND
        let _TEMP4 = LOOPS + _TEMP3
        LOOPS = SDAI.LIST<eLOOP>(bound1: SDAI.UNWRAP(SDAI.INTEGER(0)), bound2: (nil as SDAI.INTEGER?), 
          /*SDAI.LIST<eLOOP>*/_TEMP4)
      }
    }
    return _list_face_loops__cache.updateCache(params: _params, value: LOOPS)
  }

}

//MARK: - function result cache
private var _list_face_loops__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

