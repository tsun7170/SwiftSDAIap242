/* file: inspected_product_definition.swift 	 generated: Sat Aug 14 13:46:02 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
    derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
    will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION inspected_product_definition(
               dqir : data_quality_inspection_result_representation
           ) : BAG OF product_definition;

    LOCAL
      dqdr  : BAG OF data_quality_definition_representation_relationship := [];
      pdqdr : BAG OF product_data_and_data_quality_relationship := [];
      pd    : BAG OF product_definition := [];
    END_LOCAL;
    dqdr := USEDIN( dqir, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
        + 'DATA_QUALITY_DEFINITION_REPRESENTATION_RELATIONSHIP.USED_REPRESENTATION'  );
    REPEAT i := 1 TO SIZEOF( dqdr ) BY 1;
      pdqdr := USEDIN( dqdr[i].definition, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
          + 'PRODUCT_DATA_AND_DATA_QUALITY_RELATIONSHIP.DATA_QUALITY'  );
      REPEAT j := 1 TO SIZEOF( pdqdr ) BY 1;
        pd := pd + pdqdr[j].product_data;
      END_REPEAT;
    END_REPEAT;
    RETURN( pd );

  END_FUNCTION; -- inspected_product_definition (line:42059 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func INSPECTED_PRODUCT_DEFINITION(
    _ DQIR: eDATA_QUALITY_INSPECTION_RESULT_REPRESENTATION? ) 
    -> SDAI.BAG<ePRODUCT_DEFINITION>? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( DQIR )
    if case .available(let _cached_value) = _inspected_product_definition__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.BAG<ePRODUCT_DEFINITION>
    }

    var DQIR = DQIR; SDAI.TOUCH(var: &DQIR)

    //LOCAL
    var DQDR: SDAI.BAG<eDATA_QUALITY_DEFINITION_REPRESENTATION_RELATIONSHIP>?  = 
      SDAI.BAG<eDATA_QUALITY_DEFINITION_REPRESENTATION_RELATIONSHIP>(SDAI.EMPLY_AGGREGATE); SDAI.TOUCH(var: &DQDR)
    var PDQDR: SDAI.BAG<ePRODUCT_DATA_AND_DATA_QUALITY_RELATIONSHIP>?  = 
      SDAI.BAG<ePRODUCT_DATA_AND_DATA_QUALITY_RELATIONSHIP>(SDAI.EMPLY_AGGREGATE); SDAI.TOUCH(var: &PDQDR)
    var PD: SDAI.BAG<ePRODUCT_DEFINITION>?  = SDAI.BAG<ePRODUCT_DEFINITION>(SDAI.EMPLY_AGGREGATE); SDAI.TOUCH(var: &PD)
    //END_LOCAL

    
    let _TEMP1 = SDAI.USEDIN(T: DQIR, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
      .eDATA_QUALITY_DEFINITION_REPRESENTATION_RELATIONSHIP.USED_REPRESENTATION)
    DQDR = SDAI.BAG<eDATA_QUALITY_DEFINITION_REPRESENTATION_RELATIONSHIP>(/*SDAI.BAG<SDAI.GENERIC_ENTITY>*/
      _TEMP1)
    if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/SDAI.SIZEOF(
      DQDR)) {
      for I in incrementControl {
        
        let _TEMP2 = DQDR?[I]
        let _TEMP3 = _TEMP2?.DEFINITION
        let _TEMP4 = SDAI.USEDIN(T: _TEMP3, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
          .ePRODUCT_DATA_AND_DATA_QUALITY_RELATIONSHIP.DATA_QUALITY)
        PDQDR = SDAI.BAG<ePRODUCT_DATA_AND_DATA_QUALITY_RELATIONSHIP>(/*SDAI.BAG<SDAI.GENERIC_ENTITY>*/_TEMP4)
        if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/
          SDAI.SIZEOF(PDQDR)) {
          for J in incrementControl {
            
            let _TEMP5 = PDQDR?[J]
            let _TEMP6 = _TEMP5?.PRODUCT_DATA
            let _TEMP7 = PD + _TEMP6
            PD = _TEMP7
          }
        }
      }
    }
    return _inspected_product_definition__cache.updateCache(params: _params, value: PD)
  }

}

//MARK: - function result cache
private var _inspected_product_definition__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

