/* file: relatives_of_shape_representations.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION relatives_of_shape_representations(
               shape_representation_set : SET OF shape_representation
           ) : SET OF shape_representation;

    FUNCTION local_relatives_of_shape_representations(
                 shape_representation_set : SET OF shape_representation;
                 total_reps : SET OF shape_representation
             ) : SET OF shape_representation;

      LOCAL
        local_shape_rep : SET OF shape_representation := [];
        local_srr       : SET OF shape_representation_relationship := [];
        local_total     : SET OF shape_representation := [];
      END_LOCAL;
      REPEAT i := 1 TO HIINDEX( shape_representation_set ) BY 1;
        local_srr := local_srr + QUERY ( rr <* bag_to_set( USEDIN( shape_representation_set[i], 
            'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.REPRESENTATION_RELATIONSHIP.REP_1'  ) ) | ( 
            'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SHAPE_REPRESENTATION_RELATIONSHIP'  IN TYPEOF( 
            rr ) ) );
      END_REPEAT;
      REPEAT i := 1 TO HIINDEX( local_srr ) BY 1;
        IF 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SHAPE_REPRESENTATION_RELATIONSHIP' IN TYPEOF( 
            local_srr[i] ) THEN
          local_shape_rep := local_shape_rep + local_srr[i].rep_2;
        END_IF;
      END_REPEAT;
      IF SIZEOF( local_shape_rep - total_reps ) = 0 THEN
        RETURN( shape_representation_set );
      ELSE
        local_total := total_reps + local_shape_rep;
        RETURN( local_shape_rep + local_relatives_of_shape_representations( local_shape_rep - total_reps, 
            local_total ) );
      END_IF;

    END_FUNCTION; -- local_relatives_of_shape_representations (line:51198 file:ap242ed2_mim_lf_v1.101.TY.exp)
    RETURN( local_relatives_of_shape_representations( shape_representation_set, shape_representation_set ) );

  END_FUNCTION; -- relatives_of_shape_representations (line:51197 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func RELATIVES_OF_SHAPE_REPRESENTATIONS(
    _ SHAPE_REPRESENTATION_SET: SDAI.SET<eSHAPE_REPRESENTATION>? ) 
    -> SDAI.SET<eSHAPE_REPRESENTATION>? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( SHAPE_REPRESENTATION_SET )
    if case .available(let _cached_value) = _relatives_of_shape_representations__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.SET<eSHAPE_REPRESENTATION>
    }

    var SHAPE_REPRESENTATION_SET = SHAPE_REPRESENTATION_SET; SDAI.TOUCH(var: &SHAPE_REPRESENTATION_SET)

    //NESTED FUNCTION
    func LOCAL_RELATIVES_OF_SHAPE_REPRESENTATIONS(
      SHAPE_REPRESENTATION_SET: SDAI.SET<eSHAPE_REPRESENTATION>? , TOTAL_REPS: SDAI.SET<eSHAPE_REPRESENTATION>? ) 
      -> SDAI.SET<eSHAPE_REPRESENTATION>? {

      var SHAPE_REPRESENTATION_SET = SHAPE_REPRESENTATION_SET; SDAI.TOUCH(var: &SHAPE_REPRESENTATION_SET)
      var TOTAL_REPS = TOTAL_REPS; SDAI.TOUCH(var: &TOTAL_REPS)

      //LOCAL
      var LOCAL_SHAPE_REP: SDAI.SET<eSHAPE_REPRESENTATION>?  = SDAI.SET<eSHAPE_REPRESENTATION>(
                                                               SDAI.EMPLY_AGGREGATE); SDAI.TOUCH(var: &LOCAL_SHAPE_REP)
      var LOCAL_SRR: SDAI.SET<eSHAPE_REPRESENTATION_RELATIONSHIP>?  = SDAI.SET<
                                                                      eSHAPE_REPRESENTATION_RELATIONSHIP>(
                                                                      SDAI.EMPLY_AGGREGATE); SDAI.TOUCH(var: &LOCAL_SRR)
      var LOCAL_TOTAL: SDAI.SET<eSHAPE_REPRESENTATION>?  = SDAI.SET<eSHAPE_REPRESENTATION>(
                                                           SDAI.EMPLY_AGGREGATE); SDAI.TOUCH(var: &LOCAL_TOTAL)
      //END_LOCAL

      if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/SDAI.HIINDEX(
        SHAPE_REPRESENTATION_SET)) {
        for I in incrementControl {
          
          let _TEMP1 = SHAPE_REPRESENTATION_SET?[I]
          let _TEMP2 = SDAI.USEDIN(T: _TEMP1, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
            .eREPRESENTATION_RELATIONSHIP.REP_1)
          let _TEMP3 = BAG_TO_SET(_TEMP2)
          let _TEMP4 = _TEMP3?.QUERY{ RR in 

              let _TEMP1 = SDAI.TYPEOF(RR, IS: eSHAPE_REPRESENTATION_RELATIONSHIP.self)
              return _TEMP1 }
          let _TEMP5 = LOCAL_SRR + _TEMP4
          LOCAL_SRR = SDAI.SET<eSHAPE_REPRESENTATION_RELATIONSHIP>(generic: /*SDAI.SET<runtime>*/_TEMP5)
        }
      }
      if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/SDAI.HIINDEX(
        LOCAL_SRR)) {
        for I in incrementControl {
          
          let _TEMP6 = SDAI.TYPEOF(LOCAL_SRR?[I], IS: eSHAPE_REPRESENTATION_RELATIONSHIP.self)
          if SDAI.IS_TRUE( _TEMP6 ) {
            
            let _TEMP7 = LOCAL_SRR?[I]
            let _TEMP8 = _TEMP7?.REP_2
            let _TEMP9 = LOCAL_SHAPE_REP + _TEMP8
            LOCAL_SHAPE_REP = _TEMP9
          }
        }
      }
      
      let _TEMP10 = LOCAL_SHAPE_REP - TOTAL_REPS
      let _TEMP11 = SDAI.SIZEOF(_TEMP10)
      let _TEMP12 = _TEMP11 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
      if SDAI.IS_TRUE( _TEMP12 ) {
        return SHAPE_REPRESENTATION_SET
      }
      else {
        
        let _TEMP13 = TOTAL_REPS + LOCAL_SHAPE_REP
        LOCAL_TOTAL = _TEMP13
        
        let _TEMP14 = LOCAL_SHAPE_REP - TOTAL_REPS
        let _TEMP15 = LOCAL_RELATIVES_OF_SHAPE_REPRESENTATIONS(
          SHAPE_REPRESENTATION_SET: _TEMP14, 
          TOTAL_REPS: LOCAL_TOTAL)
        let _TEMP16 = LOCAL_SHAPE_REP + _TEMP15
        return _TEMP16
      }
    } //END FUNCTION LOCAL_RELATIVES_OF_SHAPE_REPRESENTATIONS

    
    let _TEMP1 = LOCAL_RELATIVES_OF_SHAPE_REPRESENTATIONS(
      SHAPE_REPRESENTATION_SET: SHAPE_REPRESENTATION_SET, 
      TOTAL_REPS: SHAPE_REPRESENTATION_SET)
    return _relatives_of_shape_representations__cache.updateCache(params: _params, value: _TEMP1)
  }

}

//MARK: - function result cache
private var _relatives_of_shape_representations__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

