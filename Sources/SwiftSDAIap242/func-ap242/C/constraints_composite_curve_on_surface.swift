/* file: constraints_composite_curve_on_surface.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION constraints_composite_curve_on_surface(
               c : composite_curve_on_surface
           ) : BOOLEAN;

    LOCAL
      n_segments : INTEGER := SIZEOF( c.segments );
    END_LOCAL;
    REPEAT k := 1 TO n_segments BY 1;
      IF ( NOT ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PCURVE' IN TYPEOF( c\composite_curve.
          segments[k].parent_curve ) ) ) AND ( NOT ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
          + 'SURFACE_CURVE'  IN TYPEOF( c\composite_curve.segments[k].parent_curve ) ) ) AND ( NOT ( 
          'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.COMPOSITE_CURVE_ON_SURFACE'  IN TYPEOF( c\
          composite_curve.segments[k].parent_curve ) ) ) THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION; -- constraints_composite_curve_on_surface (line:36752 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func CONSTRAINTS_COMPOSITE_CURVE_ON_SURFACE(
    _ C: eCOMPOSITE_CURVE_ON_SURFACE? ) 
    -> SDAI.BOOLEAN? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( C )
    if case .available(let _cached_value) = _constraints_composite_curve_on_surface__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.BOOLEAN
    }

    var C = C; SDAI.TOUCH(var: &C)

    //LOCAL
    var N_SEGMENTS: SDAI.INTEGER?  = SDAI.SIZEOF(C?.SEGMENTS); SDAI.TOUCH(var: &N_SEGMENTS)

    if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/N_SEGMENTS) {
      for K in incrementControl {
        
        let _TEMP1 = SDAI.TYPEOF(C?.GROUP_REF(eCOMPOSITE_CURVE.self)?.SEGMENTS[K]?.PARENT_CURVE, 
          IS: ePCURVE.self)
        let _TEMP2 =  !_TEMP1
        let _TEMP3 = SDAI.TYPEOF(C?.GROUP_REF(eCOMPOSITE_CURVE.self)?.SEGMENTS[K]?.PARENT_CURVE, 
          IS: eSURFACE_CURVE.self)
        let _TEMP4 =  !_TEMP3
        let _TEMP5 = _TEMP2 && _TEMP4
        let _TEMP6 = SDAI.TYPEOF(C?.GROUP_REF(eCOMPOSITE_CURVE.self)?.SEGMENTS[K]?.PARENT_CURVE, 
          IS: eCOMPOSITE_CURVE_ON_SURFACE.self)
        let _TEMP7 =  !_TEMP6
        let _TEMP8 = _TEMP5 && _TEMP7
        if SDAI.IS_TRUE( _TEMP8 ) {
          return _constraints_composite_curve_on_surface__cache.updateCache(params: _params, value: SDAI.BOOLEAN(
            SDAI.FALSE))
        }
      }
    }
    return _constraints_composite_curve_on_surface__cache.updateCache(params: _params, value: SDAI.BOOLEAN(
      SDAI.TRUE))
  }

}

//MARK: - function result cache
private var _constraints_composite_curve_on_surface__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

