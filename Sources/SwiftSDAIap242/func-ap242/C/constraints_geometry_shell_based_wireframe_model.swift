/* file: constraints_geometry_shell_based_wireframe_model.swift 	 generated: Sat Aug 14 13:46:02 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION constraints_geometry_shell_based_wireframe_model(
               m : shell_based_wireframe_model
           ) : BOOLEAN;

    LOCAL
      result : BOOLEAN := TRUE;
    END_LOCAL;
    REPEAT j := 1 TO SIZEOF( m.sbwm_boundary ) BY 1;
      IF ( NOT ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.WIRE_SHELL' IN TYPEOF( m.sbwm_boundary[j] ) ) ) 
          AND ( NOT ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.VERTEX_SHELL' IN TYPEOF( m.
          sbwm_boundary[j] ) ) ) THEN
        result := FALSE;
        RETURN( result );
      END_IF;
    END_REPEAT;
    RETURN( result );

  END_FUNCTION; -- constraints_geometry_shell_based_wireframe_model (line:36771 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func CONSTRAINTS_GEOMETRY_SHELL_BASED_WIREFRAME_MODEL(
    _ M: eSHELL_BASED_WIREFRAME_MODEL? ) 
    -> SDAI.BOOLEAN? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( M )
    if case .available(let _cached_value) = _constraints_geometry_shell_based_wireframe_model__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.BOOLEAN
    }

    var M = M; SDAI.TOUCH(var: &M)

    //LOCAL
    var RESULT: SDAI.BOOLEAN?  = SDAI.BOOLEAN(SDAI.TRUE); SDAI.TOUCH(var: &RESULT)

    if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/SDAI.SIZEOF(
      M?.SBWM_BOUNDARY)) {
      for J in incrementControl {
        
        let _TEMP1 = SDAI.TYPEOF(M?.SBWM_BOUNDARY[J], IS: eWIRE_SHELL.self)
        let _TEMP2 =  !_TEMP1
        let _TEMP3 = SDAI.TYPEOF(M?.SBWM_BOUNDARY[J], IS: eVERTEX_SHELL.self)
        let _TEMP4 =  !_TEMP3
        let _TEMP5 = _TEMP2 && _TEMP4
        if SDAI.IS_TRUE( _TEMP5 ) {
          RESULT = SDAI.BOOLEAN(SDAI.FALSE)
          return _constraints_geometry_shell_based_wireframe_model__cache.updateCache(params: _params, value: 
            RESULT)
        }
      }
    }
    return _constraints_geometry_shell_based_wireframe_model__cache.updateCache(params: _params, value: 
      RESULT)
  }

}

//MARK: - function result cache
private var _constraints_geometry_shell_based_wireframe_model__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

