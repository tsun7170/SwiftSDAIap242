/* file: value_limit_type.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION value_limit_type(
               iv : shape_data_quality_value_limit_type_select
           ) : SET OF STRING;

    LOCAL
      retval : SET OF STRING := [];
    END_LOCAL;
    IF 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SHAPE_DATA_QUALITY_VALUE_RANGE' IN TYPEOF( iv ) THEN
      retval := TYPEOF( iv\compound_representation_item.item_element[1].value_component );
    END_IF;
    IF 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SHAPE_DATA_QUALITY_VALUE_LIMIT' IN TYPEOF( iv ) THEN
      IF 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.MEASURE_WITH_UNIT' IN TYPEOF( iv ) THEN
        retval := TYPEOF( iv\measure_with_unit.value_component );
      END_IF;
    END_IF;
    RETURN( retval );

  END_FUNCTION; -- value_limit_type (line:48530 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func VALUE_LIMIT_TYPE(_ IV: sSHAPE_DATA_QUALITY_VALUE_LIMIT_TYPE_SELECT? ) 
    -> SDAI.SET<SDAI.STRING>? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( IV )
    if case .available(let _cached_value) = _value_limit_type__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.SET<SDAI.STRING>
    }

    var IV = IV; SDAI.TOUCH(var: &IV)

    //LOCAL
    var RETVAL: SDAI.SET<SDAI.STRING>?  = SDAI.SET<SDAI.STRING>(SDAI.EMPLY_AGGREGATE); SDAI.TOUCH(var: &RETVAL)

    
    let _TEMP1 = SDAI.TYPEOF(IV, IS: eSHAPE_DATA_QUALITY_VALUE_RANGE.self)
    if SDAI.IS_TRUE( _TEMP1 ) {
      
      let _TEMP2 = IV?.GROUP_REF(eCOMPOUND_REPRESENTATION_ITEM.self)
      let _TEMP3 = _TEMP2?.ITEM_ELEMENT
      let _TEMP4 = _TEMP3?[1]
      let _TEMP5 = _TEMP4?.VALUE_COMPONENT
      let _TEMP6 = SDAI.TYPEOF(_TEMP5)
      RETVAL = _TEMP6
    }
    
    let _TEMP7 = SDAI.TYPEOF(IV, IS: eSHAPE_DATA_QUALITY_VALUE_LIMIT.self)
    if SDAI.IS_TRUE( _TEMP7 ) {
      
      let _TEMP8 = SDAI.TYPEOF(IV, IS: eMEASURE_WITH_UNIT.self)
      if SDAI.IS_TRUE( _TEMP8 ) {
        
        let _TEMP9 = IV?.GROUP_REF(eMEASURE_WITH_UNIT.self)
        let _TEMP10 = _TEMP9?.VALUE_COMPONENT
        let _TEMP11 = SDAI.TYPEOF(_TEMP10)
        RETVAL = _TEMP11
      }
    }
    return _value_limit_type__cache.updateCache(params: _params, value: RETVAL)
  }

}

//MARK: - function result cache
private var _value_limit_type__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

