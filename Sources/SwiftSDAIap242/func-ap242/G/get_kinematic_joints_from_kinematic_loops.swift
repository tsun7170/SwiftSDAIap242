/* file: get_kinematic_joints_from_kinematic_loops.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION get_kinematic_joints_from_kinematic_loops(
               kls : SET OF kinematic_loop
           ) : SET OF kinematic_joint;

    LOCAL
      result : SET OF oriented_joint := [];
    END_LOCAL;
    IF SIZEOF( kls ) > 0 THEN
      REPEAT i := 1 TO HIINDEX( kls ) BY 1;
        result := result + kls[i].edge_list;
      END_REPEAT;
    END_IF;
    RETURN( get_kinematic_joints_from_oriented_joints( result ) );

  END_FUNCTION; -- get_kinematic_joints_from_kinematic_loops (line:41764 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func GET_KINEMATIC_JOINTS_FROM_KINEMATIC_LOOPS(
    _ KLS: SDAI.SET<eKINEMATIC_LOOP>? ) 
    -> SDAI.SET<eKINEMATIC_JOINT>? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( KLS )
    if case .available(let _cached_value) = _get_kinematic_joints_from_kinematic_loops__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.SET<eKINEMATIC_JOINT>
    }

    var KLS = KLS; SDAI.TOUCH(var: &KLS)

    //LOCAL
    var RESULT: SDAI.SET<eORIENTED_JOINT>?  = SDAI.SET<eORIENTED_JOINT>(SDAI.EMPLY_AGGREGATE); SDAI.TOUCH(var: &RESULT)

    
    let _TEMP1 = SDAI.SIZEOF(KLS)
    let _TEMP2 = _TEMP1 > SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    if SDAI.IS_TRUE( _TEMP2 ) {
      if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/SDAI.HIINDEX(
        KLS)) {
        for I in incrementControl {
          
          let _TEMP3 = KLS?[I]
          let _TEMP4 = _TEMP3?.EDGE_LIST
          let _TEMP5 = RESULT + _TEMP4
          RESULT = _TEMP5
        }
      }
    }
    
    let _TEMP6 = GET_KINEMATIC_JOINTS_FROM_ORIENTED_JOINTS(RESULT)
    return _get_kinematic_joints_from_kinematic_loops__cache.updateCache(params: _params, value: _TEMP6)
  }

}

//MARK: - function result cache
private var _get_kinematic_joints_from_kinematic_loops__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

