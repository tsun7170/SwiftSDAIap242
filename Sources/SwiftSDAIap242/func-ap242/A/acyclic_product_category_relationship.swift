/* file: acyclic_product_category_relationship.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION acyclic_product_category_relationship(
               relation : product_category_relationship;
               children : SET OF product_category
           ) : BOOLEAN;

    LOCAL
      x              : SET OF product_category_relationship;
      local_children : SET OF product_category;
    END_LOCAL;
    REPEAT i := 1 TO HIINDEX( children ) BY 1;
      IF relation.category :=: children[i] THEN
        RETURN( FALSE );
      END_IF;
    END_REPEAT;
    x := bag_to_set( USEDIN( relation.category, 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.'
        + 'PRODUCT_CATEGORY_RELATIONSHIP.SUB_CATEGORY'  ) );
    local_children := children + relation.category;
    IF SIZEOF( x ) > 0 THEN
      REPEAT i := 1 TO HIINDEX( x ) BY 1;
        IF NOT acyclic_product_category_relationship( x[i], local_children ) THEN
          RETURN( FALSE );
        END_IF;
      END_REPEAT;
    END_IF;
    RETURN( TRUE );

  END_FUNCTION; -- acyclic_product_category_relationship (line:35115 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func ACYCLIC_PRODUCT_CATEGORY_RELATIONSHIP(
    RELATION: ePRODUCT_CATEGORY_RELATIONSHIP? , CHILDREN: SDAI.SET<ePRODUCT_CATEGORY>? ) 
    -> SDAI.BOOLEAN? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( RELATION, CHILDREN )
    if case .available(let _cached_value) = _acyclic_product_category_relationship__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.BOOLEAN
    }

    var RELATION = RELATION; SDAI.TOUCH(var: &RELATION)
    var CHILDREN = CHILDREN; SDAI.TOUCH(var: &CHILDREN)

    //LOCAL
    var X: SDAI.SET<ePRODUCT_CATEGORY_RELATIONSHIP>? 
    var LOCAL_CHILDREN: SDAI.SET<ePRODUCT_CATEGORY>? 
    //END_LOCAL

    if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/SDAI.HIINDEX(
      CHILDREN)) {
      for I in incrementControl {
        
        let _TEMP1 = RELATION?.CATEGORY
        let _TEMP2 = CHILDREN?[I]
        let _TEMP3 = _TEMP1 .===. _TEMP2
        if SDAI.IS_TRUE( _TEMP3 ) {
          return _acyclic_product_category_relationship__cache.updateCache(params: _params, value: SDAI.BOOLEAN(
            SDAI.FALSE))
        }
      }
    }
    
    let _TEMP4 = RELATION?.CATEGORY
    let _TEMP5 = SDAI.USEDIN(T: _TEMP4, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
      .ePRODUCT_CATEGORY_RELATIONSHIP.SUB_CATEGORY)
    let _TEMP6 = BAG_TO_SET(_TEMP5)
    X = SDAI.SET<ePRODUCT_CATEGORY_RELATIONSHIP>(generic: /*SDAI.SET<gINTYPE>*/_TEMP6)
    
    let _TEMP7 = RELATION?.CATEGORY
    let _TEMP8 = CHILDREN + _TEMP7
    LOCAL_CHILDREN = _TEMP8
    
    let _TEMP9 = SDAI.SIZEOF(X)
    let _TEMP10 = _TEMP9 > SDAI.FORCE_OPTIONAL(SDAI.INTEGER(0))
    if SDAI.IS_TRUE( _TEMP10 ) {
      if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/SDAI.HIINDEX(
        X)) {
        for I in incrementControl {
          
          let _TEMP11 = X?[I]
          let _TEMP12 = ACYCLIC_PRODUCT_CATEGORY_RELATIONSHIP(
            RELATION: _TEMP11, CHILDREN: LOCAL_CHILDREN)
          let _TEMP13 =  !_TEMP12
          if SDAI.IS_TRUE( _TEMP13 ) {
            return _acyclic_product_category_relationship__cache.updateCache(params: _params, value: SDAI.BOOLEAN(
              SDAI.FALSE))
          }
        }
      }
    }
    return _acyclic_product_category_relationship__cache.updateCache(params: _params, value: SDAI.BOOLEAN(
      SDAI.TRUE))
  }

}

//MARK: - function result cache
private var _acyclic_product_category_relationship__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

