/* file: unambiguously_specified_multi_level_reference_designator.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION unambiguously_specified_multi_level_reference_designator(
               links : LIST [1 : ?] OF next_assembly_usage_occurrence
           ) : BOOLEAN;
    REPEAT i := 1 TO SIZEOF( links ) - 1 BY 1;
      CASE TRUE OF
        ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION' IN TYPEOF( links[i]\
            product_definition_relationship.relating_product_definition ) ) AND ( 
            'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION'  IN TYPEOF( links[i]\
            product_definition_relationship.related_product_definition ) ) AND ( 
            'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION'  IN TYPEOF( links[i + 1]\
            product_definition_relationship.relating_product_definition ) ) : 
          BEGIN
            IF NOT ( ( links[i]\product_definition_relationship.related_product_definition :=: links[i + 1]\
                product_definition_relationship.relating_product_definition ) OR ( ( SIZEOF( QUERY ( pdr <* 
                USEDIN( links[i]\product_definition_relationship.related_product_definition, 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.'
                + 'RELATED_PRODUCT_DEFINITION'  ) | ( pdr\product_definition_relationship.
                relating_product_definition :=: links[i + 1]\product_definition_relationship.
                relating_product_definition ) ) ) = 1 ) AND ( links[i]\product_definition_relationship.
                related_product_definition\product_definition.formation\product_definition_formation.
                of_product :=: links[i + 1]\product_definition_relationship.relating_product_definition\
                product_definition.formation\product_definition_formation.of_product ) ) ) THEN
              RETURN( FALSE );
            END_IF;
          END;
        ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION_REFERENCE' IN TYPEOF( links[i]\
            product_definition_relationship.related_product_definition ) ) AND ( 
            'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION_REFERENCE'  IN TYPEOF( links[
            i + 1]\product_definition_relationship.relating_product_definition ) ) : 
          BEGIN
            IF NOT ( ( links[i]\product_definition_relationship.related_product_definition :=: links[i + 1]\
                product_definition_relationship.relating_product_definition ) OR ( ( SIZEOF( QUERY ( pdr <* 
                USEDIN( links[i]\product_definition_relationship.related_product_definition, 
                'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION_RELATIONSHIP.'
                + 'RELATED_PRODUCT_DEFINITION'  ) | ( pdr\product_definition_relationship.
                relating_product_definition :=: links[i + 1]\product_definition_relationship.
                relating_product_definition ) ) ) = 1 ) AND ( links[i]\product_definition_relationship.
                related_product_definition\product_definition_reference.product_id = links[i + 1]\
                product_definition_relationship.relating_product_definition\product_definition_reference.
                product_id ) AND ( links[i]\product_definition_relationship.related_product_definition\
                product_definition_reference.id_owning_organization_name = links[i + 1]\
                product_definition_relationship.relating_product_definition\product_definition_reference.
                id_owning_organization_name ) AND ( links[i]\product_definition_relationship.
                related_product_definition\product_definition_reference.product_definition_id <> links[i + 1]
                \product_definition_relationship.relating_product_definition\product_definition_reference.
                product_definition_id ) ) ) THEN
              RETURN( FALSE );
            END_IF;
          END;
        ( 'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION_REFERENCE' IN TYPEOF( links[i]\
            product_definition_relationship.relating_product_definition ) ) AND ( 
            'AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.PRODUCT_DEFINITION'  IN TYPEOF( links[i]\
            product_definition_relationship.related_product_definition ) ) :           RETURN( FALSE );
        OTHERWISE                 :           RETURN( FALSE );
      END_CASE;
    END_REPEAT;
    RETURN( TRUE );

  END_FUNCTION; -- unambiguously_specified_multi_level_reference_designator (line:47101 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func UNAMBIGUOUSLY_SPECIFIED_MULTI_LEVEL_REFERENCE_DESIGNATOR(
    _ LINKS: (SDAI.LIST<eNEXT_ASSEMBLY_USAGE_OCCURRENCE>/*[1:nil]*/ )? ) 
    -> SDAI.BOOLEAN? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( LINKS )
    if case .available(let _cached_value) = _unambiguously_specified_multi_level_reference_designator__cache.cachedValue(params: _params) {
      return _cached_value as? SDAI.BOOLEAN
    }

    var LINKS = LINKS; SDAI.TOUCH(var: &LINKS)

    if let incrementControl/*SDAI.INTEGER*/ = SDAI.FROM(/*SDAI.INTEGER*/1, TO:/*SDAI.INTEGER*/SDAI.SIZEOF(
      LINKS) - SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))) {
      for I in incrementControl {
        if let selector = SDAI.FORCE_OPTIONAL(SDAI.TRUE) {
          switch selector {
          case SDAI.TYPEOF(LINKS?[I]?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)?.RELATING_PRODUCT_DEFINITION, 
            IS: ePRODUCT_DEFINITION.self) && SDAI.TYPEOF(LINKS?[I]?.GROUP_REF(
            ePRODUCT_DEFINITION_RELATIONSHIP.self)?.RELATED_PRODUCT_DEFINITION, IS: ePRODUCT_DEFINITION.self)
            && SDAI.TYPEOF(LINKS?[SDAI.FORCE_OPTIONAL(I) + SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))]?.GROUP_REF(
            ePRODUCT_DEFINITION_RELATIONSHIP.self)?.RELATING_PRODUCT_DEFINITION, IS: ePRODUCT_DEFINITION.self):
            //BEGIN
            
            let _TEMP1 = LINKS?[I]
            let _TEMP2 = _TEMP1?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP3 = _TEMP2?.RELATED_PRODUCT_DEFINITION
            let _TEMP4 = SDAI.FORCE_OPTIONAL(I) + SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
            let _TEMP5 = LINKS?[_TEMP4]
            let _TEMP6 = _TEMP5?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP7 = _TEMP6?.RELATING_PRODUCT_DEFINITION
            let _TEMP8 = _TEMP3 .===. _TEMP7
            let _TEMP9 = LINKS?[I]
            let _TEMP10 = _TEMP9?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP11 = _TEMP10?.RELATED_PRODUCT_DEFINITION
            let _TEMP12 = SDAI.USEDIN(T: _TEMP11, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
              .ePRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION)
            let _TEMP13 = _TEMP12.QUERY{ PDR in 

                let _TEMP1 = /*runtime*/PDR.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
                let _TEMP2 = /*runtime*/_TEMP1?.RELATING_PRODUCT_DEFINITION
                let _TEMP3 = SDAI.FORCE_OPTIONAL(I) + SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                let _TEMP4 = LINKS?[_TEMP3]
                let _TEMP5 = _TEMP4?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
                let _TEMP6 = _TEMP5?.RELATING_PRODUCT_DEFINITION
                let _TEMP7 = /*runtime*/_TEMP2 .===. _TEMP6
                return _TEMP7 }
            let _TEMP14 = SDAI.SIZEOF(_TEMP13)
            let _TEMP15 = _TEMP14 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
            let _TEMP16 = LINKS?[I]
            let _TEMP17 = _TEMP16?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP18 = _TEMP17?.RELATED_PRODUCT_DEFINITION
            let _TEMP19 = _TEMP18?.GROUP_REF(ePRODUCT_DEFINITION.self)
            let _TEMP20 = _TEMP19?.FORMATION
            let _TEMP21 = _TEMP20?.GROUP_REF(ePRODUCT_DEFINITION_FORMATION.self)
            let _TEMP22 = _TEMP21?.OF_PRODUCT
            let _TEMP23 = SDAI.FORCE_OPTIONAL(I) + SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
            let _TEMP24 = LINKS?[_TEMP23]
            let _TEMP25 = _TEMP24?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP26 = _TEMP25?.RELATING_PRODUCT_DEFINITION
            let _TEMP27 = _TEMP26?.GROUP_REF(ePRODUCT_DEFINITION.self)
            let _TEMP28 = _TEMP27?.FORMATION
            let _TEMP29 = _TEMP28?.GROUP_REF(ePRODUCT_DEFINITION_FORMATION.self)
            let _TEMP30 = _TEMP29?.OF_PRODUCT
            let _TEMP31 = _TEMP22 .===. _TEMP30
            let _TEMP32 = _TEMP15 && _TEMP31
            let _TEMP33 = _TEMP8 || _TEMP32
            let _TEMP34 =  !_TEMP33
            if SDAI.IS_TRUE( _TEMP34 ) {
              return _unambiguously_specified_multi_level_reference_designator__cache.updateCache(params: _params, value: 
                SDAI.BOOLEAN(SDAI.FALSE))
            }
            //END

          case SDAI.TYPEOF(LINKS?[I]?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)?.RELATED_PRODUCT_DEFINITION, 
            IS: ePRODUCT_DEFINITION_REFERENCE.self) && SDAI.TYPEOF(LINKS?[SDAI.FORCE_OPTIONAL(I) + SDAI.FORCE_OPTIONAL(
            SDAI.INTEGER(1))]?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)?.RELATING_PRODUCT_DEFINITION, 
            IS: ePRODUCT_DEFINITION_REFERENCE.self):
            //BEGIN
            
            let _TEMP35 = LINKS?[I]
            let _TEMP36 = _TEMP35?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP37 = _TEMP36?.RELATED_PRODUCT_DEFINITION
            let _TEMP38 = SDAI.FORCE_OPTIONAL(I) + SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
            let _TEMP39 = LINKS?[_TEMP38]
            let _TEMP40 = _TEMP39?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP41 = _TEMP40?.RELATING_PRODUCT_DEFINITION
            let _TEMP42 = _TEMP37 .===. _TEMP41
            let _TEMP43 = LINKS?[I]
            let _TEMP44 = _TEMP43?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP45 = _TEMP44?.RELATED_PRODUCT_DEFINITION
            let _TEMP46 = SDAI.USEDIN(T: _TEMP45, ROLE: \AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF
              .ePRODUCT_DEFINITION_RELATIONSHIP.RELATED_PRODUCT_DEFINITION)
            let _TEMP47 = _TEMP46.QUERY{ PDR in 

                let _TEMP1 = /*runtime*/PDR.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
                let _TEMP2 = /*runtime*/_TEMP1?.RELATING_PRODUCT_DEFINITION
                let _TEMP3 = SDAI.FORCE_OPTIONAL(I) + SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
                let _TEMP4 = LINKS?[_TEMP3]
                let _TEMP5 = _TEMP4?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
                let _TEMP6 = _TEMP5?.RELATING_PRODUCT_DEFINITION
                let _TEMP7 = /*runtime*/_TEMP2 .===. _TEMP6
                return _TEMP7 }
            let _TEMP48 = SDAI.SIZEOF(_TEMP47)
            let _TEMP49 = _TEMP48 .==. SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
            let _TEMP50 = LINKS?[I]
            let _TEMP51 = _TEMP50?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP52 = _TEMP51?.RELATED_PRODUCT_DEFINITION
            let _TEMP53 = _TEMP52?.GROUP_REF(ePRODUCT_DEFINITION_REFERENCE.self)
            let _TEMP54 = _TEMP53?.PRODUCT_ID
            let _TEMP55 = SDAI.FORCE_OPTIONAL(I) + SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
            let _TEMP56 = LINKS?[_TEMP55]
            let _TEMP57 = _TEMP56?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP58 = _TEMP57?.RELATING_PRODUCT_DEFINITION
            let _TEMP59 = _TEMP58?.GROUP_REF(ePRODUCT_DEFINITION_REFERENCE.self)
            let _TEMP60 = _TEMP59?.PRODUCT_ID
            let _TEMP61 = _TEMP54 .==. _TEMP60
            let _TEMP62 = _TEMP49 && _TEMP61
            let _TEMP63 = LINKS?[I]
            let _TEMP64 = _TEMP63?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP65 = _TEMP64?.RELATED_PRODUCT_DEFINITION
            let _TEMP66 = _TEMP65?.GROUP_REF(ePRODUCT_DEFINITION_REFERENCE.self)
            let _TEMP67 = _TEMP66?.ID_OWNING_ORGANIZATION_NAME
            let _TEMP68 = SDAI.FORCE_OPTIONAL(I) + SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
            let _TEMP69 = LINKS?[_TEMP68]
            let _TEMP70 = _TEMP69?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP71 = _TEMP70?.RELATING_PRODUCT_DEFINITION
            let _TEMP72 = _TEMP71?.GROUP_REF(ePRODUCT_DEFINITION_REFERENCE.self)
            let _TEMP73 = _TEMP72?.ID_OWNING_ORGANIZATION_NAME
            let _TEMP74 = _TEMP67 .==. _TEMP73
            let _TEMP75 = _TEMP62 && _TEMP74
            let _TEMP76 = LINKS?[I]
            let _TEMP77 = _TEMP76?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP78 = _TEMP77?.RELATED_PRODUCT_DEFINITION
            let _TEMP79 = _TEMP78?.GROUP_REF(ePRODUCT_DEFINITION_REFERENCE.self)
            let _TEMP80 = _TEMP79?.PRODUCT_DEFINITION_ID
            let _TEMP81 = SDAI.FORCE_OPTIONAL(I) + SDAI.FORCE_OPTIONAL(SDAI.INTEGER(1))
            let _TEMP82 = LINKS?[_TEMP81]
            let _TEMP83 = _TEMP82?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)
            let _TEMP84 = _TEMP83?.RELATING_PRODUCT_DEFINITION
            let _TEMP85 = _TEMP84?.GROUP_REF(ePRODUCT_DEFINITION_REFERENCE.self)
            let _TEMP86 = _TEMP85?.PRODUCT_DEFINITION_ID
            let _TEMP87 = _TEMP80 .!=. _TEMP86
            let _TEMP88 = _TEMP75 && _TEMP87
            let _TEMP89 = _TEMP42 || _TEMP88
            let _TEMP90 =  !_TEMP89
            if SDAI.IS_TRUE( _TEMP90 ) {
              return _unambiguously_specified_multi_level_reference_designator__cache.updateCache(params: _params, value: 
                SDAI.BOOLEAN(SDAI.FALSE))
            }
            //END

          case SDAI.TYPEOF(LINKS?[I]?.GROUP_REF(ePRODUCT_DEFINITION_RELATIONSHIP.self)?.RELATING_PRODUCT_DEFINITION, 
            IS: ePRODUCT_DEFINITION_REFERENCE.self) && SDAI.TYPEOF(LINKS?[I]?.GROUP_REF(
            ePRODUCT_DEFINITION_RELATIONSHIP.self)?.RELATED_PRODUCT_DEFINITION, IS: ePRODUCT_DEFINITION.self):
            return _unambiguously_specified_multi_level_reference_designator__cache.updateCache(params: _params, value: 
              SDAI.BOOLEAN(SDAI.FALSE))

          default:
            return _unambiguously_specified_multi_level_reference_designator__cache.updateCache(params: _params, value: 
              SDAI.BOOLEAN(SDAI.FALSE))
          } //end switch
        }
        else {
          return _unambiguously_specified_multi_level_reference_designator__cache.updateCache(params: _params, value: 
            SDAI.BOOLEAN(SDAI.FALSE))
        }
      }
    }
    return _unambiguously_specified_multi_level_reference_designator__cache.updateCache(params: _params, value: 
      SDAI.BOOLEAN(SDAI.TRUE))
  }

}

//MARK: - function result cache
private var _unambiguously_specified_multi_level_reference_designator__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

