/* file: make_parallel_composed_function.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION make_parallel_composed_function(
               srcdom : maths_space_or_function;
               prepfuncs : LIST [2 : ?] OF maths_function;
               finfunc : maths_function_select
           ) : parallel_composed_function;
    RETURN( parallel_composed_function( srcdom, prepfuncs, finfunc ) || maths_function(  ) || 
        generic_expression(  ) || multiple_arity_generic_expression( convert_to_operands_prcmfn( srcdom, 
        prepfuncs, finfunc ) ) );

  END_FUNCTION; -- make_parallel_composed_function (line:42660 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func MAKE_PARALLEL_COMPOSED_FUNCTION(
    SRCDOM: sMATHS_SPACE_OR_FUNCTION? , PREPFUNCS: (SDAI.LIST<eMATHS_FUNCTION>/*[2:nil]*/ )? , 
    FINFUNC: sMATHS_FUNCTION_SELECT? ) 
    -> ePARALLEL_COMPOSED_FUNCTION? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( SRCDOM, PREPFUNCS, FINFUNC )
    if case .available(let _cached_value) = _make_parallel_composed_function__cache.cachedValue(params: _params) {
      return _cached_value as? ePARALLEL_COMPOSED_FUNCTION
    }

    var SRCDOM = SRCDOM; SDAI.TOUCH(var: &SRCDOM)
    var PREPFUNCS = PREPFUNCS; SDAI.TOUCH(var: &PREPFUNCS)
    var FINFUNC = FINFUNC; SDAI.TOUCH(var: &FINFUNC)

    
    let _TEMP1 = _parallel_composed_function(
      SOURCE_OF_DOMAIN: SDAI.UNWRAP(SRCDOM), 
      PREP_FUNCTIONS: SDAI.UNWRAP(SDAI.LIST<eMATHS_FUNCTION>(bound1: SDAI.UNWRAP(SDAI.INTEGER(1)), bound2: (nil as 
      SDAI.INTEGER?), /*SDAI.LIST<eMATHS_FUNCTION>[2:nil] */PREPFUNCS)), 
      FINAL_FUNCTION: SDAI.UNWRAP(FINFUNC))
    let _TEMP2 = _maths_function()
    let _TEMP3 = _TEMP1 .||. _TEMP2
    let _TEMP4 = _generic_expression()
    let _TEMP5 = _TEMP3 .||. _TEMP4
    let _TEMP6 = CONVERT_TO_OPERANDS_PRCMFN(
      SRCDOM: SRCDOM, PREPFUN: SDAI.LIST<eMATHS_FUNCTION>(/*SDAI.LIST<eMATHS_FUNCTION>[2:nil] */PREPFUNCS), 
      FINFUN: FINFUNC)
    let _TEMP7 = _multiple_arity_generic_expression(OPERANDS: SDAI.UNWRAP(_TEMP6))
    let _TEMP8 = _TEMP5 .||. _TEMP7
    return _make_parallel_composed_function__cache.updateCache(params: _params, value: 
      ePARALLEL_COMPOSED_FUNCTION(/*SDAI.GENERIC_ENTITY*/_TEMP8))
  }

}

//MARK: - function result cache
private var _make_parallel_composed_function__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

