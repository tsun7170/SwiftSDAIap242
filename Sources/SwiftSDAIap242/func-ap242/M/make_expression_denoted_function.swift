/* file: make_expression_denoted_function.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION make_expression_denoted_function(
               expression : generic_expression
           ) : expression_denoted_function;
    RETURN( expression_denoted_function(  ) || maths_function(  ) || generic_expression(  ) || 
        unary_generic_expression( expression ) );

  END_FUNCTION; -- make_expression_denoted_function (line:52239 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func MAKE_EXPRESSION_DENOTED_FUNCTION(
    _ EXPRESSION: eGENERIC_EXPRESSION? ) 
    -> eEXPRESSION_DENOTED_FUNCTION? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( EXPRESSION )
    if case .available(let _cached_value) = _make_expression_denoted_function__cache.cachedValue(params: _params) {
      return _cached_value as? eEXPRESSION_DENOTED_FUNCTION
    }

    var EXPRESSION = EXPRESSION; SDAI.TOUCH(var: &EXPRESSION)

    
    let _TEMP1 = _expression_denoted_function()
    let _TEMP2 = _maths_function()
    let _TEMP3 = _TEMP1 .||. _TEMP2
    let _TEMP4 = _generic_expression()
    let _TEMP5 = _TEMP3 .||. _TEMP4
    let _TEMP6 = _unary_generic_expression(OPERAND: SDAI.UNWRAP(EXPRESSION))
    let _TEMP7 = _TEMP5 .||. _TEMP6
    return _make_expression_denoted_function__cache.updateCache(params: _params, value: 
      eEXPRESSION_DENOTED_FUNCTION(/*SDAI.GENERIC_ENTITY*/_TEMP7))
  }

}

//MARK: - function result cache
private var _make_expression_denoted_function__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

