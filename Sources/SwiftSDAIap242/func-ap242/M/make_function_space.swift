/* file: make_function_space.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -FUNCTION DEFINITION in EXPRESS
/*

  FUNCTION make_function_space(
               domain_constraint : space_constraint_type;
               domain_argument : maths_space;
               range_constraint : space_constraint_type;
               range_argument : maths_space
           ) : function_space;
    RETURN( function_space( domain_constraint, domain_argument, range_constraint, range_argument ) || 
        maths_space(  ) || generic_expression(  ) || generic_literal(  ) || simple_generic_expression(  ) );

  END_FUNCTION; -- make_function_space (line:42629 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/

  public static 
  func MAKE_FUNCTION_SPACE(DOMAIN_CONSTRAINT: nSPACE_CONSTRAINT_TYPE? , DOMAIN_ARGUMENT: eMATHS_SPACE? , 
                           RANGE_CONSTRAINT: nSPACE_CONSTRAINT_TYPE? , RANGE_ARGUMENT: eMATHS_SPACE? ) 
    -> eFUNCTION_SPACE? {

    // CACHE LOOKUP
    let _params = SDAI.ParameterList( DOMAIN_CONSTRAINT, DOMAIN_ARGUMENT, 
      RANGE_CONSTRAINT, RANGE_ARGUMENT )
    if case .available(let _cached_value) = _make_function_space__cache.cachedValue(params: _params) {
      return _cached_value as? eFUNCTION_SPACE
    }

    var DOMAIN_CONSTRAINT = DOMAIN_CONSTRAINT; SDAI.TOUCH(var: &DOMAIN_CONSTRAINT)
    var DOMAIN_ARGUMENT = DOMAIN_ARGUMENT; SDAI.TOUCH(var: &DOMAIN_ARGUMENT)
    var RANGE_CONSTRAINT = RANGE_CONSTRAINT; SDAI.TOUCH(var: &RANGE_CONSTRAINT)
    var RANGE_ARGUMENT = RANGE_ARGUMENT; SDAI.TOUCH(var: &RANGE_ARGUMENT)

    
    let _TEMP1 = _function_space(DOMAIN_CONSTRAINT: SDAI.UNWRAP(DOMAIN_CONSTRAINT), 
                                 DOMAIN_ARGUMENT: SDAI.UNWRAP(DOMAIN_ARGUMENT), 
                                 RANGE_CONSTRAINT: SDAI.UNWRAP(RANGE_CONSTRAINT), 
                                 RANGE_ARGUMENT: SDAI.UNWRAP(RANGE_ARGUMENT))
    let _TEMP2 = _maths_space()
    let _TEMP3 = _TEMP1 .||. _TEMP2
    let _TEMP4 = _generic_expression()
    let _TEMP5 = _TEMP3 .||. _TEMP4
    let _TEMP6 = _generic_literal()
    let _TEMP7 = _TEMP5 .||. _TEMP6
    let _TEMP8 = _simple_generic_expression()
    let _TEMP9 = _TEMP7 .||. _TEMP8
    return _make_function_space__cache.updateCache(params: _params, value: eFUNCTION_SPACE(/*
      SDAI.GENERIC_ENTITY*/_TEMP9))
  }

}

//MARK: - function result cache
private var _make_function_space__cache = SDAI.FunctionResultCache(
  controller: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.schemaDefinition)

