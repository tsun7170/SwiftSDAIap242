/* file: assignment_object_select.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -TYPE DEFINITION in EXPRESS
/*
  TYPE assignment_object_select = SELECT
    ( action_property (*ENTITY*),
     action_property_representation (*ENTITY*),
     applied_action_assignment (*ENTITY*),
     applied_action_method_assignment (*ENTITY*),
     applied_approval_assignment (*ENTITY*),
     applied_certification_assignment (*ENTITY*),
     applied_contract_assignment (*ENTITY*),
     applied_document_reference (*ENTITY*),
     applied_document_usage_constraint_assignment (*ENTITY*),
     applied_effectivity_assignment (*ENTITY*),
     applied_event_occurrence_assignment (*ENTITY*),
     applied_ineffectivity_assignment (*ENTITY*),
     applied_organizational_project_assignment (*ENTITY*),
     applied_organization_assignment (*ENTITY*),
     applied_person_and_organization_assignment (*ENTITY*),
     applied_security_classification_assignment (*ENTITY*),
     applied_time_interval_assignment (*ENTITY*),
     applied_usage_right (*ENTITY*),
     breakdown_of (*ENTITY*),
     date_and_time_assignment (*ENTITY*),
     date_assignment (*ENTITY*),
     directed_action_assignment (*ENTITY*),
     frozen_assignment (*ENTITY*),
     material_designation_characterization (*ENTITY*),
     organizational_address (*ENTITY*),
     person_and_organization_address (*ENTITY*),
     product_concept_feature_association (*ENTITY*),
     product_concept_feature_category_usage (*ENTITY*),
     property_definition (*ENTITY*),
     property_definition_representation (*ENTITY*),
     requirement_assignment (*ENTITY*),
     requirement_for_action_resource (*ENTITY*) );
  END_TYPE; -- assignment_object_select (line:819 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES FOR SELECT
/*
  action_property (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  definition: characterized_action_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  action_property_representation (*ENTITY*):
  ATTR:  representation: representation
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  property: action_property (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  applied_action_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF action_items (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_action: action

  applied_action_method_assignment (*ENTITY*):
  ATTR:  role: action_method_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF action_method_items (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_action_method: action_method

  applied_approval_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  assigned_approval: approval
  ATTR:  items: SET [1 : ?] OF approval_item (AMBIGUOUS (SELECT LEVEL))

  applied_certification_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF certification_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_certification: certification

  applied_contract_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF contract_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_contract: contract

  applied_document_reference (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF document_reference_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  source: label
  ATTR:  assigned_document: document

  applied_document_usage_constraint_assignment (*ENTITY*):
  ATTR:  assigned_document_usage: document_usage_constraint
  ATTR:  role: document_usage_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF document_reference_item (AMBIGUOUS (SELECT LEVEL))

  applied_effectivity_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF effectivity_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_effectivity: effectivity

  applied_event_occurrence_assignment (*ENTITY*):
  ATTR:  assigned_event_occurrence: event_occurrence
  ATTR:  role: event_occurrence_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF event_occurrence_item (AMBIGUOUS (SELECT LEVEL))

  applied_ineffectivity_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF effectivity_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_effectivity: effectivity

  applied_organizational_project_assignment (*ENTITY*):
  ATTR:  role: organizational_project_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF project_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_organizational_project: organizational_project

  applied_organization_assignment (*ENTITY*):
  ATTR:  role: organization_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF organization_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_organization: organization

  applied_person_and_organization_assignment (*ENTITY*):
  ATTR:  role: person_and_organization_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF person_and_organization_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_person_and_organization: person_and_organization

  applied_security_classification_assignment (*ENTITY*):
  ATTR:  assigned_security_classification: security_classification
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF security_classification_item (AMBIGUOUS (SELECT LEVEL))

  applied_time_interval_assignment (*ENTITY*):
  ATTR:  role: time_interval_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [0 : ?] OF time_interval_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_time_interval: time_interval

  applied_usage_right (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF ir_usage_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_action: action

  breakdown_of (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  relating_product_definition: product_definition_or_reference
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  related_product_definition: product_definition_or_reference
  ATTR:  name: label *** Multiple Select Case Sources ***

  date_and_time_assignment (*ENTITY*):
  ATTR:  role: date_time_role *** Multiple Select Case Sources ***
  ATTR:  items: (AMBIGUOUS (CASE LEVEL))
  ATTR:  assigned_date_and_time: date_and_time

  date_assignment (*ENTITY*):
  ATTR:  assigned_date: date
  ATTR:  role: date_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF date_item (AMBIGUOUS (SELECT LEVEL))

  directed_action_assignment (*ENTITY*):
  ATTR:  assigned_directed_action: directed_action
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF action_request_item (AMBIGUOUS (SELECT LEVEL))

  frozen_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  assigned_approval: approval
  ATTR:  items: SET [1 : ?] OF change_management_object (AMBIGUOUS (SELECT LEVEL))

  material_designation_characterization (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  designation: material_designation
  ATTR:  property: characterized_material_property (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  organizational_address (*ENTITY*):
  ATTR:  people: SET [1 : 1] OF person
  ATTR:  street: label
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  organizations: SET [1 : ?] OF organization *** Multiple Select Case Sources ***
  ATTR:  telex_number: label
  ATTR:  facsimile_number: label
  ATTR:  region: label
  ATTR:  electronic_mail_address: label
  ATTR:  street_number: label
  ATTR:  internal_location: label
  ATTR:  postal_code: label
  ATTR:  postal_box: label
  ATTR:  url: identifier
  ATTR:  town: label
  ATTR:  country: label
  ATTR:  telephone_number: label
  ATTR:  name: label *** Multiple Select Case Sources ***

  person_and_organization_address (*ENTITY*):
  ATTR:  people: SET [1 : 1] OF person
  ATTR:  street: label
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  organizations: SET [1 : 1] OF organization *** Multiple Select Case Sources ***
  ATTR:  telex_number: label
  ATTR:  facsimile_number: label
  ATTR:  region: label
  ATTR:  electronic_mail_address: label
  ATTR:  street_number: label
  ATTR:  internal_location: label
  ATTR:  postal_code: label
  ATTR:  postal_box: label
  ATTR:  url: identifier
  ATTR:  town: label
  ATTR:  country: label
  ATTR:  telephone_number: label
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_concept_feature_association (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  concept: product_concept
  ATTR:  feature: product_concept_feature
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_concept_feature_category_usage (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF category_usage_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_group: product_concept_feature_category *** Multiple Select Case Sources ***

  property_definition (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  items: SET [0 : ?] OF product_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  of_shape: mated_part_relationship
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  representation_relation: kinematic_property_definition_representation
  ATTR:  assigned_group: mated_part_relationship *** Multiple Select Case Sources ***
  ATTR:  definition: characterized_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  property_definition_representation (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  dependent_environment: data_environment
  ATTR:  used_representation: representation
  ATTR:  base: (AMBIGUOUS (CASE LEVEL))
  ATTR:  definition: represented_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  requirement_assignment (*ENTITY*):
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: (AMBIGUOUS (CASE LEVEL))

  requirement_for_action_resource (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  operations: SET [1 : ?] OF characterized_action_definition
  ATTR:  resources: SET [1 : ?] OF action_resource
  ATTR:  kind: resource_requirement_type
  ATTR:  name: label *** Multiple Select Case Sources ***

*/

/** SELECT type
- EXPRESS:
```express
  TYPE assignment_object_select = SELECT
    ( action_property (*ENTITY*),
     action_property_representation (*ENTITY*),
     applied_action_assignment (*ENTITY*),
     applied_action_method_assignment (*ENTITY*),
     applied_approval_assignment (*ENTITY*),
     applied_certification_assignment (*ENTITY*),
     applied_contract_assignment (*ENTITY*),
     applied_document_reference (*ENTITY*),
     applied_document_usage_constraint_assignment (*ENTITY*),
     applied_effectivity_assignment (*ENTITY*),
     applied_event_occurrence_assignment (*ENTITY*),
     applied_ineffectivity_assignment (*ENTITY*),
     applied_organizational_project_assignment (*ENTITY*),
     applied_organization_assignment (*ENTITY*),
     applied_person_and_organization_assignment (*ENTITY*),
     applied_security_classification_assignment (*ENTITY*),
     applied_time_interval_assignment (*ENTITY*),
     applied_usage_right (*ENTITY*),
     breakdown_of (*ENTITY*),
     date_and_time_assignment (*ENTITY*),
     date_assignment (*ENTITY*),
     directed_action_assignment (*ENTITY*),
     frozen_assignment (*ENTITY*),
     material_designation_characterization (*ENTITY*),
     organizational_address (*ENTITY*),
     person_and_organization_address (*ENTITY*),
     product_concept_feature_association (*ENTITY*),
     product_concept_feature_category_usage (*ENTITY*),
     property_definition (*ENTITY*),
     property_definition_representation (*ENTITY*),
     requirement_assignment (*ENTITY*),
     requirement_for_action_resource (*ENTITY*) );
  END_TYPE; -- assignment_object_select (line:819 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public enum sASSIGNMENT_OBJECT_SELECT : SDAIValue, AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sASSIGNMENT_OBJECT_SELECT__type {

    /// SELECT case ``eACTION_PROPERTY`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _ACTION_PROPERTY(eACTION_PROPERTY)	// (ENTITY)

    /// SELECT case ``eACTION_PROPERTY_REPRESENTATION`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _ACTION_PROPERTY_REPRESENTATION(eACTION_PROPERTY_REPRESENTATION)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ACTION_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_ACTION_ASSIGNMENT(eAPPLIED_ACTION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ACTION_METHOD_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_ACTION_METHOD_ASSIGNMENT(eAPPLIED_ACTION_METHOD_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_APPROVAL_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_APPROVAL_ASSIGNMENT(eAPPLIED_APPROVAL_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_CERTIFICATION_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_CERTIFICATION_ASSIGNMENT(eAPPLIED_CERTIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_CONTRACT_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_CONTRACT_ASSIGNMENT(eAPPLIED_CONTRACT_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_DOCUMENT_REFERENCE`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_DOCUMENT_REFERENCE(eAPPLIED_DOCUMENT_REFERENCE)	// (ENTITY)

    /// SELECT case ``eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(
      eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_EFFECTIVITY_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_EFFECTIVITY_ASSIGNMENT(eAPPLIED_EFFECTIVITY_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_INEFFECTIVITY_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_INEFFECTIVITY_ASSIGNMENT(eAPPLIED_INEFFECTIVITY_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ORGANIZATION_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_ORGANIZATION_ASSIGNMENT(eAPPLIED_ORGANIZATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(
      eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(
      eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_TIME_INTERVAL_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_TIME_INTERVAL_ASSIGNMENT(eAPPLIED_TIME_INTERVAL_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_USAGE_RIGHT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _APPLIED_USAGE_RIGHT(eAPPLIED_USAGE_RIGHT)	// (ENTITY)

    /// SELECT case ``eBREAKDOWN_OF`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _BREAKDOWN_OF(eBREAKDOWN_OF)	// (ENTITY)

    /// SELECT case ``eDATE_AND_TIME_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _DATE_AND_TIME_ASSIGNMENT(eDATE_AND_TIME_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eDATE_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _DATE_ASSIGNMENT(eDATE_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eDIRECTED_ACTION_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _DIRECTED_ACTION_ASSIGNMENT(eDIRECTED_ACTION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eFROZEN_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _FROZEN_ASSIGNMENT(eFROZEN_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eMATERIAL_DESIGNATION_CHARACTERIZATION`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _MATERIAL_DESIGNATION_CHARACTERIZATION(eMATERIAL_DESIGNATION_CHARACTERIZATION)	// (ENTITY)

    /// SELECT case ``eORGANIZATIONAL_ADDRESS`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _ORGANIZATIONAL_ADDRESS(eORGANIZATIONAL_ADDRESS)	// (ENTITY)

    /// SELECT case ``ePERSON_AND_ORGANIZATION_ADDRESS`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _PERSON_AND_ORGANIZATION_ADDRESS(ePERSON_AND_ORGANIZATION_ADDRESS)	// (ENTITY)

    /// SELECT case ``ePRODUCT_CONCEPT_FEATURE_ASSOCIATION`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _PRODUCT_CONCEPT_FEATURE_ASSOCIATION(ePRODUCT_CONCEPT_FEATURE_ASSOCIATION)	// (ENTITY)

    /// SELECT case ``ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE)	// (ENTITY)

    /// SELECT case ``ePROPERTY_DEFINITION`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _PROPERTY_DEFINITION(ePROPERTY_DEFINITION)	// (ENTITY)

    /// SELECT case ``ePROPERTY_DEFINITION_REPRESENTATION`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _PROPERTY_DEFINITION_REPRESENTATION(ePROPERTY_DEFINITION_REPRESENTATION)	// (ENTITY)

    /// SELECT case ``eREQUIREMENT_ASSIGNMENT`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _REQUIREMENT_ASSIGNMENT(eREQUIREMENT_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eREQUIREMENT_FOR_ACTION_RESOURCE`` (ENTITY) in ``sASSIGNMENT_OBJECT_SELECT``
    case _REQUIREMENT_FOR_ACTION_RESOURCE(eREQUIREMENT_FOR_ACTION_RESOURCE)	// (ENTITY)

    //MARK: - CONSTRUCTORS
    public init(fundamental: FundamentalType) { self = fundamental }

    public init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?){
      return nil
    }

    public init?(possiblyFrom complex: SDAI.ComplexEntity?) {
      guard let complex = complex else { return nil }

      if let base = complex.entityReference(eACTION_PROPERTY.self) {self = ._ACTION_PROPERTY(base) }
      else if let base = complex.entityReference(eACTION_PROPERTY_REPRESENTATION.self) {self = ._ACTION_PROPERTY_REPRESENTATION(base) }
      else if let base = complex.entityReference(eAPPLIED_ACTION_ASSIGNMENT.self) {self = ._APPLIED_ACTION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ACTION_METHOD_ASSIGNMENT.self) {self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_APPROVAL_ASSIGNMENT.self) {self = ._APPLIED_APPROVAL_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_CERTIFICATION_ASSIGNMENT.self) {self = ._APPLIED_CERTIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_CONTRACT_ASSIGNMENT.self) {self = ._APPLIED_CONTRACT_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_DOCUMENT_REFERENCE.self) {self = ._APPLIED_DOCUMENT_REFERENCE(base) }
      else if let base = complex.entityReference(eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT.self) {self = ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_EFFECTIVITY_ASSIGNMENT.self) {self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT.self) {self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_INEFFECTIVITY_ASSIGNMENT.self) {self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT.self) {self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ORGANIZATION_ASSIGNMENT.self) {self = ._APPLIED_ORGANIZATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.self) {self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.self) {self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_TIME_INTERVAL_ASSIGNMENT.self) {self = ._APPLIED_TIME_INTERVAL_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_USAGE_RIGHT.self) {self = ._APPLIED_USAGE_RIGHT(base) }
      else if let base = complex.entityReference(eBREAKDOWN_OF.self) {self = ._BREAKDOWN_OF(base) }
      else if let base = complex.entityReference(eDATE_AND_TIME_ASSIGNMENT.self) {self = ._DATE_AND_TIME_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eDATE_ASSIGNMENT.self) {self = ._DATE_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eDIRECTED_ACTION_ASSIGNMENT.self) {self = ._DIRECTED_ACTION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eFROZEN_ASSIGNMENT.self) {self = ._FROZEN_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eMATERIAL_DESIGNATION_CHARACTERIZATION.self) {self = ._MATERIAL_DESIGNATION_CHARACTERIZATION(base) }
      else if let base = complex.entityReference(eORGANIZATIONAL_ADDRESS.self) {self = ._ORGANIZATIONAL_ADDRESS(base) }
      else if let base = complex.entityReference(ePERSON_AND_ORGANIZATION_ADDRESS.self) {self = ._PERSON_AND_ORGANIZATION_ADDRESS(base) }
      else if let base = complex.entityReference(ePRODUCT_CONCEPT_FEATURE_ASSOCIATION.self) {self = ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(base) }
      else if let base = complex.entityReference(ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE.self) {self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(base) }
      else if let base = complex.entityReference(ePROPERTY_DEFINITION.self) {self = ._PROPERTY_DEFINITION(base) }
      else if let base = complex.entityReference(ePROPERTY_DEFINITION_REPRESENTATION.self) {self = ._PROPERTY_DEFINITION_REPRESENTATION(base) }
      else if let base = complex.entityReference(eREQUIREMENT_ASSIGNMENT.self) {self = ._REQUIREMENT_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eREQUIREMENT_FOR_ACTION_RESOURCE.self) {self = ._REQUIREMENT_FOR_ACTION_RESOURCE(base) }
      else { return nil }
    }

    public init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let select = generic else { return nil }

      if let fundamental = select as? Self {
        self.init(fundamental: fundamental)
      }
      else if let base = eACTION_PROPERTY.convert(fromGeneric: select) {
        self = ._ACTION_PROPERTY(base)
      }
      else if let base = eACTION_PROPERTY_REPRESENTATION.convert(fromGeneric: select) {
        self = ._ACTION_PROPERTY_REPRESENTATION(base)
      }
      else if let base = eAPPLIED_ACTION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ACTION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ACTION_METHOD_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_APPROVAL_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_APPROVAL_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_CERTIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_CERTIFICATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_CONTRACT_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_CONTRACT_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_DOCUMENT_REFERENCE.convert(fromGeneric: select) {
        self = ._APPLIED_DOCUMENT_REFERENCE(base)
      }
      else if let base = eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_EFFECTIVITY_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_INEFFECTIVITY_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ORGANIZATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ORGANIZATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_TIME_INTERVAL_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_TIME_INTERVAL_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_USAGE_RIGHT.convert(fromGeneric: select) {
        self = ._APPLIED_USAGE_RIGHT(base)
      }
      else if let base = eBREAKDOWN_OF.convert(fromGeneric: select) {
        self = ._BREAKDOWN_OF(base)
      }
      else if let base = eDATE_AND_TIME_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._DATE_AND_TIME_ASSIGNMENT(base)
      }
      else if let base = eDATE_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._DATE_ASSIGNMENT(base)
      }
      else if let base = eDIRECTED_ACTION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._DIRECTED_ACTION_ASSIGNMENT(base)
      }
      else if let base = eFROZEN_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._FROZEN_ASSIGNMENT(base)
      }
      else if let base = eMATERIAL_DESIGNATION_CHARACTERIZATION.convert(fromGeneric: select) {
        self = ._MATERIAL_DESIGNATION_CHARACTERIZATION(base)
      }
      else if let base = eORGANIZATIONAL_ADDRESS.convert(fromGeneric: select) {
        self = ._ORGANIZATIONAL_ADDRESS(base)
      }
      else if let base = ePERSON_AND_ORGANIZATION_ADDRESS.convert(fromGeneric: select) {
        self = ._PERSON_AND_ORGANIZATION_ADDRESS(base)
      }
      else if let base = ePRODUCT_CONCEPT_FEATURE_ASSOCIATION.convert(fromGeneric: select) {
        self = ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(base)
      }
      else if let base = ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE.convert(fromGeneric: select) {
        self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(base)
      }
      else if let base = ePROPERTY_DEFINITION.convert(fromGeneric: select) {
        self = ._PROPERTY_DEFINITION(base)
      }
      else if let base = ePROPERTY_DEFINITION_REPRESENTATION.convert(fromGeneric: select) {
        self = ._PROPERTY_DEFINITION_REPRESENTATION(base)
      }
      else if let base = eREQUIREMENT_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._REQUIREMENT_ASSIGNMENT(base)
      }
      else if let base = eREQUIREMENT_FOR_ACTION_RESOURCE.convert(fromGeneric: select) {
        self = ._REQUIREMENT_FOR_ACTION_RESOURCE(base)
      }
      else { return nil }
    }

    // InitializableByP21Parameter
    public static var bareTypeName: String = "ASSIGNMENT_OBJECT_SELECT"

    public init?(p21typedParam: P21Decode.ExchangeStructure.TypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      guard let keyword = p21typedParam.keyword.asStandardKeyword else { exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"; return nil }

      switch(keyword) {
      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"
        return nil
      }
    }

    public init?(p21untypedParam: P21Decode.ExchangeStructure.UntypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      switch p21untypedParam {
      case .rhsOccurenceName(let rhsname):
        switch rhsname {
        case .constantEntityName(let name):
          guard let entity = exchangeStructure.resolve(constantEntityName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: entity.complexEntity)

        case .entityInstanceName(let name):
          guard let complex = exchangeStructure.resolve(entityInstanceName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: complex)

        default:
          exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
          return nil
        }

      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
        return nil
      }
    }

    public init?(p21omittedParamfrom exchangeStructure: P21Decode.ExchangeStructure) {
      return nil
    }


    //MARK: - ENTITY UNDERLYING TYPE REFERENCES
    public var super_eORGANIZATION_ASSIGNMENT: eORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.super_eORGANIZATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eACTION_RESOURCE_REQUIREMENT: eACTION_RESOURCE_REQUIREMENT? {
      switch self {
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.super_eACTION_RESOURCE_REQUIREMENT
      default: return nil
      }
    }

    public var super_eORGANIZATIONAL_ADDRESS: eORGANIZATIONAL_ADDRESS? {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.super_eORGANIZATIONAL_ADDRESS
      default: return nil
      }
    }

    public var super_ePERSONAL_ADDRESS: ePERSONAL_ADDRESS? {
      switch self {
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.super_ePERSONAL_ADDRESS
      default: return nil
      }
    }

    public var super_eEFFECTIVITY_ASSIGNMENT: eEFFECTIVITY_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.super_eEFFECTIVITY_ASSIGNMENT
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.super_eEFFECTIVITY_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_USAGE_RIGHT: eAPPLIED_USAGE_RIGHT? {
      switch self {
      case ._APPLIED_USAGE_RIGHT(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_CERTIFICATION_ASSIGNMENT: eAPPLIED_CERTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePROPERTY_DEFINITION_REPRESENTATION: ePROPERTY_DEFINITION_REPRESENTATION? {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_TIME_INTERVAL_ASSIGNMENT: eAPPLIED_TIME_INTERVAL_ASSIGNMENT? {
      switch self {
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eFROZEN_ASSIGNMENT: eFROZEN_ASSIGNMENT? {
      switch self {
      case ._FROZEN_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePROPERTY_DEFINITION: ePROPERTY_DEFINITION? {
      switch self {
      case ._PROPERTY_DEFINITION(let entity): return entity
      default: return nil
      }
    }

    public var super_eGROUP: eGROUP? {
      switch self {
      case ._REQUIREMENT_ASSIGNMENT(let entity): return entity.super_eGROUP
      default: return nil
      }
    }

    public var super_eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): return entity
        .super_eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT: 
      eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_EFFECTIVITY_ASSIGNMENT: eAPPLIED_EFFECTIVITY_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eGROUP_ASSIGNMENT: eGROUP_ASSIGNMENT? {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): return entity.super_eGROUP_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eCONTRACT_ASSIGNMENT: eCONTRACT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.super_eCONTRACT_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eDATE_ASSIGNMENT: eDATE_ASSIGNMENT? {
      switch self {
      case ._DATE_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePERSON_AND_ORGANIZATION_ASSIGNMENT: ePERSON_AND_ORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity
        .super_ePERSON_AND_ORGANIZATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eACTION_PROPERTY: eACTION_PROPERTY? {
      switch self {
      case ._ACTION_PROPERTY(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT: eAPPLIED_INEFFECTIVITY_ASSIGNMENT? {
      switch self {
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eORGANIZATIONAL_PROJECT_ASSIGNMENT: eORGANIZATIONAL_PROJECT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity
        .super_eORGANIZATIONAL_PROJECT_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_ACTION_METHOD_ASSIGNMENT: eAPPLIED_ACTION_METHOD_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eSECURITY_CLASSIFICATION_ASSIGNMENT: eSECURITY_CLASSIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity
        .super_eSECURITY_CLASSIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE: ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE? {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_DOCUMENT_REFERENCE: eAPPLIED_DOCUMENT_REFERENCE? {
      switch self {
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_METHOD_ASSIGNMENT: eACTION_METHOD_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.super_eACTION_METHOD_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eDATE_AND_TIME_ASSIGNMENT: eDATE_AND_TIME_ASSIGNMENT? {
      switch self {
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eMATERIAL_DESIGNATION_CHARACTERIZATION: eMATERIAL_DESIGNATION_CHARACTERIZATION? {
      switch self {
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_CONTRACT_ASSIGNMENT: eAPPLIED_CONTRACT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eDIRECTED_ACTION_ASSIGNMENT: eDIRECTED_ACTION_ASSIGNMENT? {
      switch self {
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eBREAKDOWN_OF: eBREAKDOWN_OF? {
      switch self {
      case ._BREAKDOWN_OF(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_ASSIGNMENT: eACTION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.super_eACTION_ASSIGNMENT
      case ._APPLIED_USAGE_RIGHT(let entity): return entity.super_eACTION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPROVAL_ASSIGNMENT: eAPPROVAL_ASSIGNMENT? {
      switch self {
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.super_eAPPROVAL_ASSIGNMENT
      case ._FROZEN_ASSIGNMENT(let entity): return entity.super_eAPPROVAL_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eDOCUMENT_REFERENCE: eDOCUMENT_REFERENCE? {
      switch self {
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): return entity.super_eDOCUMENT_REFERENCE
      default: return nil
      }
    }

    public var super_eCERTIFICATION_ASSIGNMENT: eCERTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.super_eCERTIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: 
      eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_PROPERTY_REPRESENTATION: eACTION_PROPERTY_REPRESENTATION? {
      switch self {
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT: 
      eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_ORGANIZATION_ASSIGNMENT: eAPPLIED_ORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eTIME_INTERVAL_ASSIGNMENT: eTIME_INTERVAL_ASSIGNMENT? {
      switch self {
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): return entity.super_eTIME_INTERVAL_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_APPROVAL_ASSIGNMENT: eAPPLIED_APPROVAL_ASSIGNMENT? {
      switch self {
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eREQUIREMENT_FOR_ACTION_RESOURCE: eREQUIREMENT_FOR_ACTION_RESOURCE? {
      switch self {
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT: eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_RELATIONSHIP: ePRODUCT_DEFINITION_RELATIONSHIP? {
      switch self {
      case ._BREAKDOWN_OF(let entity): return entity.super_ePRODUCT_DEFINITION_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT: 
      eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eADDRESS: eADDRESS? {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.super_eADDRESS
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.super_eADDRESS
      default: return nil
      }
    }

    public var super_ePRODUCT_CONCEPT_FEATURE_ASSOCIATION: ePRODUCT_CONCEPT_FEATURE_ASSOCIATION? {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_ACTION_ASSIGNMENT: eAPPLIED_ACTION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePERSON_AND_ORGANIZATION_ADDRESS: ePERSON_AND_ORGANIZATION_ADDRESS? {
      switch self {
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity
      default: return nil
      }
    }

    public var super_eREQUIREMENT_ASSIGNMENT: eREQUIREMENT_ASSIGNMENT? {
      switch self {
      case ._REQUIREMENT_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eEVENT_OCCURRENCE_ASSIGNMENT: eEVENT_OCCURRENCE_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity
        .super_eEVENT_OCCURRENCE_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eCHARACTERIZED_OBJECT: eCHARACTERIZED_OBJECT? {
      switch self {
      case ._REQUIREMENT_ASSIGNMENT(let entity): return entity.super_eCHARACTERIZED_OBJECT
      default: return nil
      }
    }


    //MARK: - ENTITY ATTRIBUTE REFERENCES
    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT`` )
    public var ASSIGNED_DOCUMENT_USAGE: eDOCUMENT_USAGE_CONSTRAINT?  {
      switch self {
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): return entity.ASSIGNED_DOCUMENT_USAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var PEOPLE: (SDAI.SET<ePERSON>/*[1:1]*/ )?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.PEOPLE
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.PEOPLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT`` )
    public var ASSIGNED_SECURITY_CLASSIFICATION: eSECURITY_CLASSIFICATION?  {
      switch self {
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return 
        entity.ASSIGNED_SECURITY_CLASSIFICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eACTION_PROPERTY_REPRESENTATION`` )
    public var REPRESENTATION: eREPRESENTATION?  {
      switch self {
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.REPRESENTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var STREET: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.STREET
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.STREET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eACTION_PROPERTY`` )
    /// - origin: ENTITY( ``eACTION_PROPERTY_REPRESENTATION`` )
    /// - origin: ENTITY( ``eBREAKDOWN_OF`` )
    /// - origin: ENTITY( ``eMATERIAL_DESIGNATION_CHARACTERIZATION`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_ASSOCIATION`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    /// - origin: ENTITY( ``eREQUIREMENT_FOR_ACTION_RESOURCE`` )
    public var DESCRIPTION: tTEXT?  {
      switch self {
      case ._ACTION_PROPERTY(let entity): return entity.DESCRIPTION
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.DESCRIPTION
      case ._BREAKDOWN_OF(let entity): return entity.DESCRIPTION
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): return entity.DESCRIPTION
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.DESCRIPTION
      case ._PERSON_AND_ORGANIZATION_ADDRESS/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for ePERSON_AND_ORGANIZATION_ADDRESS
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): return entity.DESCRIPTION
      case ._PROPERTY_DEFINITION(let entity): return entity.DESCRIPTION
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.DESCRIPTION
      case ._REQUIREMENT_ASSIGNMENT/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREQUIREMENT_ASSIGNMENT
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.DESCRIPTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT`` )
    public var ASSIGNED_EVENT_OCCURRENCE: eEVENT_OCCURRENCE?  {
      switch self {
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity.ASSIGNED_EVENT_OCCURRENCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eDIRECTED_ACTION_ASSIGNMENT`` )
    public var ASSIGNED_DIRECTED_ACTION: eDIRECTED_ACTION?  {
      switch self {
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): return entity.ASSIGNED_DIRECTED_ACTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var ORGANIZATIONS: (SDAI.SET<eORGANIZATION>/*[1:nil]*/ )?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.ORGANIZATIONS
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return SDAI.SET<eORGANIZATION>(
        entity.ORGANIZATIONS)
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eDATE_ASSIGNMENT`` )
    public var ASSIGNED_DATE: eDATE?  {
      switch self {
      case ._DATE_ASSIGNMENT(let entity): return entity.ASSIGNED_DATE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    public var DEPENDENT_ENVIRONMENT: eDATA_ENVIRONMENT?  {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.DEPENDENT_ENVIRONMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_ACTION_METHOD_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_APPROVAL_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_CERTIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_CONTRACT_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_DOCUMENT_REFERENCE`` )
    /// - origin: ENTITY( ``eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_EFFECTIVITY_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_INEFFECTIVITY_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_TIME_INTERVAL_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_USAGE_RIGHT`` )
    /// - origin: ENTITY( ``eDATE_AND_TIME_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eDATE_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eDIRECTED_ACTION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eFROZEN_ASSIGNMENT`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE`` )
    public var ROLE: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): return entity.ROLE
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_USAGE_RIGHT(let entity): return entity.ROLE
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity.ROLE
      case ._DATE_ASSIGNMENT(let entity): return entity.ROLE
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): return entity.ROLE
      case ._FROZEN_ASSIGNMENT(let entity): return entity.ROLE
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): return entity.ROLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eMATERIAL_DESIGNATION_CHARACTERIZATION`` )
    public var DESIGNATION: eMATERIAL_DESIGNATION?  {
      switch self {
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): return entity.DESIGNATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eREQUIREMENT_FOR_ACTION_RESOURCE`` )
    public var OPERATIONS: (SDAI.SET<sCHARACTERIZED_ACTION_DEFINITION>/*[1:nil]*/ )?  {
      switch self {
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.OPERATIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_APPROVAL_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eFROZEN_ASSIGNMENT`` )
    public var ASSIGNED_APPROVAL: eAPPROVAL?  {
      switch self {
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.ASSIGNED_APPROVAL
      case ._FROZEN_ASSIGNMENT(let entity): return entity.ASSIGNED_APPROVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eREQUIREMENT_FOR_ACTION_RESOURCE`` )
    public var RESOURCES: (SDAI.SET<eACTION_RESOURCE>/*[1:nil]*/ )?  {
      switch self {
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.RESOURCES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var TELEX_NUMBER: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.TELEX_NUMBER
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.TELEX_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var FACSIMILE_NUMBER: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.FACSIMILE_NUMBER
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.FACSIMILE_NUMBER
      default: return nil
      }
    }

    //MARK: var ITEMS: (AMBIGUOUS)

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var REGION: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.REGION
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.REGION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var ELECTRONIC_MAIL_ADDRESS: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.ELECTRONIC_MAIL_ADDRESS
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.ELECTRONIC_MAIL_ADDRESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    public var OF_SHAPE: eMATED_PART_RELATIONSHIP?  {
      switch self {
      case ._PROPERTY_DEFINITION(let entity): return entity.OF_SHAPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var STREET_NUMBER: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.STREET_NUMBER
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.STREET_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    public var USED_REPRESENTATION: eREPRESENTATION?  {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.USED_REPRESENTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_ASSOCIATION`` )
    public var CONCEPT: ePRODUCT_CONCEPT?  {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): return entity.CONCEPT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eDATE_AND_TIME_ASSIGNMENT`` )
    public var ASSIGNED_DATE_AND_TIME: eDATE_AND_TIME?  {
      switch self {
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity.ASSIGNED_DATE_AND_TIME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_TIME_INTERVAL_ASSIGNMENT`` )
    public var ASSIGNED_TIME_INTERVAL: eTIME_INTERVAL?  {
      switch self {
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): return entity.ASSIGNED_TIME_INTERVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_CERTIFICATION_ASSIGNMENT`` )
    public var ASSIGNED_CERTIFICATION: eCERTIFICATION?  {
      switch self {
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.ASSIGNED_CERTIFICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_USAGE_RIGHT`` )
    public var ASSIGNED_ACTION: eACTION?  {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.ASSIGNED_ACTION
      case ._APPLIED_USAGE_RIGHT(let entity): return entity.ASSIGNED_ACTION
      default: return nil
      }
    }

    //MARK: var PROPERTY: (AMBIGUOUS)

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_METHOD_ASSIGNMENT`` )
    public var ASSIGNED_ACTION_METHOD: eACTION_METHOD?  {
      switch self {
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.ASSIGNED_ACTION_METHOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var INTERNAL_LOCATION: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.INTERNAL_LOCATION
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.INTERNAL_LOCATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_ASSOCIATION`` )
    public var FEATURE: ePRODUCT_CONCEPT_FEATURE?  {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): return entity.FEATURE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var POSTAL_CODE: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.POSTAL_CODE
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.POSTAL_CODE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var POSTAL_BOX: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.POSTAL_BOX
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.POSTAL_BOX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eREQUIREMENT_FOR_ACTION_RESOURCE`` )
    public var KIND: eRESOURCE_REQUIREMENT_TYPE?  {
      switch self {
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.KIND
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var URL: tIDENTIFIER?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.URL
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.URL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_CONTRACT_ASSIGNMENT`` )
    public var ASSIGNED_CONTRACT: eCONTRACT?  {
      switch self {
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.ASSIGNED_CONTRACT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT`` )
    public var ASSIGNED_PERSON_AND_ORGANIZATION: ePERSON_AND_ORGANIZATION?  {
      switch self {
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return 
        entity.ASSIGNED_PERSON_AND_ORGANIZATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eBREAKDOWN_OF`` )
    public var RELATING_PRODUCT_DEFINITION: sPRODUCT_DEFINITION_OR_REFERENCE?  {
      switch self {
      case ._BREAKDOWN_OF(let entity): return entity.RELATING_PRODUCT_DEFINITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_DOCUMENT_REFERENCE`` )
    public var SOURCE: tLABEL?  {
      switch self {
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): return entity.SOURCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eBREAKDOWN_OF`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    /// - origin: ENTITY( ``eREQUIREMENT_ASSIGNMENT`` )
    public var ID: tIDENTIFIER?  {
      switch self {
      case ._BREAKDOWN_OF(let entity): return entity.ID
      case ._PROPERTY_DEFINITION(let entity): return entity.ID
      case ._REQUIREMENT_ASSIGNMENT(let entity): return entity.ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var TOWN: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.TOWN
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.TOWN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var COUNTRY: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.COUNTRY
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.COUNTRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    public var REPRESENTATION_RELATION: eKINEMATIC_PROPERTY_DEFINITION_REPRESENTATION?  {
      switch self {
      case ._PROPERTY_DEFINITION(let entity): return entity.REPRESENTATION_RELATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_EFFECTIVITY_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_INEFFECTIVITY_ASSIGNMENT`` )
    public var ASSIGNED_EFFECTIVITY: eEFFECTIVITY?  {
      switch self {
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.ASSIGNED_EFFECTIVITY
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.ASSIGNED_EFFECTIVITY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_DOCUMENT_REFERENCE`` )
    public var ASSIGNED_DOCUMENT: eDOCUMENT?  {
      switch self {
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): return entity.ASSIGNED_DOCUMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var TELEPHONE_NUMBER: tLABEL?  {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.TELEPHONE_NUMBER
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.TELEPHONE_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    public var ASSIGNED_GROUP: eGROUP?  {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): return eGROUP(entity.ASSIGNED_GROUP)
      case ._PROPERTY_DEFINITION(let entity): return eGROUP(entity.ASSIGNED_GROUP)
      default: return nil
      }
    }

    //MARK: var DEFINITION: (AMBIGUOUS)

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eBREAKDOWN_OF`` )
    public var RELATED_PRODUCT_DEFINITION: sPRODUCT_DEFINITION_OR_REFERENCE?  {
      switch self {
      case ._BREAKDOWN_OF(let entity): return entity.RELATED_PRODUCT_DEFINITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eACTION_PROPERTY`` )
    /// - origin: ENTITY( ``eACTION_PROPERTY_REPRESENTATION`` )
    /// - origin: ENTITY( ``eBREAKDOWN_OF`` )
    /// - origin: ENTITY( ``eMATERIAL_DESIGNATION_CHARACTERIZATION`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_ASSOCIATION`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    /// - origin: ENTITY( ``eREQUIREMENT_FOR_ACTION_RESOURCE`` )
    public var NAME: tLABEL?  {
      switch self {
      case ._ACTION_PROPERTY(let entity): return entity.NAME
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.NAME
      case ._BREAKDOWN_OF(let entity): return entity.NAME
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): return entity.NAME
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.NAME
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.NAME
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): return entity.NAME
      case ._PROPERTY_DEFINITION(let entity): return entity.NAME
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.NAME
      case ._REQUIREMENT_ASSIGNMENT/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREQUIREMENT_ASSIGNMENT
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT`` )
    public var ASSIGNED_ORGANIZATIONAL_PROJECT: eORGANIZATIONAL_PROJECT?  {
      switch self {
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return 
        entity.ASSIGNED_ORGANIZATIONAL_PROJECT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sASSIGNMENT_OBJECT_SELECT``
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATION_ASSIGNMENT`` )
    public var ASSIGNED_ORGANIZATION: eORGANIZATION?  {
      switch self {
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.ASSIGNED_ORGANIZATION
      default: return nil
      }
    }


    //MARK: - SDAIValue
    public func isValueEqual<T: SDAIValue>(to rhs: T) -> Bool {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._BREAKDOWN_OF(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._FROZEN_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.value.isValueEqual(to: rhs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?) -> Bool? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._BREAKDOWN_OF(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._FROZEN_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      }
    }

    public func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      switch self {
      case ._ACTION_PROPERTY(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_USAGE_RIGHT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._BREAKDOWN_OF(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DATE_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._FROZEN_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ORGANIZATIONAL_ADDRESS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PROPERTY_DEFINITION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REQUIREMENT_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      }
    }

    public func isValueEqual<T: SDAIValue>(to rhs: T, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._BREAKDOWN_OF(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._FROZEN_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._BREAKDOWN_OF(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._FROZEN_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      }
    }


    //MARK: SDAIGenericTypeBase
    public func copy() -> Self {
      switch self {
      case ._ACTION_PROPERTY(let selection): return ._ACTION_PROPERTY(selection.copy())
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return ._ACTION_PROPERTY_REPRESENTATION(selection.copy())
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return ._APPLIED_ACTION_ASSIGNMENT(selection.copy())
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return ._APPLIED_ACTION_METHOD_ASSIGNMENT(selection.copy())
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return ._APPLIED_APPROVAL_ASSIGNMENT(selection.copy())
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return ._APPLIED_CERTIFICATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return ._APPLIED_CONTRACT_ASSIGNMENT(selection.copy())
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return ._APPLIED_DOCUMENT_REFERENCE(selection.copy())
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(selection.copy())
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return ._APPLIED_EFFECTIVITY_ASSIGNMENT(selection.copy())
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(selection.copy())
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return ._APPLIED_INEFFECTIVITY_ASSIGNMENT(selection.copy())
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(selection.copy())
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return ._APPLIED_ORGANIZATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return ._APPLIED_TIME_INTERVAL_ASSIGNMENT(selection.copy())
      case ._APPLIED_USAGE_RIGHT(let selection): return ._APPLIED_USAGE_RIGHT(selection.copy())
      case ._BREAKDOWN_OF(let selection): return ._BREAKDOWN_OF(selection.copy())
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return ._DATE_AND_TIME_ASSIGNMENT(selection.copy())
      case ._DATE_ASSIGNMENT(let selection): return ._DATE_ASSIGNMENT(selection.copy())
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return ._DIRECTED_ACTION_ASSIGNMENT(selection.copy())
      case ._FROZEN_ASSIGNMENT(let selection): return ._FROZEN_ASSIGNMENT(selection.copy())
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return ._MATERIAL_DESIGNATION_CHARACTERIZATION(selection.copy())
      case ._ORGANIZATIONAL_ADDRESS(let selection): return ._ORGANIZATIONAL_ADDRESS(selection.copy())
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return ._PERSON_AND_ORGANIZATION_ADDRESS(selection.copy())
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(selection.copy())
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(selection.copy())
      case ._PROPERTY_DEFINITION(let selection): return ._PROPERTY_DEFINITION(selection.copy())
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return ._PROPERTY_DEFINITION_REPRESENTATION(selection.copy())
      case ._REQUIREMENT_ASSIGNMENT(let selection): return ._REQUIREMENT_ASSIGNMENT(selection.copy())
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return ._REQUIREMENT_FOR_ACTION_RESOURCE(selection.copy())
      }
    }

    //MARK: SDAIGenericType
    public var typeMembers: Set<SDAI.STRING> {
      var members: Set<SDAI.STRING> = [SDAI.STRING(Self.typeName)]
      switch self {
      case ._ACTION_PROPERTY(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_USAGE_RIGHT(let selection): members.formUnion(selection.typeMembers)
      case ._BREAKDOWN_OF(let selection): members.formUnion(selection.typeMembers)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._DATE_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._FROZEN_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): members.formUnion(selection.typeMembers)
      case ._ORGANIZATIONAL_ADDRESS(let selection): members.formUnion(selection.typeMembers)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): members.formUnion(selection.typeMembers)
      case ._PROPERTY_DEFINITION(let selection): members.formUnion(selection.typeMembers)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): members.formUnion(selection.typeMembers)
      case ._REQUIREMENT_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): members.formUnion(selection.typeMembers)
      }
      return members
    }

    public var entityReference: SDAI.EntityReference? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.entityReference
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.entityReference
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.entityReference
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.entityReference
      case ._BREAKDOWN_OF(let selection): return selection.entityReference
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.entityReference
      case ._DATE_ASSIGNMENT(let selection): return selection.entityReference
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.entityReference
      case ._FROZEN_ASSIGNMENT(let selection): return selection.entityReference
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.entityReference
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.entityReference
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.entityReference
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.entityReference
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.entityReference
      case ._PROPERTY_DEFINITION(let selection): return selection.entityReference
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.entityReference
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.entityReference
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.entityReference
      }
    }
    public var stringValue: SDAI.STRING? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.stringValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.stringValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.stringValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.stringValue
      case ._BREAKDOWN_OF(let selection): return selection.stringValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.stringValue
      case ._DATE_ASSIGNMENT(let selection): return selection.stringValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.stringValue
      case ._FROZEN_ASSIGNMENT(let selection): return selection.stringValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.stringValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.stringValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.stringValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.stringValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.stringValue
      case ._PROPERTY_DEFINITION(let selection): return selection.stringValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.stringValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.stringValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.stringValue
      }
    }
    public var binaryValue: SDAI.BINARY? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.binaryValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.binaryValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.binaryValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.binaryValue
      case ._BREAKDOWN_OF(let selection): return selection.binaryValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.binaryValue
      case ._DATE_ASSIGNMENT(let selection): return selection.binaryValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._FROZEN_ASSIGNMENT(let selection): return selection.binaryValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.binaryValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.binaryValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.binaryValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.binaryValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.binaryValue
      case ._PROPERTY_DEFINITION(let selection): return selection.binaryValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.binaryValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.binaryValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.binaryValue
      }
    }
    public var logicalValue: SDAI.LOGICAL? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.logicalValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.logicalValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.logicalValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.logicalValue
      case ._BREAKDOWN_OF(let selection): return selection.logicalValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.logicalValue
      case ._DATE_ASSIGNMENT(let selection): return selection.logicalValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._FROZEN_ASSIGNMENT(let selection): return selection.logicalValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.logicalValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.logicalValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.logicalValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.logicalValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.logicalValue
      case ._PROPERTY_DEFINITION(let selection): return selection.logicalValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.logicalValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.logicalValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.logicalValue
      }
    }
    public var booleanValue: SDAI.BOOLEAN? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.booleanValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.booleanValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.booleanValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.booleanValue
      case ._BREAKDOWN_OF(let selection): return selection.booleanValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.booleanValue
      case ._DATE_ASSIGNMENT(let selection): return selection.booleanValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._FROZEN_ASSIGNMENT(let selection): return selection.booleanValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.booleanValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.booleanValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.booleanValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.booleanValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.booleanValue
      case ._PROPERTY_DEFINITION(let selection): return selection.booleanValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.booleanValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.booleanValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.booleanValue
      }
    }
    public var numberValue: SDAI.NUMBER? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.numberValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.numberValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.numberValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.numberValue
      case ._BREAKDOWN_OF(let selection): return selection.numberValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.numberValue
      case ._DATE_ASSIGNMENT(let selection): return selection.numberValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.numberValue
      case ._FROZEN_ASSIGNMENT(let selection): return selection.numberValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.numberValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.numberValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.numberValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.numberValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.numberValue
      case ._PROPERTY_DEFINITION(let selection): return selection.numberValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.numberValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.numberValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.numberValue
      }
    }
    public var realValue: SDAI.REAL? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.realValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.realValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.realValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.realValue
      case ._BREAKDOWN_OF(let selection): return selection.realValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.realValue
      case ._DATE_ASSIGNMENT(let selection): return selection.realValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.realValue
      case ._FROZEN_ASSIGNMENT(let selection): return selection.realValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.realValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.realValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.realValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.realValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.realValue
      case ._PROPERTY_DEFINITION(let selection): return selection.realValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.realValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.realValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.realValue
      }
    }
    public var integerValue: SDAI.INTEGER? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.integerValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.integerValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.integerValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.integerValue
      case ._BREAKDOWN_OF(let selection): return selection.integerValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.integerValue
      case ._DATE_ASSIGNMENT(let selection): return selection.integerValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.integerValue
      case ._FROZEN_ASSIGNMENT(let selection): return selection.integerValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.integerValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.integerValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.integerValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.integerValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.integerValue
      case ._PROPERTY_DEFINITION(let selection): return selection.integerValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.integerValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.integerValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.integerValue
      }
    }
    public var genericEnumValue: SDAI.GenericEnumValue? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.genericEnumValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.genericEnumValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.genericEnumValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.genericEnumValue
      case ._BREAKDOWN_OF(let selection): return selection.genericEnumValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._DATE_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._FROZEN_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.genericEnumValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.genericEnumValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.genericEnumValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.genericEnumValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.genericEnumValue
      case ._PROPERTY_DEFINITION(let selection): return selection.genericEnumValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.genericEnumValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.genericEnumValue
      }
    }
    public func arrayOptionalValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY_OPTIONAL<ELEM>? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._BREAKDOWN_OF(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._FROZEN_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      }
    }
    public func arrayValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY<ELEM>? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.arrayValue(elementType:elementType)
      case ._BREAKDOWN_OF(let selection): return selection.arrayValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._FROZEN_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.arrayValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.arrayValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.arrayValue(elementType:elementType)
      }
    }
    public func listValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.LIST<ELEM>? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.listValue(elementType:elementType)
      case ._BREAKDOWN_OF(let selection): return selection.listValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._FROZEN_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.listValue(elementType:elementType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.listValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.listValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.listValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.listValue(elementType:elementType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.listValue(elementType:elementType)
      }
    }
    public func bagValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.BAG<ELEM>? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.bagValue(elementType:elementType)
      case ._BREAKDOWN_OF(let selection): return selection.bagValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._FROZEN_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.bagValue(elementType:elementType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.bagValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.bagValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.bagValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.bagValue(elementType:elementType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.bagValue(elementType:elementType)
      }
    }
    public func setValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.SET<ELEM>? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.setValue(elementType:elementType)
      case ._BREAKDOWN_OF(let selection): return selection.setValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._FROZEN_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.setValue(elementType:elementType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.setValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.setValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.setValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.setValue(elementType:elementType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.setValue(elementType:elementType)
      }
    }
    public func enumValue<ENUM:SDAIEnumerationType>(enumType:ENUM.Type) -> ENUM? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.enumValue(enumType:enumType)
      case ._BREAKDOWN_OF(let selection): return selection.enumValue(enumType:enumType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._DATE_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._FROZEN_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.enumValue(enumType:enumType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.enumValue(enumType:enumType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.enumValue(enumType:enumType)
      case ._PROPERTY_DEFINITION(let selection): return selection.enumValue(enumType:enumType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.enumValue(enumType:enumType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.enumValue(enumType:enumType)
      }
    }

    //MARK: SDAIUnderlyingType
    public typealias FundamentalType = Self
    public static var typeName: String = 
      "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ASSIGNMENT_OBJECT_SELECT"
    public var asFundamentalType: FundamentalType { return self }

    //MARK: SDAIObservableAggregateElement
    public var entityReferences: AnySequence<SDAI.EntityReference> {
      switch self {
      case ._ACTION_PROPERTY(let entity): return entity.entityReferences
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.entityReferences
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): return entity.entityReferences
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_USAGE_RIGHT(let entity): return entity.entityReferences
      case ._BREAKDOWN_OF(let entity): return entity.entityReferences
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity.entityReferences
      case ._DATE_ASSIGNMENT(let entity): return entity.entityReferences
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._FROZEN_ASSIGNMENT(let entity): return entity.entityReferences
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): return entity.entityReferences
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.entityReferences
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.entityReferences
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): return entity.entityReferences
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): return entity.entityReferences
      case ._PROPERTY_DEFINITION(let entity): return entity.entityReferences
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.entityReferences
      case ._REQUIREMENT_ASSIGNMENT(let entity): return entity.entityReferences
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.entityReferences
      }
    }

    public mutating func configure(with observer: SDAI.EntityReferenceObserver) {
      switch self {
      case ._ACTION_PROPERTY(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_PROPERTY(entity)
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_PROPERTY_REPRESENTATION(entity)
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ACTION_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(entity)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_APPROVAL_ASSIGNMENT(entity)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_CERTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_CONTRACT_ASSIGNMENT(entity)
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_DOCUMENT_REFERENCE(entity)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(entity)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(entity)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_TIME_INTERVAL_ASSIGNMENT(entity)
      case ._APPLIED_USAGE_RIGHT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_USAGE_RIGHT(entity)
      case ._BREAKDOWN_OF(let entity): 
        entity.configure(with: observer)
        self = ._BREAKDOWN_OF(entity)
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._DATE_AND_TIME_ASSIGNMENT(entity)
      case ._DATE_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._DATE_ASSIGNMENT(entity)
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._DIRECTED_ACTION_ASSIGNMENT(entity)
      case ._FROZEN_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._FROZEN_ASSIGNMENT(entity)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): 
        entity.configure(with: observer)
        self = ._MATERIAL_DESIGNATION_CHARACTERIZATION(entity)
      case ._ORGANIZATIONAL_ADDRESS(let entity): 
        entity.configure(with: observer)
        self = ._ORGANIZATIONAL_ADDRESS(entity)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): 
        entity.configure(with: observer)
        self = ._PERSON_AND_ORGANIZATION_ADDRESS(entity)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(entity)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(entity)
      case ._PROPERTY_DEFINITION(let entity): 
        entity.configure(with: observer)
        self = ._PROPERTY_DEFINITION(entity)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): 
        entity.configure(with: observer)
        self = ._PROPERTY_DEFINITION_REPRESENTATION(entity)
      case ._REQUIREMENT_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._REQUIREMENT_ASSIGNMENT(entity)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): 
        entity.configure(with: observer)
        self = ._REQUIREMENT_FOR_ACTION_RESOURCE(entity)
      }
    }

    public mutating func teardownObserver() {
      switch self {
      case ._ACTION_PROPERTY(let entity): 
        entity.teardownObserver()
        self = ._ACTION_PROPERTY(entity)
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): 
        entity.teardownObserver()
        self = ._ACTION_PROPERTY_REPRESENTATION(entity)
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ACTION_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(entity)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_APPROVAL_ASSIGNMENT(entity)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_CERTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_CONTRACT_ASSIGNMENT(entity)
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_DOCUMENT_REFERENCE(entity)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(entity)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(entity)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_TIME_INTERVAL_ASSIGNMENT(entity)
      case ._APPLIED_USAGE_RIGHT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_USAGE_RIGHT(entity)
      case ._BREAKDOWN_OF(let entity): 
        entity.teardownObserver()
        self = ._BREAKDOWN_OF(entity)
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._DATE_AND_TIME_ASSIGNMENT(entity)
      case ._DATE_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._DATE_ASSIGNMENT(entity)
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._DIRECTED_ACTION_ASSIGNMENT(entity)
      case ._FROZEN_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._FROZEN_ASSIGNMENT(entity)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): 
        entity.teardownObserver()
        self = ._MATERIAL_DESIGNATION_CHARACTERIZATION(entity)
      case ._ORGANIZATIONAL_ADDRESS(let entity): 
        entity.teardownObserver()
        self = ._ORGANIZATIONAL_ADDRESS(entity)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): 
        entity.teardownObserver()
        self = ._PERSON_AND_ORGANIZATION_ADDRESS(entity)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(entity)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(entity)
      case ._PROPERTY_DEFINITION(let entity): 
        entity.teardownObserver()
        self = ._PROPERTY_DEFINITION(entity)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): 
        entity.teardownObserver()
        self = ._PROPERTY_DEFINITION_REPRESENTATION(entity)
      case ._REQUIREMENT_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._REQUIREMENT_ASSIGNMENT(entity)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): 
        entity.teardownObserver()
        self = ._REQUIREMENT_FOR_ACTION_RESOURCE(entity)
      }
    }

    //MARK: SDAIAggregationBehavior
    public var aggregationHiBound: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationHiIndex: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationLoBound: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationLoIndex: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationSize: Int? {
      switch self {
      default: return nil
      }
    }

    //MARK: WHERE RULE VALIDATION (SELECT TYPE)
    public static func validateWhereRules(instance:Self?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      var result: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]
      switch instance {
      case ._ACTION_PROPERTY(let selectValue): 
        result = eACTION_PROPERTY.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_PROPERTY")
      case ._ACTION_PROPERTY_REPRESENTATION(let selectValue): 
        result = eACTION_PROPERTY_REPRESENTATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_PROPERTY_REPRESENTATION")
      case ._APPLIED_ACTION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ACTION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ACTION_ASSIGNMENT")
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ACTION_METHOD_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ACTION_METHOD_ASSIGNMENT")
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_APPROVAL_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_APPROVAL_ASSIGNMENT")
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_CERTIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_CERTIFICATION_ASSIGNMENT")
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_CONTRACT_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_CONTRACT_ASSIGNMENT")
      case ._APPLIED_DOCUMENT_REFERENCE(let selectValue): 
        result = eAPPLIED_DOCUMENT_REFERENCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_DOCUMENT_REFERENCE")
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT")
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_EFFECTIVITY_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_EFFECTIVITY_ASSIGNMENT")
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_EVENT_OCCURRENCE_ASSIGNMENT")
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_INEFFECTIVITY_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_INEFFECTIVITY_ASSIGNMENT")
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT")
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ORGANIZATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ORGANIZATION_ASSIGNMENT")
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT")
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT")
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_TIME_INTERVAL_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_TIME_INTERVAL_ASSIGNMENT")
      case ._APPLIED_USAGE_RIGHT(let selectValue): 
        result = eAPPLIED_USAGE_RIGHT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_USAGE_RIGHT")
      case ._BREAKDOWN_OF(let selectValue): result = eBREAKDOWN_OF.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\BREAKDOWN_OF")
      case ._DATE_AND_TIME_ASSIGNMENT(let selectValue): 
        result = eDATE_AND_TIME_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DATE_AND_TIME_ASSIGNMENT")
      case ._DATE_ASSIGNMENT(let selectValue): 
        result = eDATE_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DATE_ASSIGNMENT")
      case ._DIRECTED_ACTION_ASSIGNMENT(let selectValue): 
        result = eDIRECTED_ACTION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DIRECTED_ACTION_ASSIGNMENT")
      case ._FROZEN_ASSIGNMENT(let selectValue): 
        result = eFROZEN_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\FROZEN_ASSIGNMENT")
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selectValue): 
        result = eMATERIAL_DESIGNATION_CHARACTERIZATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\MATERIAL_DESIGNATION_CHARACTERIZATION")
      case ._ORGANIZATIONAL_ADDRESS(let selectValue): 
        result = eORGANIZATIONAL_ADDRESS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ORGANIZATIONAL_ADDRESS")
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selectValue): 
        result = ePERSON_AND_ORGANIZATION_ADDRESS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PERSON_AND_ORGANIZATION_ADDRESS")
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selectValue): 
        result = ePRODUCT_CONCEPT_FEATURE_ASSOCIATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_CONCEPT_FEATURE_ASSOCIATION")
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selectValue): 
        result = ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE")
      case ._PROPERTY_DEFINITION(let selectValue): 
        result = ePROPERTY_DEFINITION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PROPERTY_DEFINITION")
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selectValue): 
        result = ePROPERTY_DEFINITION_REPRESENTATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PROPERTY_DEFINITION_REPRESENTATION")
      case ._REQUIREMENT_ASSIGNMENT(let selectValue): 
        result = eREQUIREMENT_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REQUIREMENT_ASSIGNMENT")
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selectValue): 
        result = eREQUIREMENT_FOR_ACTION_RESOURCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REQUIREMENT_FOR_ACTION_RESOURCE")
      case nil: break
      }

      return result
    }

  }

}


//MARK: - SELECT TYPE HIERARCHY
public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sASSIGNMENT_OBJECT_SELECT__type: 
  SDAISelectType {

  //MARK: GROUP REFERENCES
  var super_eORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION_ASSIGNMENT? { get }
  var super_eACTION_RESOURCE_REQUIREMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE_REQUIREMENT? { get }
  var super_eORGANIZATIONAL_ADDRESS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_ADDRESS? { get }
  var super_ePERSONAL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSONAL_ADDRESS? { get }
  var super_eEFFECTIVITY_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY_ASSIGNMENT? { get }
  var super_eAPPLIED_USAGE_RIGHT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_USAGE_RIGHT? { get }
  var super_eAPPLIED_CERTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CERTIFICATION_ASSIGNMENT? { get }
  var super_ePROPERTY_DEFINITION_REPRESENTATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION_REPRESENTATION? { get }
  var super_eAPPLIED_TIME_INTERVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_TIME_INTERVAL_ASSIGNMENT? { get }
  var super_eFROZEN_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFROZEN_ASSIGNMENT? { get }
  var super_ePROPERTY_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION? { get }
  var super_eGROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP? { get }
  var super_eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? { get }
  var super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT? { get }
  var super_eAPPLIED_EFFECTIVITY_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EFFECTIVITY_ASSIGNMENT? { get }
  var super_eGROUP_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP_ASSIGNMENT? { get }
  var super_eCONTRACT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT_ASSIGNMENT? { get }
  var super_eDATE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_ASSIGNMENT? { get }
  var super_ePERSON_AND_ORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION_ASSIGNMENT? { get }
  var super_eACTION_PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY? { get }
  var super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_INEFFECTIVITY_ASSIGNMENT? { get }
  var super_eORGANIZATIONAL_PROJECT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT_ASSIGNMENT? { get }
  var super_eAPPLIED_ACTION_METHOD_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_METHOD_ASSIGNMENT? { get }
  var super_eSECURITY_CLASSIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_ASSIGNMENT? { get }
  var super_ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE? { get }
  var super_eAPPLIED_DOCUMENT_REFERENCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DOCUMENT_REFERENCE? { get }
  var super_eACTION_METHOD_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD_ASSIGNMENT? { get }
  var super_eDATE_AND_TIME_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME_ASSIGNMENT? { get }
  var super_eMATERIAL_DESIGNATION_CHARACTERIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATERIAL_DESIGNATION_CHARACTERIZATION? { get }
  var super_eAPPLIED_CONTRACT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CONTRACT_ASSIGNMENT? { get }
  var super_eDIRECTED_ACTION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTED_ACTION_ASSIGNMENT? { get }
  var super_eBREAKDOWN_OF: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBREAKDOWN_OF? { get }
  var super_eACTION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_ASSIGNMENT? { get }
  var super_eAPPROVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_ASSIGNMENT? { get }
  var super_eDOCUMENT_REFERENCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_REFERENCE? { get }
  var super_eCERTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION_ASSIGNMENT? { get }
  var super_eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? { get }
  var super_eACTION_PROPERTY_REPRESENTATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY_REPRESENTATION? { get }
  var super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT? { get }
  var super_eAPPLIED_ORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATION_ASSIGNMENT? { get }
  var super_eTIME_INTERVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL_ASSIGNMENT? { get }
  var super_eAPPLIED_APPROVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_APPROVAL_ASSIGNMENT? { get }
  var super_eREQUIREMENT_FOR_ACTION_RESOURCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_FOR_ACTION_RESOURCE? { get }
  var super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT? { get }
  var super_ePRODUCT_DEFINITION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP? { get }
  var super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT? { get }
  var super_eADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eADDRESS? { get }
  var super_ePRODUCT_CONCEPT_FEATURE_ASSOCIATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_ASSOCIATION? { get }
  var super_eAPPLIED_ACTION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_ASSIGNMENT? { get }
  var super_ePERSON_AND_ORGANIZATION_ADDRESS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION_ADDRESS? { get }
  var super_eREQUIREMENT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_ASSIGNMENT? { get }
  var super_eEVENT_OCCURRENCE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE_ASSIGNMENT? { get }
  var super_eCHARACTERIZED_OBJECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHARACTERIZED_OBJECT? { get }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var ASSIGNED_DOCUMENT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_USAGE_CONSTRAINT?  { get }
  var PEOPLE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON>/*[1:1]*/ )?  { get }
  var ASSIGNED_SECURITY_CLASSIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION?  { get }
  var REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { get }
  var STREET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var ASSIGNED_EVENT_OCCURRENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { get }
  var ASSIGNED_DIRECTED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTED_ACTION?  { get }
  var ORGANIZATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION>/*[1:nil]*/ )?  { get }
  var ASSIGNED_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE?  { get }
  var DEPENDENT_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_ENVIRONMENT?  { get }
  var ROLE: SDAI.GENERIC_ENTITY?  { get }
  var DESIGNATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATERIAL_DESIGNATION?  { get }
  var OPERATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_ACTION_DEFINITION>
    /*[1:nil]*/ )?  { get }
  var ASSIGNED_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { get }
  var RESOURCES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE>/*[1:nil]*/ )?  { get }
  var TELEX_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var FACSIMILE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var REGION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ELECTRONIC_MAIL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var OF_SHAPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATED_PART_RELATIONSHIP?  { get }
  var STREET_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var USED_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { get }
  var CONCEPT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT?  { get }
  var ASSIGNED_DATE_AND_TIME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME?  { get }
  var ASSIGNED_TIME_INTERVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { get }
  var ASSIGNED_CERTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION?  { get }
  var ASSIGNED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { get }
  var ASSIGNED_ACTION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { get }
  var INTERNAL_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var FEATURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE?  { get }
  var POSTAL_CODE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var POSTAL_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var KIND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRESOURCE_REQUIREMENT_TYPE?  { get }
  var URL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var ASSIGNED_CONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT?  { get }
  var ASSIGNED_PERSON_AND_ORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION?  { get }
  var RELATING_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { get }
  var SOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var TOWN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var COUNTRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var REPRESENTATION_RELATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PROPERTY_DEFINITION_REPRESENTATION?  { get }
  var ASSIGNED_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY?  { get }
  var ASSIGNED_DOCUMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT?  { get }
  var TELEPHONE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ASSIGNED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { get }
  var RELATED_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { get }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ASSIGNED_ORGANIZATIONAL_PROJECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT?  { get }
  var ASSIGNED_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { get }
}

public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sASSIGNMENT_OBJECT_SELECT__subtype: 
  AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sASSIGNMENT_OBJECT_SELECT__type, SDAIDefinedType
where Supertype: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sASSIGNMENT_OBJECT_SELECT__type
{}

public extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sASSIGNMENT_OBJECT_SELECT__subtype {
  //MARK: CONSTRUCTORS
  init?(possiblyFrom complex: SDAI.ComplexEntity?) {
    self.init(fundamental: FundamentalType(possiblyFrom: complex))
  }

  init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?) {
    self.init(fundamental: FundamentalType(possiblyFrom: underlyingType))
  }

  init?<G: SDAIGenericType>(fromGeneric generic: G?) {
    self.init(fundamental: FundamentalType.convert(fromGeneric: generic))
  }

  //MARK: GROUP REFERENCES
  var super_eORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION_ASSIGNMENT? { rep.super_eORGANIZATION_ASSIGNMENT }
  var super_eACTION_RESOURCE_REQUIREMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE_REQUIREMENT? { rep.super_eACTION_RESOURCE_REQUIREMENT }
  var super_eORGANIZATIONAL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_ADDRESS? { rep.super_eORGANIZATIONAL_ADDRESS }
  var super_ePERSONAL_ADDRESS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSONAL_ADDRESS? { rep.super_ePERSONAL_ADDRESS }
  var super_eEFFECTIVITY_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY_ASSIGNMENT? { rep.super_eEFFECTIVITY_ASSIGNMENT }
  var super_eAPPLIED_USAGE_RIGHT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_USAGE_RIGHT? { rep.super_eAPPLIED_USAGE_RIGHT }
  var super_eAPPLIED_CERTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CERTIFICATION_ASSIGNMENT? { rep.super_eAPPLIED_CERTIFICATION_ASSIGNMENT }
  var super_ePROPERTY_DEFINITION_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION_REPRESENTATION? { rep.super_ePROPERTY_DEFINITION_REPRESENTATION }
  var super_eAPPLIED_TIME_INTERVAL_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_TIME_INTERVAL_ASSIGNMENT? { rep.super_eAPPLIED_TIME_INTERVAL_ASSIGNMENT }
  var super_eFROZEN_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFROZEN_ASSIGNMENT? { rep.super_eFROZEN_ASSIGNMENT }
  var super_ePROPERTY_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION? { rep.super_ePROPERTY_DEFINITION }
  var super_eGROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP? { rep.super_eGROUP }
  var super_eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? { rep.super_eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT }
  var super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT? { rep.super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT }
  var super_eAPPLIED_EFFECTIVITY_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EFFECTIVITY_ASSIGNMENT? { rep.super_eAPPLIED_EFFECTIVITY_ASSIGNMENT }
  var super_eGROUP_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP_ASSIGNMENT? { rep.super_eGROUP_ASSIGNMENT }
  var super_eCONTRACT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT_ASSIGNMENT? { rep.super_eCONTRACT_ASSIGNMENT }
  var super_eDATE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_ASSIGNMENT? { rep.super_eDATE_ASSIGNMENT }
  var super_ePERSON_AND_ORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION_ASSIGNMENT? { rep.super_ePERSON_AND_ORGANIZATION_ASSIGNMENT }
  var super_eACTION_PROPERTY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY? { rep.super_eACTION_PROPERTY }
  var super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_INEFFECTIVITY_ASSIGNMENT? { rep.super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT }
  var super_eORGANIZATIONAL_PROJECT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT_ASSIGNMENT? { rep.super_eORGANIZATIONAL_PROJECT_ASSIGNMENT }
  var super_eAPPLIED_ACTION_METHOD_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_METHOD_ASSIGNMENT? { rep.super_eAPPLIED_ACTION_METHOD_ASSIGNMENT }
  var super_eSECURITY_CLASSIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_ASSIGNMENT? { rep.super_eSECURITY_CLASSIFICATION_ASSIGNMENT }
  var super_ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE? { rep.super_ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE }
  var super_eAPPLIED_DOCUMENT_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DOCUMENT_REFERENCE? { rep.super_eAPPLIED_DOCUMENT_REFERENCE }
  var super_eACTION_METHOD_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD_ASSIGNMENT? { rep.super_eACTION_METHOD_ASSIGNMENT }
  var super_eDATE_AND_TIME_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME_ASSIGNMENT? { rep.super_eDATE_AND_TIME_ASSIGNMENT }
  var super_eMATERIAL_DESIGNATION_CHARACTERIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATERIAL_DESIGNATION_CHARACTERIZATION? { rep.super_eMATERIAL_DESIGNATION_CHARACTERIZATION }
  var super_eAPPLIED_CONTRACT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CONTRACT_ASSIGNMENT? { rep.super_eAPPLIED_CONTRACT_ASSIGNMENT }
  var super_eDIRECTED_ACTION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTED_ACTION_ASSIGNMENT? { rep.super_eDIRECTED_ACTION_ASSIGNMENT }
  var super_eBREAKDOWN_OF: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBREAKDOWN_OF? { rep.super_eBREAKDOWN_OF }
  var super_eACTION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_ASSIGNMENT? { rep.super_eACTION_ASSIGNMENT }
  var super_eAPPROVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_ASSIGNMENT? { rep.super_eAPPROVAL_ASSIGNMENT }
  var super_eDOCUMENT_REFERENCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_REFERENCE? { rep.super_eDOCUMENT_REFERENCE }
  var super_eCERTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION_ASSIGNMENT? { rep.super_eCERTIFICATION_ASSIGNMENT }
  var super_eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? { rep.super_eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT }
  var super_eACTION_PROPERTY_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY_REPRESENTATION? { rep.super_eACTION_PROPERTY_REPRESENTATION }
  var super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT? { rep.super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT }
  var super_eAPPLIED_ORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATION_ASSIGNMENT? { rep.super_eAPPLIED_ORGANIZATION_ASSIGNMENT }
  var super_eTIME_INTERVAL_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL_ASSIGNMENT? { rep.super_eTIME_INTERVAL_ASSIGNMENT }
  var super_eAPPLIED_APPROVAL_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_APPROVAL_ASSIGNMENT? { rep.super_eAPPLIED_APPROVAL_ASSIGNMENT }
  var super_eREQUIREMENT_FOR_ACTION_RESOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_FOR_ACTION_RESOURCE? { rep.super_eREQUIREMENT_FOR_ACTION_RESOURCE }
  var super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT? { rep.super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT }
  var super_ePRODUCT_DEFINITION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP? { rep.super_ePRODUCT_DEFINITION_RELATIONSHIP }
  var super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT? { rep.super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT }
  var super_eADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eADDRESS? { rep.super_eADDRESS }
  var super_ePRODUCT_CONCEPT_FEATURE_ASSOCIATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_ASSOCIATION? { rep.super_ePRODUCT_CONCEPT_FEATURE_ASSOCIATION }
  var super_eAPPLIED_ACTION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_ASSIGNMENT? { rep.super_eAPPLIED_ACTION_ASSIGNMENT }
  var super_ePERSON_AND_ORGANIZATION_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION_ADDRESS? { rep.super_ePERSON_AND_ORGANIZATION_ADDRESS }
  var super_eREQUIREMENT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_ASSIGNMENT? { rep.super_eREQUIREMENT_ASSIGNMENT }
  var super_eEVENT_OCCURRENCE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE_ASSIGNMENT? { rep.super_eEVENT_OCCURRENCE_ASSIGNMENT }
  var super_eCHARACTERIZED_OBJECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHARACTERIZED_OBJECT? { rep.super_eCHARACTERIZED_OBJECT }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var ASSIGNED_DOCUMENT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_USAGE_CONSTRAINT?  { rep.ASSIGNED_DOCUMENT_USAGE }
  var PEOPLE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON>/*[1:1]*/ )?  { rep.PEOPLE }
  var ASSIGNED_SECURITY_CLASSIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION?  { rep.ASSIGNED_SECURITY_CLASSIFICATION }
  var REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { rep.REPRESENTATION }
  var STREET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.STREET }
  var DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.DESCRIPTION }
  var ASSIGNED_EVENT_OCCURRENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { rep.ASSIGNED_EVENT_OCCURRENCE }
  var ASSIGNED_DIRECTED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTED_ACTION?  { rep.ASSIGNED_DIRECTED_ACTION }
  var ORGANIZATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION>/*[1:nil]*/ )?  { rep.ORGANIZATIONS }
  var ASSIGNED_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE?  { rep.ASSIGNED_DATE }
  var DEPENDENT_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_ENVIRONMENT?  { rep.DEPENDENT_ENVIRONMENT }
  var ROLE: SDAI.GENERIC_ENTITY?  { rep.ROLE }
  var DESIGNATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATERIAL_DESIGNATION?  { rep.DESIGNATION }
  var OPERATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_ACTION_DEFINITION>
    /*[1:nil]*/ )?  { rep.OPERATIONS }
  var ASSIGNED_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { rep.ASSIGNED_APPROVAL }
  var RESOURCES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE>/*[1:nil]*/ )?  { rep.RESOURCES }
  var TELEX_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TELEX_NUMBER }
  var FACSIMILE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.FACSIMILE_NUMBER }
  var REGION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.REGION }
  var ELECTRONIC_MAIL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.ELECTRONIC_MAIL_ADDRESS }
  var OF_SHAPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATED_PART_RELATIONSHIP?  { rep.OF_SHAPE }
  var STREET_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.STREET_NUMBER }
  var USED_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { rep.USED_REPRESENTATION }
  var CONCEPT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT?  { rep.CONCEPT }
  var ASSIGNED_DATE_AND_TIME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME?  { rep.ASSIGNED_DATE_AND_TIME }
  var ASSIGNED_TIME_INTERVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { rep.ASSIGNED_TIME_INTERVAL }
  var ASSIGNED_CERTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION?  { rep.ASSIGNED_CERTIFICATION }
  var ASSIGNED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { rep.ASSIGNED_ACTION }
  var ASSIGNED_ACTION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { rep.ASSIGNED_ACTION_METHOD }
  var INTERNAL_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.INTERNAL_LOCATION }
  var FEATURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE?  { rep.FEATURE }
  var POSTAL_CODE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.POSTAL_CODE }
  var POSTAL_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.POSTAL_BOX }
  var KIND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRESOURCE_REQUIREMENT_TYPE?  { rep.KIND }
  var URL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.URL }
  var ASSIGNED_CONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT?  { rep.ASSIGNED_CONTRACT }
  var ASSIGNED_PERSON_AND_ORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION?  { rep.ASSIGNED_PERSON_AND_ORGANIZATION }
  var RELATING_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { rep.RELATING_PRODUCT_DEFINITION }
  var SOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.SOURCE }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.ID }
  var TOWN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TOWN }
  var COUNTRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.COUNTRY }
  var REPRESENTATION_RELATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PROPERTY_DEFINITION_REPRESENTATION?  { rep.REPRESENTATION_RELATION }
  var ASSIGNED_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY?  { rep.ASSIGNED_EFFECTIVITY }
  var ASSIGNED_DOCUMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT?  { rep.ASSIGNED_DOCUMENT }
  var TELEPHONE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TELEPHONE_NUMBER }
  var ASSIGNED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { rep.ASSIGNED_GROUP }
  var RELATED_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { rep.RELATED_PRODUCT_DEFINITION }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.NAME }
  var ASSIGNED_ORGANIZATIONAL_PROJECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT?  { rep.ASSIGNED_ORGANIZATIONAL_PROJECT }
  var ASSIGNED_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { rep.ASSIGNED_ORGANIZATION }
}

