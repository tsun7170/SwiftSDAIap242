/* file: classification_item.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -TYPE DEFINITION in EXPRESS
/*
  TYPE classification_item = SELECT
    ( action (*ENTITY*),
     action_directive (*ENTITY*),
     action_directive_relationship (*ENTITY*),
     action_method (*ENTITY*),
     action_method_relationship (*ENTITY*),
     action_property (*ENTITY*),
     action_property_representation (*ENTITY*),
     action_relationship (*ENTITY*),
     action_request_solution (*ENTITY*),
     action_request_status (*ENTITY*),
     action_resource (*ENTITY*),
     action_resource_relationship (*ENTITY*),
     address (*ENTITY*),
     alternate_product_relationship (*ENTITY*),
     alternative_solution_relationship (*ENTITY*),
     analysis_assignment (*ENTITY*),
     applied_action_assignment (*ENTITY*),
     applied_action_method_assignment (*ENTITY*),
     applied_action_request_assignment (*ENTITY*),
     applied_approval_assignment (*ENTITY*),
     applied_certification_assignment (*ENTITY*),
     applied_classification_assignment_relationship (*ENTITY*),
     applied_contract_assignment (*ENTITY*),
     applied_date_and_time_assignment (*ENTITY*),
     applied_date_assignment (*ENTITY*),
     applied_description_text_assignment (*ENTITY*),
     applied_description_text_assignment_relationship (*ENTITY*),
     applied_document_reference (*ENTITY*),
     applied_document_usage_constraint_assignment (*ENTITY*),
     applied_effectivity_assignment (*ENTITY*),
     applied_event_occurrence_assignment (*ENTITY*),
     applied_external_identification_assignment (*ENTITY*),
     applied_external_identification_assignment_relationship (*ENTITY*),
     applied_identification_assignment (*ENTITY*),
     applied_ineffectivity_assignment (*ENTITY*),
     applied_organizational_project_assignment (*ENTITY*),
     applied_organization_assignment (*ENTITY*),
     applied_person_and_organization_assignment (*ENTITY*),
     applied_security_classification_assignment (*ENTITY*),
     applied_time_interval_assignment (*ENTITY*),
     applied_usage_right (*ENTITY*),
     approval (*ENTITY*),
     approval_person_organization (*ENTITY*),
     approval_relationship (*ENTITY*),
     approval_status (*ENTITY*),
     assembly_component_usage_substitute (*ENTITY*),
     assignment_object_relationship (*ENTITY*),
     attribute_language_assignment (*ENTITY*),
     breakdown_context (*ENTITY*),
     breakdown_element_realization (*ENTITY*),
     breakdown_of (*ENTITY*),
     calendar_date (*ENTITY*),
     certification (*ENTITY*),
     change_element_sequence (*ENTITY*),
     change_group (*ENTITY*),
     characterized_class (*ENTITY*),
     characterized_object (*ENTITY*),
     class (*ENTITY*),
     classified_item (*SELECT*),
     configuration_design (*ENTITY*),
     configuration_effectivity (*ENTITY*),
     configuration_item (*ENTITY*),
     configuration_item_relationship (*ENTITY*),
     context_dependent_unit (*ENTITY*),
     contract (*ENTITY*),
     contract_relationship (*ENTITY*),
     conversion_based_unit (*ENTITY*),
     date_and_time (*ENTITY*),
     date_and_time_assignment (*ENTITY*),
     date_assignment (*ENTITY*),
     definitional_representation_relationship (*ENTITY*),
     derived_unit (*ENTITY*),
     descriptive_representation_item (*ENTITY*),
     directed_action (*ENTITY*),
     directed_action_assignment (*ENTITY*),
     document_file (*ENTITY*),
     document_relationship (*ENTITY*),
     document_type (*ENTITY*),
     effectivity (*ENTITY*),
     effectivity_relationship (*ENTITY*),
     envelope (*ENTITY*),
     envelope_relationship (*ENTITY*),
     evaluated_characteristic (*ENTITY*),
     event_occurrence (*ENTITY*),
     event_occurrence_relationship (*ENTITY*),
     evidence (*ENTITY*),
     executed_action (*ENTITY*),
     feature_definition (*ENTITY*),
     general_feature (*ENTITY*),
     general_property (*ENTITY*),
     general_property_relationship (*ENTITY*),
     generic_property_relationship (*ENTITY*),
     group (*ENTITY*),
     group_relationship (*ENTITY*),
     identification_assignment (*ENTITY*),
     identification_assignment_relationship (*ENTITY*),
     information_right (*ENTITY*),
     information_usage_right (*ENTITY*),
     interface_connection (*ENTITY*),
     interface_connector_as_planned (*ENTITY*),
     interface_connector_as_realized (*ENTITY*),
     interface_connector_design (*ENTITY*),
     interface_connector_design_to_planned (*ENTITY*),
     interface_connector_design_to_realized (*ENTITY*),
     interface_connector_occurrence (*ENTITY*),
     interface_connector_planned_to_realized (*ENTITY*),
     interface_definition_connection (*ENTITY*),
     interface_definition_for (*ENTITY*),
     in_zone (*ENTITY*),
     language (*ENTITY*),
     link_motion_relationship (*ENTITY*),
     local_time (*ENTITY*),
     location (*ENTITY*),
     location_relationship (*ENTITY*),
     material_designation (*ENTITY*),
     material_designation_characterization (*ENTITY*),
     measure_qualification (*ENTITY*),
     measure_representation_item (*ENTITY*),
     measure_with_unit (*ENTITY*),
     message_relationship (*ENTITY*),
     multi_language_attribute_assignment (*ENTITY*),
     named_unit (*ENTITY*),
     organization (*ENTITY*),
     organizational_address (*ENTITY*),
     organizational_project (*ENTITY*),
     organizational_project_relationship (*ENTITY*),
     organization_relationship (*ENTITY*),
     person (*ENTITY*),
     person_and_organization (*ENTITY*),
     person_and_organization_address (*ENTITY*),
     plus_minus_tolerance (*ENTITY*),
     process_operation (*ENTITY*),
     process_plan (*ENTITY*),
     process_product_association (*ENTITY*),
     product (*ENTITY*),
     product_concept (*ENTITY*),
     product_concept_context (*ENTITY*),
     product_concept_feature (*ENTITY*),
     product_concept_feature_association (*ENTITY*),
     product_concept_feature_category (*ENTITY*),
     product_concept_feature_category_usage (*ENTITY*),
     product_concept_relationship (*ENTITY*),
     product_definition (*ENTITY*),
     product_definition_context (*ENTITY*),
     product_definition_formation (*ENTITY*),
     product_definition_formation_relationship (*ENTITY*),
     product_definition_relationship (*ENTITY*),
     product_definition_usage (*ENTITY*),
     product_definition_usage_relationship (*ENTITY*),
     product_design_to_individual (*ENTITY*),
     product_design_version_to_individual (*ENTITY*),
     product_group (*ENTITY*),
     product_group_membership (*ENTITY*),
     product_group_relationship (*ENTITY*),
     product_process_plan (*ENTITY*),
     product_relationship (*ENTITY*),
     property_definition (*ENTITY*),
     property_definition_representation (*ENTITY*),
     representation (*ENTITY*),
     representation_context (*ENTITY*),
     representation_item (*ENTITY*),
     representation_relationship (*ENTITY*),
     requirement_assignment (*ENTITY*),
     requirement_for_action_resource (*ENTITY*),
     requirement_source (*ENTITY*),
     resource_property (*ENTITY*),
     retention (*ENTITY*),
     satisfies_requirement (*ENTITY*),
     security_classification (*ENTITY*),
     security_classification_level (*ENTITY*),
     shape_aspect (*ENTITY*),
     shape_aspect_relationship (*ENTITY*),
     shape_feature_definition_relationship (*ENTITY*),
     state_definition_to_state_assignment_relationship (*ENTITY*),
     state_observed (*ENTITY*),
     state_observed_assignment (*ENTITY*),
     state_observed_relationship (*ENTITY*),
     state_observed_role (*ENTITY*),
     state_type (*ENTITY*),
     state_type_assignment (*ENTITY*),
     state_type_relationship (*ENTITY*),
     structured_message (*ENTITY*),
     time_interval_relationship (*ENTITY*),
     type_qualifier (*ENTITY*),
     uncertainty_measure_with_unit (*ENTITY*),
     usage_association (*ENTITY*),
     validation (*ENTITY*),
     verification (*ENTITY*),
     versioned_action_request (*ENTITY*),
     versioned_action_request_relationship (*ENTITY*) );
  END_TYPE; -- classification_item (line:1471 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES FOR SELECT
/*
  action (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  properties: SET [1 : ?] OF process_property_association
  ATTR:  directive: action_directive
  ATTR:  chosen_method: action_method
  ATTR:  identification: (AMBIGUOUS (CASE LEVEL))
  ATTR:  product_definitions: SET [1 : ?] OF process_product_association
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  action_directive (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  analysis: text
  ATTR:  requests: SET [1 : ?] OF versioned_action_request
  ATTR:  comment: text
  ATTR:  name: label *** Multiple Select Case Sources ***

  action_directive_relationship (*ENTITY*):
  ATTR:  description: STRING (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating: action_directive (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relation_type: STRING *** Multiple Select Case Sources ***
  ATTR:  related: action_directive (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  action_method (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  consequence: text
  ATTR:  name: label *** Multiple Select Case Sources ***

  action_method_relationship (*ENTITY*):
  ATTR:  related_method: action_method *** Multiple Select Case Sources ***
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  right_applied: information_right
  ATTR:  relating: information_usage_right (AMBIGUOUS (SELECT LEVEL))
  ATTR:  right_usage: information_usage_right
  ATTR:  related: information_usage_right (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  relating_method: action_method *** Multiple Select Case Sources ***

  action_property (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  definition: characterized_action_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  action_property_representation (*ENTITY*):
  ATTR:  representation: representation
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  property: action_property (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  action_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_action: action
  ATTR:  related_action: action
  ATTR:  name: label *** Multiple Select Case Sources ***

  action_request_solution (*ENTITY*):
  ATTR:  request: versioned_action_request
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  method: action_method
  ATTR:  name: label *** Multiple Select Case Sources ***

  action_request_status (*ENTITY*):
  ATTR:  status: label (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_request: versioned_action_request

  action_resource (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  kind: action_resource_type *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  usage: SET [1 : ?] OF supported_item (AMBIGUOUS (SELECT LEVEL))

  action_resource_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_resource: action_resource
  ATTR:  related_resource: action_resource
  ATTR:  name: label *** Multiple Select Case Sources ***

  address (*ENTITY*):
  ATTR:  people: SET [1 : ?] OF person *** Multiple Select Case Sources ***
  ATTR:  street: label
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  organizations: SET [1 : ?] OF organization *** Multiple Select Case Sources ***
  ATTR:  telex_number: label
  ATTR:  facsimile_number: label
  ATTR:  region: label
  ATTR:  electronic_mail_address: label
  ATTR:  street_number: label
  ATTR:  internal_location: label
  ATTR:  postal_code: label
  ATTR:  postal_box: label
  ATTR:  url: identifier
  ATTR:  town: label
  ATTR:  country: label
  ATTR:  telephone_number: label
  ATTR:  name: label *** Multiple Select Case Sources ***

  alternate_product_relationship (*ENTITY*):
  ATTR:  basis: text
  ATTR:  base: product (AMBIGUOUS (SELECT LEVEL))
  ATTR:  alternate: product
  ATTR:  definition: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  alternative_solution_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition_formation: product_definition_formation *** Multiple Select Case Sources ***
  ATTR:  relating_product_definition_formation: product_definition_formation *** Multiple Select Case Sources ***
  ATTR:  relation_type: STRING *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  analysis_assignment (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  applied_action_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF action_items (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_action: action

  applied_action_method_assignment (*ENTITY*):
  ATTR:  role: action_method_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF action_method_items (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_action_method: action_method

  applied_action_request_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF action_request_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_action_request: versioned_action_request

  applied_approval_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  assigned_approval: approval
  ATTR:  items: SET [1 : ?] OF approval_item (AMBIGUOUS (SELECT LEVEL))

  applied_certification_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF certification_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_certification: certification

  applied_classification_assignment_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating: applied_classification_assignment (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relation_type: STRING *** Multiple Select Case Sources ***
  ATTR:  related: applied_classification_assignment (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***

  applied_contract_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF contract_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_contract: contract

  applied_date_and_time_assignment (*ENTITY*):
  ATTR:  role: date_time_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF date_and_time_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_date_and_time: date_and_time

  applied_date_assignment (*ENTITY*):
  ATTR:  assigned_date: date
  ATTR:  role: date_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF date_item (AMBIGUOUS (SELECT LEVEL))

  applied_description_text_assignment (*ENTITY*):
  ATTR:  description: description_text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  items: SET [1 : ?] OF description_item (AMBIGUOUS (SELECT LEVEL))

  applied_description_text_assignment_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating: applied_description_text_assignment (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relation_type: STRING *** Multiple Select Case Sources ***
  ATTR:  related: applied_description_text_assignment (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***

  applied_document_reference (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF document_reference_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  source: label (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_document: document

  applied_document_usage_constraint_assignment (*ENTITY*):
  ATTR:  assigned_document_usage: document_usage_constraint
  ATTR:  role: document_usage_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF document_reference_item (AMBIGUOUS (SELECT LEVEL))

  applied_effectivity_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF effectivity_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_effectivity: effectivity

  applied_event_occurrence_assignment (*ENTITY*):
  ATTR:  assigned_event_occurrence: event_occurrence
  ATTR:  role: event_occurrence_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF event_occurrence_item (AMBIGUOUS (SELECT LEVEL))

  applied_external_identification_assignment (*ENTITY*):
  ATTR:  role: identification_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF external_identification_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_id: identifier
  ATTR:  source: external_source (AMBIGUOUS (SELECT LEVEL))

  applied_external_identification_assignment_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating: applied_external_identification_assignment (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relation_type: STRING *** Multiple Select Case Sources ***
  ATTR:  related: applied_external_identification_assignment (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***

  applied_identification_assignment (*ENTITY*):
  ATTR:  role: identification_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF identification_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_id: identifier

  applied_ineffectivity_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF effectivity_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_effectivity: effectivity

  applied_organizational_project_assignment (*ENTITY*):
  ATTR:  role: organizational_project_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF project_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_organizational_project: organizational_project

  applied_organization_assignment (*ENTITY*):
  ATTR:  role: organization_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF organization_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_organization: organization

  applied_person_and_organization_assignment (*ENTITY*):
  ATTR:  role: person_and_organization_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF person_and_organization_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_person_and_organization: person_and_organization

  applied_security_classification_assignment (*ENTITY*):
  ATTR:  assigned_security_classification: security_classification
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF security_classification_item (AMBIGUOUS (SELECT LEVEL))

  applied_time_interval_assignment (*ENTITY*):
  ATTR:  role: time_interval_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [0 : ?] OF time_interval_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_time_interval: time_interval

  applied_usage_right (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF ir_usage_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_action: action

  approval (*ENTITY*):
  ATTR:  status: approval_status (AMBIGUOUS (SELECT LEVEL))
  ATTR:  level: label

  approval_person_organization (*ENTITY*):
  ATTR:  role: approval_role *** Multiple Select Case Sources ***
  ATTR:  person_organization: person_organization_select
  ATTR:  authorized_approval: approval

  approval_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_approval: approval
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  relating_approval: approval

  approval_status (*ENTITY*):
  ATTR:  name: label *** Multiple Select Case Sources ***

  assembly_component_usage_substitute (*ENTITY*):
  ATTR:  substitute: assembly_component_usage
  ATTR:  base: assembly_component_usage (AMBIGUOUS (SELECT LEVEL))
  ATTR:  definition: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  assignment_object_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating: assignment_object_select (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relation_type: STRING *** Multiple Select Case Sources ***
  ATTR:  related: assignment_object_select (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***

  attribute_language_assignment (*ENTITY*):
  ATTR:  role: classification_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF attribute_language_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  attribute_name: label *** Multiple Select Case Sources ***
  ATTR:  assigned_class: language

  breakdown_context (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  related_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  breakdown_element_realization (*ENTITY*):
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: (AMBIGUOUS (CASE LEVEL))

  breakdown_of (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  related_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  calendar_date (*ENTITY*):
  ATTR:  month_component: month_in_year_number
  ATTR:  day_component: day_in_month_number
  ATTR:  year_component: year_number

  certification (*ENTITY*):
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  kind: certification_type *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  change_element_sequence (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_group: change_element *** Multiple Select Case Sources ***
  ATTR:  previous: change_element
  ATTR:  next: change_element
  ATTR:  relating_group: change_element *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  change_group (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  characterized_class (*ENTITY*):
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: (AMBIGUOUS (CASE LEVEL))

  characterized_object (*ENTITY*):
  ATTR:  undirected_link: LIST [1 : ?] OF chained_representation_link
  ATTR:  diameter_tolerance: tolerance_value_or_limits_and_fits
  ATTR:  product_definitional: LOGICAL *** Multiple Select Case Sources ***
  ATTR:  depth_tolerance: tolerance_value
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  counterdrill_angle_tolerance: tolerance_value
  ATTR:  leaf: representation (AMBIGUOUS (SELECT LEVEL))
  ATTR:  item: representation_item *** Multiple Select Case Sources ***
  ATTR:  countersink_diameter: positive_length_measure_with_unit
  ATTR:  related_object: shape_feature_definition
  ATTR:  drilled_hole_depth: (AMBIGUOUS (CASE LEVEL))
  ATTR:  drilled_hole_diameter_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  countersink_angle: positive_plane_angle_measure_with_unit
  ATTR:  member: product_select
  ATTR:  placement: (AMBIGUOUS (CASE LEVEL))
  ATTR:  diameter: positive_length_measure_with_unit
  ATTR:  spotface: LIST [1 : ?] OF UNIQUE spotface_definition
  ATTR:  item_concept: product_class *** Multiple Select Case Sources ***
  ATTR:  counterdrill_angle: positive_plane_angle_measure_with_unit
  ATTR:  through_hole: (AMBIGUOUS (CASE LEVEL))
  ATTR:  countersink_angle_tolerance: tolerance_value
  ATTR:  rep: representation
  ATTR:  counterbore: (AMBIGUOUS (CASE LEVEL))
  ATTR:  drilled_hole_diameter: (AMBIGUOUS (CASE LEVEL))
  ATTR:  relating_object: shape_feature_definition
  ATTR:  root: representation *** Multiple Select Case Sources ***
  ATTR:  explicit_shape: SET [0 : ?] OF item_identified_representation_usage
  ATTR:  nodes: LIST [2 : ?] OF UNIQUE representation
  ATTR:  drilled_hole_depth_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  related_shape_aspect: contact_feature *** Multiple Select Case Sources ***
  ATTR:  spotface_radius: positive_length_measure_with_unit
  ATTR:  directed_link: LIST [1 : ?] OF representation_relationship
  ATTR:  spotface_radius_tolerance: tolerance_value
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  depth: positive_length_measure_with_unit
  ATTR:  countersink_diameter_tolerance: tolerance_value_or_limits_and_fits
  ATTR:  relating_shape_aspect: contact_feature *** Multiple Select Case Sources ***

  class (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  classified_item (*SELECT*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  status: STRING (AMBIGUOUS (SELECT LEVEL))
  ATTR:  defined_version: collection_version
  ATTR:  of_collection: collection
  ATTR:  make_or_buy: source
  ATTR:  documentation_ids: SET [1 : ?] OF document
  ATTR:  specification: SET [1 : ?] OF product_definition
  ATTR:  relating_product_definition: linear_array_placement_group_component
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  of_product: product
  ATTR:  frame_of_reference: (AMBIGUOUS (CASE LEVEL))
  ATTR:  definition: assembly_component (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition: linear_array_placement_group_component
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  formation: product_definition_formation

  configuration_design (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  design: configuration_design_item
  ATTR:  configuration: configuration_item *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  configuration_effectivity (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  configuration: configuration_design *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  usage: product_definition_relationship (AMBIGUOUS (SELECT LEVEL))

  configuration_item (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  purpose: label *** Multiple Select Case Sources ***
  ATTR:  item_concept_feature: SET [1 : ?] OF product_concept_feature_association
  ATTR:  item_concept: product_concept *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  configuration_item_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_configuration_item: configuration_item
  ATTR:  related_configuration_item: configuration_item
  ATTR:  name: label *** Multiple Select Case Sources ***

  context_dependent_unit (*ENTITY*):
  ATTR:  dimensions: dimensional_exponents
  ATTR:  associated_variable_environment: environment
  ATTR:  name: label *** Multiple Select Case Sources ***

  contract (*ENTITY*):
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  kind: contract_type *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  contract_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_contract: contract
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  related_contract: contract

  conversion_based_unit (*ENTITY*):
  ATTR:  dimensions: dimensional_exponents
  ATTR:  conversion_factor: measure_with_unit
  ATTR:  name: label *** Multiple Select Case Sources ***

  date_and_time (*ENTITY*):
  ATTR:  date_component: date
  ATTR:  time_component: local_time

  date_and_time_assignment (*ENTITY*):
  ATTR:  role: date_time_role *** Multiple Select Case Sources ***
  ATTR:  items: (AMBIGUOUS (CASE LEVEL))
  ATTR:  assigned_date_and_time: date_and_time

  date_assignment (*ENTITY*):
  ATTR:  assigned_date: date
  ATTR:  role: date_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF date_item (AMBIGUOUS (SELECT LEVEL))

  definitional_representation_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  transformation_operator: link_motion_transformation *** Multiple Select Case Sources ***
  ATTR:  item: geometric_representation_item *** Multiple Select Case Sources ***
  ATTR:  rep_1: representation_or_representation_reference *** Multiple Select Case Sources ***
  ATTR:  rep_2: representation_or_representation_reference *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  derived_unit (*ENTITY*):
  ATTR:  elements: SET [1 : ?] OF derived_unit_element
  ATTR:  name: label *** Multiple Select Case Sources ***

  descriptive_representation_item (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  directed_action (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  directive: action_directive
  ATTR:  chosen_method: action_method
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  directed_action_assignment (*ENTITY*):
  ATTR:  assigned_directed_action: directed_action
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF action_request_item (AMBIGUOUS (SELECT LEVEL))

  document_file (*ENTITY*):
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  kind: document_type *** Multiple Select Case Sources ***
  ATTR:  representation_types: SET [0 : ?] OF document_representation_type
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: (AMBIGUOUS (CASE LEVEL))

  document_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_document: document
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  related_document: document

  document_type (*ENTITY*):
  ATTR:  product_data_type: label

  effectivity (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  effectivity_lot_id: identifier
  ATTR:  effectivity_end_date: date_time_or_event_occurrence
  ATTR:  effectivity_lot_size: measure_with_unit
  ATTR:  effectivity_period: time_interval
  ATTR:  effectivity_start_date: date_time_or_event_occurrence
  ATTR:  effectivity_end_id: identifier
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  effectivity_start_id: identifier
  ATTR:  configuration: configuration_design *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  usage: product_definition_relationship (AMBIGUOUS (SELECT LEVEL))

  effectivity_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_effectivity: effectivity
  ATTR:  relating_effectivity: effectivity
  ATTR:  name: label *** Multiple Select Case Sources ***

  envelope (*ENTITY*):
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  frame_of_reference: SET [1 : ?] OF product_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: (AMBIGUOUS (CASE LEVEL))

  envelope_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product: product *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  relating_product: product *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  evaluated_characteristic (*ENTITY*):
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  items: SET [1 : ?] OF representation_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  context_of_items: representation_context
  ATTR:  rep_1: representation_or_representation_reference *** Multiple Select Case Sources ***
  ATTR:  rep_2: representation_or_representation_reference *** Multiple Select Case Sources ***
  ATTR:  name: (AMBIGUOUS (CASE LEVEL))

  event_occurrence (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  base_event: event_occurrence
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  offset: time_measure_with_unit *** Multiple Select Case Sources ***

  event_occurrence_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_event: event_occurrence
  ATTR:  relating_event: event_occurrence
  ATTR:  name: label *** Multiple Select Case Sources ***

  evidence (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF evidence_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_group: group *** Multiple Select Case Sources ***

  executed_action (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  directive: action_directive
  ATTR:  chosen_method: action_method
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  feature_definition (*ENTITY*):
  ATTR:  diameter_tolerance: tolerance_value_or_limits_and_fits
  ATTR:  depth_tolerance: tolerance_value
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  counterdrill_angle_tolerance: tolerance_value
  ATTR:  countersink_diameter: positive_length_measure_with_unit
  ATTR:  drilled_hole_depth: (AMBIGUOUS (CASE LEVEL))
  ATTR:  drilled_hole_diameter_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  countersink_angle: positive_plane_angle_measure_with_unit
  ATTR:  placement: (AMBIGUOUS (CASE LEVEL))
  ATTR:  diameter: positive_length_measure_with_unit
  ATTR:  spotface: LIST [1 : ?] OF UNIQUE spotface_definition
  ATTR:  counterdrill_angle: positive_plane_angle_measure_with_unit
  ATTR:  through_hole: (AMBIGUOUS (CASE LEVEL))
  ATTR:  countersink_angle_tolerance: tolerance_value
  ATTR:  counterbore: (AMBIGUOUS (CASE LEVEL))
  ATTR:  drilled_hole_diameter: (AMBIGUOUS (CASE LEVEL))
  ATTR:  explicit_shape: SET [0 : ?] OF item_identified_representation_usage
  ATTR:  drilled_hole_depth_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  spotface_radius: positive_length_measure_with_unit
  ATTR:  spotface_radius_tolerance: tolerance_value
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  depth: positive_length_measure_with_unit
  ATTR:  countersink_diameter_tolerance: tolerance_value_or_limits_and_fits

  general_feature (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  general_property (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  general_property_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_property: general_property
  ATTR:  related_property: general_property
  ATTR:  name: label *** Multiple Select Case Sources ***

  generic_property_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating: generic_property_definition_select (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relation_type: STRING *** Multiple Select Case Sources ***
  ATTR:  related: generic_property_definition_select (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  group (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  items: SET [0 : ?] OF product_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  of_shape: mated_part_relationship *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  assigned_group: mated_part_relationship *** Multiple Select Case Sources ***
  ATTR:  definition: product_definition_usage_relationship (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  group_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_group: group *** Multiple Select Case Sources ***
  ATTR:  previous: change_element
  ATTR:  element: change_element
  ATTR:  next: change_element
  ATTR:  relating_group: group *** Multiple Select Case Sources ***
  ATTR:  composition: change_group
  ATTR:  name: label *** Multiple Select Case Sources ***

  identification_assignment (*ENTITY*):
  ATTR:  role: identification_role *** Multiple Select Case Sources ***
  ATTR:  items: (AMBIGUOUS (CASE LEVEL))
  ATTR:  assigned_id: identifier
  ATTR:  source: external_source (AMBIGUOUS (SELECT LEVEL))

  identification_assignment_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_identification_assignment: identification_assignment
  ATTR:  related_identification_assignment: identification_assignment
  ATTR:  name: label *** Multiple Select Case Sources ***

  information_right (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  consequence: text
  ATTR:  name: label *** Multiple Select Case Sources ***

  information_usage_right (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  consequence: text
  ATTR:  name: label *** Multiple Select Case Sources ***

  interface_connection (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  interface_connector_as_planned (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  of_product: product

  interface_connector_as_realized (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  of_product: product

  interface_connector_design (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  of_product: product

  interface_connector_design_to_planned (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition_formation: interface_connector_as_planned *** Multiple Select Case Sources ***
  ATTR:  relating_product_definition_formation: interface_connector_design *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  interface_connector_design_to_realized (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition_formation: interface_connector_as_realized *** Multiple Select Case Sources ***
  ATTR:  relating_product_definition_formation: interface_connector_design *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  interface_connector_occurrence (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  interface_connector_planned_to_realized (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition_formation: interface_connector_as_realized *** Multiple Select Case Sources ***
  ATTR:  relating_product_definition_formation: interface_connector_as_planned *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  interface_definition_connection (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  related_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  interface_definition_for (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  related_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  in_zone (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  language (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  link_motion_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  transformation_operator: link_motion_transformation *** Multiple Select Case Sources ***
  ATTR:  item: geometric_representation_item *** Multiple Select Case Sources ***
  ATTR:  rep_1: link_or_shape_representation *** Multiple Select Case Sources ***
  ATTR:  rep_2: link_motion_representation_along_path *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  local_time (*ENTITY*):
  ATTR:  second_component: second_in_minute
  ATTR:  zone: coordinated_universal_time_offset
  ATTR:  minute_component: minute_in_hour
  ATTR:  hour_component: hour_in_day

  location (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  location_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_location: location
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  related_location: location
  ATTR:  name: label *** Multiple Select Case Sources ***

  material_designation (*ENTITY*):
  ATTR:  definitions: SET [1 : ?] OF characterized_definition
  ATTR:  name: label *** Multiple Select Case Sources ***

  material_designation_characterization (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  designation: material_designation
  ATTR:  property: characterized_material_property (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  measure_qualification (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  qualifiers: SET [1 : ?] OF value_qualifier *** Multiple Select Case Sources ***
  ATTR:  qualified_measure: measure_with_unit
  ATTR:  name: label *** Multiple Select Case Sources ***

  measure_representation_item (*ENTITY*):
  ATTR:  unit_component: unit
  ATTR:  value_component: measure_value *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  measure_with_unit (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  unit_component: unit
  ATTR:  value_component: measure_value *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  message_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_message: structured_message
  ATTR:  related_product: structured_message *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  relating_message: structured_message
  ATTR:  relating_product: structured_message *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  multi_language_attribute_assignment (*ENTITY*):
  ATTR:  attribute_value: attribute_type
  ATTR:  translation_language: language
  ATTR:  role: attribute_value_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF multi_language_attribute_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  attribute_name: label *** Multiple Select Case Sources ***
  ATTR:  language_indication: SET [1 : 1] OF attribute_language_assignment

  named_unit (*ENTITY*):
  ATTR:  dimensions: dimensional_exponents
  ATTR:  conversion_factor: measure_with_unit
  ATTR:  prefix: si_prefix
  ATTR:  associated_variable_environment: environment
  ATTR:  name: (AMBIGUOUS (CASE LEVEL))

  organization (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  organizational_address (*ENTITY*):
  ATTR:  people: SET [1 : 1] OF person *** Multiple Select Case Sources ***
  ATTR:  street: label
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  organizations: SET [1 : ?] OF organization *** Multiple Select Case Sources ***
  ATTR:  telex_number: label
  ATTR:  facsimile_number: label
  ATTR:  region: label
  ATTR:  electronic_mail_address: label
  ATTR:  street_number: label
  ATTR:  internal_location: label
  ATTR:  postal_code: label
  ATTR:  postal_box: label
  ATTR:  url: identifier
  ATTR:  town: label
  ATTR:  country: label
  ATTR:  telephone_number: label
  ATTR:  name: label *** Multiple Select Case Sources ***

  organizational_project (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  responsible_organizations: SET [1 : ?] OF organization
  ATTR:  name: label *** Multiple Select Case Sources ***

  organizational_project_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_organizational_project: organizational_project
  ATTR:  related_organizational_project: organizational_project
  ATTR:  name: label *** Multiple Select Case Sources ***

  organization_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_organization: organization
  ATTR:  related_organization: organization
  ATTR:  name: label *** Multiple Select Case Sources ***

  person (*ENTITY*):
  ATTR:  middle_names: LIST [1 : ?] OF label
  ATTR:  suffix_titles: LIST [1 : ?] OF label
  ATTR:  last_name: label
  ATTR:  first_name: label
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  prefix_titles: LIST [1 : ?] OF label

  person_and_organization (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  the_person: person
  ATTR:  the_organization: organization
  ATTR:  name: label *** Multiple Select Case Sources ***

  person_and_organization_address (*ENTITY*):
  ATTR:  people: SET [1 : 1] OF person *** Multiple Select Case Sources ***
  ATTR:  street: label
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  organizations: SET [1 : 1] OF organization *** Multiple Select Case Sources ***
  ATTR:  telex_number: label
  ATTR:  facsimile_number: label
  ATTR:  region: label
  ATTR:  electronic_mail_address: label
  ATTR:  street_number: label
  ATTR:  internal_location: label
  ATTR:  postal_code: label
  ATTR:  postal_box: label
  ATTR:  url: identifier
  ATTR:  town: label
  ATTR:  country: label
  ATTR:  telephone_number: label
  ATTR:  name: label *** Multiple Select Case Sources ***

  plus_minus_tolerance (*ENTITY*):
  ATTR:  range: tolerance_method_definition
  ATTR:  toleranced_dimension: dimensional_characteristic

  process_operation (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  consequence: text
  ATTR:  name: label *** Multiple Select Case Sources ***

  process_plan (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  chosen_method: action_method
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  process_product_association (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  defined_product: characterized_product_definition
  ATTR:  process: product_definition_process
  ATTR:  name: label *** Multiple Select Case Sources ***

  product (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  frame_of_reference: SET [1 : ?] OF product_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_concept (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  market_context: product_concept_context
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_concept_context (*ENTITY*):
  ATTR:  market_segment_type: label
  ATTR:  frame_of_reference: application_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_concept_feature (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  condition: concept_feature_relationship_with_condition
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_concept_feature_association (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  concept: product_concept
  ATTR:  feature: product_concept_feature
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_concept_feature_category (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_concept_feature_category_usage (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF category_usage_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_group: product_concept_feature_category *** Multiple Select Case Sources ***

  product_concept_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_product_concept: product_concept
  ATTR:  related_product_concept: product_concept
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_definition (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  defined_version: collection_version
  ATTR:  documentation_ids: SET [1 : ?] OF document
  ATTR:  relating_product_definition: linear_array_placement_group_component *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  frame_of_reference: product_definition_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  definition: assembly_component (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition: linear_array_placement_group_component *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  formation: product_definition_formation

  product_definition_context (*ENTITY*):
  ATTR:  items: SET [1 : ?] OF instance_usage_context_select (AMBIGUOUS (SELECT LEVEL))
  ATTR:  life_cycle_stage: label
  ATTR:  frame_of_reference: application_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_definition_formation (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  status: STRING (AMBIGUOUS (SELECT LEVEL))
  ATTR:  of_collection: collection
  ATTR:  make_or_buy: source
  ATTR:  specification: SET [1 : ?] OF product_definition
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  of_product: product

  product_definition_formation_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  realized_product: product_definition_formation
  ATTR:  related_product_definition_formation: product_definition_formation *** Multiple Select Case Sources ***
  ATTR:  product_design_version: product_definition_formation
  ATTR:  relating_product_definition_formation: product_definition_formation *** Multiple Select Case Sources ***
  ATTR:  relating_version: collection_version
  ATTR:  relation_type: STRING *** Multiple Select Case Sources ***
  ATTR:  planned_product: product_definition_formation
  ATTR:  successor: collection_version
  ATTR:  individual_product: product_definition_formation *** Multiple Select Case Sources ***
  ATTR:  related_version: collection_version
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  predecessor: collection_version

  product_definition_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  leaf: product_definition_or_reference (AMBIGUOUS (SELECT LEVEL))
  ATTR:  next_usage: next_assembly_usage_occurrence
  ATTR:  reference_designator: identifier
  ATTR:  constituent_amount: SET [1 : ?] OF characterized_product_composition_value
  ATTR:  upper_usage: assembly_component_usage
  ATTR:  ranking_rationale: text
  ATTR:  quantity: (AMBIGUOUS (CASE LEVEL))
  ATTR:  class: label
  ATTR:  items: SET [0 : ?] OF product_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  of_shape: mated_part_relationship *** Multiple Select Case Sources ***
  ATTR:  ranking: INTEGER
  ATTR:  composition_basis: label
  ATTR:  determination_method: text
  ATTR:  root: product_definition *** Multiple Select Case Sources ***
  ATTR:  relating_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  product_definition_occurrence_id: identifier
  ATTR:  assigned_group: mated_part_relationship *** Multiple Select Case Sources ***
  ATTR:  location: LIST [1 : ?] OF UNIQUE next_assembly_usage_occurrence (AMBIGUOUS (SELECT LEVEL))
  ATTR:  definition: mated_part_relationship (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_definition_usage (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  leaf: product_definition_or_reference (AMBIGUOUS (SELECT LEVEL))
  ATTR:  next_usage: next_assembly_usage_occurrence
  ATTR:  reference_designator: identifier
  ATTR:  upper_usage: assembly_component_usage
  ATTR:  ranking_rationale: text
  ATTR:  quantity: (AMBIGUOUS (CASE LEVEL))
  ATTR:  ranking: INTEGER
  ATTR:  root: product_definition *** Multiple Select Case Sources ***
  ATTR:  relating_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  product_definition_occurrence_id: identifier
  ATTR:  location: LIST [1 : ?] OF UNIQUE next_assembly_usage_occurrence (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_definition_usage_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating: product_definition_usage (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related: product_definition_usage (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_design_to_individual (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  individual_product: product *** Multiple Select Case Sources ***
  ATTR:  related_product: product *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  relating_product: product *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  product_design: product

  product_design_version_to_individual (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition_formation: product_definition_formation *** Multiple Select Case Sources ***
  ATTR:  product_design_version: product_definition_formation
  ATTR:  relating_product_definition_formation: product_definition_formation *** Multiple Select Case Sources ***
  ATTR:  individual_product: product_definition_formation *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_group (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_group_membership (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  member: product_select
  ATTR:  assigned_group: group *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_group_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_group: group *** Multiple Select Case Sources ***
  ATTR:  relating_group: group *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_process_plan (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  chosen_method: action_method
  ATTR:  identification: identifier *** Multiple Select Case Sources ***
  ATTR:  product_definitions: SET [1 : ?] OF process_product_association
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_message: structured_message
  ATTR:  related_collection: collection
  ATTR:  individual_product: product *** Multiple Select Case Sources ***
  ATTR:  related_product: product *** Multiple Select Case Sources ***
  ATTR:  relating_collection: collection
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  relating_message: structured_message
  ATTR:  relating_product: product *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  product_design: product

  property_definition (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  items: SET [0 : ?] OF product_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  of_shape: mated_part_relationship *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  representation_relation: kinematic_property_definition_representation
  ATTR:  assigned_group: mated_part_relationship *** Multiple Select Case Sources ***
  ATTR:  definition: characterized_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  property_definition_representation (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  dependent_environment: data_environment
  ATTR:  used_representation: representation
  ATTR:  base: (AMBIGUOUS (CASE LEVEL))
  ATTR:  definition: represented_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  representation (*ENTITY*):
  ATTR:  criteria_inspected: (AMBIGUOUS (CASE LEVEL))
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  controlling_joints: (AMBIGUOUS (CASE LEVEL))
  ATTR:  character_box: planar_extent
  ATTR:  parent: (AMBIGUOUS (CASE LEVEL))
  ATTR:  cm_link: variational_current_representation_relationship
  ATTR:  items: SET [1 : ?] OF representation_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  outlines: SET [1 : ?] OF annotation_fill_area
  ATTR:  required_general_accuracy: SET [1 : ?] OF shape_measurement_accuracy
  ATTR:  associated_shape_representation: SET [0 : 1] OF kinematic_link_representation_association
  ATTR:  baseline_ratio: ratio_measure
  ATTR:  revision_identifier: identifier
  ATTR:  size: presentation_size
  ATTR:  tessellation_accuracy_parameters: SET [1 : ?] OF tessellation_accuracy_parameter_item
  ATTR:  represented_joints: SET [1 : ?] OF kinematic_joint
  ATTR:  box_height: length_measure
  ATTR:  strokes: SET [1 : ?] OF curve
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  applied_general_accuracy: SET [1 : ?] OF shape_measurement_accuracy
  ATTR:  context_of_items: representation_context
  ATTR:  neutral_sketch_semantics: curves_or_area
  ATTR:  represented_link: kinematic_link
  ATTR:  represented_topology: kinematic_topology_representation_select
  ATTR:  uncertainty: SET [1 : ?] OF uncertainty_measure_with_unit *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  represented_mechanism: mechanism_representation

  representation_context (*ENTITY*):
  ATTR:  context_identifier: identifier
  ATTR:  representations_in_context: SET [1 : ?] OF representation
  ATTR:  units: SET [1 : ?] OF unit
  ATTR:  coordinate_space_dimension: dimension_count
  ATTR:  context_type: text
  ATTR:  parameter_unit: unit
  ATTR:  uncertainty: SET [1 : ?] OF uncertainty_measure_with_unit *** Multiple Select Case Sources ***

  representation_item (*ENTITY*):
  ATTR:  constant_attenuation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  knot_v_upper: (AMBIGUOUS (CASE LEVEL))
  ATTR:  lower_limit_pitch: (AMBIGUOUS (CASE LEVEL))
  ATTR:  range_on_surface_1: rectangular_trimmed_surface
  ATTR:  offset_distance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  major_radius: (AMBIGUOUS (CASE LEVEL))
  ATTR:  ne: (AMBIGUOUS (CASE LEVEL))
  ATTR:  style_context: LIST [1 : ?] OF style_context_select
  ATTR:  range_on_surface_2: rectangular_trimmed_surface
  ATTR:  slot_width: positive_length_measure
  ATTR:  end_exit_faces: LIST [2 : 2] OF SET [0 : ?] OF face_surface
  ATTR:  concentration_exponent: REAL
  ATTR:  indirectly_picked_items: SET [1 : ?] OF representation_item
  ATTR:  range_on_pair_curve: trimmed_curve
  ATTR:  replicate_count: positive_integer
  ATTR:  rotation_angle: plane_angle_measure
  ATTR:  elements: (AMBIGUOUS (CASE LEVEL))
  ATTR:  cfs_faces: SET [1 : ?] OF face
  ATTR:  container: SET [1 : ?] OF presentation_view
  ATTR:  ctriangles: LIST [1 : ?] OF LIST [10 : 10] OF INTEGER
  ATTR:  radius_list: LIST [2 : ?] OF positive_length_measure
  ATTR:  closed_interpolation: LOGICAL
  ATTR:  reference_to_curve: (AMBIGUOUS (CASE LEVEL))
  ATTR:  ltx: (AMBIGUOUS (CASE LEVEL))
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  accuracy_types: LIST [0 : ?] OF a3m_accuracy_type_name
  ATTR:  actual_point_on_curve_1: (AMBIGUOUS (CASE LEVEL))
  ATTR:  angular_spacing: plane_angle_measure
  ATTR:  offset1: length_measure
  ATTR:  actual_point_on_curve_2: point_on_curve
  ATTR:  floor_blend_radius: non_negative_length_measure
  ATTR:  generalised_major_radius: positive_length_measure
  ATTR:  shape_clipping: (AMBIGUOUS (CASE LEVEL))
  ATTR:  u_b_splines: (AMBIGUOUS (CASE LEVEL))
  ATTR:  second_trim_condition: (AMBIGUOUS (CASE LEVEL))
  ATTR:  offset2: length_measure
  ATTR:  no_of_bytes: INTEGER
  ATTR:  curve_1: curve
  ATTR:  major_orientation_basis: axis2_placement_3d
  ATTR:  base_element: generalized_surface_select
  ATTR:  curve_2: curve
  ATTR:  contents: SET [1 : ?] OF draughting_callout_element
  ATTR:  u_multiplicities: (AMBIGUOUS (CASE LEVEL))
  ATTR:  vsense: BOOLEAN
  ATTR:  weights_data: (AMBIGUOUS (CASE LEVEL))
  ATTR:  start_of_next_hatch_line: one_direction_repeat_factor
  ATTR:  curve_form: b_spline_curve_form
  ATTR:  over_ridden_style: styled_item
  ATTR:  measured_value_for_inspected_element: equivalence_measured_value_select
  ATTR:  transformation_operator: kinematic_pair *** Multiple Select Case Sources ***
  ATTR:  control_points_list: (AMBIGUOUS (CASE LEVEL))
  ATTR:  item: (AMBIGUOUS (CASE LEVEL))
  ATTR:  face1: (AMBIGUOUS (CASE LEVEL))
  ATTR:  radial_alignment: BOOLEAN
  ATTR:  hatch_line_angle: plane_angle_measure
  ATTR:  constrained_elements: SET [1 : ?] OF representation_item
  ATTR:  tangent_contact: tangent_contact_type
  ATTR:  actual_orientation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  segment_radii: LIST [1 : segments] OF positive_length_measure
  ATTR:  face2: (AMBIGUOUS (CASE LEVEL))
  ATTR:  left_offset: BOOLEAN
  ATTR:  patches: SET [1 : ?] OF surface_patch
  ATTR:  repeat_factor: vector
  ATTR:  centre: (AMBIGUOUS (CASE LEVEL))
  ATTR:  row_spacing: length_measure
  ATTR:  tip_radius: non_negative_length_measure
  ATTR:  statistical_values: (AMBIGUOUS (CASE LEVEL))
  ATTR:  detected_difference_types: LIST [0 : ?] OF a3m_detected_difference_type_name
  ATTR:  hatch_line_appearance: curve_style
  ATTR:  swept_curve: curve
  ATTR:  flat_curvature_radius_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  arc_length_distance_factor: REAL
  ATTR:  bounds: (AMBIGUOUS (CASE LEVEL))
  ATTR:  role: (AMBIGUOUS (CASE LEVEL))
  ATTR:  parent_pt: point
  ATTR:  offset_direction_constrained: BOOLEAN
  ATTR:  basis_curve: (AMBIGUOUS (CASE LEVEL))
  ATTR:  thickness: length_measure
  ATTR:  n_u: INTEGER
  ATTR:  reference_surface: (AMBIGUOUS (CASE LEVEL))
  ATTR:  direction_of_axis: direction
  ATTR:  tee_section_width: positive_length_measure
  ATTR:  fillet_radius: non_negative_length_measure
  ATTR:  scanner_location: axis2_placement_3d
  ATTR:  n_v: INTEGER
  ATTR:  first_trim_intent: trim_intent
  ATTR:  operator: boolean_operator
  ATTR:  scale: (AMBIGUOUS (CASE LEVEL))
  ATTR:  subsketch_elements: SET [1 : ?] OF sketch_element_select
  ATTR:  outer_bound: (AMBIGUOUS (CASE LEVEL))
  ATTR:  x_scale: positive_ratio_measure
  ATTR:  scanned_points: SET [1 : ?] OF scanned_data_item
  ATTR:  normals: (AMBIGUOUS (CASE LEVEL))
  ATTR:  enclosure: box_domain
  ATTR:  linearly_independent: (AMBIGUOUS (CASE LEVEL))
  ATTR:  x_offset: (AMBIGUOUS (CASE LEVEL))
  ATTR:  fixed_attributes: SET [1 : ?] OF instance_attribute_reference
  ATTR:  parameter_description: text
  ATTR:  comparing_specified_elements: SET [1 : ?] OF inspected_equivalence_element_select
  ATTR:  second_trim_intent: trim_intent
  ATTR:  shape_criteria: SET [1 : ?] OF a3ma_assembly_and_shape_criteria_relationship
  ATTR:  second_operand: boolean_operand
  ATTR:  trim_1: SET [1 : 2] OF trimming_select
  ATTR:  range_on_curve_2: trimmed_curve
  ATTR:  inspection_result: (AMBIGUOUS (CASE LEVEL))
  ATTR:  inner_radius: positive_length_measure
  ATTR:  protrusion_height: positive_length_measure
  ATTR:  turn_angle: plane_angle_measure
  ATTR:  region_colour: colour
  ATTR:  trim_2: SET [1 : 2] OF trimming_select
  ATTR:  range_on_curve_1: trimmed_curve
  ATTR:  path: text_path (AMBIGUOUS (SELECT LEVEL))
  ATTR:  tiles: SET [1 : ?] OF fill_area_style_tile_shape_select
  ATTR:  v_degree: (AMBIGUOUS (CASE LEVEL))
  ATTR:  inspected_elements: SET [1 : ?] OF inspected_element_select
  ATTR:  locally_refined_spline_type: (AMBIGUOUS (CASE LEVEL))
  ATTR:  v_multiplicities: (AMBIGUOUS (CASE LEVEL))
  ATTR:  boundaries: (AMBIGUOUS (CASE LEVEL))
  ATTR:  geometric_link: (AMBIGUOUS (CASE LEVEL))
  ATTR:  row_count: positive_integer
  ATTR:  pocket_length: positive_length_measure
  ATTR:  target: symbol_target
  ATTR:  external_point: point
  ATTR:  gear_ratio: REAL
  ATTR:  external_groove: BOOLEAN
  ATTR:  knots: (AMBIGUOUS (CASE LEVEL))
  ATTR:  r_y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  replicated_element: modified_solid_with_placed_configuration
  ATTR:  a: length_measure
  ATTR:  parent_volume_set: connected_volume_set
  ATTR:  r_x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  pinion_radius: (AMBIGUOUS (CASE LEVEL))
  ATTR:  angle_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  select_outer: BOOLEAN
  ATTR:  minor_radius: (AMBIGUOUS (CASE LEVEL))
  ATTR:  b: length_measure
  ATTR:  pnt: cartesian_point
  ATTR:  c: length_measure
  ATTR:  r_z: (AMBIGUOUS (CASE LEVEL))
  ATTR:  v_smoothness: transition_code
  ATTR:  scanner_info: SET [1 : ?] OF scanner_property
  ATTR:  silhouetted_model: surface_or_solid_model
  ATTR:  sources: SET [1 : ?] OF light_source
  ATTR:  sense_agreement: BOOLEAN
  ATTR:  edge_element: edge
  ATTR:  basis_volume: volume
  ATTR:  inspected_instances: (AMBIGUOUS (CASE LEVEL))
  ATTR:  swept_face: face_surface
  ATTR:  actual_translation_y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  actual_translation_x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  link_representation_associations: SET [1 : ?] OF pair_representation_relationship
  ATTR:  upper_limit_actual_translation_z: length_measure
  ATTR:  topological_link: (AMBIGUOUS (CASE LEVEL))
  ATTR:  actual_translation_z: length_measure
  ATTR:  lower_limit_rack_displacement: length_measure
  ATTR:  loop_vertex: vertex
  ATTR:  upper_limit_actual_translation_x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  t_start: parameter_value
  ATTR:  pts_per_sublist: INTEGER
  ATTR:  upper_limit_actual_translation_y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  end_conditions: LIST [2 : 2] OF blend_end_condition_select
  ATTR:  v_upper: (AMBIGUOUS (CASE LEVEL))
  ATTR:  orientation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  end_param: (AMBIGUOUS (CASE LEVEL))
  ATTR:  axis_position: axis1_placement
  ATTR:  sbwm_boundary: SET [1 : ?] OF shell
  ATTR:  distance_attenuation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  knot_values: spline_knot_values
  ATTR:  items: (AMBIGUOUS (CASE LEVEL))
  ATTR:  p: (AMBIGUOUS (CASE LEVEL))
  ATTR:  pitch: length_measure
  ATTR:  degree: (AMBIGUOUS (CASE LEVEL))
  ATTR:  representative_measured_value: (AMBIGUOUS (CASE LEVEL))
  ATTR:  permanent_aggregate_id: identifier
  ATTR:  v_closed: (AMBIGUOUS (CASE LEVEL))
  ATTR:  r: (AMBIGUOUS (CASE LEVEL))
  ATTR:  tiling_pattern: two_direction_repeat_factor
  ATTR:  pcurve_reference: pcurve
  ATTR:  compared_specified_elements: SET [1 : ?] OF inspected_equivalence_element_select
  ATTR:  applies_to_pair: kinematic_pair
  ATTR:  u: (AMBIGUOUS (CASE LEVEL))
  ATTR:  actual_translation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_limit_actual_rotation_1: plane_angle_measure
  ATTR:  coordinates: (AMBIGUOUS (CASE LEVEL))
  ATTR:  conical_transitions: SET [1 : ?] OF conical_stepped_hole_transition
  ATTR:  report_value: measure_with_unit
  ATTR:  symbol: annotation_symbol_occurrence
  ATTR:  x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  u1: parameter_value
  ATTR:  y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  bevel: plane_angle_measure
  ATTR:  first_trim_condition: (AMBIGUOUS (CASE LEVEL))
  ATTR:  inner_boundary: compound_inner_area_boundary
  ATTR:  z: (AMBIGUOUS (CASE LEVEL))
  ATTR:  closed_path: LOGICAL
  ATTR:  criterion_inspected: (AMBIGUOUS (CASE LEVEL))
  ATTR:  u2: parameter_value
  ATTR:  measured_value: measured_value_select
  ATTR:  point_coordinates: LIST [1 : ?] OF LIST [3 : 3] OF REAL
  ATTR:  skewness: length_measure
  ATTR:  tiling_scale: positive_ratio_measure
  ATTR:  volume_geometry: volume
  ATTR:  agreement_flag: (AMBIGUOUS (CASE LEVEL))
  ATTR:  protrusion_draft_angle: plane_angle_measure
  ATTR:  local_origin: cartesian_point
  ATTR:  using_sketch: (AMBIGUOUS (CASE LEVEL))
  ATTR:  reference_elements: SET [0 : ?] OF representation_item
  ATTR:  scl: REAL
  ATTR:  qualifiers: SET [1 : ?] OF value_qualifier *** Multiple Select Case Sources ***
  ATTR:  path_element: path
  ATTR:  plane_of_point: plane
  ATTR:  pattern_start: cartesian_point
  ATTR:  transform_item_1: rigid_placement
  ATTR:  test_point_distance_tolerance: length_measure
  ATTR:  protrusion_length: positive_length_measure
  ATTR:  constraining_expression: expression
  ATTR:  w_knots: (AMBIGUOUS (CASE LEVEL))
  ATTR:  second_rotation_angle: plane_angle_measure
  ATTR:  colour_type: colour_type_enum
  ATTR:  point_of_reference_hatch_line: cartesian_point
  ATTR:  comparing_elements: SET [1 : ?] OF inspected_equivalence_element_select
  ATTR:  transform_item_2: rigid_placement
  ATTR:  point_list: (AMBIGUOUS (CASE LEVEL))
  ATTR:  lower_limit_second_rotation: plane_angle_measure
  ATTR:  pocket_radius: positive_length_measure
  ATTR:  edge_list: LIST [1 : ?] OF UNIQUE oriented_edge
  ATTR:  size_in_x: length_measure
  ATTR:  radius_second_link: length_measure
  ATTR:  thickened_face_list: LIST [1 : ?] OF SET [1 : ?] OF face_surface
  ATTR:  upper_limit_first_rotation: plane_angle_measure
  ATTR:  criterion_report: data_equivalence_inspection_criterion_report
  ATTR:  size_in_y: length_measure
  ATTR:  corner_radius: non_negative_length_measure
  ATTR:  actual_point_on_curve: point_on_curve
  ATTR:  intensities: LIST [1 : ?] OF REAL
  ATTR:  lower_limit_actual_rotation_1: plane_angle_measure
  ATTR:  parent_surface: surface
  ATTR:  y_scale: positive_ratio_measure
  ATTR:  configured_mechanism: mechanism_representation
  ATTR:  actual_placement: axis2_placement_3d
  ATTR:  lower_limit_actual_translation_z: length_measure
  ATTR:  usense: BOOLEAN
  ATTR:  radius: (AMBIGUOUS (CASE LEVEL))
  ATTR:  distance_from_start: positive_length_measure
  ATTR:  lower_limit_actual_translation_y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  surface_form: b_spline_surface_form
  ATTR:  lower_limit_actual_translation_x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  annotated_curve: annotation_curve_occurrence
  ATTR:  semi_imag_axis: positive_length_measure
  ATTR:  equivalent_point: cartesian_point
  ATTR:  phi: plane_angle_measure
  ATTR:  the_callout: draughting_callout
  ATTR:  scaling_factors: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_limit_roll: (AMBIGUOUS (CASE LEVEL))
  ATTR:  distance_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  scanner_identification: label
  ATTR:  omitted_instances: (AMBIGUOUS (CASE LEVEL))
  ATTR:  distance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  slot_length: positive_length_measure
  ATTR:  knot_multiplicities: LIST [2 : ?] OF INTEGER
  ATTR:  rationale: (AMBIGUOUS (CASE LEVEL))
  ATTR:  judgement: (AMBIGUOUS (CASE LEVEL))
  ATTR:  position: (AMBIGUOUS (CASE LEVEL))
  ATTR:  ratio: (AMBIGUOUS (CASE LEVEL))
  ATTR:  parent_face: face
  ATTR:  right_offset_distance: positive_length_measure
  ATTR:  interference_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  transformation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  generalised_minor_radius: positive_length_measure
  ATTR:  lower_limit_yaw: (AMBIGUOUS (CASE LEVEL))
  ATTR:  v2: parameter_value
  ATTR:  groove_width: positive_length_measure
  ATTR:  line_spacing: positive_length_measure
  ATTR:  tree_root_expression: csg_select
  ATTR:  point_parameter: parameter_value
  ATTR:  basis_edge_curve: edge_curve
  ATTR:  pocket_width: positive_length_measure
  ATTR:  minor_orientation_basis: axis2_placement_3d
  ATTR:  base_curve: curve
  ATTR:  fixed_constituent: representative_shape_representation
  ATTR:  v1: parameter_value
  ATTR:  colour_indices: LIST [1 : ?] OF LIST [3 : 3] OF INTEGER
  ATTR:  helical_angle: plane_angle_measure
  ATTR:  literal: presentable_text
  ATTR:  clothoid_constant: length_measure
  ATTR:  pair_surface: surface
  ATTR:  binary_value: BINARY
  ATTR:  parent_face_set: connected_face_set
  ATTR:  u_closed: (AMBIGUOUS (CASE LEVEL))
  ATTR:  delineation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  fill_style_target: point
  ATTR:  positive_side: BOOLEAN
  ATTR:  styled_curve: annotation_curve_occurrence
  ATTR:  axis3: direction
  ATTR:  picked_items: SET [1 : ?] OF representation_item
  ATTR:  coloured_coordinate_values: coordinates_list
  ATTR:  axis2: direction
  ATTR:  axis1: direction
  ATTR:  arc_length_separation_factor: REAL
  ATTR:  open_shell_element: open_shell
  ATTR:  statistical_value: (AMBIGUOUS (CASE LEVEL))
  ATTR:  auxiliary_elements: SET [0 : ?] OF auxiliary_geometric_representation_item
  ATTR:  base_solid: base_solid_select
  ATTR:  deleted_face_set: SET [1 : ?] OF face_surface
  ATTR:  drafted_edges: LIST [2 : ?] OF SET [1 : ?] OF edge_curve
  ATTR:  axis_line: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_index_on_control_points: INTEGER
  ATTR:  vertex_shell_extent: vertex_loop
  ATTR:  assessment_threshold_2: a3ma_equivalence_criterion_assessment_threshold_relationship
  ATTR:  curvature_ratio_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  compared_element_types: LIST [1 : ?] OF a3m_element_type_name
  ATTR:  u_knots: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_index_on_knots: INTEGER
  ATTR:  offset_angle: positive_plane_angle_measure
  ATTR:  left_offset_distance: positive_length_measure
  ATTR:  segment_depths: LIST [1 : segments] OF positive_length_measure
  ATTR:  angle: (AMBIGUOUS (CASE LEVEL))
  ATTR:  input_skew_angle: plane_angle_measure
  ATTR:  skew_angle: plane_angle_measure
  ATTR:  radius_value: positive_length_measure
  ATTR:  collar_depth: positive_length_measure
  ATTR:  associated_geometry: LIST [1 : 2] OF pcurve_or_surface
  ATTR:  placement: (AMBIGUOUS (CASE LEVEL))
  ATTR:  closed_shell_element: closed_shell
  ATTR:  angle_value: plane_angle_measure
  ATTR:  bound: loop
  ATTR:  direction_ratios: LIST [2 : 3] OF REAL
  ATTR:  axis: (AMBIGUOUS (CASE LEVEL))
  ATTR:  closed_ends: LIST [2 : 2] OF LOGICAL
  ATTR:  fbsm_faces: SET [1 : ?] OF connected_face_set
  ATTR:  the_draughting_model_item_association_with_placeholders: SET [0 : 1] OF
    draughting_model_item_association_with_placeholder
  ATTR:  base_surface: surface
  ATTR:  parent_curve: curve
  ATTR:  compared_elements: SET [1 : ?] OF inspected_equivalence_element_select
  ATTR:  master_representation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  edge_end: vertex
  ATTR:  n_segments: (AMBIGUOUS (CASE LEVEL))
  ATTR:  view_window: planar_box
  ATTR:  upper_limit_actual_rotation_y: plane_angle_measure
  ATTR:  semi_angle: (AMBIGUOUS (CASE LEVEL))
  ATTR:  directrix: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_limit_actual_rotation_x: plane_angle_measure
  ATTR:  reference_point: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_limit_actual_rotation_z: plane_angle_measure
  ATTR:  line_strip: LIST [2 : ?] OF INTEGER
  ATTR:  groove_radius: positive_length_measure
  ATTR:  item_element: compound_item_definition
  ATTR:  external_surface: surface
  ATTR:  cvs_volumes: SET [1 : ?] OF volume_with_faces
  ATTR:  knot_spec: (AMBIGUOUS (CASE LEVEL))
  ATTR:  sphere_radius: positive_length_measure
  ATTR:  first_rotation_angle: plane_angle_measure
  ATTR:  pair_curve: (AMBIGUOUS (CASE LEVEL))
  ATTR:  parameter_current_value: maths_value
  ATTR:  range_on_pair_surface: rectangular_trimmed_surface
  ATTR:  joint: kinematic_joint
  ATTR:  actual_rotation_2: plane_angle_measure
  ATTR:  measured_data_type: a3m_measured_data_type_name
  ATTR:  gamma: plane_angle_measure
  ATTR:  first_offset: non_negative_length_measure
  ATTR:  lower_limit_actual_rotation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  owning_sketch: sketch_type_select
  ATTR:  view_window_clipping: BOOLEAN
  ATTR:  self_intersect: (AMBIGUOUS (CASE LEVEL))
  ATTR:  w_upper: INTEGER
  ATTR:  actual_rotation_1: plane_angle_measure
  ATTR:  points: (AMBIGUOUS (CASE LEVEL))
  ATTR:  curve_3d: curve
  ATTR:  draft_angles: LIST [2 : ?] OF plane_angle_measure
  ATTR:  distance_value: (AMBIGUOUS (CASE LEVEL))
  ATTR:  line_strip_face2: LIST [2 : ?] OF INTEGER
  ATTR:  upper_limit_rack_displacement: length_measure
  ATTR:  map: representation_map
  ATTR:  geometric_model_link: path_or_composite_curve
  ATTR:  extruded_direction: (AMBIGUOUS (CASE LEVEL))
  ATTR:  line_strip_face1: LIST [2 : ?] OF INTEGER
  ATTR:  face_geometry: surface
  ATTR:  face_element: face
  ATTR:  base_radius: positive_length_measure
  ATTR:  lower_limit_actual_rotation_x: plane_angle_measure
  ATTR:  segments: (AMBIGUOUS (CASE LEVEL))
  ATTR:  vertex_geometry: point
  ATTR:  lower_limit_actual_rotation_y: plane_angle_measure
  ATTR:  column_count: positive_integer
  ATTR:  edge_length: positive_length_measure
  ATTR:  actual_point_on_surface: (AMBIGUOUS (CASE LEVEL))
  ATTR:  lower_limit_actual_rotation_z: plane_angle_measure
  ATTR:  thickness_list: LIST [1 : ?] OF length_measure
  ATTR:  column_spacing: length_measure
  ATTR:  protrusion_corner_radius: non_negative_length_measure
  ATTR:  wire_shell_extent: SET [1 : ?] OF loop
  ATTR:  magnitude: length_measure
  ATTR:  semi_axis_1: (AMBIGUOUS (CASE LEVEL))
  ATTR:  curve_plane: plane
  ATTR:  spread_angle: positive_plane_angle_measure
  ATTR:  swept_area: curve_bounded_surface
  ATTR:  v_knots: (AMBIGUOUS (CASE LEVEL))
  ATTR:  sculpturing_element: generalized_surface_select
  ATTR:  lower_limit_first_rotation: plane_angle_measure
  ATTR:  styles: SET [0 : ?] OF presentation_style_assignment
  ATTR:  cone_angle1: plane_angle_measure
  ATTR:  semi_axis_3: (AMBIGUOUS (CASE LEVEL))
  ATTR:  start_param: (AMBIGUOUS (CASE LEVEL))
  ATTR:  basis_surface: (AMBIGUOUS (CASE LEVEL))
  ATTR:  placement_start: placement
  ATTR:  b_splines: LIST [2 : ?] OF local_b_spline
  ATTR:  semi_axis_2: (AMBIGUOUS (CASE LEVEL))
  ATTR:  notable_instances: LIST [1 : ?] OF equivalence_notable_instance
  ATTR:  triangle_strips: (AMBIGUOUS (CASE LEVEL))
  ATTR:  profile: (AMBIGUOUS (CASE LEVEL))
  ATTR:  colour_values: LIST [1 : ?] OF LIST [3 : 4] OF unsigned_8_bit_integer
  ATTR:  cone_angle2: plane_angle_measure
  ATTR:  width_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  thickness2: length_measure
  ATTR:  value_type: (AMBIGUOUS (CASE LEVEL))
  ATTR:  scanner_uncertainty: positive_length_measure
  ATTR:  ebwm_boundary: SET [1 : ?] OF connected_edge_set
  ATTR:  w_b_splines: LIST [8 : ?] OF local_b_spline
  ATTR:  semi_axis: positive_length_measure
  ATTR:  fixed_reference: direction
  ATTR:  approximation_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  extent: (AMBIGUOUS (CASE LEVEL))
  ATTR:  t_z: (AMBIGUOUS (CASE LEVEL))
  ATTR:  t_y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  input_orientation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  t_x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_limit_pitch: (AMBIGUOUS (CASE LEVEL))
  ATTR:  second_offset: non_negative_length_measure
  ATTR:  upper_limit_yaw: (AMBIGUOUS (CASE LEVEL))
  ATTR:  edge_start: vertex
  ATTR:  npoints: INTEGER
  ATTR:  w_degree: INTEGER
  ATTR:  control_points: (AMBIGUOUS (CASE LEVEL))
  ATTR:  hidden_line_surface_removal: BOOLEAN
  ATTR:  multiplicities: LIST [2 : ?] OF INTEGER
  ATTR:  alpha: plane_angle_measure
  ATTR:  beta: plane_angle_measure
  ATTR:  closed_curve: (AMBIGUOUS (CASE LEVEL))
  ATTR:  sublists: LIST [2 : ?] OF point_cloud_dataset
  ATTR:  offset_type: parallel_offset_type
  ATTR:  mirror_element: linear_geometry_constraint_element
  ATTR:  light_colour: colour
  ATTR:  edge_geometry: curve
  ATTR:  source: applied_external_identification_assignment (AMBIGUOUS (SELECT LEVEL))
  ATTR:  length_value: positive_length_measure
  ATTR:  protrusion_width: positive_length_measure
  ATTR:  transition_number: positive_integer
  ATTR:  protrusion_radius: positive_length_measure
  ATTR:  second_repeat_factor: vector
  ATTR:  ref_direction: (AMBIGUOUS (CASE LEVEL))
  ATTR:  slot_centreline: bounded_curve
  ATTR:  radius_first_link: length_measure
  ATTR:  semi_apex_angle: positive_plane_angle_measure
  ATTR:  y_offset: (AMBIGUOUS (CASE LEVEL))
  ATTR:  triangles: (AMBIGUOUS (CASE LEVEL))
  ATTR:  blended_edges: LIST [1 : ?] OF UNIQUE edge_curve
  ATTR:  suppressed_items: SET [0 : ?] OF representation_item
  ATTR:  rep_1: kinematic_link_representation *** Multiple Select Case Sources ***
  ATTR:  point_parameter_u: (AMBIGUOUS (CASE LEVEL))
  ATTR:  rep_2: kinematic_link_representation *** Multiple Select Case Sources ***
  ATTR:  computed_representation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  sketch_basis: sketch_basis_select
  ATTR:  sbsm_boundary: SET [1 : ?] OF shell
  ATTR:  point_parameter_w: parameter_value
  ATTR:  draft_angle: (AMBIGUOUS (CASE LEVEL))
  ATTR:  outer: closed_shell
  ATTR:  point_parameter_v: (AMBIGUOUS (CASE LEVEL))
  ATTR:  position_coords: LIST [1 : ?] OF LIST [3 : 3] OF REAL
  ATTR:  surface_2: surface
  ATTR:  external_curve: (AMBIGUOUS (CASE LEVEL))
  ATTR:  height: (AMBIGUOUS (CASE LEVEL))
  ATTR:  projection_direction: (AMBIGUOUS (CASE LEVEL))
  ATTR:  edge_function_list: LIST [1 : ?] OF blend_radius_variation_type
  ATTR:  ces_edges: SET [1 : ?] OF edge
  ATTR:  associated_link_representations_1: SET [1 : ?] OF kinematic_link_representation
  ATTR:  u_degree: (AMBIGUOUS (CASE LEVEL))
  ATTR:  surface_1: surface
  ATTR:  constraint_group: SET [2 : ?] OF constraint_group_member
  ATTR:  view_reference_system: axis2_placement_3d
  ATTR:  related_representation_item: angle_direction_reference_select
  ATTR:  actual_rotation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  same_sense: (AMBIGUOUS (CASE LEVEL))
  ATTR:  associated_link_representations_2: SET [1 : ?] OF kinematic_link_representation
  ATTR:  assessment_specification_2: (AMBIGUOUS (CASE LEVEL))
  ATTR:  assessment_specification: (AMBIGUOUS (CASE LEVEL))
  ATTR:  intersected_model: surface_or_solid_model
  ATTR:  implicit_outer: BOOLEAN
  ATTR:  upper_limit_second_rotation: plane_angle_measure
  ATTR:  w_multiplicities: LIST [2 : ?] OF INTEGER
  ATTR:  blanking: (AMBIGUOUS (CASE LEVEL))
  ATTR:  smoothness: transition_code
  ATTR:  theta: (AMBIGUOUS (CASE LEVEL))
  ATTR:  inspected_element: data_equivalence_inspected_element_pair
  ATTR:  extreme_instances: LIST [1 : ?] OF extreme_instance
  ATTR:  knot_u_upper: (AMBIGUOUS (CASE LEVEL))
  ATTR:  exit_faces: SET [1 : ?] OF face_surface
  ATTR:  offset_value: positive_length_measure
  ATTR:  point_index: INTEGER
  ATTR:  geodesic_separation_factor: (AMBIGUOUS (CASE LEVEL))
  ATTR:  cone_base_radius: positive_length_measure
  ATTR:  actual_rotation_z: plane_angle_measure
  ATTR:  upper_limit_actual_rotation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  permanent_id: identifier
  ATTR:  value_component: measure_value *** Multiple Select Case Sources ***
  ATTR:  parent_edge: (AMBIGUOUS (CASE LEVEL))
  ATTR:  location: (AMBIGUOUS (CASE LEVEL))
  ATTR:  dir: vector
  ATTR:  u_upper: (AMBIGUOUS (CASE LEVEL))
  ATTR:  actual_rotation_x: plane_angle_measure
  ATTR:  pnindex: (AMBIGUOUS (CASE LEVEL))
  ATTR:  collected_text: SET [2 : ?] OF text_or_character
  ATTR:  actual_rotation_y: plane_angle_measure
  ATTR:  placing: axis2_placement_3d
  ATTR:  actual_displacement: length_measure
  ATTR:  basis_face_surface: face_surface
  ATTR:  mapping_source: representation_map
  ATTR:  definition: (AMBIGUOUS (CASE LEVEL))
  ATTR:  v_b_splines: (AMBIGUOUS (CASE LEVEL))
  ATTR:  lower_limit_roll: (AMBIGUOUS (CASE LEVEL))
  ATTR:  pnmax: (AMBIGUOUS (CASE LEVEL))
  ATTR:  domain: (AMBIGUOUS (CASE LEVEL))
  ATTR:  focal_dist: length_measure
  ATTR:  radius1: positive_length_measure
  ATTR:  perspective_of_volume: view_volume
  ATTR:  upper_limit_actual_translation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  radius2: positive_length_measure
  ATTR:  mapping_target: representation_item
  ATTR:  point_3: cartesian_point
  ATTR:  point_2: cartesian_point
  ATTR:  point_1: cartesian_point
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  ylength: (AMBIGUOUS (CASE LEVEL))
  ATTR:  knot_w_upper: INTEGER
  ATTR:  children: SET [1 : ?] OF tessellated_item
  ATTR:  near_points: (AMBIGUOUS (CASE LEVEL))
  ATTR:  depth: (AMBIGUOUS (CASE LEVEL))
  ATTR:  relating_representation_item: orientation_basis_select
  ATTR:  view_direction: direction
  ATTR:  xlength: (AMBIGUOUS (CASE LEVEL))
  ATTR:  parent_solid: solid_model
  ATTR:  point_4: cartesian_point
  ATTR:  alignment: (AMBIGUOUS (CASE LEVEL))
  ATTR:  actual_point_on_surface_2: point_on_surface
  ATTR:  smooth: (AMBIGUOUS (CASE LEVEL))
  ATTR:  lower_limit_actual_translation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  negative_direction: BOOLEAN
  ATTR:  first_operand: boolean_operand
  ATTR:  actual_point_on_surface_1: point_on_surface
  ATTR:  extrusion_axis: vector
  ATTR:  comparing_element_types: LIST [1 : ?] OF a3m_element_type_name
  ATTR:  voids: SET [1 : ?] OF oriented_closed_shell
  ATTR:  weights: (AMBIGUOUS (CASE LEVEL))
  ATTR:  cone_apex_angle: plane_angle_measure
  ATTR:  polygon: LIST [3 : ?] OF UNIQUE cartesian_point
  ATTR:  u_smoothness: transition_code
  ATTR:  floor_fillet_radius: (AMBIGUOUS (CASE LEVEL))
  ATTR:  triangle_fans: (AMBIGUOUS (CASE LEVEL))
  ATTR:  dim: dimension_count
  ATTR:  line_strips: LIST [1 : ?] OF LIST [2 : ?] OF INTEGER
  ATTR:  small_vector_tolerance: length_measure
  ATTR:  applied_values: SET [1 : ?] OF measure_representation_item
  ATTR:  font: font_select
  ATTR:  associated_curves: (AMBIGUOUS (CASE LEVEL))

  representation_relationship (*ENTITY*):
  ATTR:  current_result: representation
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  transformation_operator: transformation *** Multiple Select Case Sources ***
  ATTR:  item: geometric_representation_item *** Multiple Select Case Sources ***
  ATTR:  rep_1: representation_or_representation_reference *** Multiple Select Case Sources ***
  ATTR:  rep_2: representation_or_representation_reference *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  motion: kinematic_path

  requirement_assignment (*ENTITY*):
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: (AMBIGUOUS (CASE LEVEL))

  requirement_for_action_resource (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  operations: SET [1 : ?] OF characterized_action_definition
  ATTR:  resources: SET [1 : ?] OF action_resource
  ATTR:  kind: resource_requirement_type *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  requirement_source (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  resource_property (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  resource: characterized_resource_definition
  ATTR:  name: label *** Multiple Select Case Sources ***

  retention (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  chosen_method: action_method
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  satisfies_requirement (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  security_classification (*ENTITY*):
  ATTR:  security_level: security_classification_level
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  security_classification_level (*ENTITY*):
  ATTR:  name: label *** Multiple Select Case Sources ***

  shape_aspect (*ENTITY*):
  ATTR:  deriving_relationships: SET [1 : ?] OF shape_aspect_deriving_relationship
  ATTR:  product_definitional: LOGICAL *** Multiple Select Case Sources ***
  ATTR:  owner: (AMBIGUOUS (CASE LEVEL))
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  form: tolerance_zone_form
  ATTR:  target_id: identifier
  ATTR:  component_shape_aspect: internal_or_reflected_shape_aspect
  ATTR:  parent: shape_aspect
  ATTR:  orientation: oriented_tolerance_zone_type
  ATTR:  items: (AMBIGUOUS (CASE LEVEL))
  ATTR:  of_shape: product_definition_shape *** Multiple Select Case Sources ***
  ATTR:  datum_reference: datum_system
  ATTR:  identification: identifier *** Multiple Select Case Sources ***
  ATTR:  established_by_relationships: SET [1 : ?] OF shape_aspect_relationship
  ATTR:  constituents: LIST [1 : 3] OF UNIQUE datum_reference_compartment
  ATTR:  representation_associations: SET [0 : ?] OF property_definition_representation
  ATTR:  angle: plane_angle_measure_with_unit
  ATTR:  modified_components: (AMBIGUOUS (CASE LEVEL))
  ATTR:  modifiers: SET [1 : ?] OF datum_reference_modifier
  ATTR:  component_relationships: SET [2 : ?] OF shape_aspect_relationship
  ATTR:  base: datum_or_common_datum (AMBIGUOUS (SELECT LEVEL))
  ATTR:  base_common_datum_list: common_datum_list
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  feature_basis_relationship: SET [1 : ?] OF shape_aspect_relationship
  ATTR:  direction: directed_tolerance_zone_type
  ATTR:  related_shape_aspect: component_feature *** Multiple Select Case Sources ***
  ATTR:  defining_tolerance: SET [1 : ?] OF tolerance_zone_target
  ATTR:  assigned_group: mated_part_relationship *** Multiple Select Case Sources ***
  ATTR:  location: multi_or_next_assembly_usage_occurrence (AMBIGUOUS (SELECT LEVEL))
  ATTR:  definition: (AMBIGUOUS (CASE LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  basis_relationships: SET [1 : ?] OF shape_aspect_deriving_relationship
  ATTR:  relating_shape_aspect: component_feature *** Multiple Select Case Sources ***
  ATTR:  offset: measure_with_unit *** Multiple Select Case Sources ***
  ATTR:  target_basis_relationship: SET [1 : ?] OF shape_aspect_relationship

  shape_aspect_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  path: shape_aspect (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  related_shape_aspect: shape_aspect *** Multiple Select Case Sources ***
  ATTR:  angle_selection: angle_relator
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  relating_shape_aspect: shape_aspect *** Multiple Select Case Sources ***

  shape_feature_definition_relationship (*ENTITY*):
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  related_object: shape_feature_definition
  ATTR:  relating_object: shape_feature_definition
  ATTR:  name: (AMBIGUOUS (CASE LEVEL))

  state_definition_to_state_assignment_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_ascribable_state: ascribable_state
  ATTR:  relation_type: STRING *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  relating_ascribable_state: ascribable_state

  state_observed (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  state_observed_assignment (*ENTITY*):
  ATTR:  assigned_state_observed: state_observed
  ATTR:  role: state_observed_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF state_observed_of_item (AMBIGUOUS (SELECT LEVEL))

  state_observed_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_state_observed: SET [1 : ?] OF state_observed
  ATTR:  related_state_observed: SET [1 : ?] OF state_observed
  ATTR:  name: label *** Multiple Select Case Sources ***

  state_observed_role (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  state_type (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  state_type_assignment (*ENTITY*):
  ATTR:  role: state_type_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF state_type_of_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_state_type: state_type

  state_type_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_state_type: SET [1 : ?] OF state_type
  ATTR:  related_state_type: SET [1 : ?] OF state_type
  ATTR:  name: label *** Multiple Select Case Sources ***

  structured_message (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  frame_of_reference: SET [1 : ?] OF product_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  time_interval_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating_time_interval: time_interval
  ATTR:  related_time_interval: time_interval
  ATTR:  name: label *** Multiple Select Case Sources ***

  type_qualifier (*ENTITY*):
  ATTR:  name: label *** Multiple Select Case Sources ***

  uncertainty_measure_with_unit (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  unit_component: unit
  ATTR:  value_component: measure_value *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  usage_association (*ENTITY*):
  ATTR:  related_method: information_usage_right *** Multiple Select Case Sources ***
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  relating: information_usage_right (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related: information_usage_right (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  relating_method: information_usage_right *** Multiple Select Case Sources ***

  validation (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  verification (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  versioned_action_request (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  version: label

  versioned_action_request_relationship (*ENTITY*):
  ATTR:  description: text (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_versioned_action_request: versioned_action_request
  ATTR:  relating_versioned_action_request: versioned_action_request
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

*/

/** SELECT type
- EXPRESS:
```express
  TYPE classification_item = SELECT
    ( action (*ENTITY*),
     action_directive (*ENTITY*),
     action_directive_relationship (*ENTITY*),
     action_method (*ENTITY*),
     action_method_relationship (*ENTITY*),
     action_property (*ENTITY*),
     action_property_representation (*ENTITY*),
     action_relationship (*ENTITY*),
     action_request_solution (*ENTITY*),
     action_request_status (*ENTITY*),
     action_resource (*ENTITY*),
     action_resource_relationship (*ENTITY*),
     address (*ENTITY*),
     alternate_product_relationship (*ENTITY*),
     alternative_solution_relationship (*ENTITY*),
     analysis_assignment (*ENTITY*),
     applied_action_assignment (*ENTITY*),
     applied_action_method_assignment (*ENTITY*),
     applied_action_request_assignment (*ENTITY*),
     applied_approval_assignment (*ENTITY*),
     applied_certification_assignment (*ENTITY*),
     applied_classification_assignment_relationship (*ENTITY*),
     applied_contract_assignment (*ENTITY*),
     applied_date_and_time_assignment (*ENTITY*),
     applied_date_assignment (*ENTITY*),
     applied_description_text_assignment (*ENTITY*),
     applied_description_text_assignment_relationship (*ENTITY*),
     applied_document_reference (*ENTITY*),
     applied_document_usage_constraint_assignment (*ENTITY*),
     applied_effectivity_assignment (*ENTITY*),
     applied_event_occurrence_assignment (*ENTITY*),
     applied_external_identification_assignment (*ENTITY*),
     applied_external_identification_assignment_relationship (*ENTITY*),
     applied_identification_assignment (*ENTITY*),
     applied_ineffectivity_assignment (*ENTITY*),
     applied_organizational_project_assignment (*ENTITY*),
     applied_organization_assignment (*ENTITY*),
     applied_person_and_organization_assignment (*ENTITY*),
     applied_security_classification_assignment (*ENTITY*),
     applied_time_interval_assignment (*ENTITY*),
     applied_usage_right (*ENTITY*),
     approval (*ENTITY*),
     approval_person_organization (*ENTITY*),
     approval_relationship (*ENTITY*),
     approval_status (*ENTITY*),
     assembly_component_usage_substitute (*ENTITY*),
     assignment_object_relationship (*ENTITY*),
     attribute_language_assignment (*ENTITY*),
     breakdown_context (*ENTITY*),
     breakdown_element_realization (*ENTITY*),
     breakdown_of (*ENTITY*),
     calendar_date (*ENTITY*),
     certification (*ENTITY*),
     change_element_sequence (*ENTITY*),
     change_group (*ENTITY*),
     characterized_class (*ENTITY*),
     characterized_object (*ENTITY*),
     class (*ENTITY*),
     classified_item (*SELECT*),
     configuration_design (*ENTITY*),
     configuration_effectivity (*ENTITY*),
     configuration_item (*ENTITY*),
     configuration_item_relationship (*ENTITY*),
     context_dependent_unit (*ENTITY*),
     contract (*ENTITY*),
     contract_relationship (*ENTITY*),
     conversion_based_unit (*ENTITY*),
     date_and_time (*ENTITY*),
     date_and_time_assignment (*ENTITY*),
     date_assignment (*ENTITY*),
     definitional_representation_relationship (*ENTITY*),
     derived_unit (*ENTITY*),
     descriptive_representation_item (*ENTITY*),
     directed_action (*ENTITY*),
     directed_action_assignment (*ENTITY*),
     document_file (*ENTITY*),
     document_relationship (*ENTITY*),
     document_type (*ENTITY*),
     effectivity (*ENTITY*),
     effectivity_relationship (*ENTITY*),
     envelope (*ENTITY*),
     envelope_relationship (*ENTITY*),
     evaluated_characteristic (*ENTITY*),
     event_occurrence (*ENTITY*),
     event_occurrence_relationship (*ENTITY*),
     evidence (*ENTITY*),
     executed_action (*ENTITY*),
     feature_definition (*ENTITY*),
     general_feature (*ENTITY*),
     general_property (*ENTITY*),
     general_property_relationship (*ENTITY*),
     generic_property_relationship (*ENTITY*),
     group (*ENTITY*),
     group_relationship (*ENTITY*),
     identification_assignment (*ENTITY*),
     identification_assignment_relationship (*ENTITY*),
     information_right (*ENTITY*),
     information_usage_right (*ENTITY*),
     interface_connection (*ENTITY*),
     interface_connector_as_planned (*ENTITY*),
     interface_connector_as_realized (*ENTITY*),
     interface_connector_design (*ENTITY*),
     interface_connector_design_to_planned (*ENTITY*),
     interface_connector_design_to_realized (*ENTITY*),
     interface_connector_occurrence (*ENTITY*),
     interface_connector_planned_to_realized (*ENTITY*),
     interface_definition_connection (*ENTITY*),
     interface_definition_for (*ENTITY*),
     in_zone (*ENTITY*),
     language (*ENTITY*),
     link_motion_relationship (*ENTITY*),
     local_time (*ENTITY*),
     location (*ENTITY*),
     location_relationship (*ENTITY*),
     material_designation (*ENTITY*),
     material_designation_characterization (*ENTITY*),
     measure_qualification (*ENTITY*),
     measure_representation_item (*ENTITY*),
     measure_with_unit (*ENTITY*),
     message_relationship (*ENTITY*),
     multi_language_attribute_assignment (*ENTITY*),
     named_unit (*ENTITY*),
     organization (*ENTITY*),
     organizational_address (*ENTITY*),
     organizational_project (*ENTITY*),
     organizational_project_relationship (*ENTITY*),
     organization_relationship (*ENTITY*),
     person (*ENTITY*),
     person_and_organization (*ENTITY*),
     person_and_organization_address (*ENTITY*),
     plus_minus_tolerance (*ENTITY*),
     process_operation (*ENTITY*),
     process_plan (*ENTITY*),
     process_product_association (*ENTITY*),
     product (*ENTITY*),
     product_concept (*ENTITY*),
     product_concept_context (*ENTITY*),
     product_concept_feature (*ENTITY*),
     product_concept_feature_association (*ENTITY*),
     product_concept_feature_category (*ENTITY*),
     product_concept_feature_category_usage (*ENTITY*),
     product_concept_relationship (*ENTITY*),
     product_definition (*ENTITY*),
     product_definition_context (*ENTITY*),
     product_definition_formation (*ENTITY*),
     product_definition_formation_relationship (*ENTITY*),
     product_definition_relationship (*ENTITY*),
     product_definition_usage (*ENTITY*),
     product_definition_usage_relationship (*ENTITY*),
     product_design_to_individual (*ENTITY*),
     product_design_version_to_individual (*ENTITY*),
     product_group (*ENTITY*),
     product_group_membership (*ENTITY*),
     product_group_relationship (*ENTITY*),
     product_process_plan (*ENTITY*),
     product_relationship (*ENTITY*),
     property_definition (*ENTITY*),
     property_definition_representation (*ENTITY*),
     representation (*ENTITY*),
     representation_context (*ENTITY*),
     representation_item (*ENTITY*),
     representation_relationship (*ENTITY*),
     requirement_assignment (*ENTITY*),
     requirement_for_action_resource (*ENTITY*),
     requirement_source (*ENTITY*),
     resource_property (*ENTITY*),
     retention (*ENTITY*),
     satisfies_requirement (*ENTITY*),
     security_classification (*ENTITY*),
     security_classification_level (*ENTITY*),
     shape_aspect (*ENTITY*),
     shape_aspect_relationship (*ENTITY*),
     shape_feature_definition_relationship (*ENTITY*),
     state_definition_to_state_assignment_relationship (*ENTITY*),
     state_observed (*ENTITY*),
     state_observed_assignment (*ENTITY*),
     state_observed_relationship (*ENTITY*),
     state_observed_role (*ENTITY*),
     state_type (*ENTITY*),
     state_type_assignment (*ENTITY*),
     state_type_relationship (*ENTITY*),
     structured_message (*ENTITY*),
     time_interval_relationship (*ENTITY*),
     type_qualifier (*ENTITY*),
     uncertainty_measure_with_unit (*ENTITY*),
     usage_association (*ENTITY*),
     validation (*ENTITY*),
     verification (*ENTITY*),
     versioned_action_request (*ENTITY*),
     versioned_action_request_relationship (*ENTITY*) );
  END_TYPE; -- classification_item (line:1471 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public enum sCLASSIFICATION_ITEM : SDAIValue, AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sCLASSIFICATION_ITEM__type {

    /// SELECT case ``eACTION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION(eACTION)	// (ENTITY)

    /// SELECT case ``eACTION_DIRECTIVE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION_DIRECTIVE(eACTION_DIRECTIVE)	// (ENTITY)

    /// SELECT case ``eACTION_DIRECTIVE_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION_DIRECTIVE_RELATIONSHIP(eACTION_DIRECTIVE_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eACTION_METHOD`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION_METHOD(eACTION_METHOD)	// (ENTITY)

    /// SELECT case ``eACTION_METHOD_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION_METHOD_RELATIONSHIP(eACTION_METHOD_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eACTION_PROPERTY`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION_PROPERTY(eACTION_PROPERTY)	// (ENTITY)

    /// SELECT case ``eACTION_PROPERTY_REPRESENTATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION_PROPERTY_REPRESENTATION(eACTION_PROPERTY_REPRESENTATION)	// (ENTITY)

    /// SELECT case ``eACTION_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION_RELATIONSHIP(eACTION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eACTION_REQUEST_SOLUTION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION_REQUEST_SOLUTION(eACTION_REQUEST_SOLUTION)	// (ENTITY)

    /// SELECT case ``eACTION_REQUEST_STATUS`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION_REQUEST_STATUS(eACTION_REQUEST_STATUS)	// (ENTITY)

    /// SELECT case ``eACTION_RESOURCE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION_RESOURCE(eACTION_RESOURCE)	// (ENTITY)

    /// SELECT case ``eACTION_RESOURCE_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ACTION_RESOURCE_RELATIONSHIP(eACTION_RESOURCE_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eADDRESS`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ADDRESS(eADDRESS)	// (ENTITY)

    /// SELECT case ``eALTERNATE_PRODUCT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ALTERNATE_PRODUCT_RELATIONSHIP(eALTERNATE_PRODUCT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eALTERNATIVE_SOLUTION_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ALTERNATIVE_SOLUTION_RELATIONSHIP(eALTERNATIVE_SOLUTION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eANALYSIS_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ANALYSIS_ASSIGNMENT(eANALYSIS_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ACTION_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_ACTION_ASSIGNMENT(eAPPLIED_ACTION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ACTION_METHOD_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_ACTION_METHOD_ASSIGNMENT(eAPPLIED_ACTION_METHOD_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ACTION_REQUEST_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_ACTION_REQUEST_ASSIGNMENT(eAPPLIED_ACTION_REQUEST_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_APPROVAL_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_APPROVAL_ASSIGNMENT(eAPPLIED_APPROVAL_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_CERTIFICATION_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_CERTIFICATION_ASSIGNMENT(eAPPLIED_CERTIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(
      eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eAPPLIED_CONTRACT_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_CONTRACT_ASSIGNMENT(eAPPLIED_CONTRACT_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_DATE_AND_TIME_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_DATE_AND_TIME_ASSIGNMENT(eAPPLIED_DATE_AND_TIME_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_DATE_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_DATE_ASSIGNMENT(eAPPLIED_DATE_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(
      eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eAPPLIED_DOCUMENT_REFERENCE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_DOCUMENT_REFERENCE(eAPPLIED_DOCUMENT_REFERENCE)	// (ENTITY)

    /// SELECT case ``eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(
      eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_EFFECTIVITY_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_EFFECTIVITY_ASSIGNMENT(eAPPLIED_EFFECTIVITY_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(
      eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(
      eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eAPPLIED_IDENTIFICATION_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_IDENTIFICATION_ASSIGNMENT(eAPPLIED_IDENTIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_INEFFECTIVITY_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_INEFFECTIVITY_ASSIGNMENT(eAPPLIED_INEFFECTIVITY_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ORGANIZATION_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_ORGANIZATION_ASSIGNMENT(eAPPLIED_ORGANIZATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(
      eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(
      eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_TIME_INTERVAL_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_TIME_INTERVAL_ASSIGNMENT(eAPPLIED_TIME_INTERVAL_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_USAGE_RIGHT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPLIED_USAGE_RIGHT(eAPPLIED_USAGE_RIGHT)	// (ENTITY)

    /// SELECT case ``eAPPROVAL`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPROVAL(eAPPROVAL)	// (ENTITY)

    /// SELECT case ``eAPPROVAL_PERSON_ORGANIZATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPROVAL_PERSON_ORGANIZATION(eAPPROVAL_PERSON_ORGANIZATION)	// (ENTITY)

    /// SELECT case ``eAPPROVAL_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPROVAL_RELATIONSHIP(eAPPROVAL_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eAPPROVAL_STATUS`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _APPROVAL_STATUS(eAPPROVAL_STATUS)	// (ENTITY)

    /// SELECT case ``eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE)	// (ENTITY)

    /// SELECT case ``eASSIGNMENT_OBJECT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ASSIGNMENT_OBJECT_RELATIONSHIP(eASSIGNMENT_OBJECT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eATTRIBUTE_LANGUAGE_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ATTRIBUTE_LANGUAGE_ASSIGNMENT(eATTRIBUTE_LANGUAGE_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eBREAKDOWN_CONTEXT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _BREAKDOWN_CONTEXT(eBREAKDOWN_CONTEXT)	// (ENTITY)

    /// SELECT case ``eBREAKDOWN_ELEMENT_REALIZATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _BREAKDOWN_ELEMENT_REALIZATION(eBREAKDOWN_ELEMENT_REALIZATION)	// (ENTITY)

    /// SELECT case ``eBREAKDOWN_OF`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _BREAKDOWN_OF(eBREAKDOWN_OF)	// (ENTITY)

    /// SELECT case ``eCALENDAR_DATE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CALENDAR_DATE(eCALENDAR_DATE)	// (ENTITY)

    /// SELECT case ``eCERTIFICATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CERTIFICATION(eCERTIFICATION)	// (ENTITY)

    /// SELECT case ``eCHANGE_ELEMENT_SEQUENCE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CHANGE_ELEMENT_SEQUENCE(eCHANGE_ELEMENT_SEQUENCE)	// (ENTITY)

    /// SELECT case ``eCHANGE_GROUP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CHANGE_GROUP(eCHANGE_GROUP)	// (ENTITY)

    /// SELECT case ``eCHARACTERIZED_CLASS`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CHARACTERIZED_CLASS(eCHARACTERIZED_CLASS)	// (ENTITY)

    /// SELECT case ``eCHARACTERIZED_OBJECT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CHARACTERIZED_OBJECT(eCHARACTERIZED_OBJECT)	// (ENTITY)

    /// SELECT case ``eCLASS`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CLASS(eCLASS)	// (ENTITY)

    /// SELECT case ``sCLASSIFIED_ITEM`` (SELECT) in ``sCLASSIFICATION_ITEM``
    case _CLASSIFIED_ITEM(sCLASSIFIED_ITEM)	// (SELECT)

    /// SELECT case ``eCONFIGURATION_DESIGN`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CONFIGURATION_DESIGN(eCONFIGURATION_DESIGN)	// (ENTITY)

    /// SELECT case ``eCONFIGURATION_EFFECTIVITY`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CONFIGURATION_EFFECTIVITY(eCONFIGURATION_EFFECTIVITY)	// (ENTITY)

    /// SELECT case ``eCONFIGURATION_ITEM`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CONFIGURATION_ITEM(eCONFIGURATION_ITEM)	// (ENTITY)

    /// SELECT case ``eCONFIGURATION_ITEM_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CONFIGURATION_ITEM_RELATIONSHIP(eCONFIGURATION_ITEM_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eCONTEXT_DEPENDENT_UNIT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CONTEXT_DEPENDENT_UNIT(eCONTEXT_DEPENDENT_UNIT)	// (ENTITY)

    /// SELECT case ``eCONTRACT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CONTRACT(eCONTRACT)	// (ENTITY)

    /// SELECT case ``eCONTRACT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CONTRACT_RELATIONSHIP(eCONTRACT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eCONVERSION_BASED_UNIT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _CONVERSION_BASED_UNIT(eCONVERSION_BASED_UNIT)	// (ENTITY)

    /// SELECT case ``eDATE_AND_TIME`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _DATE_AND_TIME(eDATE_AND_TIME)	// (ENTITY)

    /// SELECT case ``eDATE_AND_TIME_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _DATE_AND_TIME_ASSIGNMENT(eDATE_AND_TIME_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eDATE_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _DATE_ASSIGNMENT(eDATE_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eDEFINITIONAL_REPRESENTATION_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _DEFINITIONAL_REPRESENTATION_RELATIONSHIP(eDEFINITIONAL_REPRESENTATION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eDERIVED_UNIT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _DERIVED_UNIT(eDERIVED_UNIT)	// (ENTITY)

    /// SELECT case ``eDESCRIPTIVE_REPRESENTATION_ITEM`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _DESCRIPTIVE_REPRESENTATION_ITEM(eDESCRIPTIVE_REPRESENTATION_ITEM)	// (ENTITY)

    /// SELECT case ``eDIRECTED_ACTION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _DIRECTED_ACTION(eDIRECTED_ACTION)	// (ENTITY)

    /// SELECT case ``eDIRECTED_ACTION_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _DIRECTED_ACTION_ASSIGNMENT(eDIRECTED_ACTION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eDOCUMENT_FILE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _DOCUMENT_FILE(eDOCUMENT_FILE)	// (ENTITY)

    /// SELECT case ``eDOCUMENT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _DOCUMENT_RELATIONSHIP(eDOCUMENT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eDOCUMENT_TYPE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _DOCUMENT_TYPE(eDOCUMENT_TYPE)	// (ENTITY)

    /// SELECT case ``eEFFECTIVITY`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _EFFECTIVITY(eEFFECTIVITY)	// (ENTITY)

    /// SELECT case ``eEFFECTIVITY_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _EFFECTIVITY_RELATIONSHIP(eEFFECTIVITY_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eENVELOPE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ENVELOPE(eENVELOPE)	// (ENTITY)

    /// SELECT case ``eENVELOPE_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ENVELOPE_RELATIONSHIP(eENVELOPE_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eEVALUATED_CHARACTERISTIC`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _EVALUATED_CHARACTERISTIC(eEVALUATED_CHARACTERISTIC)	// (ENTITY)

    /// SELECT case ``eEVENT_OCCURRENCE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _EVENT_OCCURRENCE(eEVENT_OCCURRENCE)	// (ENTITY)

    /// SELECT case ``eEVENT_OCCURRENCE_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _EVENT_OCCURRENCE_RELATIONSHIP(eEVENT_OCCURRENCE_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eEVIDENCE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _EVIDENCE(eEVIDENCE)	// (ENTITY)

    /// SELECT case ``eEXECUTED_ACTION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _EXECUTED_ACTION(eEXECUTED_ACTION)	// (ENTITY)

    /// SELECT case ``eFEATURE_DEFINITION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _FEATURE_DEFINITION(eFEATURE_DEFINITION)	// (ENTITY)

    /// SELECT case ``eGENERAL_FEATURE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _GENERAL_FEATURE(eGENERAL_FEATURE)	// (ENTITY)

    /// SELECT case ``eGENERAL_PROPERTY`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _GENERAL_PROPERTY(eGENERAL_PROPERTY)	// (ENTITY)

    /// SELECT case ``eGENERAL_PROPERTY_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _GENERAL_PROPERTY_RELATIONSHIP(eGENERAL_PROPERTY_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eGENERIC_PROPERTY_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _GENERIC_PROPERTY_RELATIONSHIP(eGENERIC_PROPERTY_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eGROUP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _GROUP(eGROUP)	// (ENTITY)

    /// SELECT case ``eGROUP_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _GROUP_RELATIONSHIP(eGROUP_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eIDENTIFICATION_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _IDENTIFICATION_ASSIGNMENT(eIDENTIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eINFORMATION_RIGHT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INFORMATION_RIGHT(eINFORMATION_RIGHT)	// (ENTITY)

    /// SELECT case ``eINFORMATION_USAGE_RIGHT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INFORMATION_USAGE_RIGHT(eINFORMATION_USAGE_RIGHT)	// (ENTITY)

    /// SELECT case ``eINTERFACE_CONNECTION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INTERFACE_CONNECTION(eINTERFACE_CONNECTION)	// (ENTITY)

    /// SELECT case ``eINTERFACE_CONNECTOR_AS_PLANNED`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INTERFACE_CONNECTOR_AS_PLANNED(eINTERFACE_CONNECTOR_AS_PLANNED)	// (ENTITY)

    /// SELECT case ``eINTERFACE_CONNECTOR_AS_REALIZED`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INTERFACE_CONNECTOR_AS_REALIZED(eINTERFACE_CONNECTOR_AS_REALIZED)	// (ENTITY)

    /// SELECT case ``eINTERFACE_CONNECTOR_DESIGN`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INTERFACE_CONNECTOR_DESIGN(eINTERFACE_CONNECTOR_DESIGN)	// (ENTITY)

    /// SELECT case ``eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED)	// (ENTITY)

    /// SELECT case ``eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED)	// (ENTITY)

    /// SELECT case ``eINTERFACE_CONNECTOR_OCCURRENCE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INTERFACE_CONNECTOR_OCCURRENCE(eINTERFACE_CONNECTOR_OCCURRENCE)	// (ENTITY)

    /// SELECT case ``eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED)	// (ENTITY)

    /// SELECT case ``eINTERFACE_DEFINITION_CONNECTION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INTERFACE_DEFINITION_CONNECTION(eINTERFACE_DEFINITION_CONNECTION)	// (ENTITY)

    /// SELECT case ``eINTERFACE_DEFINITION_FOR`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _INTERFACE_DEFINITION_FOR(eINTERFACE_DEFINITION_FOR)	// (ENTITY)

    /// SELECT case ``eIN_ZONE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _IN_ZONE(eIN_ZONE)	// (ENTITY)

    /// SELECT case ``eLANGUAGE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _LANGUAGE(eLANGUAGE)	// (ENTITY)

    /// SELECT case ``eLINK_MOTION_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _LINK_MOTION_RELATIONSHIP(eLINK_MOTION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eLOCAL_TIME`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _LOCAL_TIME(eLOCAL_TIME)	// (ENTITY)

    /// SELECT case ``eLOCATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _LOCATION(eLOCATION)	// (ENTITY)

    /// SELECT case ``eLOCATION_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _LOCATION_RELATIONSHIP(eLOCATION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eMATERIAL_DESIGNATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _MATERIAL_DESIGNATION(eMATERIAL_DESIGNATION)	// (ENTITY)

    /// SELECT case ``eMATERIAL_DESIGNATION_CHARACTERIZATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _MATERIAL_DESIGNATION_CHARACTERIZATION(eMATERIAL_DESIGNATION_CHARACTERIZATION)	// (ENTITY)

    /// SELECT case ``eMEASURE_QUALIFICATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _MEASURE_QUALIFICATION(eMEASURE_QUALIFICATION)	// (ENTITY)

    /// SELECT case ``eMEASURE_REPRESENTATION_ITEM`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _MEASURE_REPRESENTATION_ITEM(eMEASURE_REPRESENTATION_ITEM)	// (ENTITY)

    /// SELECT case ``eMEASURE_WITH_UNIT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _MEASURE_WITH_UNIT(eMEASURE_WITH_UNIT)	// (ENTITY)

    /// SELECT case ``eMESSAGE_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _MESSAGE_RELATIONSHIP(eMESSAGE_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eNAMED_UNIT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _NAMED_UNIT(eNAMED_UNIT)	// (ENTITY)

    /// SELECT case ``eORGANIZATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ORGANIZATION(eORGANIZATION)	// (ENTITY)

    /// SELECT case ``eORGANIZATIONAL_ADDRESS`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ORGANIZATIONAL_ADDRESS(eORGANIZATIONAL_ADDRESS)	// (ENTITY)

    /// SELECT case ``eORGANIZATIONAL_PROJECT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ORGANIZATIONAL_PROJECT(eORGANIZATIONAL_PROJECT)	// (ENTITY)

    /// SELECT case ``eORGANIZATIONAL_PROJECT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ORGANIZATIONAL_PROJECT_RELATIONSHIP(eORGANIZATIONAL_PROJECT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eORGANIZATION_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _ORGANIZATION_RELATIONSHIP(eORGANIZATION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``ePERSON`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PERSON(ePERSON)	// (ENTITY)

    /// SELECT case ``ePERSON_AND_ORGANIZATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PERSON_AND_ORGANIZATION(ePERSON_AND_ORGANIZATION)	// (ENTITY)

    /// SELECT case ``ePERSON_AND_ORGANIZATION_ADDRESS`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PERSON_AND_ORGANIZATION_ADDRESS(ePERSON_AND_ORGANIZATION_ADDRESS)	// (ENTITY)

    /// SELECT case ``ePLUS_MINUS_TOLERANCE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PLUS_MINUS_TOLERANCE(ePLUS_MINUS_TOLERANCE)	// (ENTITY)

    /// SELECT case ``ePROCESS_OPERATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PROCESS_OPERATION(ePROCESS_OPERATION)	// (ENTITY)

    /// SELECT case ``ePROCESS_PLAN`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PROCESS_PLAN(ePROCESS_PLAN)	// (ENTITY)

    /// SELECT case ``ePROCESS_PRODUCT_ASSOCIATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PROCESS_PRODUCT_ASSOCIATION(ePROCESS_PRODUCT_ASSOCIATION)	// (ENTITY)

    /// SELECT case ``ePRODUCT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT(ePRODUCT)	// (ENTITY)

    /// SELECT case ``ePRODUCT_CONCEPT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_CONCEPT(ePRODUCT_CONCEPT)	// (ENTITY)

    /// SELECT case ``ePRODUCT_CONCEPT_CONTEXT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_CONCEPT_CONTEXT(ePRODUCT_CONCEPT_CONTEXT)	// (ENTITY)

    /// SELECT case ``ePRODUCT_CONCEPT_FEATURE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_CONCEPT_FEATURE(ePRODUCT_CONCEPT_FEATURE)	// (ENTITY)

    /// SELECT case ``ePRODUCT_CONCEPT_FEATURE_ASSOCIATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_CONCEPT_FEATURE_ASSOCIATION(ePRODUCT_CONCEPT_FEATURE_ASSOCIATION)	// (ENTITY)

    /// SELECT case ``ePRODUCT_CONCEPT_FEATURE_CATEGORY`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_CONCEPT_FEATURE_CATEGORY(ePRODUCT_CONCEPT_FEATURE_CATEGORY)	// (ENTITY)

    /// SELECT case ``ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE)	// (ENTITY)

    /// SELECT case ``ePRODUCT_CONCEPT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_CONCEPT_RELATIONSHIP(ePRODUCT_CONCEPT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_DEFINITION(ePRODUCT_DEFINITION)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_CONTEXT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_DEFINITION_CONTEXT(ePRODUCT_DEFINITION_CONTEXT)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_FORMATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_DEFINITION_FORMATION(ePRODUCT_DEFINITION_FORMATION)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_DEFINITION_RELATIONSHIP(ePRODUCT_DEFINITION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_USAGE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_DEFINITION_USAGE(ePRODUCT_DEFINITION_USAGE)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_USAGE_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_DEFINITION_USAGE_RELATIONSHIP(ePRODUCT_DEFINITION_USAGE_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DESIGN_TO_INDIVIDUAL`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_DESIGN_TO_INDIVIDUAL(ePRODUCT_DESIGN_TO_INDIVIDUAL)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL)	// (ENTITY)

    /// SELECT case ``ePRODUCT_GROUP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_GROUP(ePRODUCT_GROUP)	// (ENTITY)

    /// SELECT case ``ePRODUCT_GROUP_MEMBERSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_GROUP_MEMBERSHIP(ePRODUCT_GROUP_MEMBERSHIP)	// (ENTITY)

    /// SELECT case ``ePRODUCT_GROUP_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_GROUP_RELATIONSHIP(ePRODUCT_GROUP_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``ePRODUCT_PROCESS_PLAN`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_PROCESS_PLAN(ePRODUCT_PROCESS_PLAN)	// (ENTITY)

    /// SELECT case ``ePRODUCT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PRODUCT_RELATIONSHIP(ePRODUCT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``ePROPERTY_DEFINITION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PROPERTY_DEFINITION(ePROPERTY_DEFINITION)	// (ENTITY)

    /// SELECT case ``ePROPERTY_DEFINITION_REPRESENTATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _PROPERTY_DEFINITION_REPRESENTATION(ePROPERTY_DEFINITION_REPRESENTATION)	// (ENTITY)

    /// SELECT case ``eREPRESENTATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _REPRESENTATION(eREPRESENTATION)	// (ENTITY)

    /// SELECT case ``eREPRESENTATION_CONTEXT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _REPRESENTATION_CONTEXT(eREPRESENTATION_CONTEXT)	// (ENTITY)

    /// SELECT case ``eREPRESENTATION_ITEM`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _REPRESENTATION_ITEM(eREPRESENTATION_ITEM)	// (ENTITY)

    /// SELECT case ``eREPRESENTATION_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _REPRESENTATION_RELATIONSHIP(eREPRESENTATION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eREQUIREMENT_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _REQUIREMENT_ASSIGNMENT(eREQUIREMENT_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eREQUIREMENT_FOR_ACTION_RESOURCE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _REQUIREMENT_FOR_ACTION_RESOURCE(eREQUIREMENT_FOR_ACTION_RESOURCE)	// (ENTITY)

    /// SELECT case ``eREQUIREMENT_SOURCE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _REQUIREMENT_SOURCE(eREQUIREMENT_SOURCE)	// (ENTITY)

    /// SELECT case ``eRESOURCE_PROPERTY`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _RESOURCE_PROPERTY(eRESOURCE_PROPERTY)	// (ENTITY)

    /// SELECT case ``eRETENTION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _RETENTION(eRETENTION)	// (ENTITY)

    /// SELECT case ``eSATISFIES_REQUIREMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _SATISFIES_REQUIREMENT(eSATISFIES_REQUIREMENT)	// (ENTITY)

    /// SELECT case ``eSECURITY_CLASSIFICATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _SECURITY_CLASSIFICATION(eSECURITY_CLASSIFICATION)	// (ENTITY)

    /// SELECT case ``eSECURITY_CLASSIFICATION_LEVEL`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _SECURITY_CLASSIFICATION_LEVEL(eSECURITY_CLASSIFICATION_LEVEL)	// (ENTITY)

    /// SELECT case ``eSHAPE_ASPECT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _SHAPE_ASPECT(eSHAPE_ASPECT)	// (ENTITY)

    /// SELECT case ``eSHAPE_ASPECT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _SHAPE_ASPECT_RELATIONSHIP(eSHAPE_ASPECT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eSHAPE_FEATURE_DEFINITION_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _SHAPE_FEATURE_DEFINITION_RELATIONSHIP(eSHAPE_FEATURE_DEFINITION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(
      eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eSTATE_OBSERVED`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _STATE_OBSERVED(eSTATE_OBSERVED)	// (ENTITY)

    /// SELECT case ``eSTATE_OBSERVED_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _STATE_OBSERVED_ASSIGNMENT(eSTATE_OBSERVED_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eSTATE_OBSERVED_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _STATE_OBSERVED_RELATIONSHIP(eSTATE_OBSERVED_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eSTATE_OBSERVED_ROLE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _STATE_OBSERVED_ROLE(eSTATE_OBSERVED_ROLE)	// (ENTITY)

    /// SELECT case ``eSTATE_TYPE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _STATE_TYPE(eSTATE_TYPE)	// (ENTITY)

    /// SELECT case ``eSTATE_TYPE_ASSIGNMENT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _STATE_TYPE_ASSIGNMENT(eSTATE_TYPE_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eSTATE_TYPE_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _STATE_TYPE_RELATIONSHIP(eSTATE_TYPE_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eSTRUCTURED_MESSAGE`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _STRUCTURED_MESSAGE(eSTRUCTURED_MESSAGE)	// (ENTITY)

    /// SELECT case ``eTIME_INTERVAL_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _TIME_INTERVAL_RELATIONSHIP(eTIME_INTERVAL_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``eTYPE_QUALIFIER`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _TYPE_QUALIFIER(eTYPE_QUALIFIER)	// (ENTITY)

    /// SELECT case ``eUNCERTAINTY_MEASURE_WITH_UNIT`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _UNCERTAINTY_MEASURE_WITH_UNIT(eUNCERTAINTY_MEASURE_WITH_UNIT)	// (ENTITY)

    /// SELECT case ``eUSAGE_ASSOCIATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _USAGE_ASSOCIATION(eUSAGE_ASSOCIATION)	// (ENTITY)

    /// SELECT case ``eVALIDATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _VALIDATION(eVALIDATION)	// (ENTITY)

    /// SELECT case ``eVERIFICATION`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _VERIFICATION(eVERIFICATION)	// (ENTITY)

    /// SELECT case ``eVERSIONED_ACTION_REQUEST`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _VERSIONED_ACTION_REQUEST(eVERSIONED_ACTION_REQUEST)	// (ENTITY)

    /// SELECT case ``eVERSIONED_ACTION_REQUEST_RELATIONSHIP`` (ENTITY) in ``sCLASSIFICATION_ITEM``
    case _VERSIONED_ACTION_REQUEST_RELATIONSHIP(eVERSIONED_ACTION_REQUEST_RELATIONSHIP)	// (ENTITY)

    //MARK: - CONSTRUCTORS
    public init(fundamental: FundamentalType) { self = fundamental }

    public init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?){
      guard let underlyingType = underlyingType else { return nil }

      if let base = underlyingType as? sCLASSIFIED_ITEM {
        self = ._CLASSIFIED_ITEM(base)
      }
      else if let base = sCLASSIFIED_ITEM(possiblyFrom: underlyingType) {
        self = ._CLASSIFIED_ITEM(base)
      }
      else { return nil }
    }

    public init?(possiblyFrom complex: SDAI.ComplexEntity?) {
      guard let complex = complex else { return nil }

      if let base = complex.entityReference(eACTION.self) {self = ._ACTION(base) }
      else if let base = complex.entityReference(eACTION_DIRECTIVE.self) {self = ._ACTION_DIRECTIVE(base) }
      else if let base = complex.entityReference(eACTION_DIRECTIVE_RELATIONSHIP.self) {self = ._ACTION_DIRECTIVE_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eACTION_METHOD.self) {self = ._ACTION_METHOD(base) }
      else if let base = complex.entityReference(eACTION_METHOD_RELATIONSHIP.self) {self = ._ACTION_METHOD_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eACTION_PROPERTY.self) {self = ._ACTION_PROPERTY(base) }
      else if let base = complex.entityReference(eACTION_PROPERTY_REPRESENTATION.self) {self = ._ACTION_PROPERTY_REPRESENTATION(base) }
      else if let base = complex.entityReference(eACTION_RELATIONSHIP.self) {self = ._ACTION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eACTION_REQUEST_SOLUTION.self) {self = ._ACTION_REQUEST_SOLUTION(base) }
      else if let base = complex.entityReference(eACTION_REQUEST_STATUS.self) {self = ._ACTION_REQUEST_STATUS(base) }
      else if let base = complex.entityReference(eACTION_RESOURCE.self) {self = ._ACTION_RESOURCE(base) }
      else if let base = complex.entityReference(eACTION_RESOURCE_RELATIONSHIP.self) {self = ._ACTION_RESOURCE_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eADDRESS.self) {self = ._ADDRESS(base) }
      else if let base = complex.entityReference(eALTERNATE_PRODUCT_RELATIONSHIP.self) {self = ._ALTERNATE_PRODUCT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eALTERNATIVE_SOLUTION_RELATIONSHIP.self) {self = ._ALTERNATIVE_SOLUTION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eANALYSIS_ASSIGNMENT.self) {self = ._ANALYSIS_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ACTION_ASSIGNMENT.self) {self = ._APPLIED_ACTION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ACTION_METHOD_ASSIGNMENT.self) {self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ACTION_REQUEST_ASSIGNMENT.self) {self = ._APPLIED_ACTION_REQUEST_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_APPROVAL_ASSIGNMENT.self) {self = ._APPLIED_APPROVAL_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_CERTIFICATION_ASSIGNMENT.self) {self = ._APPLIED_CERTIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP.self) {self = ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eAPPLIED_CONTRACT_ASSIGNMENT.self) {self = ._APPLIED_CONTRACT_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_DATE_AND_TIME_ASSIGNMENT.self) {self = ._APPLIED_DATE_AND_TIME_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_DATE_ASSIGNMENT.self) {self = ._APPLIED_DATE_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT.self) {self = ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP.self) {self = ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eAPPLIED_DOCUMENT_REFERENCE.self) {self = ._APPLIED_DOCUMENT_REFERENCE(base) }
      else if let base = complex.entityReference(eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT.self) {self = ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_EFFECTIVITY_ASSIGNMENT.self) {self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT.self) {self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT.self) {self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP.self) {self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eAPPLIED_IDENTIFICATION_ASSIGNMENT.self) {self = ._APPLIED_IDENTIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_INEFFECTIVITY_ASSIGNMENT.self) {self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT.self) {self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ORGANIZATION_ASSIGNMENT.self) {self = ._APPLIED_ORGANIZATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.self) {self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.self) {self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_TIME_INTERVAL_ASSIGNMENT.self) {self = ._APPLIED_TIME_INTERVAL_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_USAGE_RIGHT.self) {self = ._APPLIED_USAGE_RIGHT(base) }
      else if let base = complex.entityReference(eAPPROVAL.self) {self = ._APPROVAL(base) }
      else if let base = complex.entityReference(eAPPROVAL_PERSON_ORGANIZATION.self) {self = ._APPROVAL_PERSON_ORGANIZATION(base) }
      else if let base = complex.entityReference(eAPPROVAL_RELATIONSHIP.self) {self = ._APPROVAL_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eAPPROVAL_STATUS.self) {self = ._APPROVAL_STATUS(base) }
      else if let base = complex.entityReference(eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE.self) {self = ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(base) }
      else if let base = complex.entityReference(eASSIGNMENT_OBJECT_RELATIONSHIP.self) {self = ._ASSIGNMENT_OBJECT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eATTRIBUTE_LANGUAGE_ASSIGNMENT.self) {self = ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eBREAKDOWN_CONTEXT.self) {self = ._BREAKDOWN_CONTEXT(base) }
      else if let base = complex.entityReference(eBREAKDOWN_ELEMENT_REALIZATION.self) {self = ._BREAKDOWN_ELEMENT_REALIZATION(base) }
      else if let base = complex.entityReference(eBREAKDOWN_OF.self) {self = ._BREAKDOWN_OF(base) }
      else if let base = complex.entityReference(eCALENDAR_DATE.self) {self = ._CALENDAR_DATE(base) }
      else if let base = complex.entityReference(eCERTIFICATION.self) {self = ._CERTIFICATION(base) }
      else if let base = complex.entityReference(eCHANGE_ELEMENT_SEQUENCE.self) {self = ._CHANGE_ELEMENT_SEQUENCE(base) }
      else if let base = complex.entityReference(eCHANGE_GROUP.self) {self = ._CHANGE_GROUP(base) }
      else if let base = complex.entityReference(eCHARACTERIZED_CLASS.self) {self = ._CHARACTERIZED_CLASS(base) }
      else if let base = complex.entityReference(eCHARACTERIZED_OBJECT.self) {self = ._CHARACTERIZED_OBJECT(base) }
      else if let base = complex.entityReference(eCLASS.self) {self = ._CLASS(base) }
      else if let base = sCLASSIFIED_ITEM(possiblyFrom: complex) {
        self = ._CLASSIFIED_ITEM(base)
      }
      else if let base = complex.entityReference(eCONFIGURATION_DESIGN.self) {self = ._CONFIGURATION_DESIGN(base) }
      else if let base = complex.entityReference(eCONFIGURATION_EFFECTIVITY.self) {self = ._CONFIGURATION_EFFECTIVITY(base) }
      else if let base = complex.entityReference(eCONFIGURATION_ITEM.self) {self = ._CONFIGURATION_ITEM(base) }
      else if let base = complex.entityReference(eCONFIGURATION_ITEM_RELATIONSHIP.self) {self = ._CONFIGURATION_ITEM_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eCONTEXT_DEPENDENT_UNIT.self) {self = ._CONTEXT_DEPENDENT_UNIT(base) }
      else if let base = complex.entityReference(eCONTRACT.self) {self = ._CONTRACT(base) }
      else if let base = complex.entityReference(eCONTRACT_RELATIONSHIP.self) {self = ._CONTRACT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eCONVERSION_BASED_UNIT.self) {self = ._CONVERSION_BASED_UNIT(base) }
      else if let base = complex.entityReference(eDATE_AND_TIME.self) {self = ._DATE_AND_TIME(base) }
      else if let base = complex.entityReference(eDATE_AND_TIME_ASSIGNMENT.self) {self = ._DATE_AND_TIME_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eDATE_ASSIGNMENT.self) {self = ._DATE_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eDEFINITIONAL_REPRESENTATION_RELATIONSHIP.self) {self = ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eDERIVED_UNIT.self) {self = ._DERIVED_UNIT(base) }
      else if let base = complex.entityReference(eDESCRIPTIVE_REPRESENTATION_ITEM.self) {self = ._DESCRIPTIVE_REPRESENTATION_ITEM(base) }
      else if let base = complex.entityReference(eDIRECTED_ACTION.self) {self = ._DIRECTED_ACTION(base) }
      else if let base = complex.entityReference(eDIRECTED_ACTION_ASSIGNMENT.self) {self = ._DIRECTED_ACTION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eDOCUMENT_FILE.self) {self = ._DOCUMENT_FILE(base) }
      else if let base = complex.entityReference(eDOCUMENT_RELATIONSHIP.self) {self = ._DOCUMENT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eDOCUMENT_TYPE.self) {self = ._DOCUMENT_TYPE(base) }
      else if let base = complex.entityReference(eEFFECTIVITY.self) {self = ._EFFECTIVITY(base) }
      else if let base = complex.entityReference(eEFFECTIVITY_RELATIONSHIP.self) {self = ._EFFECTIVITY_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eENVELOPE.self) {self = ._ENVELOPE(base) }
      else if let base = complex.entityReference(eENVELOPE_RELATIONSHIP.self) {self = ._ENVELOPE_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eEVALUATED_CHARACTERISTIC.self) {self = ._EVALUATED_CHARACTERISTIC(base) }
      else if let base = complex.entityReference(eEVENT_OCCURRENCE.self) {self = ._EVENT_OCCURRENCE(base) }
      else if let base = complex.entityReference(eEVENT_OCCURRENCE_RELATIONSHIP.self) {self = ._EVENT_OCCURRENCE_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eEVIDENCE.self) {self = ._EVIDENCE(base) }
      else if let base = complex.entityReference(eEXECUTED_ACTION.self) {self = ._EXECUTED_ACTION(base) }
      else if let base = complex.entityReference(eFEATURE_DEFINITION.self) {self = ._FEATURE_DEFINITION(base) }
      else if let base = complex.entityReference(eGENERAL_FEATURE.self) {self = ._GENERAL_FEATURE(base) }
      else if let base = complex.entityReference(eGENERAL_PROPERTY.self) {self = ._GENERAL_PROPERTY(base) }
      else if let base = complex.entityReference(eGENERAL_PROPERTY_RELATIONSHIP.self) {self = ._GENERAL_PROPERTY_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eGENERIC_PROPERTY_RELATIONSHIP.self) {self = ._GENERIC_PROPERTY_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eGROUP.self) {self = ._GROUP(base) }
      else if let base = complex.entityReference(eGROUP_RELATIONSHIP.self) {self = ._GROUP_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eIDENTIFICATION_ASSIGNMENT.self) {self = ._IDENTIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP.self) {self = ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eINFORMATION_RIGHT.self) {self = ._INFORMATION_RIGHT(base) }
      else if let base = complex.entityReference(eINFORMATION_USAGE_RIGHT.self) {self = ._INFORMATION_USAGE_RIGHT(base) }
      else if let base = complex.entityReference(eINTERFACE_CONNECTION.self) {self = ._INTERFACE_CONNECTION(base) }
      else if let base = complex.entityReference(eINTERFACE_CONNECTOR_AS_PLANNED.self) {self = ._INTERFACE_CONNECTOR_AS_PLANNED(base) }
      else if let base = complex.entityReference(eINTERFACE_CONNECTOR_AS_REALIZED.self) {self = ._INTERFACE_CONNECTOR_AS_REALIZED(base) }
      else if let base = complex.entityReference(eINTERFACE_CONNECTOR_DESIGN.self) {self = ._INTERFACE_CONNECTOR_DESIGN(base) }
      else if let base = complex.entityReference(eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED.self) {self = ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(base) }
      else if let base = complex.entityReference(eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED.self) {self = ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(base) }
      else if let base = complex.entityReference(eINTERFACE_CONNECTOR_OCCURRENCE.self) {self = ._INTERFACE_CONNECTOR_OCCURRENCE(base) }
      else if let base = complex.entityReference(eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED.self) {self = ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(base) }
      else if let base = complex.entityReference(eINTERFACE_DEFINITION_CONNECTION.self) {self = ._INTERFACE_DEFINITION_CONNECTION(base) }
      else if let base = complex.entityReference(eINTERFACE_DEFINITION_FOR.self) {self = ._INTERFACE_DEFINITION_FOR(base) }
      else if let base = complex.entityReference(eIN_ZONE.self) {self = ._IN_ZONE(base) }
      else if let base = complex.entityReference(eLANGUAGE.self) {self = ._LANGUAGE(base) }
      else if let base = complex.entityReference(eLINK_MOTION_RELATIONSHIP.self) {self = ._LINK_MOTION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eLOCAL_TIME.self) {self = ._LOCAL_TIME(base) }
      else if let base = complex.entityReference(eLOCATION.self) {self = ._LOCATION(base) }
      else if let base = complex.entityReference(eLOCATION_RELATIONSHIP.self) {self = ._LOCATION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eMATERIAL_DESIGNATION.self) {self = ._MATERIAL_DESIGNATION(base) }
      else if let base = complex.entityReference(eMATERIAL_DESIGNATION_CHARACTERIZATION.self) {self = ._MATERIAL_DESIGNATION_CHARACTERIZATION(base) }
      else if let base = complex.entityReference(eMEASURE_QUALIFICATION.self) {self = ._MEASURE_QUALIFICATION(base) }
      else if let base = complex.entityReference(eMEASURE_REPRESENTATION_ITEM.self) {self = ._MEASURE_REPRESENTATION_ITEM(base) }
      else if let base = complex.entityReference(eMEASURE_WITH_UNIT.self) {self = ._MEASURE_WITH_UNIT(base) }
      else if let base = complex.entityReference(eMESSAGE_RELATIONSHIP.self) {self = ._MESSAGE_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.self) {self = ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eNAMED_UNIT.self) {self = ._NAMED_UNIT(base) }
      else if let base = complex.entityReference(eORGANIZATION.self) {self = ._ORGANIZATION(base) }
      else if let base = complex.entityReference(eORGANIZATIONAL_ADDRESS.self) {self = ._ORGANIZATIONAL_ADDRESS(base) }
      else if let base = complex.entityReference(eORGANIZATIONAL_PROJECT.self) {self = ._ORGANIZATIONAL_PROJECT(base) }
      else if let base = complex.entityReference(eORGANIZATIONAL_PROJECT_RELATIONSHIP.self) {self = ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eORGANIZATION_RELATIONSHIP.self) {self = ._ORGANIZATION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(ePERSON.self) {self = ._PERSON(base) }
      else if let base = complex.entityReference(ePERSON_AND_ORGANIZATION.self) {self = ._PERSON_AND_ORGANIZATION(base) }
      else if let base = complex.entityReference(ePERSON_AND_ORGANIZATION_ADDRESS.self) {self = ._PERSON_AND_ORGANIZATION_ADDRESS(base) }
      else if let base = complex.entityReference(ePLUS_MINUS_TOLERANCE.self) {self = ._PLUS_MINUS_TOLERANCE(base) }
      else if let base = complex.entityReference(ePROCESS_OPERATION.self) {self = ._PROCESS_OPERATION(base) }
      else if let base = complex.entityReference(ePROCESS_PLAN.self) {self = ._PROCESS_PLAN(base) }
      else if let base = complex.entityReference(ePROCESS_PRODUCT_ASSOCIATION.self) {self = ._PROCESS_PRODUCT_ASSOCIATION(base) }
      else if let base = complex.entityReference(ePRODUCT.self) {self = ._PRODUCT(base) }
      else if let base = complex.entityReference(ePRODUCT_CONCEPT.self) {self = ._PRODUCT_CONCEPT(base) }
      else if let base = complex.entityReference(ePRODUCT_CONCEPT_CONTEXT.self) {self = ._PRODUCT_CONCEPT_CONTEXT(base) }
      else if let base = complex.entityReference(ePRODUCT_CONCEPT_FEATURE.self) {self = ._PRODUCT_CONCEPT_FEATURE(base) }
      else if let base = complex.entityReference(ePRODUCT_CONCEPT_FEATURE_ASSOCIATION.self) {self = ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(base) }
      else if let base = complex.entityReference(ePRODUCT_CONCEPT_FEATURE_CATEGORY.self) {self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY(base) }
      else if let base = complex.entityReference(ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE.self) {self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(base) }
      else if let base = complex.entityReference(ePRODUCT_CONCEPT_RELATIONSHIP.self) {self = ._PRODUCT_CONCEPT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION.self) {self = ._PRODUCT_DEFINITION(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_CONTEXT.self) {self = ._PRODUCT_DEFINITION_CONTEXT(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_FORMATION.self) {self = ._PRODUCT_DEFINITION_FORMATION(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.self) {self = ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_RELATIONSHIP.self) {self = ._PRODUCT_DEFINITION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_USAGE.self) {self = ._PRODUCT_DEFINITION_USAGE(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_USAGE_RELATIONSHIP.self) {self = ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(base) }
      else if let base = complex.entityReference(ePRODUCT_DESIGN_TO_INDIVIDUAL.self) {self = ._PRODUCT_DESIGN_TO_INDIVIDUAL(base) }
      else if let base = complex.entityReference(ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL.self) {self = ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(base) }
      else if let base = complex.entityReference(ePRODUCT_GROUP.self) {self = ._PRODUCT_GROUP(base) }
      else if let base = complex.entityReference(ePRODUCT_GROUP_MEMBERSHIP.self) {self = ._PRODUCT_GROUP_MEMBERSHIP(base) }
      else if let base = complex.entityReference(ePRODUCT_GROUP_RELATIONSHIP.self) {self = ._PRODUCT_GROUP_RELATIONSHIP(base) }
      else if let base = complex.entityReference(ePRODUCT_PROCESS_PLAN.self) {self = ._PRODUCT_PROCESS_PLAN(base) }
      else if let base = complex.entityReference(ePRODUCT_RELATIONSHIP.self) {self = ._PRODUCT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(ePROPERTY_DEFINITION.self) {self = ._PROPERTY_DEFINITION(base) }
      else if let base = complex.entityReference(ePROPERTY_DEFINITION_REPRESENTATION.self) {self = ._PROPERTY_DEFINITION_REPRESENTATION(base) }
      else if let base = complex.entityReference(eREPRESENTATION.self) {self = ._REPRESENTATION(base) }
      else if let base = complex.entityReference(eREPRESENTATION_CONTEXT.self) {self = ._REPRESENTATION_CONTEXT(base) }
      else if let base = complex.entityReference(eREPRESENTATION_ITEM.self) {self = ._REPRESENTATION_ITEM(base) }
      else if let base = complex.entityReference(eREPRESENTATION_RELATIONSHIP.self) {self = ._REPRESENTATION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eREQUIREMENT_ASSIGNMENT.self) {self = ._REQUIREMENT_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eREQUIREMENT_FOR_ACTION_RESOURCE.self) {self = ._REQUIREMENT_FOR_ACTION_RESOURCE(base) }
      else if let base = complex.entityReference(eREQUIREMENT_SOURCE.self) {self = ._REQUIREMENT_SOURCE(base) }
      else if let base = complex.entityReference(eRESOURCE_PROPERTY.self) {self = ._RESOURCE_PROPERTY(base) }
      else if let base = complex.entityReference(eRETENTION.self) {self = ._RETENTION(base) }
      else if let base = complex.entityReference(eSATISFIES_REQUIREMENT.self) {self = ._SATISFIES_REQUIREMENT(base) }
      else if let base = complex.entityReference(eSECURITY_CLASSIFICATION.self) {self = ._SECURITY_CLASSIFICATION(base) }
      else if let base = complex.entityReference(eSECURITY_CLASSIFICATION_LEVEL.self) {self = ._SECURITY_CLASSIFICATION_LEVEL(base) }
      else if let base = complex.entityReference(eSHAPE_ASPECT.self) {self = ._SHAPE_ASPECT(base) }
      else if let base = complex.entityReference(eSHAPE_ASPECT_RELATIONSHIP.self) {self = ._SHAPE_ASPECT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eSHAPE_FEATURE_DEFINITION_RELATIONSHIP.self) {self = ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP.self) {self = ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eSTATE_OBSERVED.self) {self = ._STATE_OBSERVED(base) }
      else if let base = complex.entityReference(eSTATE_OBSERVED_ASSIGNMENT.self) {self = ._STATE_OBSERVED_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eSTATE_OBSERVED_RELATIONSHIP.self) {self = ._STATE_OBSERVED_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eSTATE_OBSERVED_ROLE.self) {self = ._STATE_OBSERVED_ROLE(base) }
      else if let base = complex.entityReference(eSTATE_TYPE.self) {self = ._STATE_TYPE(base) }
      else if let base = complex.entityReference(eSTATE_TYPE_ASSIGNMENT.self) {self = ._STATE_TYPE_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eSTATE_TYPE_RELATIONSHIP.self) {self = ._STATE_TYPE_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eSTRUCTURED_MESSAGE.self) {self = ._STRUCTURED_MESSAGE(base) }
      else if let base = complex.entityReference(eTIME_INTERVAL_RELATIONSHIP.self) {self = ._TIME_INTERVAL_RELATIONSHIP(base) }
      else if let base = complex.entityReference(eTYPE_QUALIFIER.self) {self = ._TYPE_QUALIFIER(base) }
      else if let base = complex.entityReference(eUNCERTAINTY_MEASURE_WITH_UNIT.self) {self = ._UNCERTAINTY_MEASURE_WITH_UNIT(base) }
      else if let base = complex.entityReference(eUSAGE_ASSOCIATION.self) {self = ._USAGE_ASSOCIATION(base) }
      else if let base = complex.entityReference(eVALIDATION.self) {self = ._VALIDATION(base) }
      else if let base = complex.entityReference(eVERIFICATION.self) {self = ._VERIFICATION(base) }
      else if let base = complex.entityReference(eVERSIONED_ACTION_REQUEST.self) {self = ._VERSIONED_ACTION_REQUEST(base) }
      else if let base = complex.entityReference(eVERSIONED_ACTION_REQUEST_RELATIONSHIP.self) {self = ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(base) }
      else { return nil }
    }

    public init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let select = generic else { return nil }

      if let fundamental = select as? Self {
        self.init(fundamental: fundamental)
      }
      else if let base = eACTION.convert(fromGeneric: select) {
        self = ._ACTION(base)
      }
      else if let base = eACTION_DIRECTIVE.convert(fromGeneric: select) {
        self = ._ACTION_DIRECTIVE(base)
      }
      else if let base = eACTION_DIRECTIVE_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._ACTION_DIRECTIVE_RELATIONSHIP(base)
      }
      else if let base = eACTION_METHOD.convert(fromGeneric: select) {
        self = ._ACTION_METHOD(base)
      }
      else if let base = eACTION_METHOD_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._ACTION_METHOD_RELATIONSHIP(base)
      }
      else if let base = eACTION_PROPERTY.convert(fromGeneric: select) {
        self = ._ACTION_PROPERTY(base)
      }
      else if let base = eACTION_PROPERTY_REPRESENTATION.convert(fromGeneric: select) {
        self = ._ACTION_PROPERTY_REPRESENTATION(base)
      }
      else if let base = eACTION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._ACTION_RELATIONSHIP(base)
      }
      else if let base = eACTION_REQUEST_SOLUTION.convert(fromGeneric: select) {
        self = ._ACTION_REQUEST_SOLUTION(base)
      }
      else if let base = eACTION_REQUEST_STATUS.convert(fromGeneric: select) {
        self = ._ACTION_REQUEST_STATUS(base)
      }
      else if let base = eACTION_RESOURCE.convert(fromGeneric: select) {
        self = ._ACTION_RESOURCE(base)
      }
      else if let base = eACTION_RESOURCE_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._ACTION_RESOURCE_RELATIONSHIP(base)
      }
      else if let base = eADDRESS.convert(fromGeneric: select) {
        self = ._ADDRESS(base)
      }
      else if let base = eALTERNATE_PRODUCT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._ALTERNATE_PRODUCT_RELATIONSHIP(base)
      }
      else if let base = eALTERNATIVE_SOLUTION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._ALTERNATIVE_SOLUTION_RELATIONSHIP(base)
      }
      else if let base = eANALYSIS_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._ANALYSIS_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ACTION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ACTION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ACTION_METHOD_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ACTION_REQUEST_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ACTION_REQUEST_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_APPROVAL_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_APPROVAL_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_CERTIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_CERTIFICATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(base)
      }
      else if let base = eAPPLIED_CONTRACT_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_CONTRACT_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_DATE_AND_TIME_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_DATE_AND_TIME_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_DATE_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_DATE_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(base)
      }
      else if let base = eAPPLIED_DOCUMENT_REFERENCE.convert(fromGeneric: select) {
        self = ._APPLIED_DOCUMENT_REFERENCE(base)
      }
      else if let base = eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_EFFECTIVITY_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(base)
      }
      else if let base = eAPPLIED_IDENTIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_IDENTIFICATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_INEFFECTIVITY_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ORGANIZATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ORGANIZATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_TIME_INTERVAL_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_TIME_INTERVAL_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_USAGE_RIGHT.convert(fromGeneric: select) {
        self = ._APPLIED_USAGE_RIGHT(base)
      }
      else if let base = eAPPROVAL.convert(fromGeneric: select) {
        self = ._APPROVAL(base)
      }
      else if let base = eAPPROVAL_PERSON_ORGANIZATION.convert(fromGeneric: select) {
        self = ._APPROVAL_PERSON_ORGANIZATION(base)
      }
      else if let base = eAPPROVAL_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._APPROVAL_RELATIONSHIP(base)
      }
      else if let base = eAPPROVAL_STATUS.convert(fromGeneric: select) {
        self = ._APPROVAL_STATUS(base)
      }
      else if let base = eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE.convert(fromGeneric: select) {
        self = ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(base)
      }
      else if let base = eASSIGNMENT_OBJECT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._ASSIGNMENT_OBJECT_RELATIONSHIP(base)
      }
      else if let base = eATTRIBUTE_LANGUAGE_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(base)
      }
      else if let base = eBREAKDOWN_CONTEXT.convert(fromGeneric: select) {
        self = ._BREAKDOWN_CONTEXT(base)
      }
      else if let base = eBREAKDOWN_ELEMENT_REALIZATION.convert(fromGeneric: select) {
        self = ._BREAKDOWN_ELEMENT_REALIZATION(base)
      }
      else if let base = eBREAKDOWN_OF.convert(fromGeneric: select) {
        self = ._BREAKDOWN_OF(base)
      }
      else if let base = eCALENDAR_DATE.convert(fromGeneric: select) {
        self = ._CALENDAR_DATE(base)
      }
      else if let base = eCERTIFICATION.convert(fromGeneric: select) {
        self = ._CERTIFICATION(base)
      }
      else if let base = eCHANGE_ELEMENT_SEQUENCE.convert(fromGeneric: select) {
        self = ._CHANGE_ELEMENT_SEQUENCE(base)
      }
      else if let base = eCHANGE_GROUP.convert(fromGeneric: select) {
        self = ._CHANGE_GROUP(base)
      }
      else if let base = eCHARACTERIZED_CLASS.convert(fromGeneric: select) {
        self = ._CHARACTERIZED_CLASS(base)
      }
      else if let base = eCHARACTERIZED_OBJECT.convert(fromGeneric: select) {
        self = ._CHARACTERIZED_OBJECT(base)
      }
      else if let base = eCLASS.convert(fromGeneric: select) {
        self = ._CLASS(base)
      }
      else if let base = sCLASSIFIED_ITEM.convert(fromGeneric: select) {
        self = ._CLASSIFIED_ITEM(base)
      }
      else if let base = eCONFIGURATION_DESIGN.convert(fromGeneric: select) {
        self = ._CONFIGURATION_DESIGN(base)
      }
      else if let base = eCONFIGURATION_EFFECTIVITY.convert(fromGeneric: select) {
        self = ._CONFIGURATION_EFFECTIVITY(base)
      }
      else if let base = eCONFIGURATION_ITEM.convert(fromGeneric: select) {
        self = ._CONFIGURATION_ITEM(base)
      }
      else if let base = eCONFIGURATION_ITEM_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._CONFIGURATION_ITEM_RELATIONSHIP(base)
      }
      else if let base = eCONTEXT_DEPENDENT_UNIT.convert(fromGeneric: select) {
        self = ._CONTEXT_DEPENDENT_UNIT(base)
      }
      else if let base = eCONTRACT.convert(fromGeneric: select) {
        self = ._CONTRACT(base)
      }
      else if let base = eCONTRACT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._CONTRACT_RELATIONSHIP(base)
      }
      else if let base = eCONVERSION_BASED_UNIT.convert(fromGeneric: select) {
        self = ._CONVERSION_BASED_UNIT(base)
      }
      else if let base = eDATE_AND_TIME.convert(fromGeneric: select) {
        self = ._DATE_AND_TIME(base)
      }
      else if let base = eDATE_AND_TIME_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._DATE_AND_TIME_ASSIGNMENT(base)
      }
      else if let base = eDATE_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._DATE_ASSIGNMENT(base)
      }
      else if let base = eDEFINITIONAL_REPRESENTATION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(base)
      }
      else if let base = eDERIVED_UNIT.convert(fromGeneric: select) {
        self = ._DERIVED_UNIT(base)
      }
      else if let base = eDESCRIPTIVE_REPRESENTATION_ITEM.convert(fromGeneric: select) {
        self = ._DESCRIPTIVE_REPRESENTATION_ITEM(base)
      }
      else if let base = eDIRECTED_ACTION.convert(fromGeneric: select) {
        self = ._DIRECTED_ACTION(base)
      }
      else if let base = eDIRECTED_ACTION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._DIRECTED_ACTION_ASSIGNMENT(base)
      }
      else if let base = eDOCUMENT_FILE.convert(fromGeneric: select) {
        self = ._DOCUMENT_FILE(base)
      }
      else if let base = eDOCUMENT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._DOCUMENT_RELATIONSHIP(base)
      }
      else if let base = eDOCUMENT_TYPE.convert(fromGeneric: select) {
        self = ._DOCUMENT_TYPE(base)
      }
      else if let base = eEFFECTIVITY.convert(fromGeneric: select) {
        self = ._EFFECTIVITY(base)
      }
      else if let base = eEFFECTIVITY_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._EFFECTIVITY_RELATIONSHIP(base)
      }
      else if let base = eENVELOPE.convert(fromGeneric: select) {
        self = ._ENVELOPE(base)
      }
      else if let base = eENVELOPE_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._ENVELOPE_RELATIONSHIP(base)
      }
      else if let base = eEVALUATED_CHARACTERISTIC.convert(fromGeneric: select) {
        self = ._EVALUATED_CHARACTERISTIC(base)
      }
      else if let base = eEVENT_OCCURRENCE.convert(fromGeneric: select) {
        self = ._EVENT_OCCURRENCE(base)
      }
      else if let base = eEVENT_OCCURRENCE_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._EVENT_OCCURRENCE_RELATIONSHIP(base)
      }
      else if let base = eEVIDENCE.convert(fromGeneric: select) {
        self = ._EVIDENCE(base)
      }
      else if let base = eEXECUTED_ACTION.convert(fromGeneric: select) {
        self = ._EXECUTED_ACTION(base)
      }
      else if let base = eFEATURE_DEFINITION.convert(fromGeneric: select) {
        self = ._FEATURE_DEFINITION(base)
      }
      else if let base = eGENERAL_FEATURE.convert(fromGeneric: select) {
        self = ._GENERAL_FEATURE(base)
      }
      else if let base = eGENERAL_PROPERTY.convert(fromGeneric: select) {
        self = ._GENERAL_PROPERTY(base)
      }
      else if let base = eGENERAL_PROPERTY_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._GENERAL_PROPERTY_RELATIONSHIP(base)
      }
      else if let base = eGENERIC_PROPERTY_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._GENERIC_PROPERTY_RELATIONSHIP(base)
      }
      else if let base = eGROUP.convert(fromGeneric: select) {
        self = ._GROUP(base)
      }
      else if let base = eGROUP_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._GROUP_RELATIONSHIP(base)
      }
      else if let base = eIDENTIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._IDENTIFICATION_ASSIGNMENT(base)
      }
      else if let base = eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(base)
      }
      else if let base = eINFORMATION_RIGHT.convert(fromGeneric: select) {
        self = ._INFORMATION_RIGHT(base)
      }
      else if let base = eINFORMATION_USAGE_RIGHT.convert(fromGeneric: select) {
        self = ._INFORMATION_USAGE_RIGHT(base)
      }
      else if let base = eINTERFACE_CONNECTION.convert(fromGeneric: select) {
        self = ._INTERFACE_CONNECTION(base)
      }
      else if let base = eINTERFACE_CONNECTOR_AS_PLANNED.convert(fromGeneric: select) {
        self = ._INTERFACE_CONNECTOR_AS_PLANNED(base)
      }
      else if let base = eINTERFACE_CONNECTOR_AS_REALIZED.convert(fromGeneric: select) {
        self = ._INTERFACE_CONNECTOR_AS_REALIZED(base)
      }
      else if let base = eINTERFACE_CONNECTOR_DESIGN.convert(fromGeneric: select) {
        self = ._INTERFACE_CONNECTOR_DESIGN(base)
      }
      else if let base = eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED.convert(fromGeneric: select) {
        self = ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(base)
      }
      else if let base = eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED.convert(fromGeneric: select) {
        self = ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(base)
      }
      else if let base = eINTERFACE_CONNECTOR_OCCURRENCE.convert(fromGeneric: select) {
        self = ._INTERFACE_CONNECTOR_OCCURRENCE(base)
      }
      else if let base = eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED.convert(fromGeneric: select) {
        self = ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(base)
      }
      else if let base = eINTERFACE_DEFINITION_CONNECTION.convert(fromGeneric: select) {
        self = ._INTERFACE_DEFINITION_CONNECTION(base)
      }
      else if let base = eINTERFACE_DEFINITION_FOR.convert(fromGeneric: select) {
        self = ._INTERFACE_DEFINITION_FOR(base)
      }
      else if let base = eIN_ZONE.convert(fromGeneric: select) {
        self = ._IN_ZONE(base)
      }
      else if let base = eLANGUAGE.convert(fromGeneric: select) {
        self = ._LANGUAGE(base)
      }
      else if let base = eLINK_MOTION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._LINK_MOTION_RELATIONSHIP(base)
      }
      else if let base = eLOCAL_TIME.convert(fromGeneric: select) {
        self = ._LOCAL_TIME(base)
      }
      else if let base = eLOCATION.convert(fromGeneric: select) {
        self = ._LOCATION(base)
      }
      else if let base = eLOCATION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._LOCATION_RELATIONSHIP(base)
      }
      else if let base = eMATERIAL_DESIGNATION.convert(fromGeneric: select) {
        self = ._MATERIAL_DESIGNATION(base)
      }
      else if let base = eMATERIAL_DESIGNATION_CHARACTERIZATION.convert(fromGeneric: select) {
        self = ._MATERIAL_DESIGNATION_CHARACTERIZATION(base)
      }
      else if let base = eMEASURE_QUALIFICATION.convert(fromGeneric: select) {
        self = ._MEASURE_QUALIFICATION(base)
      }
      else if let base = eMEASURE_REPRESENTATION_ITEM.convert(fromGeneric: select) {
        self = ._MEASURE_REPRESENTATION_ITEM(base)
      }
      else if let base = eMEASURE_WITH_UNIT.convert(fromGeneric: select) {
        self = ._MEASURE_WITH_UNIT(base)
      }
      else if let base = eMESSAGE_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._MESSAGE_RELATIONSHIP(base)
      }
      else if let base = eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(base)
      }
      else if let base = eNAMED_UNIT.convert(fromGeneric: select) {
        self = ._NAMED_UNIT(base)
      }
      else if let base = eORGANIZATION.convert(fromGeneric: select) {
        self = ._ORGANIZATION(base)
      }
      else if let base = eORGANIZATIONAL_ADDRESS.convert(fromGeneric: select) {
        self = ._ORGANIZATIONAL_ADDRESS(base)
      }
      else if let base = eORGANIZATIONAL_PROJECT.convert(fromGeneric: select) {
        self = ._ORGANIZATIONAL_PROJECT(base)
      }
      else if let base = eORGANIZATIONAL_PROJECT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(base)
      }
      else if let base = eORGANIZATION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._ORGANIZATION_RELATIONSHIP(base)
      }
      else if let base = ePERSON.convert(fromGeneric: select) {
        self = ._PERSON(base)
      }
      else if let base = ePERSON_AND_ORGANIZATION.convert(fromGeneric: select) {
        self = ._PERSON_AND_ORGANIZATION(base)
      }
      else if let base = ePERSON_AND_ORGANIZATION_ADDRESS.convert(fromGeneric: select) {
        self = ._PERSON_AND_ORGANIZATION_ADDRESS(base)
      }
      else if let base = ePLUS_MINUS_TOLERANCE.convert(fromGeneric: select) {
        self = ._PLUS_MINUS_TOLERANCE(base)
      }
      else if let base = ePROCESS_OPERATION.convert(fromGeneric: select) {
        self = ._PROCESS_OPERATION(base)
      }
      else if let base = ePROCESS_PLAN.convert(fromGeneric: select) {
        self = ._PROCESS_PLAN(base)
      }
      else if let base = ePROCESS_PRODUCT_ASSOCIATION.convert(fromGeneric: select) {
        self = ._PROCESS_PRODUCT_ASSOCIATION(base)
      }
      else if let base = ePRODUCT.convert(fromGeneric: select) {
        self = ._PRODUCT(base)
      }
      else if let base = ePRODUCT_CONCEPT.convert(fromGeneric: select) {
        self = ._PRODUCT_CONCEPT(base)
      }
      else if let base = ePRODUCT_CONCEPT_CONTEXT.convert(fromGeneric: select) {
        self = ._PRODUCT_CONCEPT_CONTEXT(base)
      }
      else if let base = ePRODUCT_CONCEPT_FEATURE.convert(fromGeneric: select) {
        self = ._PRODUCT_CONCEPT_FEATURE(base)
      }
      else if let base = ePRODUCT_CONCEPT_FEATURE_ASSOCIATION.convert(fromGeneric: select) {
        self = ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(base)
      }
      else if let base = ePRODUCT_CONCEPT_FEATURE_CATEGORY.convert(fromGeneric: select) {
        self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY(base)
      }
      else if let base = ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE.convert(fromGeneric: select) {
        self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(base)
      }
      else if let base = ePRODUCT_CONCEPT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._PRODUCT_CONCEPT_RELATIONSHIP(base)
      }
      else if let base = ePRODUCT_DEFINITION.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION(base)
      }
      else if let base = ePRODUCT_DEFINITION_CONTEXT.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_CONTEXT(base)
      }
      else if let base = ePRODUCT_DEFINITION_FORMATION.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_FORMATION(base)
      }
      else if let base = ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(base)
      }
      else if let base = ePRODUCT_DEFINITION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_RELATIONSHIP(base)
      }
      else if let base = ePRODUCT_DEFINITION_USAGE.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_USAGE(base)
      }
      else if let base = ePRODUCT_DEFINITION_USAGE_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(base)
      }
      else if let base = ePRODUCT_DESIGN_TO_INDIVIDUAL.convert(fromGeneric: select) {
        self = ._PRODUCT_DESIGN_TO_INDIVIDUAL(base)
      }
      else if let base = ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL.convert(fromGeneric: select) {
        self = ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(base)
      }
      else if let base = ePRODUCT_GROUP.convert(fromGeneric: select) {
        self = ._PRODUCT_GROUP(base)
      }
      else if let base = ePRODUCT_GROUP_MEMBERSHIP.convert(fromGeneric: select) {
        self = ._PRODUCT_GROUP_MEMBERSHIP(base)
      }
      else if let base = ePRODUCT_GROUP_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._PRODUCT_GROUP_RELATIONSHIP(base)
      }
      else if let base = ePRODUCT_PROCESS_PLAN.convert(fromGeneric: select) {
        self = ._PRODUCT_PROCESS_PLAN(base)
      }
      else if let base = ePRODUCT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._PRODUCT_RELATIONSHIP(base)
      }
      else if let base = ePROPERTY_DEFINITION.convert(fromGeneric: select) {
        self = ._PROPERTY_DEFINITION(base)
      }
      else if let base = ePROPERTY_DEFINITION_REPRESENTATION.convert(fromGeneric: select) {
        self = ._PROPERTY_DEFINITION_REPRESENTATION(base)
      }
      else if let base = eREPRESENTATION.convert(fromGeneric: select) {
        self = ._REPRESENTATION(base)
      }
      else if let base = eREPRESENTATION_CONTEXT.convert(fromGeneric: select) {
        self = ._REPRESENTATION_CONTEXT(base)
      }
      else if let base = eREPRESENTATION_ITEM.convert(fromGeneric: select) {
        self = ._REPRESENTATION_ITEM(base)
      }
      else if let base = eREPRESENTATION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._REPRESENTATION_RELATIONSHIP(base)
      }
      else if let base = eREQUIREMENT_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._REQUIREMENT_ASSIGNMENT(base)
      }
      else if let base = eREQUIREMENT_FOR_ACTION_RESOURCE.convert(fromGeneric: select) {
        self = ._REQUIREMENT_FOR_ACTION_RESOURCE(base)
      }
      else if let base = eREQUIREMENT_SOURCE.convert(fromGeneric: select) {
        self = ._REQUIREMENT_SOURCE(base)
      }
      else if let base = eRESOURCE_PROPERTY.convert(fromGeneric: select) {
        self = ._RESOURCE_PROPERTY(base)
      }
      else if let base = eRETENTION.convert(fromGeneric: select) {
        self = ._RETENTION(base)
      }
      else if let base = eSATISFIES_REQUIREMENT.convert(fromGeneric: select) {
        self = ._SATISFIES_REQUIREMENT(base)
      }
      else if let base = eSECURITY_CLASSIFICATION.convert(fromGeneric: select) {
        self = ._SECURITY_CLASSIFICATION(base)
      }
      else if let base = eSECURITY_CLASSIFICATION_LEVEL.convert(fromGeneric: select) {
        self = ._SECURITY_CLASSIFICATION_LEVEL(base)
      }
      else if let base = eSHAPE_ASPECT.convert(fromGeneric: select) {
        self = ._SHAPE_ASPECT(base)
      }
      else if let base = eSHAPE_ASPECT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._SHAPE_ASPECT_RELATIONSHIP(base)
      }
      else if let base = eSHAPE_FEATURE_DEFINITION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(base)
      }
      else if let base = eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(base)
      }
      else if let base = eSTATE_OBSERVED.convert(fromGeneric: select) {
        self = ._STATE_OBSERVED(base)
      }
      else if let base = eSTATE_OBSERVED_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._STATE_OBSERVED_ASSIGNMENT(base)
      }
      else if let base = eSTATE_OBSERVED_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._STATE_OBSERVED_RELATIONSHIP(base)
      }
      else if let base = eSTATE_OBSERVED_ROLE.convert(fromGeneric: select) {
        self = ._STATE_OBSERVED_ROLE(base)
      }
      else if let base = eSTATE_TYPE.convert(fromGeneric: select) {
        self = ._STATE_TYPE(base)
      }
      else if let base = eSTATE_TYPE_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._STATE_TYPE_ASSIGNMENT(base)
      }
      else if let base = eSTATE_TYPE_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._STATE_TYPE_RELATIONSHIP(base)
      }
      else if let base = eSTRUCTURED_MESSAGE.convert(fromGeneric: select) {
        self = ._STRUCTURED_MESSAGE(base)
      }
      else if let base = eTIME_INTERVAL_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._TIME_INTERVAL_RELATIONSHIP(base)
      }
      else if let base = eTYPE_QUALIFIER.convert(fromGeneric: select) {
        self = ._TYPE_QUALIFIER(base)
      }
      else if let base = eUNCERTAINTY_MEASURE_WITH_UNIT.convert(fromGeneric: select) {
        self = ._UNCERTAINTY_MEASURE_WITH_UNIT(base)
      }
      else if let base = eUSAGE_ASSOCIATION.convert(fromGeneric: select) {
        self = ._USAGE_ASSOCIATION(base)
      }
      else if let base = eVALIDATION.convert(fromGeneric: select) {
        self = ._VALIDATION(base)
      }
      else if let base = eVERIFICATION.convert(fromGeneric: select) {
        self = ._VERIFICATION(base)
      }
      else if let base = eVERSIONED_ACTION_REQUEST.convert(fromGeneric: select) {
        self = ._VERSIONED_ACTION_REQUEST(base)
      }
      else if let base = eVERSIONED_ACTION_REQUEST_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(base)
      }
      else { return nil }
    }

    // InitializableByP21Parameter
    public static var bareTypeName: String = "CLASSIFICATION_ITEM"

    public init?(p21typedParam: P21Decode.ExchangeStructure.TypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      guard let keyword = p21typedParam.keyword.asStandardKeyword else { exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"; return nil }

      switch(keyword) {
      case sCLASSIFIED_ITEM.bareTypeName:
        guard let base = sCLASSIFIED_ITEM(p21typedParam: p21typedParam, from: exchangeStructure) else { exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) select value"); return nil }
        self = ._CLASSIFIED_ITEM(base)

      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"
        return nil
      }
    }

    public init?(p21untypedParam: P21Decode.ExchangeStructure.UntypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      switch p21untypedParam {
      case .rhsOccurenceName(let rhsname):
        switch rhsname {
        case .constantEntityName(let name):
          guard let entity = exchangeStructure.resolve(constantEntityName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: entity.complexEntity)

        case .entityInstanceName(let name):
          guard let complex = exchangeStructure.resolve(entityInstanceName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: complex)

        default:
          exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
          return nil
        }

      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
        return nil
      }
    }

    public init?(p21omittedParamfrom exchangeStructure: P21Decode.ExchangeStructure) {
      return nil
    }


    //MARK: - NON-ENTITY UNDERLYING TYPE REFERENCES
    public var super_sCLASSIFIED_ITEM: sCLASSIFIED_ITEM? {
      switch self {
      case ._CLASSIFIED_ITEM(let selectValue): return selectValue
      default: return nil
      }
    }

    //MARK: - ENTITY UNDERLYING TYPE REFERENCES
    public var super_eGROUP_RELATIONSHIP: eGROUP_RELATIONSHIP? {
      switch self {
      case ._CHANGE_ELEMENT_SEQUENCE(let entity): return entity.super_eGROUP_RELATIONSHIP
      case ._GROUP_RELATIONSHIP(let entity): return entity
      case ._PRODUCT_GROUP_RELATIONSHIP(let entity): return entity.super_eGROUP_RELATIONSHIP
      default: return nil
      }
    }

    public var super_ePLUS_MINUS_TOLERANCE: ePLUS_MINUS_TOLERANCE? {
      switch self {
      case ._PLUS_MINUS_TOLERANCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT: 
      eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eREPRESENTATION_RELATIONSHIP: eREPRESENTATION_RELATIONSHIP? {
      switch self {
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let entity): return entity
        .super_eREPRESENTATION_RELATIONSHIP
      case ._EVALUATED_CHARACTERISTIC(let entity): return entity.super_eREPRESENTATION_RELATIONSHIP
      case ._LINK_MOTION_RELATIONSHIP(let entity): return entity.super_eREPRESENTATION_RELATIONSHIP
      case ._REPRESENTATION_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eDATE_AND_TIME: eDATE_AND_TIME? {
      switch self {
      case ._DATE_AND_TIME(let entity): return entity
      default: return nil
      }
    }

    public var super_eGENERIC_PROPERTY_RELATIONSHIP: eGENERIC_PROPERTY_RELATIONSHIP? {
      switch self {
      case ._GENERIC_PROPERTY_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eRETENTION: eRETENTION? {
      switch self {
      case ._RETENTION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP: 
      eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP? {
      switch self {
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE: eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE? {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let entity): return entity
      default: return nil
      }
    }

    public var super_eEVENT_OCCURRENCE_RELATIONSHIP: eEVENT_OCCURRENCE_RELATIONSHIP? {
      switch self {
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eMATERIAL_DESIGNATION: eMATERIAL_DESIGNATION? {
      switch self {
      case ._MATERIAL_DESIGNATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eORGANIZATION_ASSIGNMENT: eORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.super_eORGANIZATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eREPRESENTATION: eREPRESENTATION? {
      switch self {
      case ._EVALUATED_CHARACTERISTIC(let entity): return entity.super_eREPRESENTATION
      case ._REPRESENTATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eSTATE_OBSERVED_ROLE: eSTATE_OBSERVED_ROLE? {
      switch self {
      case ._STATE_OBSERVED_ROLE(let entity): return entity
      default: return nil
      }
    }

    public var super_eENVELOPE_RELATIONSHIP: eENVELOPE_RELATIONSHIP? {
      switch self {
      case ._ENVELOPE_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eENVELOPE: eENVELOPE? {
      switch self {
      case ._ENVELOPE(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_RESOURCE_REQUIREMENT: eACTION_RESOURCE_REQUIREMENT? {
      switch self {
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.super_eACTION_RESOURCE_REQUIREMENT
      default: return nil
      }
    }

    public var super_eREQUIREMENT_SOURCE: eREQUIREMENT_SOURCE? {
      switch self {
      case ._REQUIREMENT_SOURCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eINFORMATION_USAGE_RIGHT: eINFORMATION_USAGE_RIGHT? {
      switch self {
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_IDENTIFICATION_ASSIGNMENT: eAPPLIED_IDENTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eEFFECTIVITY_RELATIONSHIP: eEFFECTIVITY_RELATIONSHIP? {
      switch self {
      case ._EFFECTIVITY_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eORGANIZATION_RELATIONSHIP: eORGANIZATION_RELATIONSHIP? {
      switch self {
      case ._ORGANIZATION_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eALTERNATIVE_SOLUTION_RELATIONSHIP: eALTERNATIVE_SOLUTION_RELATIONSHIP? {
      switch self {
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eGENERAL_FEATURE: eGENERAL_FEATURE? {
      switch self {
      case ._GENERAL_FEATURE(let entity): return entity
      default: return nil
      }
    }

    public var super_eINTERFACE_DEFINITION_CONNECTION: eINTERFACE_DEFINITION_CONNECTION? {
      switch self {
      case ._INTERFACE_DEFINITION_CONNECTION(let entity): return entity
      default: return nil
      }
    }

    public var super_eORGANIZATIONAL_ADDRESS: eORGANIZATIONAL_ADDRESS? {
      switch self {
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.super_eORGANIZATIONAL_ADDRESS
      default: return nil
      }
    }

    public var super_ePERSONAL_ADDRESS: ePERSONAL_ADDRESS? {
      switch self {
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.super_ePERSONAL_ADDRESS
      default: return nil
      }
    }

    public var super_eSHAPE_ASPECT_RELATIONSHIP: eSHAPE_ASPECT_RELATIONSHIP? {
      switch self {
      case ._SHAPE_ASPECT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eEFFECTIVITY_ASSIGNMENT: eEFFECTIVITY_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.super_eEFFECTIVITY_ASSIGNMENT
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.super_eEFFECTIVITY_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_USAGE_RIGHT: eAPPLIED_USAGE_RIGHT? {
      switch self {
      case ._APPLIED_USAGE_RIGHT(let entity): return entity
      default: return nil
      }
    }

    public var super_eCHANGE_GROUP: eCHANGE_GROUP? {
      switch self {
      case ._CHANGE_GROUP(let entity): return entity
      default: return nil
      }
    }

    public var super_eINFORMATION_RIGHT: eINFORMATION_RIGHT? {
      switch self {
      case ._INFORMATION_RIGHT(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_CERTIFICATION_ASSIGNMENT: eAPPLIED_CERTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eINTERFACE_CONNECTOR_AS_PLANNED: eINTERFACE_CONNECTOR_AS_PLANNED? {
      switch self {
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let entity): return entity
      default: return nil
      }
    }

    public var super_ePROPERTY_DEFINITION_REPRESENTATION: ePROPERTY_DEFINITION_REPRESENTATION? {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eSECURITY_CLASSIFICATION_LEVEL: eSECURITY_CLASSIFICATION_LEVEL? {
      switch self {
      case ._SECURITY_CLASSIFICATION_LEVEL(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_TIME_INTERVAL_ASSIGNMENT: eAPPLIED_TIME_INTERVAL_ASSIGNMENT? {
      switch self {
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eEVENT_OCCURRENCE: eEVENT_OCCURRENCE? {
      switch self {
      case ._EVENT_OCCURRENCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eEVALUATED_CHARACTERISTIC: eEVALUATED_CHARACTERISTIC? {
      switch self {
      case ._EVALUATED_CHARACTERISTIC(let entity): return entity
      default: return nil
      }
    }

    public var super_eLOCATION_RELATIONSHIP: eLOCATION_RELATIONSHIP? {
      switch self {
      case ._LOCATION_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_REQUEST_STATUS: eACTION_REQUEST_STATUS? {
      switch self {
      case ._ACTION_REQUEST_STATUS(let entity): return entity
      default: return nil
      }
    }

    public var super_ePERSON: ePERSON? {
      switch self {
      case ._PERSON(let entity): return entity
      default: return nil
      }
    }

    public var super_eSTATE_TYPE: eSTATE_TYPE? {
      switch self {
      case ._STATE_TYPE(let entity): return entity
      default: return nil
      }
    }

    public var super_eINTERFACE_CONNECTOR_DESIGN: eINTERFACE_CONNECTOR_DESIGN? {
      switch self {
      case ._INTERFACE_CONNECTOR_DESIGN(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_RELATIONSHIP: eACTION_RELATIONSHIP? {
      switch self {
      case ._ACTION_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPROVAL_RELATIONSHIP: eAPPROVAL_RELATIONSHIP? {
      switch self {
      case ._APPROVAL_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eCHARACTERIZED_OBJECT_RELATIONSHIP: eCHARACTERIZED_OBJECT_RELATIONSHIP? {
      switch self {
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let entity): return entity
        .super_eCHARACTERIZED_OBJECT_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eCERTIFICATION: eCERTIFICATION? {
      switch self {
      case ._CERTIFICATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eMEASURE_REPRESENTATION_ITEM: eMEASURE_REPRESENTATION_ITEM? {
      switch self {
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity
      default: return nil
      }
    }

    public var super_eIDENTIFICATION_ASSIGNMENT: eIDENTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity
        .super_eIDENTIFICATION_ASSIGNMENT
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let entity): return entity.super_eIDENTIFICATION_ASSIGNMENT
      case ._IDENTIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePROPERTY_DEFINITION: ePROPERTY_DEFINITION? {
      switch self {
      case ._PROPERTY_DEFINITION(let entity): return entity
      default: return nil
      }
    }

    public var super_eSTATE_TYPE_ASSIGNMENT: eSTATE_TYPE_ASSIGNMENT? {
      switch self {
      case ._STATE_TYPE_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eORGANIZATIONAL_PROJECT_RELATIONSHIP: eORGANIZATIONAL_PROJECT_RELATIONSHIP? {
      switch self {
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eTYPE_QUALIFIER: eTYPE_QUALIFIER? {
      switch self {
      case ._TYPE_QUALIFIER(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPROVAL: eAPPROVAL? {
      switch self {
      case ._APPROVAL(let entity): return entity
      default: return nil
      }
    }

    public var super_eSTRUCTURED_MESSAGE: eSTRUCTURED_MESSAGE? {
      switch self {
      case ._STRUCTURED_MESSAGE(let entity): return entity
      default: return nil
      }
    }

    public var super_eVALIDATION: eVALIDATION? {
      switch self {
      case ._VALIDATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP: 
      eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP? {
      switch self {
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_CONCEPT: ePRODUCT_CONCEPT? {
      switch self {
      case ._PRODUCT_CONCEPT(let entity): return entity
      default: return nil
      }
    }

    public var super_eGROUP: eGROUP? {
      switch self {
      case ._ANALYSIS_ASSIGNMENT(let entity): return entity.super_eGROUP
      case ._BREAKDOWN_ELEMENT_REALIZATION(let entity): return entity.super_eGROUP
      case ._CHANGE_GROUP(let entity): return entity.super_eGROUP
      case ._CHARACTERIZED_CLASS(let entity): return entity.super_eGROUP
      case ._CLASS(let entity): return entity.super_eGROUP
      case ._GROUP(let entity): return entity
      case ._INTERFACE_CONNECTION(let entity): return entity.super_eGROUP
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let entity): return entity.super_eGROUP
      case ._IN_ZONE(let entity): return entity.super_eGROUP
      case ._LANGUAGE(let entity): return entity.super_eGROUP
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let entity): return entity.super_eGROUP
      case ._PRODUCT_GROUP(let entity): return entity.super_eGROUP
      case ._REQUIREMENT_ASSIGNMENT(let entity): return entity.super_eGROUP
      case ._REQUIREMENT_SOURCE(let entity): return entity.super_eGROUP
      case ._SATISFIES_REQUIREMENT(let entity): return entity.super_eGROUP
      case ._VALIDATION(let entity): return entity.super_eGROUP
      case ._VERIFICATION(let entity): return entity.super_eGROUP
      default: return nil
      }
    }

    public var super_ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL: ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL? {
      switch self {
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let entity): return entity
      default: return nil
      }
    }

    public var super_eCONFIGURATION_ITEM: eCONFIGURATION_ITEM? {
      switch self {
      case ._CONFIGURATION_ITEM(let entity): return entity
      default: return nil
      }
    }

    public var super_eINTERFACE_CONNECTOR_AS_REALIZED: eINTERFACE_CONNECTOR_AS_REALIZED? {
      switch self {
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let entity): return entity
      default: return nil
      }
    }

    public var super_eMESSAGE_RELATIONSHIP: eMESSAGE_RELATIONSHIP? {
      switch self {
      case ._MESSAGE_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_ePROCESS_PLAN: ePROCESS_PLAN? {
      switch self {
      case ._PROCESS_PLAN(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLICATION_CONTEXT_ELEMENT: eAPPLICATION_CONTEXT_ELEMENT? {
      switch self {
      case ._PRODUCT_CONCEPT_CONTEXT(let entity): return entity.super_eAPPLICATION_CONTEXT_ELEMENT
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.super_eAPPLICATION_CONTEXT_ELEMENT
      default: return nil
      }
    }

    public var super_eREPRESENTATION_CONTEXT: eREPRESENTATION_CONTEXT? {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity
      default: return nil
      }
    }

    public var super_eCLASS: eCLASS? {
      switch self {
      case ._CHARACTERIZED_CLASS(let entity): return entity.super_eCLASS
      case ._CLASS(let entity): return entity
      default: return nil
      }
    }

    public var super_eDESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP: eDESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP? {
      switch self {
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let entity): return entity
        .super_eDESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): return entity
        .super_eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT: 
      eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eANALYSIS_ASSIGNMENT: eANALYSIS_ASSIGNMENT? {
      switch self {
      case ._ANALYSIS_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_EFFECTIVITY_ASSIGNMENT: eAPPLIED_EFFECTIVITY_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eSTATE_OBSERVED_ASSIGNMENT: eSTATE_OBSERVED_ASSIGNMENT? {
      switch self {
      case ._STATE_OBSERVED_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eSTATE_TYPE_RELATIONSHIP: eSTATE_TYPE_RELATIONSHIP? {
      switch self {
      case ._STATE_TYPE_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_DATE_AND_TIME_ASSIGNMENT: eAPPLIED_DATE_AND_TIME_ASSIGNMENT? {
      switch self {
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_METHOD: eACTION_METHOD? {
      switch self {
      case ._ACTION_METHOD(let entity): return entity
      case ._INFORMATION_RIGHT(let entity): return entity.super_eACTION_METHOD
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity.super_eACTION_METHOD
      case ._PROCESS_OPERATION(let entity): return entity.super_eACTION_METHOD
      default: return nil
      }
    }

    public var super_eGROUP_ASSIGNMENT: eGROUP_ASSIGNMENT? {
      switch self {
      case ._EVIDENCE(let entity): return entity.super_eGROUP_ASSIGNMENT
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): return entity.super_eGROUP_ASSIGNMENT
      case ._PRODUCT_GROUP_MEMBERSHIP(let entity): return entity.super_eGROUP_ASSIGNMENT
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_PROCESS: ePRODUCT_DEFINITION_PROCESS? {
      switch self {
      case ._PRODUCT_PROCESS_PLAN(let entity): return entity.super_ePRODUCT_DEFINITION_PROCESS
      default: return nil
      }
    }

    public var super_eCONFIGURATION_DESIGN: eCONFIGURATION_DESIGN? {
      switch self {
      case ._CONFIGURATION_DESIGN(let entity): return entity
      default: return nil
      }
    }

    public var super_eCONTEXT_DEPENDENT_UNIT: eCONTEXT_DEPENDENT_UNIT? {
      switch self {
      case ._CONTEXT_DEPENDENT_UNIT(let entity): return entity
      default: return nil
      }
    }

    public var super_eEXECUTED_ACTION: eEXECUTED_ACTION? {
      switch self {
      case ._DIRECTED_ACTION(let entity): return entity.super_eEXECUTED_ACTION
      case ._EXECUTED_ACTION(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_RELATIONSHIP_RELATIONSHIP: 
      ePRODUCT_DEFINITION_RELATIONSHIP_RELATIONSHIP? {
      switch self {
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let entity): return entity
        .super_ePRODUCT_DEFINITION_RELATIONSHIP_RELATIONSHIP
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP: 
      ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP? {
      switch self {
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let entity): return entity
        .super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let entity): return entity
        .super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let entity): return entity
        .super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let entity): return entity
        .super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let entity): return entity
        .super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eGENERAL_PROPERTY_RELATIONSHIP: eGENERAL_PROPERTY_RELATIONSHIP? {
      switch self {
      case ._GENERAL_PROPERTY_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eCONTRACT_ASSIGNMENT: eCONTRACT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.super_eCONTRACT_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eDATE_ASSIGNMENT: eDATE_ASSIGNMENT? {
      switch self {
      case ._APPLIED_DATE_ASSIGNMENT(let entity): return entity.super_eDATE_ASSIGNMENT
      case ._DATE_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eCHARACTERIZED_CLASS: eCHARACTERIZED_CLASS? {
      switch self {
      case ._CHARACTERIZED_CLASS(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_CONCEPT_FEATURE: ePRODUCT_CONCEPT_FEATURE? {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE(let entity): return entity
      default: return nil
      }
    }

    public var super_eDESCRIPTION_TEXT_ASSIGNMENT: eDESCRIPTION_TEXT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let entity): return entity
        .super_eDESCRIPTION_TEXT_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_DATE_ASSIGNMENT: eAPPLIED_DATE_ASSIGNMENT? {
      switch self {
      case ._APPLIED_DATE_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePERSON_AND_ORGANIZATION_ASSIGNMENT: ePERSON_AND_ORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity
        .super_ePERSON_AND_ORGANIZATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eSHAPE_FEATURE_DEFINITION: eSHAPE_FEATURE_DEFINITION? {
      switch self {
      case ._GENERAL_FEATURE(let entity): return entity.super_eSHAPE_FEATURE_DEFINITION
      default: return nil
      }
    }

    public var super_eACTION_PROPERTY: eACTION_PROPERTY? {
      switch self {
      case ._ACTION_PROPERTY(let entity): return entity
      default: return nil
      }
    }

    public var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT: eEXTERNAL_IDENTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity
        .super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_USAGE: ePRODUCT_DEFINITION_USAGE? {
      switch self {
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_REQUEST_ASSIGNMENT: eACTION_REQUEST_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let entity): return entity.super_eACTION_REQUEST_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eORGANIZATION: eORGANIZATION? {
      switch self {
      case ._ORGANIZATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT: eAPPLIED_INEFFECTIVITY_ASSIGNMENT? {
      switch self {
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eDERIVED_UNIT: eDERIVED_UNIT? {
      switch self {
      case ._DERIVED_UNIT(let entity): return entity
      default: return nil
      }
    }

    public var super_eORGANIZATIONAL_PROJECT_ASSIGNMENT: eORGANIZATIONAL_PROJECT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity
        .super_eORGANIZATIONAL_PROJECT_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_ACTION_METHOD_ASSIGNMENT: eAPPLIED_ACTION_METHOD_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT: eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT? {
      switch self {
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eATTRIBUTE_CLASSIFICATION_ASSIGNMENT: eATTRIBUTE_CLASSIFICATION_ASSIGNMENT? {
      switch self {
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity
        .super_eATTRIBUTE_CLASSIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_ePRODUCT_GROUP: ePRODUCT_GROUP? {
      switch self {
      case ._PRODUCT_GROUP(let entity): return entity
      default: return nil
      }
    }

    public var super_eGENERAL_PROPERTY: eGENERAL_PROPERTY? {
      switch self {
      case ._GENERAL_PROPERTY(let entity): return entity
      default: return nil
      }
    }

    public var super_eATTRIBUTE_VALUE_ASSIGNMENT: eATTRIBUTE_VALUE_ASSIGNMENT? {
      switch self {
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let entity): return entity.super_eATTRIBUTE_VALUE_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eCALENDAR_DATE: eCALENDAR_DATE? {
      switch self {
      case ._CALENDAR_DATE(let entity): return entity
      default: return nil
      }
    }

    public var super_eSTATE_OBSERVED: eSTATE_OBSERVED? {
      switch self {
      case ._STATE_OBSERVED(let entity): return entity
      default: return nil
      }
    }

    public var super_eFEATURE_DEFINITION: eFEATURE_DEFINITION? {
      switch self {
      case ._FEATURE_DEFINITION(let entity): return entity
      case ._GENERAL_FEATURE(let entity): return entity.super_eFEATURE_DEFINITION
      default: return nil
      }
    }

    public var super_eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED: eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED? {
      switch self {
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let entity): return entity
      default: return nil
      }
    }

    public var super_eRESOURCE_PROPERTY: eRESOURCE_PROPERTY? {
      switch self {
      case ._RESOURCE_PROPERTY(let entity): return entity
      default: return nil
      }
    }

    public var super_eREPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION: 
      eREPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION? {
      switch self {
      case ._LINK_MOTION_RELATIONSHIP(let entity): return entity
        .super_eREPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION
      default: return nil
      }
    }

    public var super_ePRODUCT_GROUP_MEMBERSHIP: ePRODUCT_GROUP_MEMBERSHIP? {
      switch self {
      case ._PRODUCT_GROUP_MEMBERSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eBREAKDOWN_CONTEXT: eBREAKDOWN_CONTEXT? {
      switch self {
      case ._BREAKDOWN_CONTEXT(let entity): return entity
      default: return nil
      }
    }

    public var super_eVERSIONED_ACTION_REQUEST_RELATIONSHIP: eVERSIONED_ACTION_REQUEST_RELATIONSHIP? {
      switch self {
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION: ePRODUCT_DEFINITION? {
      switch self {
      case ._CLASSIFIED_ITEM(let select): return select.super_ePRODUCT_DEFINITION
      case ._PRODUCT_DEFINITION(let entity): return entity
      default: return nil
      }
    }

    public var super_eINTERFACE_CONNECTION: eINTERFACE_CONNECTION? {
      switch self {
      case ._INTERFACE_CONNECTION(let entity): return entity
      default: return nil
      }
    }

    public var super_eSECURITY_CLASSIFICATION_ASSIGNMENT: eSECURITY_CLASSIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity
        .super_eSECURITY_CLASSIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eLINK_MOTION_RELATIONSHIP: eLINK_MOTION_RELATIONSHIP? {
      switch self {
      case ._LINK_MOTION_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE: ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE? {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_DOCUMENT_REFERENCE: eAPPLIED_DOCUMENT_REFERENCE? {
      switch self {
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eEVIDENCE: eEVIDENCE? {
      switch self {
      case ._EVIDENCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eBREAKDOWN_ELEMENT_REALIZATION: eBREAKDOWN_ELEMENT_REALIZATION? {
      switch self {
      case ._BREAKDOWN_ELEMENT_REALIZATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eREPRESENTATION_ITEM: eREPRESENTATION_ITEM? {
      switch self {
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let entity): return entity.super_eREPRESENTATION_ITEM
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.super_eREPRESENTATION_ITEM
      case ._REPRESENTATION_ITEM(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_METHOD_RELATIONSHIP: eACTION_METHOD_RELATIONSHIP? {
      switch self {
      case ._ACTION_METHOD_RELATIONSHIP(let entity): return entity
      case ._USAGE_ASSOCIATION(let entity): return entity.super_eACTION_METHOD_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eASCRIBABLE_STATE_RELATIONSHIP: eASCRIBABLE_STATE_RELATIONSHIP? {
      switch self {
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let entity): return entity
        .super_eASCRIBABLE_STATE_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eUSAGE_ASSOCIATION: eUSAGE_ASSOCIATION? {
      switch self {
      case ._USAGE_ASSOCIATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eCONTRACT: eCONTRACT? {
      switch self {
      case ._CONTRACT(let entity): return entity
      default: return nil
      }
    }

    public var super_eDOCUMENT: eDOCUMENT? {
      switch self {
      case ._DOCUMENT_FILE(let entity): return entity.super_eDOCUMENT
      default: return nil
      }
    }

    public var super_eIN_ZONE: eIN_ZONE? {
      switch self {
      case ._IN_ZONE(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_METHOD_ASSIGNMENT: eACTION_METHOD_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.super_eACTION_METHOD_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eDATE_AND_TIME_ASSIGNMENT: eDATE_AND_TIME_ASSIGNMENT? {
      switch self {
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let entity): return entity.super_eDATE_AND_TIME_ASSIGNMENT
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eCONFIGURATION_EFFECTIVITY: eCONFIGURATION_EFFECTIVITY? {
      switch self {
      case ._CONFIGURATION_EFFECTIVITY(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT: ePRODUCT? {
      switch self {
      case ._CLASSIFIED_ITEM(let select): return select.super_ePRODUCT
      case ._ENVELOPE(let entity): return entity.super_ePRODUCT
      case ._PRODUCT(let entity): return entity
      case ._STRUCTURED_MESSAGE(let entity): return entity.super_ePRODUCT
      default: return nil
      }
    }

    public var super_eMATERIAL_DESIGNATION_CHARACTERIZATION: eMATERIAL_DESIGNATION_CHARACTERIZATION? {
      switch self {
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eSTATE_OBSERVED_RELATIONSHIP: eSTATE_OBSERVED_RELATIONSHIP? {
      switch self {
      case ._STATE_OBSERVED_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_CONTRACT_ASSIGNMENT: eAPPLIED_CONTRACT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eDOCUMENT_RELATIONSHIP: eDOCUMENT_RELATIONSHIP? {
      switch self {
      case ._DOCUMENT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eVERSIONED_ACTION_REQUEST: eVERSIONED_ACTION_REQUEST? {
      switch self {
      case ._VERSIONED_ACTION_REQUEST(let entity): return entity
      default: return nil
      }
    }

    public var super_eORGANIZATIONAL_PROJECT: eORGANIZATIONAL_PROJECT? {
      switch self {
      case ._ORGANIZATIONAL_PROJECT(let entity): return entity
      default: return nil
      }
    }

    public var super_eMEASURE_WITH_UNIT: eMEASURE_WITH_UNIT? {
      switch self {
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.super_eMEASURE_WITH_UNIT
      case ._MEASURE_WITH_UNIT(let entity): return entity
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let entity): return entity.super_eMEASURE_WITH_UNIT
      default: return nil
      }
    }

    public var super_eDATE: eDATE? {
      switch self {
      case ._CALENDAR_DATE(let entity): return entity.super_eDATE
      default: return nil
      }
    }

    public var super_eAPPROVAL_PERSON_ORGANIZATION: eAPPROVAL_PERSON_ORGANIZATION? {
      switch self {
      case ._APPROVAL_PERSON_ORGANIZATION(let entity): return entity
      default: return nil
      }
    }

    public var super_ePROCESS_OPERATION: ePROCESS_OPERATION? {
      switch self {
      case ._PROCESS_OPERATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eUNCERTAINTY_MEASURE_WITH_UNIT: eUNCERTAINTY_MEASURE_WITH_UNIT? {
      switch self {
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_USAGE_RELATIONSHIP: ePRODUCT_DEFINITION_USAGE_RELATIONSHIP? {
      switch self {
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eVERIFICATION: eVERIFICATION? {
      switch self {
      case ._VERIFICATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT: eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eEFFECTIVITY: eEFFECTIVITY? {
      switch self {
      case ._CONFIGURATION_EFFECTIVITY(let entity): return entity.super_eEFFECTIVITY
      case ._EFFECTIVITY(let entity): return entity
      default: return nil
      }
    }

    public var super_eSATISFIES_REQUIREMENT: eSATISFIES_REQUIREMENT? {
      switch self {
      case ._SATISFIES_REQUIREMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_CONCEPT_CONTEXT: ePRODUCT_CONCEPT_CONTEXT? {
      switch self {
      case ._PRODUCT_CONCEPT_CONTEXT(let entity): return entity
      default: return nil
      }
    }

    public var super_eDIRECTED_ACTION_ASSIGNMENT: eDIRECTED_ACTION_ASSIGNMENT? {
      switch self {
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_PROCESS_PLAN: ePRODUCT_PROCESS_PLAN? {
      switch self {
      case ._PRODUCT_PROCESS_PLAN(let entity): return entity
      default: return nil
      }
    }

    public var super_eBREAKDOWN_OF: eBREAKDOWN_OF? {
      switch self {
      case ._BREAKDOWN_OF(let entity): return entity
      default: return nil
      }
    }

    public var super_eASSIGNMENT_OBJECT_RELATIONSHIP: eASSIGNMENT_OBJECT_RELATIONSHIP? {
      switch self {
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eATTRIBUTE_LANGUAGE_ASSIGNMENT: eATTRIBUTE_LANGUAGE_ASSIGNMENT? {
      switch self {
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eLOCAL_TIME: eLOCAL_TIME? {
      switch self {
      case ._LOCAL_TIME(let entity): return entity
      default: return nil
      }
    }

    public var super_eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED: eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED? {
      switch self {
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_FORMATION: ePRODUCT_DEFINITION_FORMATION? {
      switch self {
      case ._CLASSIFIED_ITEM(let select): return select.super_ePRODUCT_DEFINITION_FORMATION
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let entity): return entity.super_ePRODUCT_DEFINITION_FORMATION
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let entity): return entity.super_ePRODUCT_DEFINITION_FORMATION
      case ._INTERFACE_CONNECTOR_DESIGN(let entity): return entity.super_ePRODUCT_DEFINITION_FORMATION
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eCONVERSION_BASED_UNIT: eCONVERSION_BASED_UNIT? {
      switch self {
      case ._CONVERSION_BASED_UNIT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_EFFECTIVITY: ePRODUCT_DEFINITION_EFFECTIVITY? {
      switch self {
      case ._CONFIGURATION_EFFECTIVITY(let entity): return entity.super_ePRODUCT_DEFINITION_EFFECTIVITY
      default: return nil
      }
    }

    public var super_eDEFINITIONAL_REPRESENTATION_RELATIONSHIP: eDEFINITIONAL_REPRESENTATION_RELATIONSHIP? {
      switch self {
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let entity): return entity
      case ._LINK_MOTION_RELATIONSHIP(let entity): return entity
        .super_eDEFINITIONAL_REPRESENTATION_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eMEASURE_QUALIFICATION: eMEASURE_QUALIFICATION? {
      switch self {
      case ._MEASURE_QUALIFICATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eINTERFACE_DEFINITION_FOR: eINTERFACE_DEFINITION_FOR? {
      switch self {
      case ._INTERFACE_DEFINITION_FOR(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_GROUP_RELATIONSHIP: ePRODUCT_GROUP_RELATIONSHIP? {
      switch self {
      case ._PRODUCT_GROUP_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED: eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED? {
      switch self {
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let entity): return entity
      default: return nil
      }
    }

    public var super_eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP: eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP? {
      switch self {
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eCONFIGURATION_ITEM_RELATIONSHIP: eCONFIGURATION_ITEM_RELATIONSHIP? {
      switch self {
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP: 
      eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP? {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_ASSIGNMENT: eACTION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.super_eACTION_ASSIGNMENT
      case ._APPLIED_USAGE_RIGHT(let entity): return entity.super_eACTION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPROVAL_ASSIGNMENT: eAPPROVAL_ASSIGNMENT? {
      switch self {
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.super_eAPPROVAL_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eCLASSIFICATION_ASSIGNMENT_RELATIONSHIP: eCLASSIFICATION_ASSIGNMENT_RELATIONSHIP? {
      switch self {
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity
        .super_eCLASSIFICATION_ASSIGNMENT_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eDOCUMENT_REFERENCE: eDOCUMENT_REFERENCE? {
      switch self {
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): return entity.super_eDOCUMENT_REFERENCE
      default: return nil
      }
    }

    public var super_eCERTIFICATION_ASSIGNMENT: eCERTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.super_eCERTIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: 
      eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eLANGUAGE: eLANGUAGE? {
      switch self {
      case ._LANGUAGE(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_ACTION_REQUEST_ASSIGNMENT: eAPPLIED_ACTION_REQUEST_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eSHAPE_ASPECT: eSHAPE_ASPECT? {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_PROPERTY_REPRESENTATION: eACTION_PROPERTY_REPRESENTATION? {
      switch self {
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT: 
      eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_RESOURCE: eACTION_RESOURCE? {
      switch self {
      case ._ACTION_RESOURCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_ORGANIZATION_ASSIGNMENT: eAPPLIED_ORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_CONCEPT_FEATURE_CATEGORY: ePRODUCT_CONCEPT_FEATURE_CATEGORY? {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_REQUEST_SOLUTION: eACTION_REQUEST_SOLUTION? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let entity): return entity
      default: return nil
      }
    }

    public var super_eTIME_INTERVAL_ASSIGNMENT: eTIME_INTERVAL_ASSIGNMENT? {
      switch self {
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): return entity.super_eTIME_INTERVAL_ASSIGNMENT
      default: return nil
      }
    }

    public var super_ePROCESS_PRODUCT_ASSOCIATION: ePROCESS_PRODUCT_ASSOCIATION? {
      switch self {
      case ._PROCESS_PRODUCT_ASSOCIATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eDIRECTED_ACTION: eDIRECTED_ACTION? {
      switch self {
      case ._DIRECTED_ACTION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_APPROVAL_ASSIGNMENT: eAPPLIED_APPROVAL_ASSIGNMENT? {
      switch self {
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eREQUIREMENT_FOR_ACTION_RESOURCE: eREQUIREMENT_FOR_ACTION_RESOURCE? {
      switch self {
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eSHAPE_FEATURE_DEFINITION_RELATIONSHIP: eSHAPE_FEATURE_DEFINITION_RELATIONSHIP? {
      switch self {
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_RESOURCE_RELATIONSHIP: eACTION_RESOURCE_RELATIONSHIP? {
      switch self {
      case ._ACTION_RESOURCE_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPROVAL_STATUS: eAPPROVAL_STATUS? {
      switch self {
      case ._APPROVAL_STATUS(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DESIGN_TO_INDIVIDUAL: ePRODUCT_DESIGN_TO_INDIVIDUAL? {
      switch self {
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let entity): return entity
      default: return nil
      }
    }

    public var super_ePERSON_AND_ORGANIZATION: ePERSON_AND_ORGANIZATION? {
      switch self {
      case ._PERSON_AND_ORGANIZATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eALTERNATE_PRODUCT_RELATIONSHIP: eALTERNATE_PRODUCT_RELATIONSHIP? {
      switch self {
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_CONCEPT_RELATIONSHIP: ePRODUCT_CONCEPT_RELATIONSHIP? {
      switch self {
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eDOCUMENT_FILE: eDOCUMENT_FILE? {
      switch self {
      case ._DOCUMENT_FILE(let entity): return entity
      default: return nil
      }
    }

    public var super_eSECURITY_CLASSIFICATION: eSECURITY_CLASSIFICATION? {
      switch self {
      case ._SECURITY_CLASSIFICATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT: eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_CONTEXT: ePRODUCT_DEFINITION_CONTEXT? {
      switch self {
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_RELATIONSHIP: ePRODUCT_DEFINITION_RELATIONSHIP? {
      switch self {
      case ._BREAKDOWN_CONTEXT(let entity): return entity.super_ePRODUCT_DEFINITION_RELATIONSHIP
      case ._BREAKDOWN_OF(let entity): return entity.super_ePRODUCT_DEFINITION_RELATIONSHIP
      case ._INTERFACE_DEFINITION_CONNECTION(let entity): return entity
        .super_ePRODUCT_DEFINITION_RELATIONSHIP
      case ._INTERFACE_DEFINITION_FOR(let entity): return entity.super_ePRODUCT_DEFINITION_RELATIONSHIP
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.super_ePRODUCT_DEFINITION_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eLOCATION: eLOCATION? {
      switch self {
      case ._LOCATION(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_ELEMENT_RELATIONSHIP: ePRODUCT_DEFINITION_ELEMENT_RELATIONSHIP? {
      switch self {
      case ._BREAKDOWN_ELEMENT_REALIZATION(let entity): return entity
        .super_ePRODUCT_DEFINITION_ELEMENT_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eACTION_DIRECTIVE: eACTION_DIRECTIVE? {
      switch self {
      case ._ACTION_DIRECTIVE(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT: 
      eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eDESCRIPTIVE_REPRESENTATION_ITEM: eDESCRIPTIVE_REPRESENTATION_ITEM? {
      switch self {
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let entity): return entity
      default: return nil
      }
    }

    public var super_eADDRESS: eADDRESS? {
      switch self {
      case ._ADDRESS(let entity): return entity
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.super_eADDRESS
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.super_eADDRESS
      default: return nil
      }
    }

    public var super_eCONTRACT_RELATIONSHIP: eCONTRACT_RELATIONSHIP? {
      switch self {
      case ._CONTRACT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eDOCUMENT_TYPE: eDOCUMENT_TYPE? {
      switch self {
      case ._DOCUMENT_TYPE(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_CONCEPT_FEATURE_ASSOCIATION: ePRODUCT_CONCEPT_FEATURE_ASSOCIATION? {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eTIME_INTERVAL_RELATIONSHIP: eTIME_INTERVAL_RELATIONSHIP? {
      switch self {
      case ._TIME_INTERVAL_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_ACTION_ASSIGNMENT: eAPPLIED_ACTION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_RELATIONSHIP: ePRODUCT_RELATIONSHIP? {
      switch self {
      case ._ENVELOPE_RELATIONSHIP(let entity): return entity.super_ePRODUCT_RELATIONSHIP
      case ._MESSAGE_RELATIONSHIP(let entity): return entity.super_ePRODUCT_RELATIONSHIP
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let entity): return entity.super_ePRODUCT_RELATIONSHIP
      case ._PRODUCT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION: eACTION? {
      switch self {
      case ._ACTION(let entity): return entity
      case ._DIRECTED_ACTION(let entity): return entity.super_eACTION
      case ._EXECUTED_ACTION(let entity): return entity.super_eACTION
      case ._PROCESS_PLAN(let entity): return entity.super_eACTION
      case ._PRODUCT_PROCESS_PLAN(let entity): return entity.super_eACTION
      case ._RETENTION(let entity): return entity.super_eACTION
      default: return nil
      }
    }

    public var super_eINTERFACE_CONNECTOR_OCCURRENCE: eINTERFACE_CONNECTOR_OCCURRENCE? {
      switch self {
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let entity): return entity
      default: return nil
      }
    }

    public var super_ePERSON_AND_ORGANIZATION_ADDRESS: ePERSON_AND_ORGANIZATION_ADDRESS? {
      switch self {
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity
      default: return nil
      }
    }

    public var super_eREQUIREMENT_ASSIGNMENT: eREQUIREMENT_ASSIGNMENT? {
      switch self {
      case ._REQUIREMENT_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP: 
      eEXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP? {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity
        .super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP: 
      eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP? {
      switch self {
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eEVENT_OCCURRENCE_ASSIGNMENT: eEVENT_OCCURRENCE_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity
        .super_eEVENT_OCCURRENCE_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eCHANGE_ELEMENT_SEQUENCE: eCHANGE_ELEMENT_SEQUENCE? {
      switch self {
      case ._CHANGE_ELEMENT_SEQUENCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_DIRECTIVE_RELATIONSHIP: eACTION_DIRECTIVE_RELATIONSHIP? {
      switch self {
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eNAMED_UNIT: eNAMED_UNIT? {
      switch self {
      case ._CONTEXT_DEPENDENT_UNIT(let entity): return entity.super_eNAMED_UNIT
      case ._CONVERSION_BASED_UNIT(let entity): return entity.super_eNAMED_UNIT
      case ._NAMED_UNIT(let entity): return entity
      default: return nil
      }
    }

    public var super_eCHARACTERIZED_OBJECT: eCHARACTERIZED_OBJECT? {
      switch self {
      case ._BREAKDOWN_ELEMENT_REALIZATION(let entity): return entity.super_eCHARACTERIZED_OBJECT
      case ._CHARACTERIZED_CLASS(let entity): return entity.super_eCHARACTERIZED_OBJECT
      case ._CHARACTERIZED_OBJECT(let entity): return entity
      case ._DOCUMENT_FILE(let entity): return entity.super_eCHARACTERIZED_OBJECT
      case ._ENVELOPE(let entity): return entity.super_eCHARACTERIZED_OBJECT
      case ._FEATURE_DEFINITION(let entity): return entity.super_eCHARACTERIZED_OBJECT
      case ._GENERAL_FEATURE(let entity): return entity.super_eCHARACTERIZED_OBJECT
      case ._PRODUCT_GROUP_MEMBERSHIP(let entity): return entity.super_eCHARACTERIZED_OBJECT
      case ._REQUIREMENT_ASSIGNMENT(let entity): return entity.super_eCHARACTERIZED_OBJECT
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let entity): return entity.super_eCHARACTERIZED_OBJECT
      default: return nil
      }
    }


    //MARK: - ENTITY ATTRIBUTE REFERENCES
    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT`` )
    public var ASSIGNED_DOCUMENT_USAGE: eDOCUMENT_USAGE_CONSTRAINT?  {
      switch self {
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): return entity.ASSIGNED_DOCUMENT_USAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_REQUEST_SOLUTION`` )
    public var REQUEST: eVERSIONED_ACTION_REQUEST?  {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let entity): return entity.REQUEST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    public var UNDIRECTED_LINK: (SDAI.LIST<sCHAINED_REPRESENTATION_LINK>/*[1:nil]*/ )?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.UNDIRECTED_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_SURFACE_1: eRECTANGULAR_TRIMMED_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_SURFACE_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var DERIVING_RELATIONSHIPS: (SDAI.SET<eSHAPE_ASPECT_DERIVING_RELATIONSHIP>/*[1:nil]*/ )?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.DERIVING_RELATIONSHIPS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eLOCAL_TIME`` )
    public var SECOND_COMPONENT: tSECOND_IN_MINUTE?  {
      switch self {
      case ._LOCAL_TIME(let entity): return entity.SECOND_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var STYLE_CONTEXT: (SDAI.LIST<sSTYLE_CONTEXT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.STYLE_CONTEXT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_SURFACE_2: eRECTANGULAR_TRIMMED_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_SURFACE_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SLOT_WIDTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SLOT_WIDTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_METHOD_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eUSAGE_ASSOCIATION`` )
    public var RELATED_METHOD: eACTION_METHOD?  {
      switch self {
      case ._ACTION_METHOD_RELATIONSHIP(let entity): return entity.RELATED_METHOD
      case ._USAGE_ASSOCIATION(let entity): return eACTION_METHOD(entity.RELATED_METHOD)
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT`` )
    public var ATTRIBUTE_VALUE: sATTRIBUTE_TYPE?  {
      switch self {
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let entity): return entity.ATTRIBUTE_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var END_EXIT_FACES: (SDAI.LIST<SDAI.SET<eFACE_SURFACE>/*[0:nil]*/ >/*[2:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.END_EXIT_FACES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONCENTRATION_EXPONENT: SDAI.REAL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONCENTRATION_EXPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var DIAMETER_TOLERANCE: sTOLERANCE_VALUE_OR_LIMITS_AND_FITS?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.DIAMETER_TOLERANCE
      case ._FEATURE_DEFINITION(let entity): return entity.DIAMETER_TOLERANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INDIRECTLY_PICKED_ITEMS: (SDAI.SET<eREPRESENTATION_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INDIRECTLY_PICKED_ITEMS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_PAIR_CURVE: eTRIMMED_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_PAIR_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REPLICATE_COUNT: tPOSITIVE_INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REPLICATE_COUNT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var PEOPLE: (SDAI.SET<ePERSON>/*[1:nil]*/ )?  {
      switch self {
      case ._ADDRESS(let entity): return entity.PEOPLE
      case ._ORGANIZATIONAL_ADDRESS(let entity): return SDAI.SET<ePERSON>(entity.PEOPLE)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return SDAI.SET<ePERSON>(entity.PEOPLE)
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var PRODUCT_DEFINITIONAL: SDAI.LOGICAL {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.PRODUCT_DEFINITIONAL
      case ._SHAPE_ASPECT(let entity): return entity.PRODUCT_DEFINITIONAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ROTATION_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ROTATION_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_RELATIONSHIP`` )
    public var CURRENT_RESULT: eREPRESENTATION?  {
      switch self {
      case ._REPRESENTATION_RELATIONSHIP(let entity): return entity.CURRENT_RESULT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSTATE_OBSERVED_ASSIGNMENT`` )
    public var ASSIGNED_STATE_OBSERVED: eSTATE_OBSERVED?  {
      switch self {
      case ._STATE_OBSERVED_ASSIGNMENT(let entity): return entity.ASSIGNED_STATE_OBSERVED
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eDERIVED_UNIT`` )
    public var ELEMENTS: (SDAI.SET<eDERIVED_UNIT_ELEMENT>/*[1:nil]*/ )?  {
      switch self {
      case ._DERIVED_UNIT(let entity): return entity.ELEMENTS
      case ._REPRESENTATION_ITEM/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREPRESENTATION_ITEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT`` )
    public var ASSIGNED_SECURITY_CLASSIFICATION: eSECURITY_CLASSIFICATION?  {
      switch self {
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return 
        entity.ASSIGNED_SECURITY_CLASSIFICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var DEPTH_TOLERANCE: eTOLERANCE_VALUE?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.DEPTH_TOLERANCE
      case ._FEATURE_DEFINITION(let entity): return entity.DEPTH_TOLERANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CFS_FACES: (SDAI.SET<eFACE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CFS_FACES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONTAINER: (SDAI.SET<ePRESENTATION_VIEW>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONTAINER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_PROPERTY_REPRESENTATION`` )
    public var REPRESENTATION: eREPRESENTATION?  {
      switch self {
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.REPRESENTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CTRIANGLES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[10:10]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CTRIANGLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS_LIST: (SDAI.LIST<tPOSITIVE_LENGTH_MEASURE>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS_LIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var STREET: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.STREET
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.STREET
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.STREET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CLOSED_INTERPOLATION: SDAI.LOGICAL {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CLOSED_INTERPOLATION
      default: return nil
      }
    }

    //MARK: var DESCRIPTION: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT`` )
    public var ASSIGNED_EVENT_OCCURRENCE: eEVENT_OCCURRENCE?  {
      switch self {
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity.ASSIGNED_EVENT_OCCURRENCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACCURACY_TYPES: (SDAI.LIST<nA3M_ACCURACY_TYPE_NAME>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACCURACY_TYPES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ANGULAR_SPACING: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ANGULAR_SPACING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var COUNTERDRILL_ANGLE_TOLERANCE: eTOLERANCE_VALUE?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.COUNTERDRILL_ANGLE_TOLERANCE
      case ._FEATURE_DEFINITION(let entity): return entity.COUNTERDRILL_ANGLE_TOLERANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET1: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_POINT_ON_CURVE_2: ePOINT_ON_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_POINT_ON_CURVE_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FLOOR_BLEND_RADIUS: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FLOOR_BLEND_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION`` )
    public var PROPERTIES: (SDAI.SET<ePROCESS_PROPERTY_ASSOCIATION>/*[1:nil]*/ )?  {
      switch self {
      case ._ACTION(let entity): return entity.PROPERTIES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GENERALISED_MAJOR_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GENERALISED_MAJOR_RADIUS
      default: return nil
      }
    }

    //MARK: var LEAF: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eDIRECTED_ACTION_ASSIGNMENT`` )
    public var ASSIGNED_DIRECTED_ACTION: eDIRECTED_ACTION?  {
      switch self {
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): return entity.ASSIGNED_DIRECTED_ACTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET2: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var NO_OF_BYTES: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.NO_OF_BYTES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var ORGANIZATIONS: (SDAI.SET<eORGANIZATION>/*[1:nil]*/ )?  {
      switch self {
      case ._ADDRESS(let entity): return entity.ORGANIZATIONS
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.ORGANIZATIONS
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return SDAI.SET<eORGANIZATION>(
        entity.ORGANIZATIONS)
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var MIDDLE_NAMES: (SDAI.LIST<tLABEL>/*[1:nil]*/ )?  {
      switch self {
      case ._PERSON(let entity): return entity.MIDDLE_NAMES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CURVE_1: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CURVE_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var FORM: eTOLERANCE_ZONE_FORM?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.FORM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MAJOR_ORIENTATION_BASIS: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MAJOR_ORIENTATION_BASIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASE_ELEMENT: sGENERALIZED_SURFACE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASE_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CURVE_2: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CURVE_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION`` )
    /// - origin: ENTITY( ``eDIRECTED_ACTION`` )
    /// - origin: ENTITY( ``eEXECUTED_ACTION`` )
    public var DIRECTIVE: eACTION_DIRECTIVE?  {
      switch self {
      case ._ACTION(let entity): return entity.DIRECTIVE
      case ._DIRECTED_ACTION(let entity): return entity.DIRECTIVE
      case ._EXECUTED_ACTION(let entity): return entity.DIRECTIVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var CONTEXT_IDENTIFIER: tIDENTIFIER?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.CONTEXT_IDENTIFIER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONTENTS: (SDAI.SET<sDRAUGHTING_CALLOUT_ELEMENT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONTENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VSENSE: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VSENSE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eGENERAL_PROPERTY_RELATIONSHIP`` )
    public var RELATING_PROPERTY: eGENERAL_PROPERTY?  {
      switch self {
      case ._GENERAL_PROPERTY_RELATIONSHIP(let entity): return entity.RELATING_PROPERTY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var START_OF_NEXT_HATCH_LINE: eONE_DIRECTION_REPEAT_FACTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.START_OF_NEXT_HATCH_LINE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CURVE_FORM: nB_SPLINE_CURVE_FORM?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CURVE_FORM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eDEFINITIONAL_REPRESENTATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eLINK_MOTION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eREPRESENTATION_RELATIONSHIP`` )
    public var TRANSFORMATION_OPERATOR: sTRANSFORMATION?  {
      switch self {
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let entity): return sTRANSFORMATION(
        entity.TRANSFORMATION_OPERATOR)
      case ._LINK_MOTION_RELATIONSHIP(let entity): return sTRANSFORMATION(entity.TRANSFORMATION_OPERATOR)
      case ._REPRESENTATION_ITEM(let entity): return sTRANSFORMATION(entity.TRANSFORMATION_OPERATOR)
      case ._REPRESENTATION_RELATIONSHIP(let entity): return entity.TRANSFORMATION_OPERATOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OVER_RIDDEN_STYLE: eSTYLED_ITEM?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OVER_RIDDEN_STYLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MEASURED_VALUE_FOR_INSPECTED_ELEMENT: sEQUIVALENCE_MEASURED_VALUE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MEASURED_VALUE_FOR_INSPECTED_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_DATE_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eDATE_ASSIGNMENT`` )
    public var ASSIGNED_DATE: eDATE?  {
      switch self {
      case ._APPLIED_DATE_ASSIGNMENT(let entity): return entity.ASSIGNED_DATE
      case ._DATE_ASSIGNMENT(let entity): return entity.ASSIGNED_DATE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eDEFINITIONAL_REPRESENTATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eLINK_MOTION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eREPRESENTATION_RELATIONSHIP`` )
    public var ITEM: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.ITEM
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let entity): return entity.ITEM
      case ._LINK_MOTION_RELATIONSHIP(let entity): return entity.ITEM
      case ._REPRESENTATION_ITEM/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREPRESENTATION_ITEM
      case ._REPRESENTATION_RELATIONSHIP(let entity): return entity.ITEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIAL_ALIGNMENT: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIAL_ALIGNMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var HATCH_LINE_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.HATCH_LINE_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var SUFFIX_TITLES: (SDAI.LIST<tLABEL>/*[1:nil]*/ )?  {
      switch self {
      case ._PERSON(let entity): return entity.SUFFIX_TITLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONSTRAINED_ELEMENTS: (SDAI.SET<eREPRESENTATION_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONSTRAINED_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TANGENT_CONTACT: nTANGENT_CONTACT_TYPE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TANGENT_CONTACT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SEGMENT_RADII: (SDAI.LIST<tPOSITIVE_LENGTH_MEASURE>/*[1:SEGMENTS]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SEGMENT_RADII
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_METHOD_RELATIONSHIP`` )
    public var RIGHT_APPLIED: eINFORMATION_RIGHT?  {
      switch self {
      case ._ACTION_METHOD_RELATIONSHIP(let entity): return entity.RIGHT_APPLIED
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var REALIZED_PRODUCT: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.REALIZED_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    public var DEPENDENT_ENVIRONMENT: eDATA_ENVIRONMENT?  {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.DEPENDENT_ENVIRONMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LEFT_OFFSET: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LEFT_OFFSET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PATCHES: (SDAI.SET<eSURFACE_PATCH>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PATCHES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REPEAT_FACTOR: eVECTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REPEAT_FACTOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ROW_SPACING: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ROW_SPACING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TIP_RADIUS: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TIP_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT`` )
    public var TRANSLATION_LANGUAGE: eLANGUAGE?  {
      switch self {
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let entity): return entity.TRANSLATION_LANGUAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DETECTED_DIFFERENCE_TYPES: (SDAI.LIST<nA3M_DETECTED_DIFFERENCE_TYPE_NAME>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DETECTED_DIFFERENCE_TYPES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var HATCH_LINE_APPEARANCE: eCURVE_STYLE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.HATCH_LINE_APPEARANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SWEPT_CURVE: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SWEPT_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_REQUEST_SOLUTION`` )
    public var METHOD: eACTION_METHOD?  {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let entity): return entity.METHOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE`` )
    public var NEXT_USAGE: eNEXT_ASSEMBLY_USAGE_OCCURRENCE?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.NEXT_USAGE
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.NEXT_USAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ARC_LENGTH_DISTANCE_FACTOR: SDAI.REAL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ARC_LENGTH_DISTANCE_FACTOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_ACTION_METHOD_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_ACTION_REQUEST_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_APPROVAL_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_CERTIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_CONTRACT_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_DATE_AND_TIME_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_DATE_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_DOCUMENT_REFERENCE`` )
    /// - origin: ENTITY( ``eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_EFFECTIVITY_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_IDENTIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_INEFFECTIVITY_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_TIME_INTERVAL_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_USAGE_RIGHT`` )
    /// - origin: ENTITY( ``eAPPROVAL_PERSON_ORGANIZATION`` )
    /// - origin: ENTITY( ``eATTRIBUTE_LANGUAGE_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eDATE_AND_TIME_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eDATE_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eDIRECTED_ACTION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eEVIDENCE`` )
    /// - origin: ENTITY( ``eIDENTIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE`` )
    /// - origin: ENTITY( ``ePRODUCT_GROUP_MEMBERSHIP`` )
    /// - origin: ENTITY( ``eSTATE_OBSERVED_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eSTATE_TYPE_ASSIGNMENT`` )
    public var ROLE: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_DATE_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): return entity.ROLE
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_USAGE_RIGHT(let entity): return entity.ROLE
      case ._APPROVAL_PERSON_ORGANIZATION(let entity): return entity.ROLE
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity.ROLE
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity.ROLE
      case ._DATE_ASSIGNMENT(let entity): return entity.ROLE
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): return entity.ROLE
      case ._EVIDENCE(let entity): return entity.ROLE
      case ._IDENTIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let entity): return entity.ROLE
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): return entity.ROLE
      case ._PRODUCT_GROUP_MEMBERSHIP(let entity): return entity.ROLE
      case ._REPRESENTATION_ITEM/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREPRESENTATION_ITEM
      case ._STATE_OBSERVED_ASSIGNMENT(let entity): return entity.ROLE
      case ._STATE_TYPE_ASSIGNMENT(let entity): return entity.ROLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_PT: ePOINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_PT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET_DIRECTION_CONSTRAINED: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET_DIRECTION_CONSTRAINED
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THICKNESS: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.THICKNESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var N_U: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.N_U
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DIRECTION_OF_AXIS: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DIRECTION_OF_AXIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TEE_SECTION_WIDTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TEE_SECTION_WIDTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FILLET_RADIUS: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FILLET_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eORGANIZATIONAL_PROJECT_RELATIONSHIP`` )
    public var RELATING_ORGANIZATIONAL_PROJECT: eORGANIZATIONAL_PROJECT?  {
      switch self {
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let entity): return entity.RELATING_ORGANIZATIONAL_PROJECT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCANNER_LOCATION: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCANNER_LOCATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var N_V: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.N_V
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIRST_TRIM_INTENT: nTRIM_INTENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIRST_TRIM_INTENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OPERATOR: nBOOLEAN_OPERATOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OPERATOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SUBSKETCH_ELEMENTS: (SDAI.SET<sSKETCH_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SUBSKETCH_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var X_SCALE: tPOSITIVE_RATIO_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.X_SCALE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCANNED_POINTS: (SDAI.SET<eSCANNED_DATA_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCANNED_POINTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ENCLOSURE: eBOX_DOMAIN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ENCLOSURE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var COUNTERSINK_DIAMETER: ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.COUNTERSINK_DIAMETER
      case ._FEATURE_DEFINITION(let entity): return entity.COUNTERSINK_DIAMETER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eORGANIZATION_RELATIONSHIP`` )
    public var RELATING_ORGANIZATION: eORGANIZATION?  {
      switch self {
      case ._ORGANIZATION_RELATIONSHIP(let entity): return entity.RELATING_ORGANIZATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE`` )
    public var REFERENCE_DESIGNATOR: tIDENTIFIER?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.REFERENCE_DESIGNATOR
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.REFERENCE_DESIGNATOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIXED_ATTRIBUTES: (SDAI.SET<eINSTANCE_ATTRIBUTE_REFERENCE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIXED_ATTRIBUTES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARAMETER_DESCRIPTION: tTEXT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARAMETER_DESCRIPTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARING_SPECIFIED_ELEMENTS: (SDAI.SET<sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARING_SPECIFIED_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eGENERAL_PROPERTY_RELATIONSHIP`` )
    public var RELATED_PROPERTY: eGENERAL_PROPERTY?  {
      switch self {
      case ._GENERAL_PROPERTY_RELATIONSHIP(let entity): return entity.RELATED_PROPERTY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SECOND_TRIM_INTENT: nTRIM_INTENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SECOND_TRIM_INTENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eLOCAL_TIME`` )
    public var ZONE: eCOORDINATED_UNIVERSAL_TIME_OFFSET?  {
      switch self {
      case ._LOCAL_TIME(let entity): return entity.ZONE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SHAPE_CRITERIA: (SDAI.SET<eA3MA_ASSEMBLY_AND_SHAPE_CRITERIA_RELATIONSHIP>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SHAPE_CRITERIA
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SECOND_OPERAND: sBOOLEAN_OPERAND?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SECOND_OPERAND
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE`` )
    public var SUBSTITUTE: eASSEMBLY_COMPONENT_USAGE?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let entity): return entity.SUBSTITUTE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHANGE_ELEMENT_SEQUENCE`` )
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_GROUP_RELATIONSHIP`` )
    public var RELATED_GROUP: eGROUP?  {
      switch self {
      case ._CHANGE_ELEMENT_SEQUENCE(let entity): return eGROUP(entity.RELATED_GROUP)
      case ._GROUP_RELATIONSHIP(let entity): return entity.RELATED_GROUP
      case ._PRODUCT_GROUP_RELATIONSHIP(let entity): return entity.RELATED_GROUP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TRIM_1: (SDAI.SET<sTRIMMING_SELECT>/*[1:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TRIM_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_CURVE_2: eTRIMMED_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_CURVE_2
      default: return nil
      }
    }

    //MARK: var STATUS: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eALTERNATIVE_SOLUTION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL`` )
    public var RELATED_PRODUCT_DEFINITION_FORMATION: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let entity): return 
        entity.RELATED_PRODUCT_DEFINITION_FORMATION
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let entity): return ePRODUCT_DEFINITION_FORMATION(
        entity.RELATED_PRODUCT_DEFINITION_FORMATION)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let entity): return ePRODUCT_DEFINITION_FORMATION(
        entity.RELATED_PRODUCT_DEFINITION_FORMATION)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let entity): return ePRODUCT_DEFINITION_FORMATION(
        entity.RELATED_PRODUCT_DEFINITION_FORMATION)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return 
        entity.RELATED_PRODUCT_DEFINITION_FORMATION
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let entity): return 
        entity.RELATED_PRODUCT_DEFINITION_FORMATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var CHARACTER_BOX: ePLANAR_EXTENT?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.CHARACTER_BOX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INNER_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INNER_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_HEIGHT: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_HEIGHT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eMATERIAL_DESIGNATION_CHARACTERIZATION`` )
    public var DESIGNATION: eMATERIAL_DESIGNATION?  {
      switch self {
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): return entity.DESIGNATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TURN_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TURN_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REGION_COLOUR: eCOLOUR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REGION_COLOUR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCONFIGURATION_DESIGN`` )
    public var DESIGN: sCONFIGURATION_DESIGN_ITEM?  {
      switch self {
      case ._CONFIGURATION_DESIGN(let entity): return entity.DESIGN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TRIM_2: (SDAI.SET<sTRIMMING_SELECT>/*[1:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TRIM_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_CURVE_1: eTRIMMED_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_CURVE_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_DIRECTIVE`` )
    public var ANALYSIS: tTEXT?  {
      switch self {
      case ._ACTION_DIRECTIVE(let entity): return entity.ANALYSIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var CONSTITUENT_AMOUNT: (SDAI.SET<sCHARACTERIZED_PRODUCT_COMPOSITION_VALUE>/*[1:nil]*/ )?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.CONSTITUENT_AMOUNT
      default: return nil
      }
    }

    //MARK: var PATH: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TILES: (SDAI.SET<sFILL_AREA_STYLE_TILE_SHAPE_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TILES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREQUIREMENT_FOR_ACTION_RESOURCE`` )
    public var OPERATIONS: (SDAI.SET<sCHARACTERIZED_ACTION_DEFINITION>/*[1:nil]*/ )?  {
      switch self {
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.OPERATIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var TARGET_ID: tIDENTIFIER?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.TARGET_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPROVAL_RELATIONSHIP`` )
    public var RELATED_APPROVAL: eAPPROVAL?  {
      switch self {
      case ._APPROVAL_RELATIONSHIP(let entity): return entity.RELATED_APPROVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INSPECTED_ELEMENTS: (SDAI.SET<sINSPECTED_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INSPECTED_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_APPROVAL_ASSIGNMENT`` )
    public var ASSIGNED_APPROVAL: eAPPROVAL?  {
      switch self {
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.ASSIGNED_APPROVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE`` )
    public var UPPER_USAGE: eASSEMBLY_COMPONENT_USAGE?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.UPPER_USAGE
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.UPPER_USAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREQUIREMENT_FOR_ACTION_RESOURCE`` )
    public var RESOURCES: (SDAI.SET<eACTION_RESOURCE>/*[1:nil]*/ )?  {
      switch self {
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.RESOURCES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eDATE_AND_TIME`` )
    public var DATE_COMPONENT: eDATE?  {
      switch self {
      case ._DATE_AND_TIME(let entity): return entity.DATE_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ROW_COUNT: tPOSITIVE_INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ROW_COUNT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POCKET_LENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POCKET_LENGTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TARGET: eSYMBOL_TARGET?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TARGET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXTERNAL_POINT: ePOINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXTERNAL_POINT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GEAR_RATIO: SDAI.REAL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GEAR_RATIO
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXTERNAL_GROOVE: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXTERNAL_GROOVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP`` )
    public var RELATED_ASCRIBABLE_STATE: eASCRIBABLE_STATE?  {
      switch self {
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let entity): return 
        entity.RELATED_ASCRIBABLE_STATE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPROVAL_PERSON_ORGANIZATION`` )
    public var PERSON_ORGANIZATION: sPERSON_ORGANIZATION_SELECT?  {
      switch self {
      case ._APPROVAL_PERSON_ORGANIZATION(let entity): return entity.PERSON_ORGANIZATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE`` )
    public var RANKING_RATIONALE: tTEXT?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.RANKING_RATIONALE
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.RANKING_RATIONALE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REPLICATED_ELEMENT: eMODIFIED_SOLID_WITH_PLACED_CONFIGURATION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REPLICATED_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var A: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.A
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_VOLUME_SET: eCONNECTED_VOLUME_SET?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_VOLUME_SET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SELECT_OUTER: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SELECT_OUTER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eMATERIAL_DESIGNATION`` )
    public var DEFINITIONS: (SDAI.SET<sCHARACTERIZED_DEFINITION>/*[1:nil]*/ )?  {
      switch self {
      case ._MATERIAL_DESIGNATION(let entity): return entity.DEFINITIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var B: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.B
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PNT: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PNT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var COMPONENT_SHAPE_ASPECT: sINTERNAL_OR_REFLECTED_SHAPE_ASPECT?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.COMPONENT_SHAPE_ASPECT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP`` )
    public var RELATING_IDENTIFICATION_ASSIGNMENT: eIDENTIFICATION_ASSIGNMENT?  {
      switch self {
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return 
        entity.RELATING_IDENTIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var C: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.C
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var V_SMOOTHNESS: nTRANSITION_CODE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.V_SMOOTHNESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSECURITY_CLASSIFICATION`` )
    public var SECURITY_LEVEL: eSECURITY_CLASSIFICATION_LEVEL?  {
      switch self {
      case ._SECURITY_CLASSIFICATION(let entity): return entity.SECURITY_LEVEL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eVERSIONED_ACTION_REQUEST_RELATIONSHIP`` )
    public var RELATED_VERSIONED_ACTION_REQUEST: eVERSIONED_ACTION_REQUEST?  {
      switch self {
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let entity): return 
        entity.RELATED_VERSIONED_ACTION_REQUEST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var CLASS: tLABEL?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.CLASS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCANNER_INFO: (SDAI.SET<eSCANNER_PROPERTY>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCANNER_INFO
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SILHOUETTED_MODEL: sSURFACE_OR_SOLID_MODEL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SILHOUETTED_MODEL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SOURCES: (SDAI.SET<eLIGHT_SOURCE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SOURCES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SENSE_AGREEMENT: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SENSE_AGREEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var PARENT: eSHAPE_ASPECT?  {
      switch self {
      case ._REPRESENTATION/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREPRESENTATION
      case ._SHAPE_ASPECT(let entity): return entity.PARENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_ELEMENT: eEDGE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASIS_VOLUME: eVOLUME?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASIS_VOLUME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var TELEX_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.TELEX_NUMBER
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.TELEX_NUMBER
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.TELEX_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SWEPT_FACE: eFACE_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SWEPT_FACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINK_REPRESENTATION_ASSOCIATIONS: (SDAI.SET<ePAIR_REPRESENTATION_RELATIONSHIP>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINK_REPRESENTATION_ASSOCIATIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_ACTUAL_TRANSLATION_Z: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_ACTUAL_TRANSLATION_Z
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var CM_LINK: eVARIATIONAL_CURRENT_REPRESENTATION_RELATIONSHIP?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.CM_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_TRANSLATION_Z: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_TRANSLATION_Z
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_RACK_DISPLACEMENT: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_RACK_DISPLACEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOOP_VERTEX: eVERTEX?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOOP_VERTEX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCONTRACT_RELATIONSHIP`` )
    public var RELATING_CONTRACT: eCONTRACT?  {
      switch self {
      case ._CONTRACT_RELATIONSHIP(let entity): return entity.RELATING_CONTRACT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eDOCUMENT_TYPE`` )
    public var PRODUCT_DATA_TYPE: tLABEL?  {
      switch self {
      case ._DOCUMENT_TYPE(let entity): return entity.PRODUCT_DATA_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var LAST_NAME: tLABEL?  {
      switch self {
      case ._PERSON(let entity): return entity.LAST_NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var T_START: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.T_START
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PTS_PER_SUBLIST: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PTS_PER_SUBLIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var END_CONDITIONS: (SDAI.LIST<sBLEND_END_CONDITION_SELECT>/*[2:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.END_CONDITIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: SELECT( ``sCLASSIFIED_ITEM`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var DEFINED_VERSION: eCOLLECTION_VERSION?  {
      switch self {
      case ._CLASSIFIED_ITEM(let select): return select.DEFINED_VERSION
      case ._PRODUCT_DEFINITION(let entity): return entity.DEFINED_VERSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eMESSAGE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATED_MESSAGE: eSTRUCTURED_MESSAGE?  {
      switch self {
      case ._MESSAGE_RELATIONSHIP(let entity): return entity.RELATED_MESSAGE
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATED_MESSAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePROCESS_PRODUCT_ASSOCIATION`` )
    public var DEFINED_PRODUCT: sCHARACTERIZED_PRODUCT_DEFINITION?  {
      switch self {
      case ._PROCESS_PRODUCT_ASSOCIATION(let entity): return entity.DEFINED_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var AXIS_POSITION: eAXIS1_PLACEMENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.AXIS_POSITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var ORIENTATION: nORIENTED_TOLERANCE_ZONE_TYPE?  {
      switch self {
      case ._REPRESENTATION_ITEM/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREPRESENTATION_ITEM
      case ._SHAPE_ASPECT(let entity): return entity.ORIENTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var FACSIMILE_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.FACSIMILE_NUMBER
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.FACSIMILE_NUMBER
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.FACSIMILE_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eSHAPE_FEATURE_DEFINITION_RELATIONSHIP`` )
    public var RELATED_OBJECT: eSHAPE_FEATURE_DEFINITION?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.RELATED_OBJECT
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let entity): return entity.RELATED_OBJECT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: SELECT( ``sCLASSIFIED_ITEM`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    public var OF_COLLECTION: eCOLLECTION?  {
      switch self {
      case ._CLASSIFIED_ITEM(let select): return select.OF_COLLECTION
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.OF_COLLECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SBWM_BOUNDARY: (SDAI.SET<sSHELL>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SBWM_BOUNDARY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var KNOT_VALUES: tSPLINE_KNOT_VALUES?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.KNOT_VALUES
      default: return nil
      }
    }

    //MARK: var ITEMS: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCONTEXT_DEPENDENT_UNIT`` )
    /// - origin: ENTITY( ``eCONVERSION_BASED_UNIT`` )
    /// - origin: ENTITY( ``eNAMED_UNIT`` )
    public var DIMENSIONS: eDIMENSIONAL_EXPONENTS?  {
      switch self {
      case ._CONTEXT_DEPENDENT_UNIT(let entity): return entity.DIMENSIONS
      case ._CONVERSION_BASED_UNIT(let entity): return entity.DIMENSIONS
      case ._NAMED_UNIT(let entity): return entity.DIMENSIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PITCH: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PITCH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var REGION: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.REGION
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.REGION
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.REGION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PERMANENT_AGGREGATE_ID: tIDENTIFIER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PERMANENT_AGGREGATE_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TILING_PATTERN: eTWO_DIRECTION_REPEAT_FACTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TILING_PATTERN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PCURVE_REFERENCE: ePCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PCURVE_REFERENCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var OUTLINES: (SDAI.SET<eANNOTATION_FILL_AREA>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.OUTLINES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var REPRESENTATIONS_IN_CONTEXT: (SDAI.SET<eREPRESENTATION>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.REPRESENTATIONS_IN_CONTEXT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARED_SPECIFIED_ELEMENTS: (SDAI.SET<sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARED_SPECIFIED_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var APPLIES_TO_PAIR: eKINEMATIC_PAIR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.APPLIES_TO_PAIR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_ACTUAL_ROTATION_1: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_ACTUAL_ROTATION_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL`` )
    public var PRODUCT_DESIGN_VERSION: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.PRODUCT_DESIGN_VERSION
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let entity): return entity.PRODUCT_DESIGN_VERSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONICAL_TRANSITIONS: (SDAI.SET<eCONICAL_STEPPED_HOLE_TRANSITION>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONICAL_TRANSITIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var ELECTRONIC_MAIL_ADDRESS: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.ELECTRONIC_MAIL_ADDRESS
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.ELECTRONIC_MAIL_ADDRESS
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.ELECTRONIC_MAIL_ADDRESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eGROUP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var OF_SHAPE: ePRODUCT_DEFINITION_SHAPE?  {
      switch self {
      case ._GROUP(let entity): return ePRODUCT_DEFINITION_SHAPE(entity.OF_SHAPE)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return ePRODUCT_DEFINITION_SHAPE(entity.OF_SHAPE)
      case ._PROPERTY_DEFINITION(let entity): return ePRODUCT_DEFINITION_SHAPE(entity.OF_SHAPE)
      case ._SHAPE_ASPECT(let entity): return entity.OF_SHAPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE`` )
    public var RANKING: SDAI.INTEGER?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.RANKING
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.RANKING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REQUIRED_GENERAL_ACCURACY: (SDAI.SET<eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REQUIRED_GENERAL_ACCURACY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REPORT_VALUE: eMEASURE_WITH_UNIT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REPORT_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var STREET_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.STREET_NUMBER
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.STREET_NUMBER
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.STREET_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SYMBOL: eANNOTATION_SYMBOL_OCCURRENCE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SYMBOL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var U1: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.U1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BEVEL: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BEVEL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eALTERNATE_PRODUCT_RELATIONSHIP`` )
    public var BASIS: tTEXT?  {
      switch self {
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let entity): return entity.BASIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPROVAL`` )
    public var LEVEL: tLABEL?  {
      switch self {
      case ._APPROVAL(let entity): return entity.LEVEL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCALENDAR_DATE`` )
    public var MONTH_COMPONENT: tMONTH_IN_YEAR_NUMBER?  {
      switch self {
      case ._CALENDAR_DATE(let entity): return entity.MONTH_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INNER_BOUNDARY: sCOMPOUND_INNER_AREA_BOUNDARY?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INNER_BOUNDARY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CLOSED_PATH: SDAI.LOGICAL {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CLOSED_PATH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: SELECT( ``sCLASSIFIED_ITEM`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    public var MAKE_OR_BUY: nSOURCE?  {
      switch self {
      case ._CLASSIFIED_ITEM(let select): return select.MAKE_OR_BUY
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.MAKE_OR_BUY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var U2: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.U2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MEASURED_VALUE: sMEASURED_VALUE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MEASURED_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_COORDINATES: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_COORDINATES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SKEWNESS: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SKEWNESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TILING_SCALE: tPOSITIVE_RATIO_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TILING_SCALE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION`` )
    /// - origin: ENTITY( ``eDIRECTED_ACTION`` )
    /// - origin: ENTITY( ``eEXECUTED_ACTION`` )
    /// - origin: ENTITY( ``ePROCESS_PLAN`` )
    /// - origin: ENTITY( ``ePRODUCT_PROCESS_PLAN`` )
    /// - origin: ENTITY( ``eRETENTION`` )
    public var CHOSEN_METHOD: eACTION_METHOD?  {
      switch self {
      case ._ACTION(let entity): return entity.CHOSEN_METHOD
      case ._DIRECTED_ACTION(let entity): return entity.CHOSEN_METHOD
      case ._EXECUTED_ACTION(let entity): return entity.CHOSEN_METHOD
      case ._PROCESS_PLAN(let entity): return entity.CHOSEN_METHOD
      case ._PRODUCT_PROCESS_PLAN(let entity): return entity.CHOSEN_METHOD
      case ._RETENTION(let entity): return entity.CHOSEN_METHOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_RESOURCE_RELATIONSHIP`` )
    public var RELATING_RESOURCE: eACTION_RESOURCE?  {
      switch self {
      case ._ACTION_RESOURCE_RELATIONSHIP(let entity): return entity.RELATING_RESOURCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_LOT_ID: tIDENTIFIER?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_LOT_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VOLUME_GEOMETRY: eVOLUME?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VOLUME_GEOMETRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_DRAFT_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_DRAFT_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    public var USED_REPRESENTATION: eREPRESENTATION?  {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.USED_REPRESENTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOCAL_ORIGIN: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOCAL_ORIGIN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eATTRIBUTE_LANGUAGE_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT`` )
    public var ATTRIBUTE_NAME: tLABEL?  {
      switch self {
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity.ATTRIBUTE_NAME
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let entity): return entity.ATTRIBUTE_NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REFERENCE_ELEMENTS: (SDAI.SET<eREPRESENTATION_ITEM>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REFERENCE_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCL: SDAI.REAL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_METHOD`` )
    /// - origin: ENTITY( ``eCERTIFICATION`` )
    /// - origin: ENTITY( ``eCONFIGURATION_ITEM`` )
    /// - origin: ENTITY( ``eCONTRACT`` )
    /// - origin: ENTITY( ``eINFORMATION_RIGHT`` )
    /// - origin: ENTITY( ``eINFORMATION_USAGE_RIGHT`` )
    /// - origin: ENTITY( ``ePROCESS_OPERATION`` )
    /// - origin: ENTITY( ``eSECURITY_CLASSIFICATION`` )
    /// - origin: ENTITY( ``eVERSIONED_ACTION_REQUEST`` )
    public var PURPOSE: SDAI.STRING?  {
      switch self {
      case ._ACTION_METHOD(let entity): return SDAI.STRING(entity.PURPOSE)
      case ._CERTIFICATION(let entity): return SDAI.STRING(entity.PURPOSE)
      case ._CONFIGURATION_ITEM(let entity): return SDAI.STRING(entity.PURPOSE)
      case ._CONTRACT(let entity): return SDAI.STRING(entity.PURPOSE)
      case ._INFORMATION_RIGHT(let entity): return SDAI.STRING(entity.PURPOSE)
      case ._INFORMATION_USAGE_RIGHT(let entity): return SDAI.STRING(entity.PURPOSE)
      case ._PROCESS_OPERATION(let entity): return SDAI.STRING(entity.PURPOSE)
      case ._SECURITY_CLASSIFICATION(let entity): return SDAI.STRING(entity.PURPOSE)
      case ._VERSIONED_ACTION_REQUEST(let entity): return SDAI.STRING(entity.PURPOSE)
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eMEASURE_QUALIFICATION`` )
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var QUALIFIERS: (SDAI.SET<sVALUE_QUALIFIER>/*[1:nil]*/ )?  {
      switch self {
      case ._MEASURE_QUALIFICATION(let entity): return entity.QUALIFIERS
      case ._REPRESENTATION_ITEM(let entity): return entity.QUALIFIERS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var UNITS: (SDAI.SET<sUNIT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.UNITS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PATH_ELEMENT: ePATH?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PATH_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT`` )
    public var LANGUAGE_INDICATION: (SDAI.SET<eATTRIBUTE_LANGUAGE_ASSIGNMENT>/*[1:1]*/ )?  {
      switch self {
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let entity): return entity.LANGUAGE_INDICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PLANE_OF_POINT: ePLANE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PLANE_OF_POINT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eRESOURCE_PROPERTY`` )
    public var RESOURCE: sCHARACTERIZED_RESOURCE_DEFINITION?  {
      switch self {
      case ._RESOURCE_PROPERTY(let entity): return entity.RESOURCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PATTERN_START: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PATTERN_START
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TRANSFORM_ITEM_1: sRIGID_PLACEMENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TRANSFORM_ITEM_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TEST_POINT_DISTANCE_TOLERANCE: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TEST_POINT_DISTANCE_TOLERANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_LENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_LENGTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var ASSOCIATED_SHAPE_REPRESENTATION: (SDAI.SET<eKINEMATIC_LINK_REPRESENTATION_ASSOCIATION>/*[0:1]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.ASSOCIATED_SHAPE_REPRESENTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONSTRAINING_EXPRESSION: eEXPRESSION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONSTRAINING_EXPRESSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SECOND_ROTATION_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SECOND_ROTATION_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_RESOURCE_RELATIONSHIP`` )
    public var RELATED_RESOURCE: eACTION_RESOURCE?  {
      switch self {
      case ._ACTION_RESOURCE_RELATIONSHIP(let entity): return entity.RELATED_RESOURCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_ASSOCIATION`` )
    public var CONCEPT: ePRODUCT_CONCEPT?  {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): return entity.CONCEPT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLOUR_TYPE: nCOLOUR_TYPE_ENUM?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLOUR_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_OF_REFERENCE_HATCH_LINE: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_OF_REFERENCE_HATCH_LINE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSTATE_TYPE_RELATIONSHIP`` )
    public var RELATING_STATE_TYPE: (SDAI.SET<eSTATE_TYPE>/*[1:nil]*/ )?  {
      switch self {
      case ._STATE_TYPE_RELATIONSHIP(let entity): return entity.RELATING_STATE_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARING_ELEMENTS: (SDAI.SET<sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARING_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TRANSFORM_ITEM_2: sRIGID_PLACEMENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TRANSFORM_ITEM_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_SECOND_ROTATION: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_SECOND_ROTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POCKET_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POCKET_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_RELATIONSHIP`` )
    public var RELATING_ACTION: eACTION?  {
      switch self {
      case ._ACTION_RELATIONSHIP(let entity): return entity.RELATING_ACTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_DATE_AND_TIME_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eDATE_AND_TIME_ASSIGNMENT`` )
    public var ASSIGNED_DATE_AND_TIME: eDATE_AND_TIME?  {
      switch self {
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let entity): return entity.ASSIGNED_DATE_AND_TIME
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity.ASSIGNED_DATE_AND_TIME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_LIST: (SDAI.LIST_UNIQUE<eORIENTED_EDGE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_LIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SIZE_IN_X: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SIZE_IN_X
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS_SECOND_LINK: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS_SECOND_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THICKENED_FACE_LIST: (SDAI.LIST<SDAI.SET<eFACE_SURFACE>/*[1:nil]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.THICKENED_FACE_LIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_FIRST_ROTATION: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_FIRST_ROTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var DATUM_REFERENCE: eDATUM_SYSTEM?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.DATUM_REFERENCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CRITERION_REPORT: eDATA_EQUIVALENCE_INSPECTION_CRITERION_REPORT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CRITERION_REPORT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SIZE_IN_Y: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SIZE_IN_Y
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CORNER_RADIUS: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CORNER_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eALTERNATIVE_SOLUTION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL`` )
    public var RELATING_PRODUCT_DEFINITION_FORMATION: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let entity): return 
        entity.RELATING_PRODUCT_DEFINITION_FORMATION
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let entity): return ePRODUCT_DEFINITION_FORMATION(
        entity.RELATING_PRODUCT_DEFINITION_FORMATION)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let entity): return ePRODUCT_DEFINITION_FORMATION(
        entity.RELATING_PRODUCT_DEFINITION_FORMATION)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let entity): return ePRODUCT_DEFINITION_FORMATION(
        entity.RELATING_PRODUCT_DEFINITION_FORMATION)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return 
        entity.RELATING_PRODUCT_DEFINITION_FORMATION
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let entity): return 
        entity.RELATING_PRODUCT_DEFINITION_FORMATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_CONTEXT`` )
    public var MARKET_SEGMENT_TYPE: tLABEL?  {
      switch self {
      case ._PRODUCT_CONCEPT_CONTEXT(let entity): return entity.MARKET_SEGMENT_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_POINT_ON_CURVE: ePOINT_ON_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_POINT_ON_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var RELATING_VERSION: eCOLLECTION_VERSION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.RELATING_VERSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INTENSITIES: (SDAI.LIST<SDAI.REAL>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INTENSITIES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_ACTUAL_ROTATION_1: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_ACTUAL_ROTATION_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_PROCESS_PLAN`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var IDENTIFICATION: tIDENTIFIER?  {
      switch self {
      case ._ACTION/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eACTION
      case ._PRODUCT_PROCESS_PLAN(let entity): return entity.IDENTIFICATION
      case ._SHAPE_ASPECT(let entity): return entity.IDENTIFICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_SURFACE: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_SURFACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCONFIGURATION_ITEM_RELATIONSHIP`` )
    public var RELATING_CONFIGURATION_ITEM: eCONFIGURATION_ITEM?  {
      switch self {
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let entity): return entity.RELATING_CONFIGURATION_ITEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATED_COLLECTION: eCOLLECTION?  {
      switch self {
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATED_COLLECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var Y_SCALE: tPOSITIVE_RATIO_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.Y_SCALE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONFIGURED_MECHANISM: eMECHANISM_REPRESENTATION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONFIGURED_MECHANISM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_PLACEMENT: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_PLACEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_ACTUAL_TRANSLATION_Z: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_ACTUAL_TRANSLATION_Z
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var USENSE: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.USENSE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eATTRIBUTE_LANGUAGE_ASSIGNMENT`` )
    public var ASSIGNED_CLASS: eLANGUAGE?  {
      switch self {
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity.ASSIGNED_CLASS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DISTANCE_FROM_START: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DISTANCE_FROM_START
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SURFACE_FORM: nB_SPLINE_SURFACE_FORM?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SURFACE_FORM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPROVAL_PERSON_ORGANIZATION`` )
    public var AUTHORIZED_APPROVAL: eAPPROVAL?  {
      switch self {
      case ._APPROVAL_PERSON_ORGANIZATION(let entity): return entity.AUTHORIZED_APPROVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHANGE_ELEMENT_SEQUENCE`` )
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    public var PREVIOUS: eCHANGE_ELEMENT?  {
      switch self {
      case ._CHANGE_ELEMENT_SEQUENCE(let entity): return entity.PREVIOUS
      case ._GROUP_RELATIONSHIP(let entity): return entity.PREVIOUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_END_DATE: sDATE_TIME_OR_EVENT_OCCURRENCE?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_END_DATE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var FIRST_NAME: tLABEL?  {
      switch self {
      case ._PERSON(let entity): return entity.FIRST_NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var COMPOSITION_BASIS: tLABEL?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.COMPOSITION_BASIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ANNOTATED_CURVE: eANNOTATION_CURVE_OCCURRENCE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ANNOTATED_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SEMI_IMAG_AXIS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SEMI_IMAG_AXIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EQUIVALENT_POINT: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EQUIVALENT_POINT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PHI: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PHI
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THE_CALLOUT: eDRAUGHTING_CALLOUT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.THE_CALLOUT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: SELECT( ``sCLASSIFIED_ITEM`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var DOCUMENTATION_IDS: (SDAI.SET<eDOCUMENT>/*[1:nil]*/ )?  {
      switch self {
      case ._CLASSIFIED_ITEM(let select): return select.DOCUMENTATION_IDS
      case ._PRODUCT_DEFINITION(let entity): return entity.DOCUMENTATION_IDS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCANNER_IDENTIFICATION: tLABEL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCANNER_IDENTIFICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var ESTABLISHED_BY_RELATIONSHIPS: (SDAI.SET<eSHAPE_ASPECT_RELATIONSHIP>/*[1:nil]*/ )?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.ESTABLISHED_BY_RELATIONSHIPS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SLOT_LENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SLOT_LENGTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_LOT_SIZE: eMEASURE_WITH_UNIT?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_LOT_SIZE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var KNOT_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.KNOT_MULTIPLICITIES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var COUNTERSINK_ANGLE: ePOSITIVE_PLANE_ANGLE_MEASURE_WITH_UNIT?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.COUNTERSINK_ANGLE
      case ._FEATURE_DEFINITION(let entity): return entity.COUNTERSINK_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_TIME_INTERVAL_ASSIGNMENT`` )
    public var ASSIGNED_TIME_INTERVAL: eTIME_INTERVAL?  {
      switch self {
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): return entity.ASSIGNED_TIME_INTERVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_FACE: eFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_FACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RIGHT_OFFSET_DISTANCE: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RIGHT_OFFSET_DISTANCE
      default: return nil
      }
    }

    //MARK: var RELATING: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_DIRECTIVE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eALTERNATIVE_SOLUTION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eASSIGNMENT_OBJECT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eGENERIC_PROPERTY_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP`` )
    public var RELATION_TYPE: SDAI.STRING?  {
      switch self {
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let entity): return entity.RELATION_TYPE
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let entity): return entity.RELATION_TYPE
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity.RELATION_TYPE
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let entity): return entity.RELATION_TYPE
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return 
        entity.RELATION_TYPE
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let entity): return entity.RELATION_TYPE
      case ._GENERIC_PROPERTY_RELATIONSHIP(let entity): return entity.RELATION_TYPE
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.RELATION_TYPE
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let entity): return entity.RELATION_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var BASELINE_RATIO: tRATIO_MEASURE?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.BASELINE_RATIO
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_CERTIFICATION_ASSIGNMENT`` )
    public var ASSIGNED_CERTIFICATION: eCERTIFICATION?  {
      switch self {
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.ASSIGNED_CERTIFICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_METHOD_RELATIONSHIP`` )
    public var RIGHT_USAGE: eINFORMATION_USAGE_RIGHT?  {
      switch self {
      case ._ACTION_METHOD_RELATIONSHIP(let entity): return entity.RIGHT_USAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCONVERSION_BASED_UNIT`` )
    /// - origin: ENTITY( ``eNAMED_UNIT`` )
    public var CONVERSION_FACTOR: eMEASURE_WITH_UNIT?  {
      switch self {
      case ._CONVERSION_BASED_UNIT(let entity): return entity.CONVERSION_FACTOR
      case ._NAMED_UNIT(let entity): return entity.CONVERSION_FACTOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_RELATIONSHIP`` )
    public var RELATING_PRODUCT_CONCEPT: ePRODUCT_CONCEPT?  {
      switch self {
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let entity): return entity.RELATING_PRODUCT_CONCEPT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GENERALISED_MINOR_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GENERALISED_MINOR_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_USAGE_RIGHT`` )
    public var ASSIGNED_ACTION: eACTION?  {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.ASSIGNED_ACTION
      case ._APPLIED_USAGE_RIGHT(let entity): return entity.ASSIGNED_ACTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    public var ELEMENT: eCHANGE_ELEMENT?  {
      switch self {
      case ._GROUP_RELATIONSHIP(let entity): return entity.ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var V2: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.V2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GROOVE_WIDTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GROOVE_WIDTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINE_SPACING: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINE_SPACING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TREE_ROOT_EXPRESSION: sCSG_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TREE_ROOT_EXPRESSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_PARAMETER: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_PARAMETER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASIS_EDGE_CURVE: eEDGE_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASIS_EDGE_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POCKET_WIDTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POCKET_WIDTH
      default: return nil
      }
    }

    //MARK: var PROPERTY: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCONFIGURATION_ITEM`` )
    public var ITEM_CONCEPT_FEATURE: (SDAI.SET<ePRODUCT_CONCEPT_FEATURE_ASSOCIATION>/*[1:nil]*/ )?  {
      switch self {
      case ._CONFIGURATION_ITEM(let entity): return entity.ITEM_CONCEPT_FEATURE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eNAMED_UNIT`` )
    public var PREFIX: nSI_PREFIX?  {
      switch self {
      case ._NAMED_UNIT(let entity): return entity.PREFIX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MINOR_ORIENTATION_BASIS: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MINOR_ORIENTATION_BASIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASE_CURVE: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASE_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIXED_CONSTITUENT: eREPRESENTATIVE_SHAPE_REPRESENTATION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIXED_CONSTITUENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var V1: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.V1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLOUR_INDICES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[3:3]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLOUR_INDICES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var HELICAL_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.HELICAL_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_METHOD_ASSIGNMENT`` )
    public var ASSIGNED_ACTION_METHOD: eACTION_METHOD?  {
      switch self {
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.ASSIGNED_ACTION_METHOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE`` )
    public var BASE_EVENT: eEVENT_OCCURRENCE?  {
      switch self {
      case ._EVENT_OCCURRENCE(let entity): return entity.BASE_EVENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LITERAL: tPRESENTABLE_TEXT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LITERAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CLOTHOID_CONSTANT: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CLOTHOID_CONSTANT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PAIR_SURFACE: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PAIR_SURFACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION`` )
    public var THE_PERSON: ePERSON?  {
      switch self {
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.THE_PERSON
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BINARY_VALUE: SDAI.BINARY?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BINARY_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_FACE_SET: eCONNECTED_FACE_SET?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_FACE_SET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var INTERNAL_LOCATION: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.INTERNAL_LOCATION
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.INTERNAL_LOCATION
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.INTERNAL_LOCATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: SELECT( ``sCLASSIFIED_ITEM`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    public var SPECIFICATION: (SDAI.SET<ePRODUCT_DEFINITION>/*[1:nil]*/ )?  {
      switch self {
      case ._CLASSIFIED_ITEM(let select): return select.SPECIFICATION
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.SPECIFICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FILL_STYLE_TARGET: ePOINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FILL_STYLE_TARGET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POSITIVE_SIDE: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POSITIVE_SIDE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_REQUEST_ASSIGNMENT`` )
    public var ASSIGNED_ACTION_REQUEST: eVERSIONED_ACTION_REQUEST?  {
      switch self {
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let entity): return entity.ASSIGNED_ACTION_REQUEST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var PLANNED_PRODUCT: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.PLANNED_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var STYLED_CURVE: eANNOTATION_CURVE_OCCURRENCE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.STYLED_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var AXIS3: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.AXIS3
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var CONSTITUENTS: (SDAI.LIST_UNIQUE<eDATUM_REFERENCE_COMPARTMENT>/*[1:3]*/ )?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.CONSTITUENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var REPRESENTATION_ASSOCIATIONS: (SDAI.SET<ePROPERTY_DEFINITION_REPRESENTATION>/*[0:nil]*/ )?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.REPRESENTATION_ASSOCIATIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PICKED_ITEMS: (SDAI.SET<eREPRESENTATION_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PICKED_ITEMS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLOURED_COORDINATE_VALUES: eCOORDINATES_LIST?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLOURED_COORDINATE_VALUES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var AXIS2: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.AXIS2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var AXIS1: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.AXIS1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_IDENTIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eIDENTIFICATION_ASSIGNMENT`` )
    public var ASSIGNED_ID: tIDENTIFIER?  {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity.ASSIGNED_ID
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let entity): return entity.ASSIGNED_ID
      case ._IDENTIFICATION_ASSIGNMENT(let entity): return entity.ASSIGNED_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ARC_LENGTH_SEPARATION_FACTOR: SDAI.REAL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ARC_LENGTH_SEPARATION_FACTOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OPEN_SHELL_ELEMENT: eOPEN_SHELL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OPEN_SHELL_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var AUXILIARY_ELEMENTS: (SDAI.SET<eAUXILIARY_GEOMETRIC_REPRESENTATION_ITEM>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.AUXILIARY_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REVISION_IDENTIFIER: tIDENTIFIER?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REVISION_IDENTIFIER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var SIZE: ePRESENTATION_SIZE?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.SIZE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASE_SOLID: sBASE_SOLID_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASE_SOLID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DELETED_FACE_SET: (SDAI.SET<eFACE_SURFACE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DELETED_FACE_SET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCALENDAR_DATE`` )
    public var DAY_COMPONENT: tDAY_IN_MONTH_NUMBER?  {
      switch self {
      case ._CALENDAR_DATE(let entity): return entity.DAY_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DRAFTED_EDGES: (SDAI.LIST<SDAI.SET<eEDGE_CURVE>/*[1:nil]*/ >/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DRAFTED_EDGES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var SUCCESSOR: eCOLLECTION_VERSION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.SUCCESSOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_INDEX_ON_CONTROL_POINTS: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_INDEX_ON_CONTROL_POINTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eVERSIONED_ACTION_REQUEST_RELATIONSHIP`` )
    public var RELATING_VERSIONED_ACTION_REQUEST: eVERSIONED_ACTION_REQUEST?  {
      switch self {
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let entity): return 
        entity.RELATING_VERSIONED_ACTION_REQUEST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VERTEX_SHELL_EXTENT: eVERTEX_LOOP?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VERTEX_SHELL_EXTENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ASSESSMENT_THRESHOLD_2: eA3MA_EQUIVALENCE_CRITERION_ASSESSMENT_THRESHOLD_RELATIONSHIP?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ASSESSMENT_THRESHOLD_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARED_ELEMENT_TYPES: (SDAI.LIST<nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARED_ELEMENT_TYPES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_INDEX_ON_KNOTS: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_INDEX_ON_KNOTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET_ANGLE: tPOSITIVE_PLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var TESSELLATION_ACCURACY_PARAMETERS: (SDAI.SET<sTESSELLATION_ACCURACY_PARAMETER_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.TESSELLATION_ACCURACY_PARAMETERS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LEFT_OFFSET_DISTANCE: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LEFT_OFFSET_DISTANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SEGMENT_DEPTHS: (SDAI.LIST<tPOSITIVE_LENGTH_MEASURE>/*[1:SEGMENTS]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SEGMENT_DEPTHS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHANGE_ELEMENT_SEQUENCE`` )
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    public var NEXT: eCHANGE_ELEMENT?  {
      switch self {
      case ._CHANGE_ELEMENT_SEQUENCE(let entity): return entity.NEXT
      case ._GROUP_RELATIONSHIP(let entity): return entity.NEXT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eMEASURE_QUALIFICATION`` )
    public var QUALIFIED_MEASURE: eMEASURE_WITH_UNIT?  {
      switch self {
      case ._MEASURE_QUALIFICATION(let entity): return entity.QUALIFIED_MEASURE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INPUT_SKEW_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INPUT_SKEW_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SKEW_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SKEW_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var ANGLE: ePLANE_ANGLE_MEASURE_WITH_UNIT?  {
      switch self {
      case ._REPRESENTATION_ITEM/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREPRESENTATION_ITEM
      case ._SHAPE_ASPECT(let entity): return entity.ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS_VALUE: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLLAR_DEPTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLLAR_DEPTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eMEASURE_REPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eMEASURE_WITH_UNIT`` )
    /// - origin: ENTITY( ``eUNCERTAINTY_MEASURE_WITH_UNIT`` )
    public var UNIT_COMPONENT: sUNIT?  {
      switch self {
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.UNIT_COMPONENT
      case ._MEASURE_WITH_UNIT(let entity): return entity.UNIT_COMPONENT
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let entity): return entity.UNIT_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_ASSOCIATION`` )
    public var FEATURE: ePRODUCT_CONCEPT_FEATURE?  {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): return entity.FEATURE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ASSOCIATED_GEOMETRY: (SDAI.LIST<sPCURVE_OR_SURFACE>/*[1:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ASSOCIATED_GEOMETRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``ePRODUCT_GROUP_MEMBERSHIP`` )
    public var MEMBER: sPRODUCT_SELECT?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.MEMBER
      case ._PRODUCT_GROUP_MEMBERSHIP(let entity): return entity.MEMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP`` )
    public var RELATED_IDENTIFICATION_ASSIGNMENT: eIDENTIFICATION_ASSIGNMENT?  {
      switch self {
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return 
        entity.RELATED_IDENTIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REPRESENTED_JOINTS: (SDAI.SET<eKINEMATIC_JOINT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REPRESENTED_JOINTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CLOSED_SHELL_ELEMENT: eCLOSED_SHELL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CLOSED_SHELL_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ANGLE_VALUE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ANGLE_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_PERIOD: eTIME_INTERVAL?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_PERIOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_TO_INDIVIDUAL`` )
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var INDIVIDUAL_PRODUCT: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.INDIVIDUAL_PRODUCT
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let entity): return entity.INDIVIDUAL_PRODUCT
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let entity): return entity.INDIVIDUAL_PRODUCT
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.INDIVIDUAL_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BOUND: eLOOP?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BOUND
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DIRECTION_RATIOS: (SDAI.LIST<SDAI.REAL>/*[2:3]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DIRECTION_RATIOS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CLOSED_ENDS: (SDAI.LIST<SDAI.LOGICAL>/*[2:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CLOSED_ENDS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FBSM_FACES: (SDAI.SET<eCONNECTED_FACE_SET>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FBSM_FACES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THE_DRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDERS: (SDAI.SET<
      eDRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDER>/*[0:1]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return 
        entity.THE_DRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDERS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASE_SURFACE: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASE_SURFACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_CURVE: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eENVELOPE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eMESSAGE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_TO_INDIVIDUAL`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATED_PRODUCT: ePRODUCT?  {
      switch self {
      case ._ENVELOPE_RELATIONSHIP(let entity): return entity.RELATED_PRODUCT
      case ._MESSAGE_RELATIONSHIP(let entity): return ePRODUCT(entity.RELATED_PRODUCT)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let entity): return entity.RELATED_PRODUCT
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATED_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE_RELATIONSHIP`` )
    public var RELATED_EVENT: eEVENT_OCCURRENCE?  {
      switch self {
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let entity): return entity.RELATED_EVENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARED_ELEMENTS: (SDAI.SET<sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARED_ELEMENTS
      default: return nil
      }
    }

    //MARK: var RELATED: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var DIAMETER: ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.DIAMETER
      case ._FEATURE_DEFINITION(let entity): return entity.DIAMETER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_START_DATE: sDATE_TIME_OR_EVENT_OCCURRENCE?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_START_DATE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE`` )
    public var CONDITION: eCONCEPT_FEATURE_RELATIONSHIP_WITH_CONDITION?  {
      switch self {
      case ._PRODUCT_CONCEPT_FEATURE(let entity): return entity.CONDITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var POSTAL_CODE: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.POSTAL_CODE
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.POSTAL_CODE
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.POSTAL_CODE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_END: eVERTEX?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_END
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var SPOTFACE: (SDAI.LIST_UNIQUE<eSPOTFACE_DEFINITION>/*[1:nil]*/ )?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.SPOTFACE
      case ._FEATURE_DEFINITION(let entity): return entity.SPOTFACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var POSTAL_BOX: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.POSTAL_BOX
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.POSTAL_BOX
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.POSTAL_BOX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eCONFIGURATION_ITEM`` )
    public var ITEM_CONCEPT: ePRODUCT_CONCEPT?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return ePRODUCT_CONCEPT(entity.ITEM_CONCEPT)
      case ._CONFIGURATION_ITEM(let entity): return entity.ITEM_CONCEPT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var BOX_HEIGHT: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.BOX_HEIGHT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VIEW_WINDOW: ePLANAR_BOX?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VIEW_WINDOW
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_ACTUAL_ROTATION_Y: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_ACTUAL_ROTATION_Y
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_RELATIONSHIP`` )
    public var RELATED_PRODUCT_CONCEPT: ePRODUCT_CONCEPT?  {
      switch self {
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let entity): return entity.RELATED_PRODUCT_CONCEPT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_ACTUAL_ROTATION_X: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_ACTUAL_ROTATION_X
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eTIME_INTERVAL_RELATIONSHIP`` )
    public var RELATING_TIME_INTERVAL: eTIME_INTERVAL?  {
      switch self {
      case ._TIME_INTERVAL_RELATIONSHIP(let entity): return entity.RELATING_TIME_INTERVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_CONTEXT`` )
    public var LIFE_CYCLE_STAGE: tLABEL?  {
      switch self {
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.LIFE_CYCLE_STAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_ACTUAL_ROTATION_Z: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_ACTUAL_ROTATION_Z
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINE_STRIP: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINE_STRIP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GROOVE_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GROOVE_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eDATE_AND_TIME`` )
    public var TIME_COMPONENT: eLOCAL_TIME?  {
      switch self {
      case ._DATE_AND_TIME(let entity): return entity.TIME_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ITEM_ELEMENT: sCOMPOUND_ITEM_DEFINITION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ITEM_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXTERNAL_SURFACE: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXTERNAL_SURFACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var COUNTERDRILL_ANGLE: ePOSITIVE_PLANE_ANGLE_MEASURE_WITH_UNIT?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.COUNTERDRILL_ANGLE
      case ._FEATURE_DEFINITION(let entity): return entity.COUNTERDRILL_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CVS_VOLUMES: (SDAI.SET<eVOLUME_WITH_FACES>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CVS_VOLUMES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SPHERE_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SPHERE_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIRST_ROTATION_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIRST_ROTATION_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSTATE_TYPE_ASSIGNMENT`` )
    public var ASSIGNED_STATE_TYPE: eSTATE_TYPE?  {
      switch self {
      case ._STATE_TYPE_ASSIGNMENT(let entity): return entity.ASSIGNED_STATE_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_RESOURCE`` )
    /// - origin: ENTITY( ``eCERTIFICATION`` )
    /// - origin: ENTITY( ``eCONTRACT`` )
    /// - origin: ENTITY( ``eDOCUMENT_FILE`` )
    /// - origin: ENTITY( ``eREQUIREMENT_FOR_ACTION_RESOURCE`` )
    public var KIND: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._ACTION_RESOURCE(let entity): return entity.KIND
      case ._CERTIFICATION(let entity): return entity.KIND
      case ._CONTRACT(let entity): return entity.KIND
      case ._DOCUMENT_FILE(let entity): return entity.KIND
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.KIND
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eLOCATION_RELATIONSHIP`` )
    public var RELATING_LOCATION: eLOCATION?  {
      switch self {
      case ._LOCATION_RELATIONSHIP(let entity): return entity.RELATING_LOCATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARAMETER_CURRENT_VALUE: sMATHS_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARAMETER_CURRENT_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_PAIR_SURFACE: eRECTANGULAR_TRIMMED_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_PAIR_SURFACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var JOINT: eKINEMATIC_JOINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.JOINT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_ROTATION_2: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_ROTATION_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var COUNTERSINK_ANGLE_TOLERANCE: eTOLERANCE_VALUE?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.COUNTERSINK_ANGLE_TOLERANCE
      case ._FEATURE_DEFINITION(let entity): return entity.COUNTERSINK_ANGLE_TOLERANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MEASURED_DATA_TYPE: nA3M_MEASURED_DATA_TYPE_NAME?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MEASURED_DATA_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GAMMA: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GAMMA
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIRST_OFFSET: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIRST_OFFSET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var URL: tIDENTIFIER?  {
      switch self {
      case ._ADDRESS(let entity): return entity.URL
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.URL
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.URL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    public var REP: eREPRESENTATION?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.REP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var COORDINATE_SPACE_DIMENSION: tDIMENSION_COUNT?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.COORDINATE_SPACE_DIMENSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OWNING_SKETCH: sSKETCH_TYPE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OWNING_SKETCH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VIEW_WINDOW_CLIPPING: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VIEW_WINDOW_CLIPPING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var W_UPPER: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.W_UPPER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_ROTATION_1: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_ROTATION_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var MODIFIERS: (SDAI.SET<sDATUM_REFERENCE_MODIFIER>/*[1:nil]*/ )?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.MODIFIERS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CURVE_3D: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CURVE_3D
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DRAFT_ANGLES: (SDAI.LIST<tPLANE_ANGLE_MEASURE>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DRAFT_ANGLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var DETERMINATION_METHOD: tTEXT?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.DETERMINATION_METHOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINE_STRIP_FACE2: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINE_STRIP_FACE2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_RACK_DISPLACEMENT: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_RACK_DISPLACEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSTATE_TYPE_RELATIONSHIP`` )
    public var RELATED_STATE_TYPE: (SDAI.SET<eSTATE_TYPE>/*[1:nil]*/ )?  {
      switch self {
      case ._STATE_TYPE_RELATIONSHIP(let entity): return entity.RELATED_STATE_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eSHAPE_FEATURE_DEFINITION_RELATIONSHIP`` )
    public var RELATING_OBJECT: eSHAPE_FEATURE_DEFINITION?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.RELATING_OBJECT
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let entity): return entity.RELATING_OBJECT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MAP: eREPRESENTATION_MAP?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MAP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GEOMETRIC_MODEL_LINK: sPATH_OR_COMPOSITE_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GEOMETRIC_MODEL_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINE_STRIP_FACE1: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINE_STRIP_FACE1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FACE_GEOMETRY: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FACE_GEOMETRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FACE_ELEMENT: eFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FACE_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASE_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASE_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_ACTUAL_ROTATION_X: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_ACTUAL_ROTATION_X
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATING_COLLECTION: eCOLLECTION?  {
      switch self {
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATING_COLLECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VERTEX_GEOMETRY: ePOINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VERTEX_GEOMETRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_ACTUAL_ROTATION_Y: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_ACTUAL_ROTATION_Y
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLUMN_COUNT: tPOSITIVE_INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLUMN_COUNT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEFFECTIVITY_RELATIONSHIP`` )
    public var RELATED_EFFECTIVITY: eEFFECTIVITY?  {
      switch self {
      case ._EFFECTIVITY_RELATIONSHIP(let entity): return entity.RELATED_EFFECTIVITY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_LENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_LENGTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_ACTUAL_ROTATION_Z: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_ACTUAL_ROTATION_Z
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THICKNESS_LIST: (SDAI.LIST<tLENGTH_MEASURE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.THICKNESS_LIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLUMN_SPACING: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLUMN_SPACING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_CORNER_RADIUS: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_CORNER_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var WIRE_SHELL_EXTENT: (SDAI.SET<eLOOP>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.WIRE_SHELL_EXTENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MAGNITUDE: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MAGNITUDE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CURVE_PLANE: ePLANE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CURVE_PLANE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SPREAD_ANGLE: tPOSITIVE_PLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SPREAD_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SWEPT_AREA: eCURVE_BOUNDED_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SWEPT_AREA
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCULPTURING_ELEMENT: sGENERALIZED_SURFACE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCULPTURING_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_FIRST_ROTATION: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_FIRST_ROTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_METHOD`` )
    /// - origin: ENTITY( ``eINFORMATION_RIGHT`` )
    /// - origin: ENTITY( ``eINFORMATION_USAGE_RIGHT`` )
    /// - origin: ENTITY( ``ePROCESS_OPERATION`` )
    public var CONSEQUENCE: tTEXT?  {
      switch self {
      case ._ACTION_METHOD(let entity): return entity.CONSEQUENCE
      case ._INFORMATION_RIGHT(let entity): return entity.CONSEQUENCE
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity.CONSEQUENCE
      case ._PROCESS_OPERATION(let entity): return entity.CONSEQUENCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE`` )
    public var ROOT: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.ROOT
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.ROOT
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.ROOT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var STYLES: (SDAI.SET<ePRESENTATION_STYLE_ASSIGNMENT>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.STYLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_END_ID: tIDENTIFIER?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_END_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE_RELATIONSHIP`` )
    public var RELATING_EVENT: eEVENT_OCCURRENCE?  {
      switch self {
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let entity): return entity.RELATING_EVENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONE_ANGLE1: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONE_ANGLE1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PLACEMENT_START: ePLACEMENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PLACEMENT_START
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var B_SPLINES: (SDAI.LIST<eLOCAL_B_SPLINE>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.B_SPLINES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHANGE_ELEMENT_SEQUENCE`` )
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_GROUP_RELATIONSHIP`` )
    public var RELATING_GROUP: eGROUP?  {
      switch self {
      case ._CHANGE_ELEMENT_SEQUENCE(let entity): return eGROUP(entity.RELATING_GROUP)
      case ._GROUP_RELATIONSHIP(let entity): return entity.RELATING_GROUP
      case ._PRODUCT_GROUP_RELATIONSHIP(let entity): return entity.RELATING_GROUP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePROCESS_PRODUCT_ASSOCIATION`` )
    public var PROCESS: ePRODUCT_DEFINITION_PROCESS?  {
      switch self {
      case ._PROCESS_PRODUCT_ASSOCIATION(let entity): return entity.PROCESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var NOTABLE_INSTANCES: (SDAI.LIST<eEQUIVALENCE_NOTABLE_INSTANCE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.NOTABLE_INSTANCES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_CONTRACT_ASSIGNMENT`` )
    public var ASSIGNED_CONTRACT: eCONTRACT?  {
      switch self {
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.ASSIGNED_CONTRACT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var EXPLICIT_SHAPE: (SDAI.SET<eITEM_IDENTIFIED_REPRESENTATION_USAGE>/*[0:nil]*/ )?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.EXPLICIT_SHAPE
      case ._FEATURE_DEFINITION(let entity): return entity.EXPLICIT_SHAPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    public var COMPOSITION: eCHANGE_GROUP?  {
      switch self {
      case ._GROUP_RELATIONSHIP(let entity): return entity.COMPOSITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION`` )
    public var THE_ORGANIZATION: eORGANIZATION?  {
      switch self {
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.THE_ORGANIZATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLOUR_VALUES: (SDAI.LIST<SDAI.LIST<tUNSIGNED_8_BIT_INTEGER>/*[3:4]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLOUR_VALUES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONE_ANGLE2: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONE_ANGLE2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THICKNESS2: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.THICKNESS2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var COMPONENT_RELATIONSHIPS: (SDAI.SET<eSHAPE_ASPECT_RELATIONSHIP>/*[2:nil]*/ )?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.COMPONENT_RELATIONSHIPS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eORGANIZATIONAL_PROJECT_RELATIONSHIP`` )
    public var RELATED_ORGANIZATIONAL_PROJECT: eORGANIZATIONAL_PROJECT?  {
      switch self {
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let entity): return entity.RELATED_ORGANIZATIONAL_PROJECT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCANNER_UNCERTAINTY: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCANNER_UNCERTAINTY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EBWM_BOUNDARY: (SDAI.SET<eCONNECTED_EDGE_SET>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EBWM_BOUNDARY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var W_B_SPLINES: (SDAI.LIST<eLOCAL_B_SPLINE>/*[8:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.W_B_SPLINES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SEMI_AXIS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SEMI_AXIS
      default: return nil
      }
    }

    //MARK: var BASE: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT`` )
    public var ASSIGNED_PERSON_AND_ORGANIZATION: ePERSON_AND_ORGANIZATION?  {
      switch self {
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return 
        entity.ASSIGNED_PERSON_AND_ORGANIZATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIXED_REFERENCE: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIXED_REFERENCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eLOCAL_TIME`` )
    public var MINUTE_COMPONENT: tMINUTE_IN_HOUR?  {
      switch self {
      case ._LOCAL_TIME(let entity): return entity.MINUTE_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var BASE_COMMON_DATUM_LIST: tCOMMON_DATUM_LIST?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.BASE_COMMON_DATUM_LIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSTATE_OBSERVED_RELATIONSHIP`` )
    public var RELATING_STATE_OBSERVED: (SDAI.SET<eSTATE_OBSERVED>/*[1:nil]*/ )?  {
      switch self {
      case ._STATE_OBSERVED_RELATIONSHIP(let entity): return entity.RELATING_STATE_OBSERVED
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION`` )
    /// - origin: ENTITY( ``ePRODUCT_PROCESS_PLAN`` )
    public var PRODUCT_DEFINITIONS: (SDAI.SET<ePROCESS_PRODUCT_ASSOCIATION>/*[1:nil]*/ )?  {
      switch self {
      case ._ACTION(let entity): return entity.PRODUCT_DEFINITIONS
      case ._PRODUCT_PROCESS_PLAN(let entity): return entity.PRODUCT_DEFINITIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eBREAKDOWN_CONTEXT`` )
    /// - origin: ENTITY( ``eBREAKDOWN_OF`` )
    /// - origin: SELECT( ``sCLASSIFIED_ITEM`` )
    /// - origin: ENTITY( ``eINTERFACE_DEFINITION_CONNECTION`` )
    /// - origin: ENTITY( ``eINTERFACE_DEFINITION_FOR`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE`` )
    public var RELATING_PRODUCT_DEFINITION: sPRODUCT_DEFINITION_OR_REFERENCE?  {
      switch self {
      case ._BREAKDOWN_CONTEXT(let entity): return entity.RELATING_PRODUCT_DEFINITION
      case ._BREAKDOWN_OF(let entity): return entity.RELATING_PRODUCT_DEFINITION
      case ._CLASSIFIED_ITEM(let select): return sPRODUCT_DEFINITION_OR_REFERENCE(
        select.RELATING_PRODUCT_DEFINITION)
      case ._INTERFACE_DEFINITION_CONNECTION(let entity): return entity.RELATING_PRODUCT_DEFINITION
      case ._INTERFACE_DEFINITION_FOR(let entity): return entity.RELATING_PRODUCT_DEFINITION
      case ._PRODUCT_DEFINITION(let entity): return sPRODUCT_DEFINITION_OR_REFERENCE(
        entity.RELATING_PRODUCT_DEFINITION)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.RELATING_PRODUCT_DEFINITION
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.RELATING_PRODUCT_DEFINITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var STROKES: (SDAI.SET<eCURVE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.STROKES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SECOND_OFFSET: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SECOND_OFFSET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eDOCUMENT_FILE`` )
    public var REPRESENTATION_TYPES: (SDAI.SET<eDOCUMENT_REPRESENTATION_TYPE>/*[0:nil]*/ )?  {
      switch self {
      case ._DOCUMENT_FILE(let entity): return entity.REPRESENTATION_TYPES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_REQUEST_STATUS`` )
    public var ASSIGNED_REQUEST: eVERSIONED_ACTION_REQUEST?  {
      switch self {
      case ._ACTION_REQUEST_STATUS(let entity): return entity.ASSIGNED_REQUEST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    public var NODES: (SDAI.LIST_UNIQUE<eREPRESENTATION>/*[2:nil]*/ )?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.NODES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_START: eVERTEX?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_START
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var NPOINTS: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.NPOINTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var W_DEGREE: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.W_DEGREE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var HIDDEN_LINE_SURFACE_REMOVAL: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.HIDDEN_LINE_SURFACE_REMOVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MULTIPLICITIES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var RELATED_VERSION: eCOLLECTION_VERSION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.RELATED_VERSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ALPHA: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ALPHA
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BETA: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BETA
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eLOCAL_TIME`` )
    public var HOUR_COMPONENT: tHOUR_IN_DAY?  {
      switch self {
      case ._LOCAL_TIME(let entity): return entity.HOUR_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SUBLISTS: (SDAI.LIST<ePOINT_CLOUD_DATASET>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SUBLISTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET_TYPE: nPARALLEL_OFFSET_TYPE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_RELATIONSHIP`` )
    public var RELATED_ACTION: eACTION?  {
      switch self {
      case ._ACTION_RELATIONSHIP(let entity): return entity.RELATED_ACTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MIRROR_ELEMENT: sLINEAR_GEOMETRY_CONSTRAINT_ELEMENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MIRROR_ELEMENT
      default: return nil
      }
    }

    //MARK: var SOURCE: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eDOCUMENT_RELATIONSHIP`` )
    public var RELATING_DOCUMENT: eDOCUMENT?  {
      switch self {
      case ._DOCUMENT_RELATIONSHIP(let entity): return entity.RELATING_DOCUMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LIGHT_COLOUR: eCOLOUR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LIGHT_COLOUR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_GEOMETRY: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_GEOMETRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LENGTH_VALUE: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LENGTH_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_WIDTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_WIDTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION`` )
    /// - origin: ENTITY( ``eALTERNATIVE_SOLUTION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eANALYSIS_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eASSIGNMENT_OBJECT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eBREAKDOWN_CONTEXT`` )
    /// - origin: ENTITY( ``eBREAKDOWN_ELEMENT_REALIZATION`` )
    /// - origin: ENTITY( ``eBREAKDOWN_OF`` )
    /// - origin: ENTITY( ``eCHANGE_GROUP`` )
    /// - origin: ENTITY( ``eCHARACTERIZED_CLASS`` )
    /// - origin: ENTITY( ``eCLASS`` )
    /// - origin: SELECT( ``sCLASSIFIED_ITEM`` )
    /// - origin: ENTITY( ``eCONFIGURATION_EFFECTIVITY`` )
    /// - origin: ENTITY( ``eCONFIGURATION_ITEM`` )
    /// - origin: ENTITY( ``eCONTRACT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eDIRECTED_ACTION`` )
    /// - origin: ENTITY( ``eDOCUMENT_FILE`` )
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    /// - origin: ENTITY( ``eENVELOPE`` )
    /// - origin: ENTITY( ``eENVELOPE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eEVALUATED_CHARACTERISTIC`` )
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE`` )
    /// - origin: ENTITY( ``eEXECUTED_ACTION`` )
    /// - origin: ENTITY( ``eGENERAL_PROPERTY`` )
    /// - origin: ENTITY( ``eGROUP`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTION`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_AS_PLANNED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_AS_REALIZED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_DESIGN`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_OCCURRENCE`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED`` )
    /// - origin: ENTITY( ``eINTERFACE_DEFINITION_CONNECTION`` )
    /// - origin: ENTITY( ``eINTERFACE_DEFINITION_FOR`` )
    /// - origin: ENTITY( ``eIN_ZONE`` )
    /// - origin: ENTITY( ``eLANGUAGE`` )
    /// - origin: ENTITY( ``eLOCATION`` )
    /// - origin: ENTITY( ``eLOCATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eMESSAGE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eORGANIZATION`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_PROJECT`` )
    /// - origin: ENTITY( ``ePERSON`` )
    /// - origin: ENTITY( ``ePROCESS_PLAN`` )
    /// - origin: ENTITY( ``ePRODUCT`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_CATEGORY`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_TO_INDIVIDUAL`` )
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL`` )
    /// - origin: ENTITY( ``ePRODUCT_GROUP`` )
    /// - origin: ENTITY( ``ePRODUCT_PROCESS_PLAN`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    /// - origin: ENTITY( ``eREQUIREMENT_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eREQUIREMENT_SOURCE`` )
    /// - origin: ENTITY( ``eRETENTION`` )
    /// - origin: ENTITY( ``eSATISFIES_REQUIREMENT`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eSTRUCTURED_MESSAGE`` )
    /// - origin: ENTITY( ``eVALIDATION`` )
    /// - origin: ENTITY( ``eVERIFICATION`` )
    /// - origin: ENTITY( ``eVERSIONED_ACTION_REQUEST`` )
    /// - origin: ENTITY( ``eVERSIONED_ACTION_REQUEST_RELATIONSHIP`` )
    public var ID: tIDENTIFIER?  {
      switch self {
      case ._ACTION(let entity): return entity.ID
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let entity): return entity.ID
      case ._ANALYSIS_ASSIGNMENT(let entity): return entity.ID
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity.ID
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let entity): return entity.ID
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity.ID
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let entity): return entity.ID
      case ._BREAKDOWN_CONTEXT(let entity): return entity.ID
      case ._BREAKDOWN_ELEMENT_REALIZATION(let entity): return entity.ID
      case ._BREAKDOWN_OF(let entity): return entity.ID
      case ._CHANGE_GROUP(let entity): return entity.ID
      case ._CHARACTERIZED_CLASS(let entity): return entity.ID
      case ._CLASS(let entity): return entity.ID
      case ._CLASSIFIED_ITEM(let select): return select.ID
      case ._CONFIGURATION_EFFECTIVITY(let entity): return entity.ID
      case ._CONFIGURATION_ITEM(let entity): return entity.ID
      case ._CONTRACT_RELATIONSHIP(let entity): return entity.ID
      case ._DIRECTED_ACTION(let entity): return entity.ID
      case ._DOCUMENT_FILE(let entity): return entity.ID
      case ._EFFECTIVITY(let entity): return entity.ID
      case ._ENVELOPE(let entity): return entity.ID
      case ._ENVELOPE_RELATIONSHIP(let entity): return entity.ID
      case ._EVALUATED_CHARACTERISTIC(let entity): return entity.ID
      case ._EVENT_OCCURRENCE(let entity): return entity.ID
      case ._EXECUTED_ACTION(let entity): return entity.ID
      case ._GENERAL_PROPERTY(let entity): return entity.ID
      case ._GROUP(let entity): return entity.ID
      case ._INTERFACE_CONNECTION(let entity): return entity.ID
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let entity): return entity.ID
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let entity): return entity.ID
      case ._INTERFACE_CONNECTOR_DESIGN(let entity): return entity.ID
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let entity): return entity.ID
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let entity): return entity.ID
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let entity): return entity.ID
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let entity): return entity.ID
      case ._INTERFACE_DEFINITION_CONNECTION(let entity): return entity.ID
      case ._INTERFACE_DEFINITION_FOR(let entity): return entity.ID
      case ._IN_ZONE(let entity): return entity.ID
      case ._LANGUAGE(let entity): return entity.ID
      case ._LOCATION(let entity): return entity.ID
      case ._LOCATION_RELATIONSHIP(let entity): return entity.ID
      case ._MESSAGE_RELATIONSHIP(let entity): return entity.ID
      case ._ORGANIZATION(let entity): return entity.ID
      case ._ORGANIZATIONAL_PROJECT(let entity): return entity.ID
      case ._PERSON(let entity): return entity.ID
      case ._PROCESS_PLAN(let entity): return entity.ID
      case ._PRODUCT(let entity): return entity.ID
      case ._PRODUCT_CONCEPT(let entity): return entity.ID
      case ._PRODUCT_CONCEPT_FEATURE(let entity): return entity.ID
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let entity): return entity.ID
      case ._PRODUCT_DEFINITION(let entity): return entity.ID
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.ID
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.ID
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.ID
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.ID
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let entity): return entity.ID
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let entity): return entity.ID
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let entity): return entity.ID
      case ._PRODUCT_GROUP(let entity): return entity.ID
      case ._PRODUCT_PROCESS_PLAN(let entity): return entity.ID
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.ID
      case ._PROPERTY_DEFINITION(let entity): return entity.ID
      case ._REPRESENTATION(let entity): return entity.ID
      case ._REQUIREMENT_ASSIGNMENT(let entity): return entity.ID
      case ._REQUIREMENT_SOURCE(let entity): return entity.ID
      case ._RETENTION(let entity): return entity.ID
      case ._SATISFIES_REQUIREMENT(let entity): return entity.ID
      case ._SHAPE_ASPECT(let entity): return entity.ID
      case ._SHAPE_ASPECT_RELATIONSHIP(let entity): return entity.ID
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let entity): return entity.ID
      case ._STRUCTURED_MESSAGE(let entity): return entity.ID
      case ._VALIDATION(let entity): return entity.ID
      case ._VERIFICATION(let entity): return entity.ID
      case ._VERSIONED_ACTION_REQUEST(let entity): return entity.ID
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let entity): return entity.ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var APPLIED_GENERAL_ACCURACY: (SDAI.SET<eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.APPLIED_GENERAL_ACCURACY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var CONTEXT_TYPE: tTEXT?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.CONTEXT_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TRANSITION_NUMBER: tPOSITIVE_INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TRANSITION_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eMESSAGE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATING_MESSAGE: eSTRUCTURED_MESSAGE?  {
      switch self {
      case ._MESSAGE_RELATIONSHIP(let entity): return entity.RELATING_MESSAGE
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATING_MESSAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SECOND_REPEAT_FACTOR: eVECTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SECOND_REPEAT_FACTOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SLOT_CENTRELINE: eBOUNDED_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SLOT_CENTRELINE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var FEATURE_BASIS_RELATIONSHIP: (SDAI.SET<eSHAPE_ASPECT_RELATIONSHIP>/*[1:nil]*/ )?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.FEATURE_BASIS_RELATIONSHIP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS_FIRST_LINK: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS_FIRST_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SEMI_APEX_ANGLE: tPOSITIVE_PLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SEMI_APEX_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eALTERNATE_PRODUCT_RELATIONSHIP`` )
    public var ALTERNATE: ePRODUCT?  {
      switch self {
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let entity): return entity.ALTERNATE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEVALUATED_CHARACTERISTIC`` )
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var CONTEXT_OF_ITEMS: eREPRESENTATION_CONTEXT?  {
      switch self {
      case ._EVALUATED_CHARACTERISTIC(let entity): return entity.CONTEXT_OF_ITEMS
      case ._REPRESENTATION(let entity): return entity.CONTEXT_OF_ITEMS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BLENDED_EDGES: (SDAI.LIST_UNIQUE<eEDGE_CURVE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BLENDED_EDGES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eDEFINITIONAL_REPRESENTATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eEVALUATED_CHARACTERISTIC`` )
    /// - origin: ENTITY( ``eLINK_MOTION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eREPRESENTATION_RELATIONSHIP`` )
    public var REP_1: sREPRESENTATION_OR_REPRESENTATION_REFERENCE?  {
      switch self {
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let entity): return entity.REP_1
      case ._EVALUATED_CHARACTERISTIC(let entity): return entity.REP_1
      case ._LINK_MOTION_RELATIONSHIP(let entity): return sREPRESENTATION_OR_REPRESENTATION_REFERENCE(
        entity.REP_1)
      case ._REPRESENTATION_ITEM(let entity): return sREPRESENTATION_OR_REPRESENTATION_REFERENCE(
        entity.REP_1)
      case ._REPRESENTATION_RELATIONSHIP(let entity): return entity.REP_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SUPPRESSED_ITEMS: (SDAI.SET<eREPRESENTATION_ITEM>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SUPPRESSED_ITEMS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eDEFINITIONAL_REPRESENTATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eEVALUATED_CHARACTERISTIC`` )
    /// - origin: ENTITY( ``eLINK_MOTION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eREPRESENTATION_RELATIONSHIP`` )
    public var REP_2: sREPRESENTATION_OR_REPRESENTATION_REFERENCE?  {
      switch self {
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let entity): return entity.REP_2
      case ._EVALUATED_CHARACTERISTIC(let entity): return entity.REP_2
      case ._LINK_MOTION_RELATIONSHIP(let entity): return sREPRESENTATION_OR_REPRESENTATION_REFERENCE(
        entity.REP_2)
      case ._REPRESENTATION_ITEM(let entity): return sREPRESENTATION_OR_REPRESENTATION_REFERENCE(
        entity.REP_2)
      case ._REPRESENTATION_RELATIONSHIP(let entity): return entity.REP_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var PARAMETER_UNIT: sUNIT?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.PARAMETER_UNIT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eVERSIONED_ACTION_REQUEST`` )
    public var VERSION: tLABEL?  {
      switch self {
      case ._VERSIONED_ACTION_REQUEST(let entity): return entity.VERSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var TOWN: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.TOWN
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.TOWN
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.TOWN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SKETCH_BASIS: sSKETCH_BASIS_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SKETCH_BASIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SBSM_BOUNDARY: (SDAI.SET<sSHELL>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SBSM_BOUNDARY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_PARAMETER_W: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_PARAMETER_W
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCONTEXT_DEPENDENT_UNIT`` )
    /// - origin: ENTITY( ``eNAMED_UNIT`` )
    public var ASSOCIATED_VARIABLE_ENVIRONMENT: eENVIRONMENT?  {
      switch self {
      case ._CONTEXT_DEPENDENT_UNIT(let entity): return entity.ASSOCIATED_VARIABLE_ENVIRONMENT
      case ._NAMED_UNIT(let entity): return entity.ASSOCIATED_VARIABLE_ENVIRONMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OUTER: eCLOSED_SHELL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OUTER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POSITION_COORDS: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POSITION_COORDS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SURFACE_2: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SURFACE_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var COUNTRY: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.COUNTRY
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.COUNTRY
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.COUNTRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var DIRECTION: nDIRECTED_TOLERANCE_ZONE_TYPE?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.DIRECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT_RELATIONSHIP`` )
    public var RELATED_SHAPE_ASPECT: eSHAPE_ASPECT?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return eSHAPE_ASPECT(entity.RELATED_SHAPE_ASPECT)
      case ._SHAPE_ASPECT(let entity): return eSHAPE_ASPECT(entity.RELATED_SHAPE_ASPECT)
      case ._SHAPE_ASPECT_RELATIONSHIP(let entity): return entity.RELATED_SHAPE_ASPECT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var SPOTFACE_RADIUS: ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.SPOTFACE_RADIUS
      case ._FEATURE_DEFINITION(let entity): return entity.SPOTFACE_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCONFIGURATION_ITEM_RELATIONSHIP`` )
    public var RELATED_CONFIGURATION_ITEM: eCONFIGURATION_ITEM?  {
      switch self {
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let entity): return entity.RELATED_CONFIGURATION_ITEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_FUNCTION_LIST: (SDAI.LIST<nBLEND_RADIUS_VARIATION_TYPE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_FUNCTION_LIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CES_EDGES: (SDAI.SET<eEDGE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CES_EDGES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ASSOCIATED_LINK_REPRESENTATIONS_1: (SDAI.SET<eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ASSOCIATED_LINK_REPRESENTATIONS_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SURFACE_1: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SURFACE_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT_RELATIONSHIP`` )
    public var ANGLE_SELECTION: nANGLE_RELATOR?  {
      switch self {
      case ._SHAPE_ASPECT_RELATIONSHIP(let entity): return entity.ANGLE_SELECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eTIME_INTERVAL_RELATIONSHIP`` )
    public var RELATED_TIME_INTERVAL: eTIME_INTERVAL?  {
      switch self {
      case ._TIME_INTERVAL_RELATIONSHIP(let entity): return entity.RELATED_TIME_INTERVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eORGANIZATIONAL_PROJECT`` )
    public var RESPONSIBLE_ORGANIZATIONS: (SDAI.SET<eORGANIZATION>/*[1:nil]*/ )?  {
      switch self {
      case ._ORGANIZATIONAL_PROJECT(let entity): return entity.RESPONSIBLE_ORGANIZATIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONSTRAINT_GROUP: (SDAI.SET<sCONSTRAINT_GROUP_MEMBER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONSTRAINT_GROUP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VIEW_REFERENCE_SYSTEM: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VIEW_REFERENCE_SYSTEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: SELECT( ``sCLASSIFIED_ITEM`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_AS_PLANNED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_AS_REALIZED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_DESIGN`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    public var OF_PRODUCT: ePRODUCT?  {
      switch self {
      case ._CLASSIFIED_ITEM(let select): return select.OF_PRODUCT
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let entity): return entity.OF_PRODUCT
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let entity): return entity.OF_PRODUCT
      case ._INTERFACE_CONNECTOR_DESIGN(let entity): return entity.OF_PRODUCT
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.OF_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_START_ID: tIDENTIFIER?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_START_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    public var REPRESENTATION_RELATION: eKINEMATIC_PROPERTY_DEFINITION_REPRESENTATION?  {
      switch self {
      case ._PROPERTY_DEFINITION(let entity): return entity.REPRESENTATION_RELATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RELATED_REPRESENTATION_ITEM: sANGLE_DIRECTION_REFERENCE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RELATED_REPRESENTATION_ITEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE`` )
    public var PRODUCT_DEFINITION_OCCURRENCE_ID: tIDENTIFIER?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.PRODUCT_DEFINITION_OCCURRENCE_ID
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.PRODUCT_DEFINITION_OCCURRENCE_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ASSOCIATED_LINK_REPRESENTATIONS_2: (SDAI.SET<eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ASSOCIATED_LINK_REPRESENTATIONS_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_EFFECTIVITY_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_INEFFECTIVITY_ASSIGNMENT`` )
    public var ASSIGNED_EFFECTIVITY: eEFFECTIVITY?  {
      switch self {
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.ASSIGNED_EFFECTIVITY
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.ASSIGNED_EFFECTIVITY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    public var DIRECTED_LINK: (SDAI.LIST<eREPRESENTATION_RELATIONSHIP>/*[1:nil]*/ )?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.DIRECTED_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INTERSECTED_MODEL: sSURFACE_OR_SOLID_MODEL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INTERSECTED_MODEL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var IMPLICIT_OUTER: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.IMPLICIT_OUTER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_SECOND_ROTATION: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_SECOND_ROTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var DEFINING_TOLERANCE: (SDAI.SET<sTOLERANCE_ZONE_TARGET>/*[1:nil]*/ )?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.DEFINING_TOLERANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    public var TELEPHONE_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.TELEPHONE_NUMBER
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.TELEPHONE_NUMBER
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.TELEPHONE_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_DOCUMENT_REFERENCE`` )
    public var ASSIGNED_DOCUMENT: eDOCUMENT?  {
      switch self {
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): return entity.ASSIGNED_DOCUMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var NEUTRAL_SKETCH_SEMANTICS: nCURVES_OR_AREA?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.NEUTRAL_SKETCH_SEMANTICS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var W_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.W_MULTIPLICITIES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCALENDAR_DATE`` )
    public var YEAR_COMPONENT: tYEAR_NUMBER?  {
      switch self {
      case ._CALENDAR_DATE(let entity): return entity.YEAR_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SMOOTHNESS: nTRANSITION_CODE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SMOOTHNESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSTATE_OBSERVED_RELATIONSHIP`` )
    public var RELATED_STATE_OBSERVED: (SDAI.SET<eSTATE_OBSERVED>/*[1:nil]*/ )?  {
      switch self {
      case ._STATE_OBSERVED_RELATIONSHIP(let entity): return entity.RELATED_STATE_OBSERVED
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_DIRECTIVE`` )
    public var REQUESTS: (SDAI.SET<eVERSIONED_ACTION_REQUEST>/*[1:nil]*/ )?  {
      switch self {
      case ._ACTION_DIRECTIVE(let entity): return entity.REQUESTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INSPECTED_ELEMENT: eDATA_EQUIVALENCE_INSPECTED_ELEMENT_PAIR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INSPECTED_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXTREME_INSTANCES: (SDAI.LIST<eEXTREME_INSTANCE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXTREME_INSTANCES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXIT_FACES: (SDAI.SET<eFACE_SURFACE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXIT_FACES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET_VALUE: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT`` )
    public var MARKET_CONTEXT: ePRODUCT_CONCEPT_CONTEXT?  {
      switch self {
      case ._PRODUCT_CONCEPT(let entity): return entity.MARKET_CONTEXT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REPRESENTED_LINK: eKINEMATIC_LINK?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REPRESENTED_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REPRESENTED_TOPOLOGY: sKINEMATIC_TOPOLOGY_REPRESENTATION_SELECT?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REPRESENTED_TOPOLOGY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_INDEX: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_INDEX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var UNCERTAINTY: (SDAI.SET<eUNCERTAINTY_MEASURE_WITH_UNIT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.UNCERTAINTY
      case ._REPRESENTATION_CONTEXT(let entity): return entity.UNCERTAINTY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONE_BASE_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONE_BASE_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_ROTATION_Z: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_ROTATION_Z
      default: return nil
      }
    }

    //MARK: var FRAME_OF_REFERENCE: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEVIDENCE`` )
    /// - origin: ENTITY( ``eGROUP`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_GROUP_MEMBERSHIP`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var ASSIGNED_GROUP: eGROUP?  {
      switch self {
      case ._EVIDENCE(let entity): return entity.ASSIGNED_GROUP
      case ._GROUP(let entity): return eGROUP(entity.ASSIGNED_GROUP)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): return eGROUP(entity.ASSIGNED_GROUP)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return eGROUP(entity.ASSIGNED_GROUP)
      case ._PRODUCT_GROUP_MEMBERSHIP(let entity): return entity.ASSIGNED_GROUP
      case ._PROPERTY_DEFINITION(let entity): return eGROUP(entity.ASSIGNED_GROUP)
      case ._SHAPE_ASPECT(let entity): return eGROUP(entity.ASSIGNED_GROUP)
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eMEASURE_REPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eMEASURE_WITH_UNIT`` )
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eUNCERTAINTY_MEASURE_WITH_UNIT`` )
    public var VALUE_COMPONENT: sMEASURE_VALUE?  {
      switch self {
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.VALUE_COMPONENT
      case ._MEASURE_WITH_UNIT(let entity): return entity.VALUE_COMPONENT
      case ._REPRESENTATION_ITEM(let entity): return entity.VALUE_COMPONENT
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let entity): return entity.VALUE_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PERMANENT_ID: tIDENTIFIER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PERMANENT_ID
      default: return nil
      }
    }

    //MARK: var LOCATION: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DIR: eVECTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DIR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_ROTATION_X: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_ROTATION_X
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLLECTED_TEXT: (SDAI.SET<sTEXT_OR_CHARACTER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLLECTED_TEXT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_ROTATION_Y: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_ROTATION_Y
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PLACING: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PLACING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_DIRECTIVE`` )
    public var COMMENT: tTEXT?  {
      switch self {
      case ._ACTION_DIRECTIVE(let entity): return entity.COMMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_DISPLACEMENT: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_DISPLACEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASIS_FACE_SURFACE: eFACE_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASIS_FACE_SURFACE
      default: return nil
      }
    }

    //MARK: var DEFINITION: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEFFECTIVITY_RELATIONSHIP`` )
    public var RELATING_EFFECTIVITY: eEFFECTIVITY?  {
      switch self {
      case ._EFFECTIVITY_RELATIONSHIP(let entity): return entity.RELATING_EFFECTIVITY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eLOCATION_RELATIONSHIP`` )
    public var RELATED_LOCATION: eLOCATION?  {
      switch self {
      case ._LOCATION_RELATIONSHIP(let entity): return entity.RELATED_LOCATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MAPPING_SOURCE: eREPRESENTATION_MAP?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MAPPING_SOURCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FOCAL_DIST: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FOCAL_DIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eENVELOPE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eMESSAGE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_TO_INDIVIDUAL`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATING_PRODUCT: ePRODUCT?  {
      switch self {
      case ._ENVELOPE_RELATIONSHIP(let entity): return entity.RELATING_PRODUCT
      case ._MESSAGE_RELATIONSHIP(let entity): return ePRODUCT(entity.RELATING_PRODUCT)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let entity): return entity.RELATING_PRODUCT
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATING_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS1: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PERSPECTIVE_OF_VOLUME: eVIEW_VOLUME?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PERSPECTIVE_OF_VOLUME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCONFIGURATION_DESIGN`` )
    /// - origin: ENTITY( ``eCONFIGURATION_EFFECTIVITY`` )
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var CONFIGURATION: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._CONFIGURATION_DESIGN(let entity): return entity.CONFIGURATION
      case ._CONFIGURATION_EFFECTIVITY(let entity): return entity.CONFIGURATION
      case ._EFFECTIVITY(let entity): return entity.CONFIGURATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS2: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var SPOTFACE_RADIUS_TOLERANCE: eTOLERANCE_VALUE?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.SPOTFACE_RADIUS_TOLERANCE
      case ._FEATURE_DEFINITION(let entity): return entity.SPOTFACE_RADIUS_TOLERANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eORGANIZATION_RELATIONSHIP`` )
    public var RELATED_ORGANIZATION: eORGANIZATION?  {
      switch self {
      case ._ORGANIZATION_RELATIONSHIP(let entity): return entity.RELATED_ORGANIZATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MAPPING_TARGET: eREPRESENTATION_ITEM?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MAPPING_TARGET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_3: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_3
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eBREAKDOWN_CONTEXT`` )
    /// - origin: ENTITY( ``eBREAKDOWN_OF`` )
    /// - origin: SELECT( ``sCLASSIFIED_ITEM`` )
    /// - origin: ENTITY( ``eINTERFACE_DEFINITION_CONNECTION`` )
    /// - origin: ENTITY( ``eINTERFACE_DEFINITION_FOR`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE`` )
    public var RELATED_PRODUCT_DEFINITION: sPRODUCT_DEFINITION_OR_REFERENCE?  {
      switch self {
      case ._BREAKDOWN_CONTEXT(let entity): return entity.RELATED_PRODUCT_DEFINITION
      case ._BREAKDOWN_OF(let entity): return entity.RELATED_PRODUCT_DEFINITION
      case ._CLASSIFIED_ITEM(let select): return sPRODUCT_DEFINITION_OR_REFERENCE(
        select.RELATED_PRODUCT_DEFINITION)
      case ._INTERFACE_DEFINITION_CONNECTION(let entity): return entity.RELATED_PRODUCT_DEFINITION
      case ._INTERFACE_DEFINITION_FOR(let entity): return entity.RELATED_PRODUCT_DEFINITION
      case ._PRODUCT_DEFINITION(let entity): return sPRODUCT_DEFINITION_OR_REFERENCE(
        entity.RELATED_PRODUCT_DEFINITION)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.RELATED_PRODUCT_DEFINITION
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.RELATED_PRODUCT_DEFINITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_2: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_1: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION`` )
    /// - origin: ENTITY( ``eACTION_DIRECTIVE`` )
    /// - origin: ENTITY( ``eACTION_DIRECTIVE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eACTION_METHOD`` )
    /// - origin: ENTITY( ``eACTION_METHOD_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eACTION_PROPERTY`` )
    /// - origin: ENTITY( ``eACTION_PROPERTY_REPRESENTATION`` )
    /// - origin: ENTITY( ``eACTION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eACTION_REQUEST_SOLUTION`` )
    /// - origin: ENTITY( ``eACTION_RESOURCE`` )
    /// - origin: ENTITY( ``eACTION_RESOURCE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eALTERNATE_PRODUCT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eALTERNATIVE_SOLUTION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eANALYSIS_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPROVAL_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eAPPROVAL_STATUS`` )
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE`` )
    /// - origin: ENTITY( ``eBREAKDOWN_CONTEXT`` )
    /// - origin: ENTITY( ``eBREAKDOWN_OF`` )
    /// - origin: ENTITY( ``eCERTIFICATION`` )
    /// - origin: ENTITY( ``eCHANGE_ELEMENT_SEQUENCE`` )
    /// - origin: ENTITY( ``eCHANGE_GROUP`` )
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eCLASS`` )
    /// - origin: SELECT( ``sCLASSIFIED_ITEM`` )
    /// - origin: ENTITY( ``eCONFIGURATION_DESIGN`` )
    /// - origin: ENTITY( ``eCONFIGURATION_EFFECTIVITY`` )
    /// - origin: ENTITY( ``eCONFIGURATION_ITEM`` )
    /// - origin: ENTITY( ``eCONFIGURATION_ITEM_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eCONTEXT_DEPENDENT_UNIT`` )
    /// - origin: ENTITY( ``eCONTRACT`` )
    /// - origin: ENTITY( ``eCONTRACT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eCONVERSION_BASED_UNIT`` )
    /// - origin: ENTITY( ``eDEFINITIONAL_REPRESENTATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eDERIVED_UNIT`` )
    /// - origin: ENTITY( ``eDESCRIPTIVE_REPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eDIRECTED_ACTION`` )
    /// - origin: ENTITY( ``eDOCUMENT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    /// - origin: ENTITY( ``eEFFECTIVITY_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eENVELOPE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE`` )
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eEXECUTED_ACTION`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    /// - origin: ENTITY( ``eGENERAL_FEATURE`` )
    /// - origin: ENTITY( ``eGENERAL_PROPERTY`` )
    /// - origin: ENTITY( ``eGENERAL_PROPERTY_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eGENERIC_PROPERTY_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eGROUP`` )
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eINFORMATION_RIGHT`` )
    /// - origin: ENTITY( ``eINFORMATION_USAGE_RIGHT`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTION`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_OCCURRENCE`` )
    /// - origin: ENTITY( ``eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED`` )
    /// - origin: ENTITY( ``eINTERFACE_DEFINITION_CONNECTION`` )
    /// - origin: ENTITY( ``eINTERFACE_DEFINITION_FOR`` )
    /// - origin: ENTITY( ``eIN_ZONE`` )
    /// - origin: ENTITY( ``eLANGUAGE`` )
    /// - origin: ENTITY( ``eLINK_MOTION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eLOCATION`` )
    /// - origin: ENTITY( ``eLOCATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eMATERIAL_DESIGNATION`` )
    /// - origin: ENTITY( ``eMATERIAL_DESIGNATION_CHARACTERIZATION`` )
    /// - origin: ENTITY( ``eMEASURE_QUALIFICATION`` )
    /// - origin: ENTITY( ``eMEASURE_REPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eMEASURE_WITH_UNIT`` )
    /// - origin: ENTITY( ``eMESSAGE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eORGANIZATION`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_ADDRESS`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_PROJECT`` )
    /// - origin: ENTITY( ``eORGANIZATIONAL_PROJECT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eORGANIZATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION_ADDRESS`` )
    /// - origin: ENTITY( ``ePROCESS_OPERATION`` )
    /// - origin: ENTITY( ``ePROCESS_PLAN`` )
    /// - origin: ENTITY( ``ePROCESS_PRODUCT_ASSOCIATION`` )
    /// - origin: ENTITY( ``ePRODUCT`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_CONTEXT`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_ASSOCIATION`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_FEATURE_CATEGORY`` )
    /// - origin: ENTITY( ``ePRODUCT_CONCEPT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_CONTEXT`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_USAGE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_TO_INDIVIDUAL`` )
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL`` )
    /// - origin: ENTITY( ``ePRODUCT_GROUP`` )
    /// - origin: ENTITY( ``ePRODUCT_GROUP_MEMBERSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_GROUP_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_PROCESS_PLAN`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eREPRESENTATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eREQUIREMENT_FOR_ACTION_RESOURCE`` )
    /// - origin: ENTITY( ``eREQUIREMENT_SOURCE`` )
    /// - origin: ENTITY( ``eRESOURCE_PROPERTY`` )
    /// - origin: ENTITY( ``eRETENTION`` )
    /// - origin: ENTITY( ``eSATISFIES_REQUIREMENT`` )
    /// - origin: ENTITY( ``eSECURITY_CLASSIFICATION`` )
    /// - origin: ENTITY( ``eSECURITY_CLASSIFICATION_LEVEL`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eSTATE_OBSERVED`` )
    /// - origin: ENTITY( ``eSTATE_OBSERVED_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eSTATE_OBSERVED_ROLE`` )
    /// - origin: ENTITY( ``eSTATE_TYPE`` )
    /// - origin: ENTITY( ``eSTATE_TYPE_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eSTRUCTURED_MESSAGE`` )
    /// - origin: ENTITY( ``eTIME_INTERVAL_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eTYPE_QUALIFIER`` )
    /// - origin: ENTITY( ``eUNCERTAINTY_MEASURE_WITH_UNIT`` )
    /// - origin: ENTITY( ``eUSAGE_ASSOCIATION`` )
    /// - origin: ENTITY( ``eVALIDATION`` )
    /// - origin: ENTITY( ``eVERIFICATION`` )
    /// - origin: ENTITY( ``eVERSIONED_ACTION_REQUEST_RELATIONSHIP`` )
    public var NAME: tLABEL?  {
      switch self {
      case ._ACTION(let entity): return entity.NAME
      case ._ACTION_DIRECTIVE(let entity): return entity.NAME
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let entity): return entity.NAME
      case ._ACTION_METHOD(let entity): return entity.NAME
      case ._ACTION_METHOD_RELATIONSHIP(let entity): return entity.NAME
      case ._ACTION_PROPERTY(let entity): return entity.NAME
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.NAME
      case ._ACTION_RELATIONSHIP(let entity): return entity.NAME
      case ._ACTION_REQUEST_SOLUTION(let entity): return entity.NAME
      case ._ACTION_RESOURCE(let entity): return entity.NAME
      case ._ACTION_RESOURCE_RELATIONSHIP(let entity): return entity.NAME
      case ._ADDRESS(let entity): return entity.NAME
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let entity): return entity.NAME
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let entity): return entity.NAME
      case ._ANALYSIS_ASSIGNMENT(let entity): return entity.NAME
      case ._APPROVAL_RELATIONSHIP(let entity): return entity.NAME
      case ._APPROVAL_STATUS(let entity): return entity.NAME
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let entity): return entity.NAME
      case ._BREAKDOWN_CONTEXT(let entity): return entity.NAME
      case ._BREAKDOWN_ELEMENT_REALIZATION/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eBREAKDOWN_ELEMENT_REALIZATION
      case ._BREAKDOWN_OF(let entity): return entity.NAME
      case ._CERTIFICATION(let entity): return entity.NAME
      case ._CHANGE_ELEMENT_SEQUENCE(let entity): return entity.NAME
      case ._CHANGE_GROUP(let entity): return entity.NAME
      case ._CHARACTERIZED_CLASS/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eCHARACTERIZED_CLASS
      case ._CHARACTERIZED_OBJECT(let entity): return entity.NAME
      case ._CLASS(let entity): return entity.NAME
      case ._CLASSIFIED_ITEM(let select): return select.NAME
      case ._CONFIGURATION_DESIGN(let entity): return entity.NAME
      case ._CONFIGURATION_EFFECTIVITY(let entity): return entity.NAME
      case ._CONFIGURATION_ITEM(let entity): return entity.NAME
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let entity): return entity.NAME
      case ._CONTEXT_DEPENDENT_UNIT(let entity): return entity.NAME
      case ._CONTRACT(let entity): return entity.NAME
      case ._CONTRACT_RELATIONSHIP(let entity): return entity.NAME
      case ._CONVERSION_BASED_UNIT(let entity): return entity.NAME
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let entity): return entity.NAME
      case ._DERIVED_UNIT(let entity): return entity.NAME
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let entity): return entity.NAME
      case ._DIRECTED_ACTION(let entity): return entity.NAME
      case ._DOCUMENT_FILE/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eDOCUMENT_FILE
      case ._DOCUMENT_RELATIONSHIP(let entity): return entity.NAME
      case ._EFFECTIVITY(let entity): return entity.NAME
      case ._EFFECTIVITY_RELATIONSHIP(let entity): return entity.NAME
      case ._ENVELOPE/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eENVELOPE
      case ._ENVELOPE_RELATIONSHIP(let entity): return entity.NAME
      case ._EVALUATED_CHARACTERISTIC/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eEVALUATED_CHARACTERISTIC
      case ._EVENT_OCCURRENCE(let entity): return entity.NAME
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let entity): return entity.NAME
      case ._EXECUTED_ACTION(let entity): return entity.NAME
      case ._FEATURE_DEFINITION(let entity): return entity.NAME
      case ._GENERAL_FEATURE(let entity): return entity.NAME
      case ._GENERAL_PROPERTY(let entity): return entity.NAME
      case ._GENERAL_PROPERTY_RELATIONSHIP(let entity): return entity.NAME
      case ._GENERIC_PROPERTY_RELATIONSHIP(let entity): return entity.NAME
      case ._GROUP(let entity): return entity.NAME
      case ._GROUP_RELATIONSHIP(let entity): return entity.NAME
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity.NAME
      case ._INFORMATION_RIGHT(let entity): return entity.NAME
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity.NAME
      case ._INTERFACE_CONNECTION(let entity): return entity.NAME
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let entity): return entity.NAME
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let entity): return entity.NAME
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let entity): return entity.NAME
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let entity): return entity.NAME
      case ._INTERFACE_DEFINITION_CONNECTION(let entity): return entity.NAME
      case ._INTERFACE_DEFINITION_FOR(let entity): return entity.NAME
      case ._IN_ZONE(let entity): return entity.NAME
      case ._LANGUAGE(let entity): return entity.NAME
      case ._LINK_MOTION_RELATIONSHIP(let entity): return entity.NAME
      case ._LOCATION(let entity): return entity.NAME
      case ._LOCATION_RELATIONSHIP(let entity): return entity.NAME
      case ._MATERIAL_DESIGNATION(let entity): return entity.NAME
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): return entity.NAME
      case ._MEASURE_QUALIFICATION(let entity): return entity.NAME
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.NAME
      case ._MEASURE_WITH_UNIT(let entity): return entity.NAME
      case ._MESSAGE_RELATIONSHIP(let entity): return entity.NAME
      case ._NAMED_UNIT/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eNAMED_UNIT
      case ._ORGANIZATION(let entity): return entity.NAME
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.NAME
      case ._ORGANIZATIONAL_PROJECT(let entity): return entity.NAME
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let entity): return entity.NAME
      case ._ORGANIZATION_RELATIONSHIP(let entity): return entity.NAME
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.NAME
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.NAME
      case ._PROCESS_OPERATION(let entity): return entity.NAME
      case ._PROCESS_PLAN(let entity): return entity.NAME
      case ._PROCESS_PRODUCT_ASSOCIATION(let entity): return entity.NAME
      case ._PRODUCT(let entity): return entity.NAME
      case ._PRODUCT_CONCEPT(let entity): return entity.NAME
      case ._PRODUCT_CONCEPT_CONTEXT(let entity): return entity.NAME
      case ._PRODUCT_CONCEPT_FEATURE(let entity): return entity.NAME
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): return entity.NAME
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let entity): return entity.NAME
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let entity): return entity.NAME
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let entity): return entity.NAME
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let entity): return entity.NAME
      case ._PRODUCT_GROUP(let entity): return entity.NAME
      case ._PRODUCT_GROUP_MEMBERSHIP(let entity): return entity.NAME
      case ._PRODUCT_GROUP_RELATIONSHIP(let entity): return entity.NAME
      case ._PRODUCT_PROCESS_PLAN(let entity): return entity.NAME
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.NAME
      case ._PROPERTY_DEFINITION(let entity): return entity.NAME
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.NAME
      case ._REPRESENTATION(let entity): return entity.NAME
      case ._REPRESENTATION_ITEM(let entity): return entity.NAME
      case ._REPRESENTATION_RELATIONSHIP(let entity): return entity.NAME
      case ._REQUIREMENT_ASSIGNMENT/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREQUIREMENT_ASSIGNMENT
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.NAME
      case ._REQUIREMENT_SOURCE(let entity): return entity.NAME
      case ._RESOURCE_PROPERTY(let entity): return entity.NAME
      case ._RETENTION(let entity): return entity.NAME
      case ._SATISFIES_REQUIREMENT(let entity): return entity.NAME
      case ._SECURITY_CLASSIFICATION(let entity): return entity.NAME
      case ._SECURITY_CLASSIFICATION_LEVEL(let entity): return entity.NAME
      case ._SHAPE_ASPECT(let entity): return entity.NAME
      case ._SHAPE_ASPECT_RELATIONSHIP(let entity): return entity.NAME
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eSHAPE_FEATURE_DEFINITION_RELATIONSHIP
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let entity): return entity.NAME
      case ._STATE_OBSERVED(let entity): return entity.NAME
      case ._STATE_OBSERVED_RELATIONSHIP(let entity): return entity.NAME
      case ._STATE_OBSERVED_ROLE(let entity): return entity.NAME
      case ._STATE_TYPE(let entity): return entity.NAME
      case ._STATE_TYPE_RELATIONSHIP(let entity): return entity.NAME
      case ._STRUCTURED_MESSAGE(let entity): return entity.NAME
      case ._TIME_INTERVAL_RELATIONSHIP(let entity): return entity.NAME
      case ._TYPE_QUALIFIER(let entity): return entity.NAME
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let entity): return entity.NAME
      case ._USAGE_ASSOCIATION(let entity): return entity.NAME
      case ._VALIDATION(let entity): return entity.NAME
      case ._VERIFICATION(let entity): return entity.NAME
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let entity): return entity.NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePLUS_MINUS_TOLERANCE`` )
    public var RANGE: sTOLERANCE_METHOD_DEFINITION?  {
      switch self {
      case ._PLUS_MINUS_TOLERANCE(let entity): return entity.RANGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var KNOT_W_UPPER: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.KNOT_W_UPPER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var DEPTH: ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.DEPTH
      case ._FEATURE_DEFINITION(let entity): return entity.DEPTH
      case ._REPRESENTATION_ITEM/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREPRESENTATION_ITEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CHILDREN: (SDAI.SET<eTESSELLATED_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CHILDREN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP`` )
    public var RELATING_ASCRIBABLE_STATE: eASCRIBABLE_STATE?  {
      switch self {
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let entity): return 
        entity.RELATING_ASCRIBABLE_STATE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eFEATURE_DEFINITION`` )
    public var COUNTERSINK_DIAMETER_TOLERANCE: sTOLERANCE_VALUE_OR_LIMITS_AND_FITS?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return entity.COUNTERSINK_DIAMETER_TOLERANCE
      case ._FEATURE_DEFINITION(let entity): return entity.COUNTERSINK_DIAMETER_TOLERANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RELATING_REPRESENTATION_ITEM: sORIENTATION_BASIS_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RELATING_REPRESENTATION_ITEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var BASIS_RELATIONSHIPS: (SDAI.SET<eSHAPE_ASPECT_DERIVING_RELATIONSHIP>/*[1:nil]*/ )?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.BASIS_RELATIONSHIPS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT`` )
    public var ASSIGNED_ORGANIZATIONAL_PROJECT: eORGANIZATIONAL_PROJECT?  {
      switch self {
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return 
        entity.ASSIGNED_ORGANIZATIONAL_PROJECT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VIEW_DIRECTION: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VIEW_DIRECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_RELATIONSHIP`` )
    public var MOTION: eKINEMATIC_PATH?  {
      switch self {
      case ._REPRESENTATION_RELATIONSHIP(let entity): return entity.MOTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCHARACTERIZED_OBJECT`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT_RELATIONSHIP`` )
    public var RELATING_SHAPE_ASPECT: eSHAPE_ASPECT?  {
      switch self {
      case ._CHARACTERIZED_OBJECT(let entity): return eSHAPE_ASPECT(entity.RELATING_SHAPE_ASPECT)
      case ._SHAPE_ASPECT(let entity): return eSHAPE_ASPECT(entity.RELATING_SHAPE_ASPECT)
      case ._SHAPE_ASPECT_RELATIONSHIP(let entity): return entity.RELATING_SHAPE_ASPECT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eCONTRACT_RELATIONSHIP`` )
    public var RELATED_CONTRACT: eCONTRACT?  {
      switch self {
      case ._CONTRACT_RELATIONSHIP(let entity): return entity.RELATED_CONTRACT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var PREFIX_TITLES: (SDAI.LIST<tLABEL>/*[1:nil]*/ )?  {
      switch self {
      case ._PERSON(let entity): return entity.PREFIX_TITLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_SOLID: eSOLID_MODEL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_SOLID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_4: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_4
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePLUS_MINUS_TOLERANCE`` )
    public var TOLERANCED_DIMENSION: sDIMENSIONAL_CHARACTERISTIC?  {
      switch self {
      case ._PLUS_MINUS_TOLERANCE(let entity): return entity.TOLERANCED_DIMENSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REPRESENTED_MECHANISM: eMECHANISM_REPRESENTATION?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REPRESENTED_MECHANISM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_POINT_ON_SURFACE_2: ePOINT_ON_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_POINT_ON_SURFACE_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var NEGATIVE_DIRECTION: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.NEGATIVE_DIRECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var PREDECESSOR: eCOLLECTION_VERSION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.PREDECESSOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIRST_OPERAND: sBOOLEAN_OPERAND?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIRST_OPERAND
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_POINT_ON_SURFACE_1: ePOINT_ON_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_POINT_ON_SURFACE_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXTRUSION_AXIS: eVECTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXTRUSION_AXIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eACTION_METHOD_RELATIONSHIP`` )
    /// - origin: ENTITY( ``eUSAGE_ASSOCIATION`` )
    public var RELATING_METHOD: eACTION_METHOD?  {
      switch self {
      case ._ACTION_METHOD_RELATIONSHIP(let entity): return entity.RELATING_METHOD
      case ._USAGE_ASSOCIATION(let entity): return eACTION_METHOD(entity.RELATING_METHOD)
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARING_ELEMENT_TYPES: (SDAI.LIST<nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARING_ELEMENT_TYPES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VOIDS: (SDAI.SET<eORIENTED_CLOSED_SHELL>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VOIDS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE`` )
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var OFFSET: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._EVENT_OCCURRENCE(let entity): return entity.OFFSET
      case ._SHAPE_ASPECT(let entity): return entity.OFFSET
      default: return nil
      }
    }

    //MARK: var USAGE: (AMBIGUOUS)

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPROVAL_RELATIONSHIP`` )
    public var RELATING_APPROVAL: eAPPROVAL?  {
      switch self {
      case ._APPROVAL_RELATIONSHIP(let entity): return entity.RELATING_APPROVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONE_APEX_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONE_APEX_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POLYGON: (SDAI.LIST_UNIQUE<eCARTESIAN_POINT>/*[3:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POLYGON
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var U_SMOOTHNESS: nTRANSITION_CODE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.U_SMOOTHNESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DESIGN_TO_INDIVIDUAL`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var PRODUCT_DESIGN: ePRODUCT?  {
      switch self {
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let entity): return entity.PRODUCT_DESIGN
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.PRODUCT_DESIGN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eDOCUMENT_RELATIONSHIP`` )
    public var RELATED_DOCUMENT: eDOCUMENT?  {
      switch self {
      case ._DOCUMENT_RELATIONSHIP(let entity): return entity.RELATED_DOCUMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DIM: tDIMENSION_COUNT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DIM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINE_STRIPS: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINE_STRIPS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SMALL_VECTOR_TOLERANCE: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SMALL_VECTOR_TOLERANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var APPLIED_VALUES: (SDAI.SET<eMEASURE_REPRESENTATION_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.APPLIED_VALUES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eSHAPE_ASPECT`` )
    public var TARGET_BASIS_RELATIONSHIP: (SDAI.SET<eSHAPE_ASPECT_RELATIONSHIP>/*[1:nil]*/ )?  {
      switch self {
      case ._SHAPE_ASPECT(let entity): return entity.TARGET_BASIS_RELATIONSHIP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATION_ASSIGNMENT`` )
    public var ASSIGNED_ORGANIZATION: eORGANIZATION?  {
      switch self {
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.ASSIGNED_ORGANIZATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: SELECT( ``sCLASSIFIED_ITEM`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var FORMATION: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._CLASSIFIED_ITEM(let select): return select.FORMATION
      case ._PRODUCT_DEFINITION(let entity): return entity.FORMATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sCLASSIFICATION_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FONT: sFONT_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FONT
      default: return nil
      }
    }


    //MARK: - SDAIValue
    public func isValueEqual<T: SDAIValue>(to rhs: T) -> Bool {
      switch self {
      case ._ACTION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_DIRECTIVE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_METHOD(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_REQUEST_STATUS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_RESOURCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ADDRESS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPROVAL(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPROVAL_STATUS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._BREAKDOWN_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._BREAKDOWN_OF(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CALENDAR_DATE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CERTIFICATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CHANGE_GROUP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CHARACTERIZED_CLASS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CHARACTERIZED_OBJECT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CLASS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CLASSIFIED_ITEM(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CONFIGURATION_DESIGN(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CONFIGURATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CONTRACT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CONVERSION_BASED_UNIT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DATE_AND_TIME(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DIRECTED_ACTION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DOCUMENT_FILE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DOCUMENT_TYPE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._EFFECTIVITY(let selection): return selection.value.isValueEqual(to: rhs)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ENVELOPE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.value.isValueEqual(to: rhs)
      case ._EVENT_OCCURRENCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._EVIDENCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._EXECUTED_ACTION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._FEATURE_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._GENERAL_FEATURE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._GENERAL_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._GROUP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INFORMATION_RIGHT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INTERFACE_CONNECTION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.value.isValueEqual(to: rhs)
      case ._IN_ZONE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._LANGUAGE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._LOCAL_TIME(let selection): return selection.value.isValueEqual(to: rhs)
      case ._LOCATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._LOCATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._MATERIAL_DESIGNATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._MEASURE_QUALIFICATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs)
      case ._MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._NAMED_UNIT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PERSON(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PROCESS_OPERATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PROCESS_PLAN(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_CONCEPT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_GROUP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REQUIREMENT_SOURCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._RESOURCE_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs)
      case ._RETENTION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._SATISFIES_REQUIREMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.value.isValueEqual(to: rhs)
      case ._SHAPE_ASPECT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._STATE_OBSERVED(let selection): return selection.value.isValueEqual(to: rhs)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._STATE_OBSERVED_ROLE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._STATE_TYPE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._STRUCTURED_MESSAGE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._TYPE_QUALIFIER(let selection): return selection.value.isValueEqual(to: rhs)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._USAGE_ASSOCIATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._VALIDATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._VERIFICATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.value.isValueEqual(to: rhs)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?) -> Bool? {
      switch self {
      case ._ACTION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_DIRECTIVE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_METHOD(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_REQUEST_STATUS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_RESOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPROVAL(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPROVAL_STATUS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._BREAKDOWN_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._BREAKDOWN_OF(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CALENDAR_DATE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CERTIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CHANGE_GROUP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CHARACTERIZED_CLASS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CHARACTERIZED_OBJECT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CLASS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CLASSIFIED_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CONFIGURATION_DESIGN(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CONFIGURATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CONTRACT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CONVERSION_BASED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DATE_AND_TIME(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DIRECTED_ACTION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DOCUMENT_FILE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DOCUMENT_TYPE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._EFFECTIVITY(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ENVELOPE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._EVENT_OCCURRENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._EVIDENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._EXECUTED_ACTION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._FEATURE_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._GENERAL_FEATURE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._GENERAL_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._GROUP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INFORMATION_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INTERFACE_CONNECTION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._IN_ZONE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._LANGUAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._LOCAL_TIME(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._LOCATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._LOCATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._MATERIAL_DESIGNATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._MEASURE_QUALIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._NAMED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PERSON(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PROCESS_OPERATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PROCESS_PLAN(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_CONCEPT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_GROUP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REQUIREMENT_SOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._RESOURCE_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._RETENTION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._SATISFIES_REQUIREMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._SHAPE_ASPECT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._STATE_OBSERVED(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._STATE_OBSERVED_ROLE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._STATE_TYPE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._STRUCTURED_MESSAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._TYPE_QUALIFIER(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._USAGE_ASSOCIATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._VALIDATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._VERIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      }
    }

    public func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      switch self {
      case ._ACTION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_DIRECTIVE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_METHOD(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_PROPERTY(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_REQUEST_SOLUTION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_REQUEST_STATUS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_RESOURCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ADDRESS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ANALYSIS_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_USAGE_RIGHT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPROVAL(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPROVAL_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPROVAL_STATUS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._BREAKDOWN_CONTEXT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._BREAKDOWN_OF(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CALENDAR_DATE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CERTIFICATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CHANGE_GROUP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CHARACTERIZED_CLASS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CHARACTERIZED_OBJECT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CLASS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CLASSIFIED_ITEM(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CONFIGURATION_DESIGN(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CONFIGURATION_EFFECTIVITY(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CONFIGURATION_ITEM(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CONTRACT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CONTRACT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CONVERSION_BASED_UNIT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DATE_AND_TIME(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DATE_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DERIVED_UNIT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DIRECTED_ACTION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DOCUMENT_FILE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DOCUMENT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DOCUMENT_TYPE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._EFFECTIVITY(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ENVELOPE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ENVELOPE_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._EVALUATED_CHARACTERISTIC(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._EVENT_OCCURRENCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._EVIDENCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._EXECUTED_ACTION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._FEATURE_DEFINITION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._GENERAL_FEATURE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._GENERAL_PROPERTY(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._GROUP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._GROUP_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INFORMATION_RIGHT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INFORMATION_USAGE_RIGHT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INTERFACE_CONNECTION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INTERFACE_DEFINITION_FOR(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._IN_ZONE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._LANGUAGE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._LINK_MOTION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._LOCAL_TIME(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._LOCATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._LOCATION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._MATERIAL_DESIGNATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._MEASURE_QUALIFICATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._MEASURE_WITH_UNIT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._MESSAGE_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._NAMED_UNIT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ORGANIZATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ORGANIZATIONAL_ADDRESS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ORGANIZATIONAL_PROJECT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ORGANIZATION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PERSON(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PERSON_AND_ORGANIZATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PLUS_MINUS_TOLERANCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PROCESS_OPERATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PROCESS_PLAN(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_CONCEPT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_USAGE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_GROUP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_PROCESS_PLAN(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PROPERTY_DEFINITION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REPRESENTATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REPRESENTATION_CONTEXT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REPRESENTATION_ITEM(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REPRESENTATION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REQUIREMENT_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REQUIREMENT_SOURCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._RESOURCE_PROPERTY(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._RETENTION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._SATISFIES_REQUIREMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._SECURITY_CLASSIFICATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._SHAPE_ASPECT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._STATE_OBSERVED(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._STATE_OBSERVED_ROLE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._STATE_TYPE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._STATE_TYPE_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._STATE_TYPE_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._STRUCTURED_MESSAGE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._TYPE_QUALIFIER(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._USAGE_ASSOCIATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._VALIDATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._VERIFICATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._VERSIONED_ACTION_REQUEST(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      }
    }

    public func isValueEqual<T: SDAIValue>(to rhs: T, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      switch self {
      case ._ACTION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_DIRECTIVE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_METHOD(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_REQUEST_STATUS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_RESOURCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ADDRESS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPROVAL(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPROVAL_STATUS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._BREAKDOWN_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._BREAKDOWN_OF(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CALENDAR_DATE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CERTIFICATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CHANGE_GROUP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CHARACTERIZED_CLASS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CHARACTERIZED_OBJECT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CLASS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CLASSIFIED_ITEM(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CONFIGURATION_DESIGN(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CONFIGURATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CONTRACT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CONVERSION_BASED_UNIT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DATE_AND_TIME(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DIRECTED_ACTION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DOCUMENT_FILE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DOCUMENT_TYPE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._EFFECTIVITY(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ENVELOPE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._EVENT_OCCURRENCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._EVIDENCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._EXECUTED_ACTION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._FEATURE_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._GENERAL_FEATURE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._GENERAL_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._GROUP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INFORMATION_RIGHT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._IN_ZONE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._LANGUAGE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._LOCAL_TIME(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._LOCATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._LOCATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._MATERIAL_DESIGNATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._MEASURE_QUALIFICATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._NAMED_UNIT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PERSON(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PROCESS_OPERATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PROCESS_PLAN(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_GROUP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_SOURCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._RESOURCE_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._RETENTION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._SATISFIES_REQUIREMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._SHAPE_ASPECT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._STATE_OBSERVED(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._STATE_OBSERVED_ROLE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._STATE_TYPE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._STRUCTURED_MESSAGE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._TYPE_QUALIFIER(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._USAGE_ASSOCIATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._VALIDATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._VERIFICATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      switch self {
      case ._ACTION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_DIRECTIVE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_METHOD(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_REQUEST_STATUS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_RESOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPROVAL(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPROVAL_STATUS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._BREAKDOWN_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._BREAKDOWN_OF(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CALENDAR_DATE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CERTIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CHANGE_GROUP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CHARACTERIZED_CLASS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CHARACTERIZED_OBJECT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CLASS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CLASSIFIED_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CONFIGURATION_DESIGN(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CONFIGURATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CONTRACT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CONVERSION_BASED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DATE_AND_TIME(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DIRECTED_ACTION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DOCUMENT_FILE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DOCUMENT_TYPE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._EFFECTIVITY(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ENVELOPE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._EVENT_OCCURRENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._EVIDENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._EXECUTED_ACTION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._FEATURE_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._GENERAL_FEATURE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._GENERAL_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._GROUP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INFORMATION_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._IN_ZONE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._LANGUAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._LOCAL_TIME(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._LOCATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._LOCATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._MATERIAL_DESIGNATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._MEASURE_QUALIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._NAMED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PERSON(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PROCESS_OPERATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PROCESS_PLAN(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_GROUP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_SOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._RESOURCE_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._RETENTION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._SATISFIES_REQUIREMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._SHAPE_ASPECT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._STATE_OBSERVED(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._STATE_OBSERVED_ROLE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._STATE_TYPE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._STRUCTURED_MESSAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._TYPE_QUALIFIER(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._USAGE_ASSOCIATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._VALIDATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._VERIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      }
    }


    //MARK: SDAIGenericTypeBase
    public func copy() -> Self {
      switch self {
      case ._ACTION(let selection): return ._ACTION(selection.copy())
      case ._ACTION_DIRECTIVE(let selection): return ._ACTION_DIRECTIVE(selection.copy())
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return ._ACTION_DIRECTIVE_RELATIONSHIP(selection.copy())
      case ._ACTION_METHOD(let selection): return ._ACTION_METHOD(selection.copy())
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return ._ACTION_METHOD_RELATIONSHIP(selection.copy())
      case ._ACTION_PROPERTY(let selection): return ._ACTION_PROPERTY(selection.copy())
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return ._ACTION_PROPERTY_REPRESENTATION(selection.copy())
      case ._ACTION_RELATIONSHIP(let selection): return ._ACTION_RELATIONSHIP(selection.copy())
      case ._ACTION_REQUEST_SOLUTION(let selection): return ._ACTION_REQUEST_SOLUTION(selection.copy())
      case ._ACTION_REQUEST_STATUS(let selection): return ._ACTION_REQUEST_STATUS(selection.copy())
      case ._ACTION_RESOURCE(let selection): return ._ACTION_RESOURCE(selection.copy())
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return ._ACTION_RESOURCE_RELATIONSHIP(selection.copy())
      case ._ADDRESS(let selection): return ._ADDRESS(selection.copy())
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return ._ALTERNATE_PRODUCT_RELATIONSHIP(selection.copy())
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return ._ALTERNATIVE_SOLUTION_RELATIONSHIP(selection.copy())
      case ._ANALYSIS_ASSIGNMENT(let selection): return ._ANALYSIS_ASSIGNMENT(selection.copy())
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return ._APPLIED_ACTION_ASSIGNMENT(selection.copy())
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return ._APPLIED_ACTION_METHOD_ASSIGNMENT(selection.copy())
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return ._APPLIED_ACTION_REQUEST_ASSIGNMENT(selection.copy())
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return ._APPLIED_APPROVAL_ASSIGNMENT(selection.copy())
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return ._APPLIED_CERTIFICATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(selection.copy())
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return ._APPLIED_CONTRACT_ASSIGNMENT(selection.copy())
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return ._APPLIED_DATE_AND_TIME_ASSIGNMENT(selection.copy())
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return ._APPLIED_DATE_ASSIGNMENT(selection.copy())
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(selection.copy())
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(selection.copy())
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return ._APPLIED_DOCUMENT_REFERENCE(selection.copy())
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(selection.copy())
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return ._APPLIED_EFFECTIVITY_ASSIGNMENT(selection.copy())
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(selection.copy())
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(selection.copy())
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return ._APPLIED_IDENTIFICATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return ._APPLIED_INEFFECTIVITY_ASSIGNMENT(selection.copy())
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(selection.copy())
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return ._APPLIED_ORGANIZATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return ._APPLIED_TIME_INTERVAL_ASSIGNMENT(selection.copy())
      case ._APPLIED_USAGE_RIGHT(let selection): return ._APPLIED_USAGE_RIGHT(selection.copy())
      case ._APPROVAL(let selection): return ._APPROVAL(selection.copy())
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return ._APPROVAL_PERSON_ORGANIZATION(selection.copy())
      case ._APPROVAL_RELATIONSHIP(let selection): return ._APPROVAL_RELATIONSHIP(selection.copy())
      case ._APPROVAL_STATUS(let selection): return ._APPROVAL_STATUS(selection.copy())
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(selection.copy())
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return ._ASSIGNMENT_OBJECT_RELATIONSHIP(selection.copy())
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(selection.copy())
      case ._BREAKDOWN_CONTEXT(let selection): return ._BREAKDOWN_CONTEXT(selection.copy())
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return ._BREAKDOWN_ELEMENT_REALIZATION(selection.copy())
      case ._BREAKDOWN_OF(let selection): return ._BREAKDOWN_OF(selection.copy())
      case ._CALENDAR_DATE(let selection): return ._CALENDAR_DATE(selection.copy())
      case ._CERTIFICATION(let selection): return ._CERTIFICATION(selection.copy())
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return ._CHANGE_ELEMENT_SEQUENCE(selection.copy())
      case ._CHANGE_GROUP(let selection): return ._CHANGE_GROUP(selection.copy())
      case ._CHARACTERIZED_CLASS(let selection): return ._CHARACTERIZED_CLASS(selection.copy())
      case ._CHARACTERIZED_OBJECT(let selection): return ._CHARACTERIZED_OBJECT(selection.copy())
      case ._CLASS(let selection): return ._CLASS(selection.copy())
      case ._CLASSIFIED_ITEM(let selection): return ._CLASSIFIED_ITEM(selection.copy())
      case ._CONFIGURATION_DESIGN(let selection): return ._CONFIGURATION_DESIGN(selection.copy())
      case ._CONFIGURATION_EFFECTIVITY(let selection): return ._CONFIGURATION_EFFECTIVITY(selection.copy())
      case ._CONFIGURATION_ITEM(let selection): return ._CONFIGURATION_ITEM(selection.copy())
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return ._CONFIGURATION_ITEM_RELATIONSHIP(selection.copy())
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return ._CONTEXT_DEPENDENT_UNIT(selection.copy())
      case ._CONTRACT(let selection): return ._CONTRACT(selection.copy())
      case ._CONTRACT_RELATIONSHIP(let selection): return ._CONTRACT_RELATIONSHIP(selection.copy())
      case ._CONVERSION_BASED_UNIT(let selection): return ._CONVERSION_BASED_UNIT(selection.copy())
      case ._DATE_AND_TIME(let selection): return ._DATE_AND_TIME(selection.copy())
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return ._DATE_AND_TIME_ASSIGNMENT(selection.copy())
      case ._DATE_ASSIGNMENT(let selection): return ._DATE_ASSIGNMENT(selection.copy())
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(selection.copy())
      case ._DERIVED_UNIT(let selection): return ._DERIVED_UNIT(selection.copy())
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return ._DESCRIPTIVE_REPRESENTATION_ITEM(selection.copy())
      case ._DIRECTED_ACTION(let selection): return ._DIRECTED_ACTION(selection.copy())
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return ._DIRECTED_ACTION_ASSIGNMENT(selection.copy())
      case ._DOCUMENT_FILE(let selection): return ._DOCUMENT_FILE(selection.copy())
      case ._DOCUMENT_RELATIONSHIP(let selection): return ._DOCUMENT_RELATIONSHIP(selection.copy())
      case ._DOCUMENT_TYPE(let selection): return ._DOCUMENT_TYPE(selection.copy())
      case ._EFFECTIVITY(let selection): return ._EFFECTIVITY(selection.copy())
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return ._EFFECTIVITY_RELATIONSHIP(selection.copy())
      case ._ENVELOPE(let selection): return ._ENVELOPE(selection.copy())
      case ._ENVELOPE_RELATIONSHIP(let selection): return ._ENVELOPE_RELATIONSHIP(selection.copy())
      case ._EVALUATED_CHARACTERISTIC(let selection): return ._EVALUATED_CHARACTERISTIC(selection.copy())
      case ._EVENT_OCCURRENCE(let selection): return ._EVENT_OCCURRENCE(selection.copy())
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return ._EVENT_OCCURRENCE_RELATIONSHIP(selection.copy())
      case ._EVIDENCE(let selection): return ._EVIDENCE(selection.copy())
      case ._EXECUTED_ACTION(let selection): return ._EXECUTED_ACTION(selection.copy())
      case ._FEATURE_DEFINITION(let selection): return ._FEATURE_DEFINITION(selection.copy())
      case ._GENERAL_FEATURE(let selection): return ._GENERAL_FEATURE(selection.copy())
      case ._GENERAL_PROPERTY(let selection): return ._GENERAL_PROPERTY(selection.copy())
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return ._GENERAL_PROPERTY_RELATIONSHIP(selection.copy())
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return ._GENERIC_PROPERTY_RELATIONSHIP(selection.copy())
      case ._GROUP(let selection): return ._GROUP(selection.copy())
      case ._GROUP_RELATIONSHIP(let selection): return ._GROUP_RELATIONSHIP(selection.copy())
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return ._IDENTIFICATION_ASSIGNMENT(selection.copy())
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(selection.copy())
      case ._INFORMATION_RIGHT(let selection): return ._INFORMATION_RIGHT(selection.copy())
      case ._INFORMATION_USAGE_RIGHT(let selection): return ._INFORMATION_USAGE_RIGHT(selection.copy())
      case ._INTERFACE_CONNECTION(let selection): return ._INTERFACE_CONNECTION(selection.copy())
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return ._INTERFACE_CONNECTOR_AS_PLANNED(selection.copy())
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return ._INTERFACE_CONNECTOR_AS_REALIZED(selection.copy())
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return ._INTERFACE_CONNECTOR_DESIGN(selection.copy())
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(selection.copy())
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(selection.copy())
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return ._INTERFACE_CONNECTOR_OCCURRENCE(selection.copy())
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(selection.copy())
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return ._INTERFACE_DEFINITION_CONNECTION(selection.copy())
      case ._INTERFACE_DEFINITION_FOR(let selection): return ._INTERFACE_DEFINITION_FOR(selection.copy())
      case ._IN_ZONE(let selection): return ._IN_ZONE(selection.copy())
      case ._LANGUAGE(let selection): return ._LANGUAGE(selection.copy())
      case ._LINK_MOTION_RELATIONSHIP(let selection): return ._LINK_MOTION_RELATIONSHIP(selection.copy())
      case ._LOCAL_TIME(let selection): return ._LOCAL_TIME(selection.copy())
      case ._LOCATION(let selection): return ._LOCATION(selection.copy())
      case ._LOCATION_RELATIONSHIP(let selection): return ._LOCATION_RELATIONSHIP(selection.copy())
      case ._MATERIAL_DESIGNATION(let selection): return ._MATERIAL_DESIGNATION(selection.copy())
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return ._MATERIAL_DESIGNATION_CHARACTERIZATION(selection.copy())
      case ._MEASURE_QUALIFICATION(let selection): return ._MEASURE_QUALIFICATION(selection.copy())
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return ._MEASURE_REPRESENTATION_ITEM(selection.copy())
      case ._MEASURE_WITH_UNIT(let selection): return ._MEASURE_WITH_UNIT(selection.copy())
      case ._MESSAGE_RELATIONSHIP(let selection): return ._MESSAGE_RELATIONSHIP(selection.copy())
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(selection.copy())
      case ._NAMED_UNIT(let selection): return ._NAMED_UNIT(selection.copy())
      case ._ORGANIZATION(let selection): return ._ORGANIZATION(selection.copy())
      case ._ORGANIZATIONAL_ADDRESS(let selection): return ._ORGANIZATIONAL_ADDRESS(selection.copy())
      case ._ORGANIZATIONAL_PROJECT(let selection): return ._ORGANIZATIONAL_PROJECT(selection.copy())
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(selection.copy())
      case ._ORGANIZATION_RELATIONSHIP(let selection): return ._ORGANIZATION_RELATIONSHIP(selection.copy())
      case ._PERSON(let selection): return ._PERSON(selection.copy())
      case ._PERSON_AND_ORGANIZATION(let selection): return ._PERSON_AND_ORGANIZATION(selection.copy())
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return ._PERSON_AND_ORGANIZATION_ADDRESS(selection.copy())
      case ._PLUS_MINUS_TOLERANCE(let selection): return ._PLUS_MINUS_TOLERANCE(selection.copy())
      case ._PROCESS_OPERATION(let selection): return ._PROCESS_OPERATION(selection.copy())
      case ._PROCESS_PLAN(let selection): return ._PROCESS_PLAN(selection.copy())
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return ._PROCESS_PRODUCT_ASSOCIATION(selection.copy())
      case ._PRODUCT(let selection): return ._PRODUCT(selection.copy())
      case ._PRODUCT_CONCEPT(let selection): return ._PRODUCT_CONCEPT(selection.copy())
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return ._PRODUCT_CONCEPT_CONTEXT(selection.copy())
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return ._PRODUCT_CONCEPT_FEATURE(selection.copy())
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(selection.copy())
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return ._PRODUCT_CONCEPT_FEATURE_CATEGORY(selection.copy())
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(selection.copy())
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return ._PRODUCT_CONCEPT_RELATIONSHIP(selection.copy())
      case ._PRODUCT_DEFINITION(let selection): return ._PRODUCT_DEFINITION(selection.copy())
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return ._PRODUCT_DEFINITION_CONTEXT(selection.copy())
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return ._PRODUCT_DEFINITION_FORMATION(selection.copy())
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(selection.copy())
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return ._PRODUCT_DEFINITION_RELATIONSHIP(selection.copy())
      case ._PRODUCT_DEFINITION_USAGE(let selection): return ._PRODUCT_DEFINITION_USAGE(selection.copy())
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(selection.copy())
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return ._PRODUCT_DESIGN_TO_INDIVIDUAL(selection.copy())
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(selection.copy())
      case ._PRODUCT_GROUP(let selection): return ._PRODUCT_GROUP(selection.copy())
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return ._PRODUCT_GROUP_MEMBERSHIP(selection.copy())
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return ._PRODUCT_GROUP_RELATIONSHIP(selection.copy())
      case ._PRODUCT_PROCESS_PLAN(let selection): return ._PRODUCT_PROCESS_PLAN(selection.copy())
      case ._PRODUCT_RELATIONSHIP(let selection): return ._PRODUCT_RELATIONSHIP(selection.copy())
      case ._PROPERTY_DEFINITION(let selection): return ._PROPERTY_DEFINITION(selection.copy())
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return ._PROPERTY_DEFINITION_REPRESENTATION(selection.copy())
      case ._REPRESENTATION(let selection): return ._REPRESENTATION(selection.copy())
      case ._REPRESENTATION_CONTEXT(let selection): return ._REPRESENTATION_CONTEXT(selection.copy())
      case ._REPRESENTATION_ITEM(let selection): return ._REPRESENTATION_ITEM(selection.copy())
      case ._REPRESENTATION_RELATIONSHIP(let selection): return ._REPRESENTATION_RELATIONSHIP(selection.copy())
      case ._REQUIREMENT_ASSIGNMENT(let selection): return ._REQUIREMENT_ASSIGNMENT(selection.copy())
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return ._REQUIREMENT_FOR_ACTION_RESOURCE(selection.copy())
      case ._REQUIREMENT_SOURCE(let selection): return ._REQUIREMENT_SOURCE(selection.copy())
      case ._RESOURCE_PROPERTY(let selection): return ._RESOURCE_PROPERTY(selection.copy())
      case ._RETENTION(let selection): return ._RETENTION(selection.copy())
      case ._SATISFIES_REQUIREMENT(let selection): return ._SATISFIES_REQUIREMENT(selection.copy())
      case ._SECURITY_CLASSIFICATION(let selection): return ._SECURITY_CLASSIFICATION(selection.copy())
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return ._SECURITY_CLASSIFICATION_LEVEL(selection.copy())
      case ._SHAPE_ASPECT(let selection): return ._SHAPE_ASPECT(selection.copy())
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return ._SHAPE_ASPECT_RELATIONSHIP(selection.copy())
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(selection.copy())
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(selection.copy())
      case ._STATE_OBSERVED(let selection): return ._STATE_OBSERVED(selection.copy())
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return ._STATE_OBSERVED_ASSIGNMENT(selection.copy())
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return ._STATE_OBSERVED_RELATIONSHIP(selection.copy())
      case ._STATE_OBSERVED_ROLE(let selection): return ._STATE_OBSERVED_ROLE(selection.copy())
      case ._STATE_TYPE(let selection): return ._STATE_TYPE(selection.copy())
      case ._STATE_TYPE_ASSIGNMENT(let selection): return ._STATE_TYPE_ASSIGNMENT(selection.copy())
      case ._STATE_TYPE_RELATIONSHIP(let selection): return ._STATE_TYPE_RELATIONSHIP(selection.copy())
      case ._STRUCTURED_MESSAGE(let selection): return ._STRUCTURED_MESSAGE(selection.copy())
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return ._TIME_INTERVAL_RELATIONSHIP(selection.copy())
      case ._TYPE_QUALIFIER(let selection): return ._TYPE_QUALIFIER(selection.copy())
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return ._UNCERTAINTY_MEASURE_WITH_UNIT(selection.copy())
      case ._USAGE_ASSOCIATION(let selection): return ._USAGE_ASSOCIATION(selection.copy())
      case ._VALIDATION(let selection): return ._VALIDATION(selection.copy())
      case ._VERIFICATION(let selection): return ._VERIFICATION(selection.copy())
      case ._VERSIONED_ACTION_REQUEST(let selection): return ._VERSIONED_ACTION_REQUEST(selection.copy())
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(selection.copy())
      }
    }

    //MARK: SDAIGenericType
    public var typeMembers: Set<SDAI.STRING> {
      var members: Set<SDAI.STRING> = [SDAI.STRING(Self.typeName)]
      switch self {
      case ._ACTION(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_DIRECTIVE(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_METHOD(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_PROPERTY(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_REQUEST_SOLUTION(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_REQUEST_STATUS(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_RESOURCE(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._ADDRESS(let selection): members.formUnion(selection.typeMembers)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._ANALYSIS_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_USAGE_RIGHT(let selection): members.formUnion(selection.typeMembers)
      case ._APPROVAL(let selection): members.formUnion(selection.typeMembers)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): members.formUnion(selection.typeMembers)
      case ._APPROVAL_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._APPROVAL_STATUS(let selection): members.formUnion(selection.typeMembers)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): members.formUnion(selection.typeMembers)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._BREAKDOWN_CONTEXT(let selection): members.formUnion(selection.typeMembers)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): members.formUnion(selection.typeMembers)
      case ._BREAKDOWN_OF(let selection): members.formUnion(selection.typeMembers)
      case ._CALENDAR_DATE(let selection): members.formUnion(selection.typeMembers)
      case ._CERTIFICATION(let selection): members.formUnion(selection.typeMembers)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): members.formUnion(selection.typeMembers)
      case ._CHANGE_GROUP(let selection): members.formUnion(selection.typeMembers)
      case ._CHARACTERIZED_CLASS(let selection): members.formUnion(selection.typeMembers)
      case ._CHARACTERIZED_OBJECT(let selection): members.formUnion(selection.typeMembers)
      case ._CLASS(let selection): members.formUnion(selection.typeMembers)
      case ._CLASSIFIED_ITEM(let selection): members.formUnion(selection.typeMembers)
      case ._CONFIGURATION_DESIGN(let selection): members.formUnion(selection.typeMembers)
      case ._CONFIGURATION_EFFECTIVITY(let selection): members.formUnion(selection.typeMembers)
      case ._CONFIGURATION_ITEM(let selection): members.formUnion(selection.typeMembers)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): members.formUnion(selection.typeMembers)
      case ._CONTRACT(let selection): members.formUnion(selection.typeMembers)
      case ._CONTRACT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._CONVERSION_BASED_UNIT(let selection): members.formUnion(selection.typeMembers)
      case ._DATE_AND_TIME(let selection): members.formUnion(selection.typeMembers)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._DATE_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._DERIVED_UNIT(let selection): members.formUnion(selection.typeMembers)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): members.formUnion(selection.typeMembers)
      case ._DIRECTED_ACTION(let selection): members.formUnion(selection.typeMembers)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._DOCUMENT_FILE(let selection): members.formUnion(selection.typeMembers)
      case ._DOCUMENT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._DOCUMENT_TYPE(let selection): members.formUnion(selection.typeMembers)
      case ._EFFECTIVITY(let selection): members.formUnion(selection.typeMembers)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._ENVELOPE(let selection): members.formUnion(selection.typeMembers)
      case ._ENVELOPE_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._EVALUATED_CHARACTERISTIC(let selection): members.formUnion(selection.typeMembers)
      case ._EVENT_OCCURRENCE(let selection): members.formUnion(selection.typeMembers)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._EVIDENCE(let selection): members.formUnion(selection.typeMembers)
      case ._EXECUTED_ACTION(let selection): members.formUnion(selection.typeMembers)
      case ._FEATURE_DEFINITION(let selection): members.formUnion(selection.typeMembers)
      case ._GENERAL_FEATURE(let selection): members.formUnion(selection.typeMembers)
      case ._GENERAL_PROPERTY(let selection): members.formUnion(selection.typeMembers)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._GROUP(let selection): members.formUnion(selection.typeMembers)
      case ._GROUP_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._INFORMATION_RIGHT(let selection): members.formUnion(selection.typeMembers)
      case ._INFORMATION_USAGE_RIGHT(let selection): members.formUnion(selection.typeMembers)
      case ._INTERFACE_CONNECTION(let selection): members.formUnion(selection.typeMembers)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): members.formUnion(selection.typeMembers)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): members.formUnion(selection.typeMembers)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): members.formUnion(selection.typeMembers)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): members.formUnion(selection.typeMembers)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): members.formUnion(selection.typeMembers)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): members.formUnion(selection.typeMembers)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): members.formUnion(selection.typeMembers)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): members.formUnion(selection.typeMembers)
      case ._INTERFACE_DEFINITION_FOR(let selection): members.formUnion(selection.typeMembers)
      case ._IN_ZONE(let selection): members.formUnion(selection.typeMembers)
      case ._LANGUAGE(let selection): members.formUnion(selection.typeMembers)
      case ._LINK_MOTION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._LOCAL_TIME(let selection): members.formUnion(selection.typeMembers)
      case ._LOCATION(let selection): members.formUnion(selection.typeMembers)
      case ._LOCATION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._MATERIAL_DESIGNATION(let selection): members.formUnion(selection.typeMembers)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): members.formUnion(selection.typeMembers)
      case ._MEASURE_QUALIFICATION(let selection): members.formUnion(selection.typeMembers)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): members.formUnion(selection.typeMembers)
      case ._MEASURE_WITH_UNIT(let selection): members.formUnion(selection.typeMembers)
      case ._MESSAGE_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._NAMED_UNIT(let selection): members.formUnion(selection.typeMembers)
      case ._ORGANIZATION(let selection): members.formUnion(selection.typeMembers)
      case ._ORGANIZATIONAL_ADDRESS(let selection): members.formUnion(selection.typeMembers)
      case ._ORGANIZATIONAL_PROJECT(let selection): members.formUnion(selection.typeMembers)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._ORGANIZATION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PERSON(let selection): members.formUnion(selection.typeMembers)
      case ._PERSON_AND_ORGANIZATION(let selection): members.formUnion(selection.typeMembers)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): members.formUnion(selection.typeMembers)
      case ._PLUS_MINUS_TOLERANCE(let selection): members.formUnion(selection.typeMembers)
      case ._PROCESS_OPERATION(let selection): members.formUnion(selection.typeMembers)
      case ._PROCESS_PLAN(let selection): members.formUnion(selection.typeMembers)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_CONCEPT(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_USAGE(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_GROUP(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_PROCESS_PLAN(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PROPERTY_DEFINITION(let selection): members.formUnion(selection.typeMembers)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): members.formUnion(selection.typeMembers)
      case ._REPRESENTATION(let selection): members.formUnion(selection.typeMembers)
      case ._REPRESENTATION_CONTEXT(let selection): members.formUnion(selection.typeMembers)
      case ._REPRESENTATION_ITEM(let selection): members.formUnion(selection.typeMembers)
      case ._REPRESENTATION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._REQUIREMENT_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): members.formUnion(selection.typeMembers)
      case ._REQUIREMENT_SOURCE(let selection): members.formUnion(selection.typeMembers)
      case ._RESOURCE_PROPERTY(let selection): members.formUnion(selection.typeMembers)
      case ._RETENTION(let selection): members.formUnion(selection.typeMembers)
      case ._SATISFIES_REQUIREMENT(let selection): members.formUnion(selection.typeMembers)
      case ._SECURITY_CLASSIFICATION(let selection): members.formUnion(selection.typeMembers)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): members.formUnion(selection.typeMembers)
      case ._SHAPE_ASPECT(let selection): members.formUnion(selection.typeMembers)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._STATE_OBSERVED(let selection): members.formUnion(selection.typeMembers)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._STATE_OBSERVED_ROLE(let selection): members.formUnion(selection.typeMembers)
      case ._STATE_TYPE(let selection): members.formUnion(selection.typeMembers)
      case ._STATE_TYPE_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._STATE_TYPE_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._STRUCTURED_MESSAGE(let selection): members.formUnion(selection.typeMembers)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._TYPE_QUALIFIER(let selection): members.formUnion(selection.typeMembers)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): members.formUnion(selection.typeMembers)
      case ._USAGE_ASSOCIATION(let selection): members.formUnion(selection.typeMembers)
      case ._VALIDATION(let selection): members.formUnion(selection.typeMembers)
      case ._VERIFICATION(let selection): members.formUnion(selection.typeMembers)
      case ._VERSIONED_ACTION_REQUEST(let selection): members.formUnion(selection.typeMembers)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      }
      //SELECT data types (indirectly) referencing the current type as a member of the select list
      members.insert(SDAI.STRING(sACTION_ITEMS.typeName)) // -> Self
      members.insert(SDAI.STRING(sCHANGE_MANAGEMENT_OBJECT.typeName)) // -> sACTION_ITEMS
      members.insert(SDAI.STRING(sIR_USAGE_ITEM.typeName)) // -> Self
      return members
    }

    public var entityReference: SDAI.EntityReference? {
      switch self {
      case ._ACTION(let selection): return selection.entityReference
      case ._ACTION_DIRECTIVE(let selection): return selection.entityReference
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.entityReference
      case ._ACTION_METHOD(let selection): return selection.entityReference
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.entityReference
      case ._ACTION_PROPERTY(let selection): return selection.entityReference
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.entityReference
      case ._ACTION_RELATIONSHIP(let selection): return selection.entityReference
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.entityReference
      case ._ACTION_REQUEST_STATUS(let selection): return selection.entityReference
      case ._ACTION_RESOURCE(let selection): return selection.entityReference
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.entityReference
      case ._ADDRESS(let selection): return selection.entityReference
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.entityReference
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.entityReference
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.entityReference
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.entityReference
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.entityReference
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.entityReference
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.entityReference
      case ._APPROVAL(let selection): return selection.entityReference
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.entityReference
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.entityReference
      case ._APPROVAL_STATUS(let selection): return selection.entityReference
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.entityReference
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.entityReference
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.entityReference
      case ._BREAKDOWN_CONTEXT(let selection): return selection.entityReference
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.entityReference
      case ._BREAKDOWN_OF(let selection): return selection.entityReference
      case ._CALENDAR_DATE(let selection): return selection.entityReference
      case ._CERTIFICATION(let selection): return selection.entityReference
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.entityReference
      case ._CHANGE_GROUP(let selection): return selection.entityReference
      case ._CHARACTERIZED_CLASS(let selection): return selection.entityReference
      case ._CHARACTERIZED_OBJECT(let selection): return selection.entityReference
      case ._CLASS(let selection): return selection.entityReference
      case ._CLASSIFIED_ITEM(let selection): return selection.entityReference
      case ._CONFIGURATION_DESIGN(let selection): return selection.entityReference
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.entityReference
      case ._CONFIGURATION_ITEM(let selection): return selection.entityReference
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.entityReference
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.entityReference
      case ._CONTRACT(let selection): return selection.entityReference
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.entityReference
      case ._CONVERSION_BASED_UNIT(let selection): return selection.entityReference
      case ._DATE_AND_TIME(let selection): return selection.entityReference
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.entityReference
      case ._DATE_ASSIGNMENT(let selection): return selection.entityReference
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.entityReference
      case ._DERIVED_UNIT(let selection): return selection.entityReference
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.entityReference
      case ._DIRECTED_ACTION(let selection): return selection.entityReference
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.entityReference
      case ._DOCUMENT_FILE(let selection): return selection.entityReference
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.entityReference
      case ._DOCUMENT_TYPE(let selection): return selection.entityReference
      case ._EFFECTIVITY(let selection): return selection.entityReference
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.entityReference
      case ._ENVELOPE(let selection): return selection.entityReference
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.entityReference
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.entityReference
      case ._EVENT_OCCURRENCE(let selection): return selection.entityReference
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.entityReference
      case ._EVIDENCE(let selection): return selection.entityReference
      case ._EXECUTED_ACTION(let selection): return selection.entityReference
      case ._FEATURE_DEFINITION(let selection): return selection.entityReference
      case ._GENERAL_FEATURE(let selection): return selection.entityReference
      case ._GENERAL_PROPERTY(let selection): return selection.entityReference
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.entityReference
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.entityReference
      case ._GROUP(let selection): return selection.entityReference
      case ._GROUP_RELATIONSHIP(let selection): return selection.entityReference
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.entityReference
      case ._INFORMATION_RIGHT(let selection): return selection.entityReference
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.entityReference
      case ._INTERFACE_CONNECTION(let selection): return selection.entityReference
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.entityReference
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.entityReference
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.entityReference
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.entityReference
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.entityReference
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.entityReference
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.entityReference
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.entityReference
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.entityReference
      case ._IN_ZONE(let selection): return selection.entityReference
      case ._LANGUAGE(let selection): return selection.entityReference
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.entityReference
      case ._LOCAL_TIME(let selection): return selection.entityReference
      case ._LOCATION(let selection): return selection.entityReference
      case ._LOCATION_RELATIONSHIP(let selection): return selection.entityReference
      case ._MATERIAL_DESIGNATION(let selection): return selection.entityReference
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.entityReference
      case ._MEASURE_QUALIFICATION(let selection): return selection.entityReference
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.entityReference
      case ._MEASURE_WITH_UNIT(let selection): return selection.entityReference
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.entityReference
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.entityReference
      case ._NAMED_UNIT(let selection): return selection.entityReference
      case ._ORGANIZATION(let selection): return selection.entityReference
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.entityReference
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.entityReference
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.entityReference
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.entityReference
      case ._PERSON(let selection): return selection.entityReference
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.entityReference
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.entityReference
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.entityReference
      case ._PROCESS_OPERATION(let selection): return selection.entityReference
      case ._PROCESS_PLAN(let selection): return selection.entityReference
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.entityReference
      case ._PRODUCT(let selection): return selection.entityReference
      case ._PRODUCT_CONCEPT(let selection): return selection.entityReference
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.entityReference
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.entityReference
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.entityReference
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.entityReference
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.entityReference
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.entityReference
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.entityReference
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.entityReference
      case ._PRODUCT_GROUP(let selection): return selection.entityReference
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.entityReference
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.entityReference
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.entityReference
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.entityReference
      case ._PROPERTY_DEFINITION(let selection): return selection.entityReference
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.entityReference
      case ._REPRESENTATION(let selection): return selection.entityReference
      case ._REPRESENTATION_CONTEXT(let selection): return selection.entityReference
      case ._REPRESENTATION_ITEM(let selection): return selection.entityReference
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.entityReference
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.entityReference
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.entityReference
      case ._REQUIREMENT_SOURCE(let selection): return selection.entityReference
      case ._RESOURCE_PROPERTY(let selection): return selection.entityReference
      case ._RETENTION(let selection): return selection.entityReference
      case ._SATISFIES_REQUIREMENT(let selection): return selection.entityReference
      case ._SECURITY_CLASSIFICATION(let selection): return selection.entityReference
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.entityReference
      case ._SHAPE_ASPECT(let selection): return selection.entityReference
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.entityReference
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.entityReference
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.entityReference
      case ._STATE_OBSERVED(let selection): return selection.entityReference
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.entityReference
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.entityReference
      case ._STATE_OBSERVED_ROLE(let selection): return selection.entityReference
      case ._STATE_TYPE(let selection): return selection.entityReference
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.entityReference
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.entityReference
      case ._STRUCTURED_MESSAGE(let selection): return selection.entityReference
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.entityReference
      case ._TYPE_QUALIFIER(let selection): return selection.entityReference
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.entityReference
      case ._USAGE_ASSOCIATION(let selection): return selection.entityReference
      case ._VALIDATION(let selection): return selection.entityReference
      case ._VERIFICATION(let selection): return selection.entityReference
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.entityReference
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.entityReference
      }
    }
    public var stringValue: SDAI.STRING? {
      switch self {
      case ._ACTION(let selection): return selection.stringValue
      case ._ACTION_DIRECTIVE(let selection): return selection.stringValue
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.stringValue
      case ._ACTION_METHOD(let selection): return selection.stringValue
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.stringValue
      case ._ACTION_PROPERTY(let selection): return selection.stringValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.stringValue
      case ._ACTION_RELATIONSHIP(let selection): return selection.stringValue
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.stringValue
      case ._ACTION_REQUEST_STATUS(let selection): return selection.stringValue
      case ._ACTION_RESOURCE(let selection): return selection.stringValue
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.stringValue
      case ._ADDRESS(let selection): return selection.stringValue
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.stringValue
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.stringValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.stringValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.stringValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.stringValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.stringValue
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.stringValue
      case ._APPROVAL(let selection): return selection.stringValue
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.stringValue
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.stringValue
      case ._APPROVAL_STATUS(let selection): return selection.stringValue
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.stringValue
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.stringValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.stringValue
      case ._BREAKDOWN_CONTEXT(let selection): return selection.stringValue
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.stringValue
      case ._BREAKDOWN_OF(let selection): return selection.stringValue
      case ._CALENDAR_DATE(let selection): return selection.stringValue
      case ._CERTIFICATION(let selection): return selection.stringValue
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.stringValue
      case ._CHANGE_GROUP(let selection): return selection.stringValue
      case ._CHARACTERIZED_CLASS(let selection): return selection.stringValue
      case ._CHARACTERIZED_OBJECT(let selection): return selection.stringValue
      case ._CLASS(let selection): return selection.stringValue
      case ._CLASSIFIED_ITEM(let selection): return selection.stringValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.stringValue
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.stringValue
      case ._CONFIGURATION_ITEM(let selection): return selection.stringValue
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.stringValue
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.stringValue
      case ._CONTRACT(let selection): return selection.stringValue
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.stringValue
      case ._CONVERSION_BASED_UNIT(let selection): return selection.stringValue
      case ._DATE_AND_TIME(let selection): return selection.stringValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.stringValue
      case ._DATE_ASSIGNMENT(let selection): return selection.stringValue
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.stringValue
      case ._DERIVED_UNIT(let selection): return selection.stringValue
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.stringValue
      case ._DIRECTED_ACTION(let selection): return selection.stringValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.stringValue
      case ._DOCUMENT_FILE(let selection): return selection.stringValue
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.stringValue
      case ._DOCUMENT_TYPE(let selection): return selection.stringValue
      case ._EFFECTIVITY(let selection): return selection.stringValue
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.stringValue
      case ._ENVELOPE(let selection): return selection.stringValue
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.stringValue
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.stringValue
      case ._EVENT_OCCURRENCE(let selection): return selection.stringValue
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.stringValue
      case ._EVIDENCE(let selection): return selection.stringValue
      case ._EXECUTED_ACTION(let selection): return selection.stringValue
      case ._FEATURE_DEFINITION(let selection): return selection.stringValue
      case ._GENERAL_FEATURE(let selection): return selection.stringValue
      case ._GENERAL_PROPERTY(let selection): return selection.stringValue
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.stringValue
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.stringValue
      case ._GROUP(let selection): return selection.stringValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.stringValue
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.stringValue
      case ._INFORMATION_RIGHT(let selection): return selection.stringValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.stringValue
      case ._INTERFACE_CONNECTION(let selection): return selection.stringValue
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.stringValue
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.stringValue
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.stringValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.stringValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.stringValue
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.stringValue
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.stringValue
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.stringValue
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.stringValue
      case ._IN_ZONE(let selection): return selection.stringValue
      case ._LANGUAGE(let selection): return selection.stringValue
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.stringValue
      case ._LOCAL_TIME(let selection): return selection.stringValue
      case ._LOCATION(let selection): return selection.stringValue
      case ._LOCATION_RELATIONSHIP(let selection): return selection.stringValue
      case ._MATERIAL_DESIGNATION(let selection): return selection.stringValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.stringValue
      case ._MEASURE_QUALIFICATION(let selection): return selection.stringValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.stringValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.stringValue
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.stringValue
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.stringValue
      case ._NAMED_UNIT(let selection): return selection.stringValue
      case ._ORGANIZATION(let selection): return selection.stringValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.stringValue
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.stringValue
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.stringValue
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.stringValue
      case ._PERSON(let selection): return selection.stringValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.stringValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.stringValue
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.stringValue
      case ._PROCESS_OPERATION(let selection): return selection.stringValue
      case ._PROCESS_PLAN(let selection): return selection.stringValue
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.stringValue
      case ._PRODUCT(let selection): return selection.stringValue
      case ._PRODUCT_CONCEPT(let selection): return selection.stringValue
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.stringValue
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.stringValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.stringValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.stringValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.stringValue
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.stringValue
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.stringValue
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.stringValue
      case ._PRODUCT_GROUP(let selection): return selection.stringValue
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.stringValue
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.stringValue
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.stringValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.stringValue
      case ._PROPERTY_DEFINITION(let selection): return selection.stringValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.stringValue
      case ._REPRESENTATION(let selection): return selection.stringValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.stringValue
      case ._REPRESENTATION_ITEM(let selection): return selection.stringValue
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.stringValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.stringValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.stringValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.stringValue
      case ._RESOURCE_PROPERTY(let selection): return selection.stringValue
      case ._RETENTION(let selection): return selection.stringValue
      case ._SATISFIES_REQUIREMENT(let selection): return selection.stringValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.stringValue
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.stringValue
      case ._SHAPE_ASPECT(let selection): return selection.stringValue
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.stringValue
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.stringValue
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.stringValue
      case ._STATE_OBSERVED(let selection): return selection.stringValue
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.stringValue
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.stringValue
      case ._STATE_OBSERVED_ROLE(let selection): return selection.stringValue
      case ._STATE_TYPE(let selection): return selection.stringValue
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.stringValue
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.stringValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.stringValue
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.stringValue
      case ._TYPE_QUALIFIER(let selection): return selection.stringValue
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.stringValue
      case ._USAGE_ASSOCIATION(let selection): return selection.stringValue
      case ._VALIDATION(let selection): return selection.stringValue
      case ._VERIFICATION(let selection): return selection.stringValue
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.stringValue
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.stringValue
      }
    }
    public var binaryValue: SDAI.BINARY? {
      switch self {
      case ._ACTION(let selection): return selection.binaryValue
      case ._ACTION_DIRECTIVE(let selection): return selection.binaryValue
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.binaryValue
      case ._ACTION_METHOD(let selection): return selection.binaryValue
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.binaryValue
      case ._ACTION_PROPERTY(let selection): return selection.binaryValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.binaryValue
      case ._ACTION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.binaryValue
      case ._ACTION_REQUEST_STATUS(let selection): return selection.binaryValue
      case ._ACTION_RESOURCE(let selection): return selection.binaryValue
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.binaryValue
      case ._ADDRESS(let selection): return selection.binaryValue
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.binaryValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.binaryValue
      case ._APPROVAL(let selection): return selection.binaryValue
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.binaryValue
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.binaryValue
      case ._APPROVAL_STATUS(let selection): return selection.binaryValue
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.binaryValue
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.binaryValue
      case ._BREAKDOWN_CONTEXT(let selection): return selection.binaryValue
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.binaryValue
      case ._BREAKDOWN_OF(let selection): return selection.binaryValue
      case ._CALENDAR_DATE(let selection): return selection.binaryValue
      case ._CERTIFICATION(let selection): return selection.binaryValue
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.binaryValue
      case ._CHANGE_GROUP(let selection): return selection.binaryValue
      case ._CHARACTERIZED_CLASS(let selection): return selection.binaryValue
      case ._CHARACTERIZED_OBJECT(let selection): return selection.binaryValue
      case ._CLASS(let selection): return selection.binaryValue
      case ._CLASSIFIED_ITEM(let selection): return selection.binaryValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.binaryValue
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.binaryValue
      case ._CONFIGURATION_ITEM(let selection): return selection.binaryValue
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.binaryValue
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.binaryValue
      case ._CONTRACT(let selection): return selection.binaryValue
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._CONVERSION_BASED_UNIT(let selection): return selection.binaryValue
      case ._DATE_AND_TIME(let selection): return selection.binaryValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.binaryValue
      case ._DATE_ASSIGNMENT(let selection): return selection.binaryValue
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._DERIVED_UNIT(let selection): return selection.binaryValue
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.binaryValue
      case ._DIRECTED_ACTION(let selection): return selection.binaryValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._DOCUMENT_FILE(let selection): return selection.binaryValue
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._DOCUMENT_TYPE(let selection): return selection.binaryValue
      case ._EFFECTIVITY(let selection): return selection.binaryValue
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.binaryValue
      case ._ENVELOPE(let selection): return selection.binaryValue
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.binaryValue
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.binaryValue
      case ._EVENT_OCCURRENCE(let selection): return selection.binaryValue
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.binaryValue
      case ._EVIDENCE(let selection): return selection.binaryValue
      case ._EXECUTED_ACTION(let selection): return selection.binaryValue
      case ._FEATURE_DEFINITION(let selection): return selection.binaryValue
      case ._GENERAL_FEATURE(let selection): return selection.binaryValue
      case ._GENERAL_PROPERTY(let selection): return selection.binaryValue
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.binaryValue
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.binaryValue
      case ._GROUP(let selection): return selection.binaryValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.binaryValue
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._INFORMATION_RIGHT(let selection): return selection.binaryValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.binaryValue
      case ._INTERFACE_CONNECTION(let selection): return selection.binaryValue
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.binaryValue
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.binaryValue
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.binaryValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.binaryValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.binaryValue
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.binaryValue
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.binaryValue
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.binaryValue
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.binaryValue
      case ._IN_ZONE(let selection): return selection.binaryValue
      case ._LANGUAGE(let selection): return selection.binaryValue
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._LOCAL_TIME(let selection): return selection.binaryValue
      case ._LOCATION(let selection): return selection.binaryValue
      case ._LOCATION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._MATERIAL_DESIGNATION(let selection): return selection.binaryValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.binaryValue
      case ._MEASURE_QUALIFICATION(let selection): return selection.binaryValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.binaryValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.binaryValue
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.binaryValue
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.binaryValue
      case ._NAMED_UNIT(let selection): return selection.binaryValue
      case ._ORGANIZATION(let selection): return selection.binaryValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.binaryValue
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.binaryValue
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._PERSON(let selection): return selection.binaryValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.binaryValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.binaryValue
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.binaryValue
      case ._PROCESS_OPERATION(let selection): return selection.binaryValue
      case ._PROCESS_PLAN(let selection): return selection.binaryValue
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.binaryValue
      case ._PRODUCT(let selection): return selection.binaryValue
      case ._PRODUCT_CONCEPT(let selection): return selection.binaryValue
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.binaryValue
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.binaryValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.binaryValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.binaryValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.binaryValue
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.binaryValue
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.binaryValue
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.binaryValue
      case ._PRODUCT_GROUP(let selection): return selection.binaryValue
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.binaryValue
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.binaryValue
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.binaryValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._PROPERTY_DEFINITION(let selection): return selection.binaryValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.binaryValue
      case ._REPRESENTATION(let selection): return selection.binaryValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.binaryValue
      case ._REPRESENTATION_ITEM(let selection): return selection.binaryValue
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.binaryValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.binaryValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.binaryValue
      case ._RESOURCE_PROPERTY(let selection): return selection.binaryValue
      case ._RETENTION(let selection): return selection.binaryValue
      case ._SATISFIES_REQUIREMENT(let selection): return selection.binaryValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.binaryValue
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.binaryValue
      case ._SHAPE_ASPECT(let selection): return selection.binaryValue
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._STATE_OBSERVED(let selection): return selection.binaryValue
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.binaryValue
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.binaryValue
      case ._STATE_OBSERVED_ROLE(let selection): return selection.binaryValue
      case ._STATE_TYPE(let selection): return selection.binaryValue
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.binaryValue
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.binaryValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.binaryValue
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.binaryValue
      case ._TYPE_QUALIFIER(let selection): return selection.binaryValue
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.binaryValue
      case ._USAGE_ASSOCIATION(let selection): return selection.binaryValue
      case ._VALIDATION(let selection): return selection.binaryValue
      case ._VERIFICATION(let selection): return selection.binaryValue
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.binaryValue
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.binaryValue
      }
    }
    public var logicalValue: SDAI.LOGICAL? {
      switch self {
      case ._ACTION(let selection): return selection.logicalValue
      case ._ACTION_DIRECTIVE(let selection): return selection.logicalValue
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.logicalValue
      case ._ACTION_METHOD(let selection): return selection.logicalValue
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.logicalValue
      case ._ACTION_PROPERTY(let selection): return selection.logicalValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.logicalValue
      case ._ACTION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.logicalValue
      case ._ACTION_REQUEST_STATUS(let selection): return selection.logicalValue
      case ._ACTION_RESOURCE(let selection): return selection.logicalValue
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.logicalValue
      case ._ADDRESS(let selection): return selection.logicalValue
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.logicalValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.logicalValue
      case ._APPROVAL(let selection): return selection.logicalValue
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.logicalValue
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.logicalValue
      case ._APPROVAL_STATUS(let selection): return selection.logicalValue
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.logicalValue
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.logicalValue
      case ._BREAKDOWN_CONTEXT(let selection): return selection.logicalValue
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.logicalValue
      case ._BREAKDOWN_OF(let selection): return selection.logicalValue
      case ._CALENDAR_DATE(let selection): return selection.logicalValue
      case ._CERTIFICATION(let selection): return selection.logicalValue
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.logicalValue
      case ._CHANGE_GROUP(let selection): return selection.logicalValue
      case ._CHARACTERIZED_CLASS(let selection): return selection.logicalValue
      case ._CHARACTERIZED_OBJECT(let selection): return selection.logicalValue
      case ._CLASS(let selection): return selection.logicalValue
      case ._CLASSIFIED_ITEM(let selection): return selection.logicalValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.logicalValue
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.logicalValue
      case ._CONFIGURATION_ITEM(let selection): return selection.logicalValue
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.logicalValue
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.logicalValue
      case ._CONTRACT(let selection): return selection.logicalValue
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._CONVERSION_BASED_UNIT(let selection): return selection.logicalValue
      case ._DATE_AND_TIME(let selection): return selection.logicalValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.logicalValue
      case ._DATE_ASSIGNMENT(let selection): return selection.logicalValue
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._DERIVED_UNIT(let selection): return selection.logicalValue
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.logicalValue
      case ._DIRECTED_ACTION(let selection): return selection.logicalValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._DOCUMENT_FILE(let selection): return selection.logicalValue
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._DOCUMENT_TYPE(let selection): return selection.logicalValue
      case ._EFFECTIVITY(let selection): return selection.logicalValue
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.logicalValue
      case ._ENVELOPE(let selection): return selection.logicalValue
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.logicalValue
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.logicalValue
      case ._EVENT_OCCURRENCE(let selection): return selection.logicalValue
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.logicalValue
      case ._EVIDENCE(let selection): return selection.logicalValue
      case ._EXECUTED_ACTION(let selection): return selection.logicalValue
      case ._FEATURE_DEFINITION(let selection): return selection.logicalValue
      case ._GENERAL_FEATURE(let selection): return selection.logicalValue
      case ._GENERAL_PROPERTY(let selection): return selection.logicalValue
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.logicalValue
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.logicalValue
      case ._GROUP(let selection): return selection.logicalValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.logicalValue
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._INFORMATION_RIGHT(let selection): return selection.logicalValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.logicalValue
      case ._INTERFACE_CONNECTION(let selection): return selection.logicalValue
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.logicalValue
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.logicalValue
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.logicalValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.logicalValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.logicalValue
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.logicalValue
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.logicalValue
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.logicalValue
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.logicalValue
      case ._IN_ZONE(let selection): return selection.logicalValue
      case ._LANGUAGE(let selection): return selection.logicalValue
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._LOCAL_TIME(let selection): return selection.logicalValue
      case ._LOCATION(let selection): return selection.logicalValue
      case ._LOCATION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._MATERIAL_DESIGNATION(let selection): return selection.logicalValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.logicalValue
      case ._MEASURE_QUALIFICATION(let selection): return selection.logicalValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.logicalValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.logicalValue
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.logicalValue
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.logicalValue
      case ._NAMED_UNIT(let selection): return selection.logicalValue
      case ._ORGANIZATION(let selection): return selection.logicalValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.logicalValue
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.logicalValue
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._PERSON(let selection): return selection.logicalValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.logicalValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.logicalValue
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.logicalValue
      case ._PROCESS_OPERATION(let selection): return selection.logicalValue
      case ._PROCESS_PLAN(let selection): return selection.logicalValue
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.logicalValue
      case ._PRODUCT(let selection): return selection.logicalValue
      case ._PRODUCT_CONCEPT(let selection): return selection.logicalValue
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.logicalValue
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.logicalValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.logicalValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.logicalValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.logicalValue
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.logicalValue
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.logicalValue
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.logicalValue
      case ._PRODUCT_GROUP(let selection): return selection.logicalValue
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.logicalValue
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.logicalValue
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.logicalValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._PROPERTY_DEFINITION(let selection): return selection.logicalValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.logicalValue
      case ._REPRESENTATION(let selection): return selection.logicalValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.logicalValue
      case ._REPRESENTATION_ITEM(let selection): return selection.logicalValue
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.logicalValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.logicalValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.logicalValue
      case ._RESOURCE_PROPERTY(let selection): return selection.logicalValue
      case ._RETENTION(let selection): return selection.logicalValue
      case ._SATISFIES_REQUIREMENT(let selection): return selection.logicalValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.logicalValue
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.logicalValue
      case ._SHAPE_ASPECT(let selection): return selection.logicalValue
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._STATE_OBSERVED(let selection): return selection.logicalValue
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.logicalValue
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.logicalValue
      case ._STATE_OBSERVED_ROLE(let selection): return selection.logicalValue
      case ._STATE_TYPE(let selection): return selection.logicalValue
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.logicalValue
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.logicalValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.logicalValue
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.logicalValue
      case ._TYPE_QUALIFIER(let selection): return selection.logicalValue
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.logicalValue
      case ._USAGE_ASSOCIATION(let selection): return selection.logicalValue
      case ._VALIDATION(let selection): return selection.logicalValue
      case ._VERIFICATION(let selection): return selection.logicalValue
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.logicalValue
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.logicalValue
      }
    }
    public var booleanValue: SDAI.BOOLEAN? {
      switch self {
      case ._ACTION(let selection): return selection.booleanValue
      case ._ACTION_DIRECTIVE(let selection): return selection.booleanValue
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.booleanValue
      case ._ACTION_METHOD(let selection): return selection.booleanValue
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.booleanValue
      case ._ACTION_PROPERTY(let selection): return selection.booleanValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.booleanValue
      case ._ACTION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.booleanValue
      case ._ACTION_REQUEST_STATUS(let selection): return selection.booleanValue
      case ._ACTION_RESOURCE(let selection): return selection.booleanValue
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.booleanValue
      case ._ADDRESS(let selection): return selection.booleanValue
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.booleanValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.booleanValue
      case ._APPROVAL(let selection): return selection.booleanValue
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.booleanValue
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.booleanValue
      case ._APPROVAL_STATUS(let selection): return selection.booleanValue
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.booleanValue
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.booleanValue
      case ._BREAKDOWN_CONTEXT(let selection): return selection.booleanValue
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.booleanValue
      case ._BREAKDOWN_OF(let selection): return selection.booleanValue
      case ._CALENDAR_DATE(let selection): return selection.booleanValue
      case ._CERTIFICATION(let selection): return selection.booleanValue
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.booleanValue
      case ._CHANGE_GROUP(let selection): return selection.booleanValue
      case ._CHARACTERIZED_CLASS(let selection): return selection.booleanValue
      case ._CHARACTERIZED_OBJECT(let selection): return selection.booleanValue
      case ._CLASS(let selection): return selection.booleanValue
      case ._CLASSIFIED_ITEM(let selection): return selection.booleanValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.booleanValue
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.booleanValue
      case ._CONFIGURATION_ITEM(let selection): return selection.booleanValue
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.booleanValue
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.booleanValue
      case ._CONTRACT(let selection): return selection.booleanValue
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._CONVERSION_BASED_UNIT(let selection): return selection.booleanValue
      case ._DATE_AND_TIME(let selection): return selection.booleanValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.booleanValue
      case ._DATE_ASSIGNMENT(let selection): return selection.booleanValue
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._DERIVED_UNIT(let selection): return selection.booleanValue
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.booleanValue
      case ._DIRECTED_ACTION(let selection): return selection.booleanValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._DOCUMENT_FILE(let selection): return selection.booleanValue
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._DOCUMENT_TYPE(let selection): return selection.booleanValue
      case ._EFFECTIVITY(let selection): return selection.booleanValue
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.booleanValue
      case ._ENVELOPE(let selection): return selection.booleanValue
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.booleanValue
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.booleanValue
      case ._EVENT_OCCURRENCE(let selection): return selection.booleanValue
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.booleanValue
      case ._EVIDENCE(let selection): return selection.booleanValue
      case ._EXECUTED_ACTION(let selection): return selection.booleanValue
      case ._FEATURE_DEFINITION(let selection): return selection.booleanValue
      case ._GENERAL_FEATURE(let selection): return selection.booleanValue
      case ._GENERAL_PROPERTY(let selection): return selection.booleanValue
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.booleanValue
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.booleanValue
      case ._GROUP(let selection): return selection.booleanValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.booleanValue
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._INFORMATION_RIGHT(let selection): return selection.booleanValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.booleanValue
      case ._INTERFACE_CONNECTION(let selection): return selection.booleanValue
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.booleanValue
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.booleanValue
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.booleanValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.booleanValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.booleanValue
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.booleanValue
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.booleanValue
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.booleanValue
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.booleanValue
      case ._IN_ZONE(let selection): return selection.booleanValue
      case ._LANGUAGE(let selection): return selection.booleanValue
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._LOCAL_TIME(let selection): return selection.booleanValue
      case ._LOCATION(let selection): return selection.booleanValue
      case ._LOCATION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._MATERIAL_DESIGNATION(let selection): return selection.booleanValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.booleanValue
      case ._MEASURE_QUALIFICATION(let selection): return selection.booleanValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.booleanValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.booleanValue
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.booleanValue
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.booleanValue
      case ._NAMED_UNIT(let selection): return selection.booleanValue
      case ._ORGANIZATION(let selection): return selection.booleanValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.booleanValue
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.booleanValue
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._PERSON(let selection): return selection.booleanValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.booleanValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.booleanValue
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.booleanValue
      case ._PROCESS_OPERATION(let selection): return selection.booleanValue
      case ._PROCESS_PLAN(let selection): return selection.booleanValue
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.booleanValue
      case ._PRODUCT(let selection): return selection.booleanValue
      case ._PRODUCT_CONCEPT(let selection): return selection.booleanValue
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.booleanValue
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.booleanValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.booleanValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.booleanValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.booleanValue
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.booleanValue
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.booleanValue
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.booleanValue
      case ._PRODUCT_GROUP(let selection): return selection.booleanValue
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.booleanValue
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.booleanValue
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.booleanValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._PROPERTY_DEFINITION(let selection): return selection.booleanValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.booleanValue
      case ._REPRESENTATION(let selection): return selection.booleanValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.booleanValue
      case ._REPRESENTATION_ITEM(let selection): return selection.booleanValue
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.booleanValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.booleanValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.booleanValue
      case ._RESOURCE_PROPERTY(let selection): return selection.booleanValue
      case ._RETENTION(let selection): return selection.booleanValue
      case ._SATISFIES_REQUIREMENT(let selection): return selection.booleanValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.booleanValue
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.booleanValue
      case ._SHAPE_ASPECT(let selection): return selection.booleanValue
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._STATE_OBSERVED(let selection): return selection.booleanValue
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.booleanValue
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.booleanValue
      case ._STATE_OBSERVED_ROLE(let selection): return selection.booleanValue
      case ._STATE_TYPE(let selection): return selection.booleanValue
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.booleanValue
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.booleanValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.booleanValue
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.booleanValue
      case ._TYPE_QUALIFIER(let selection): return selection.booleanValue
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.booleanValue
      case ._USAGE_ASSOCIATION(let selection): return selection.booleanValue
      case ._VALIDATION(let selection): return selection.booleanValue
      case ._VERIFICATION(let selection): return selection.booleanValue
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.booleanValue
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.booleanValue
      }
    }
    public var numberValue: SDAI.NUMBER? {
      switch self {
      case ._ACTION(let selection): return selection.numberValue
      case ._ACTION_DIRECTIVE(let selection): return selection.numberValue
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.numberValue
      case ._ACTION_METHOD(let selection): return selection.numberValue
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.numberValue
      case ._ACTION_PROPERTY(let selection): return selection.numberValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.numberValue
      case ._ACTION_RELATIONSHIP(let selection): return selection.numberValue
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.numberValue
      case ._ACTION_REQUEST_STATUS(let selection): return selection.numberValue
      case ._ACTION_RESOURCE(let selection): return selection.numberValue
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.numberValue
      case ._ADDRESS(let selection): return selection.numberValue
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.numberValue
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.numberValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.numberValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.numberValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.numberValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.numberValue
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.numberValue
      case ._APPROVAL(let selection): return selection.numberValue
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.numberValue
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.numberValue
      case ._APPROVAL_STATUS(let selection): return selection.numberValue
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.numberValue
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.numberValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.numberValue
      case ._BREAKDOWN_CONTEXT(let selection): return selection.numberValue
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.numberValue
      case ._BREAKDOWN_OF(let selection): return selection.numberValue
      case ._CALENDAR_DATE(let selection): return selection.numberValue
      case ._CERTIFICATION(let selection): return selection.numberValue
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.numberValue
      case ._CHANGE_GROUP(let selection): return selection.numberValue
      case ._CHARACTERIZED_CLASS(let selection): return selection.numberValue
      case ._CHARACTERIZED_OBJECT(let selection): return selection.numberValue
      case ._CLASS(let selection): return selection.numberValue
      case ._CLASSIFIED_ITEM(let selection): return selection.numberValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.numberValue
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.numberValue
      case ._CONFIGURATION_ITEM(let selection): return selection.numberValue
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.numberValue
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.numberValue
      case ._CONTRACT(let selection): return selection.numberValue
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.numberValue
      case ._CONVERSION_BASED_UNIT(let selection): return selection.numberValue
      case ._DATE_AND_TIME(let selection): return selection.numberValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.numberValue
      case ._DATE_ASSIGNMENT(let selection): return selection.numberValue
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.numberValue
      case ._DERIVED_UNIT(let selection): return selection.numberValue
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.numberValue
      case ._DIRECTED_ACTION(let selection): return selection.numberValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.numberValue
      case ._DOCUMENT_FILE(let selection): return selection.numberValue
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.numberValue
      case ._DOCUMENT_TYPE(let selection): return selection.numberValue
      case ._EFFECTIVITY(let selection): return selection.numberValue
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.numberValue
      case ._ENVELOPE(let selection): return selection.numberValue
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.numberValue
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.numberValue
      case ._EVENT_OCCURRENCE(let selection): return selection.numberValue
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.numberValue
      case ._EVIDENCE(let selection): return selection.numberValue
      case ._EXECUTED_ACTION(let selection): return selection.numberValue
      case ._FEATURE_DEFINITION(let selection): return selection.numberValue
      case ._GENERAL_FEATURE(let selection): return selection.numberValue
      case ._GENERAL_PROPERTY(let selection): return selection.numberValue
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.numberValue
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.numberValue
      case ._GROUP(let selection): return selection.numberValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.numberValue
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.numberValue
      case ._INFORMATION_RIGHT(let selection): return selection.numberValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.numberValue
      case ._INTERFACE_CONNECTION(let selection): return selection.numberValue
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.numberValue
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.numberValue
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.numberValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.numberValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.numberValue
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.numberValue
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.numberValue
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.numberValue
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.numberValue
      case ._IN_ZONE(let selection): return selection.numberValue
      case ._LANGUAGE(let selection): return selection.numberValue
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.numberValue
      case ._LOCAL_TIME(let selection): return selection.numberValue
      case ._LOCATION(let selection): return selection.numberValue
      case ._LOCATION_RELATIONSHIP(let selection): return selection.numberValue
      case ._MATERIAL_DESIGNATION(let selection): return selection.numberValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.numberValue
      case ._MEASURE_QUALIFICATION(let selection): return selection.numberValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.numberValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.numberValue
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.numberValue
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.numberValue
      case ._NAMED_UNIT(let selection): return selection.numberValue
      case ._ORGANIZATION(let selection): return selection.numberValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.numberValue
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.numberValue
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.numberValue
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.numberValue
      case ._PERSON(let selection): return selection.numberValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.numberValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.numberValue
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.numberValue
      case ._PROCESS_OPERATION(let selection): return selection.numberValue
      case ._PROCESS_PLAN(let selection): return selection.numberValue
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.numberValue
      case ._PRODUCT(let selection): return selection.numberValue
      case ._PRODUCT_CONCEPT(let selection): return selection.numberValue
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.numberValue
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.numberValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.numberValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.numberValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.numberValue
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.numberValue
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.numberValue
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.numberValue
      case ._PRODUCT_GROUP(let selection): return selection.numberValue
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.numberValue
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.numberValue
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.numberValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.numberValue
      case ._PROPERTY_DEFINITION(let selection): return selection.numberValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.numberValue
      case ._REPRESENTATION(let selection): return selection.numberValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.numberValue
      case ._REPRESENTATION_ITEM(let selection): return selection.numberValue
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.numberValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.numberValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.numberValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.numberValue
      case ._RESOURCE_PROPERTY(let selection): return selection.numberValue
      case ._RETENTION(let selection): return selection.numberValue
      case ._SATISFIES_REQUIREMENT(let selection): return selection.numberValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.numberValue
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.numberValue
      case ._SHAPE_ASPECT(let selection): return selection.numberValue
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.numberValue
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.numberValue
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.numberValue
      case ._STATE_OBSERVED(let selection): return selection.numberValue
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.numberValue
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.numberValue
      case ._STATE_OBSERVED_ROLE(let selection): return selection.numberValue
      case ._STATE_TYPE(let selection): return selection.numberValue
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.numberValue
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.numberValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.numberValue
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.numberValue
      case ._TYPE_QUALIFIER(let selection): return selection.numberValue
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.numberValue
      case ._USAGE_ASSOCIATION(let selection): return selection.numberValue
      case ._VALIDATION(let selection): return selection.numberValue
      case ._VERIFICATION(let selection): return selection.numberValue
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.numberValue
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.numberValue
      }
    }
    public var realValue: SDAI.REAL? {
      switch self {
      case ._ACTION(let selection): return selection.realValue
      case ._ACTION_DIRECTIVE(let selection): return selection.realValue
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.realValue
      case ._ACTION_METHOD(let selection): return selection.realValue
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.realValue
      case ._ACTION_PROPERTY(let selection): return selection.realValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.realValue
      case ._ACTION_RELATIONSHIP(let selection): return selection.realValue
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.realValue
      case ._ACTION_REQUEST_STATUS(let selection): return selection.realValue
      case ._ACTION_RESOURCE(let selection): return selection.realValue
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.realValue
      case ._ADDRESS(let selection): return selection.realValue
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.realValue
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.realValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.realValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.realValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.realValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.realValue
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.realValue
      case ._APPROVAL(let selection): return selection.realValue
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.realValue
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.realValue
      case ._APPROVAL_STATUS(let selection): return selection.realValue
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.realValue
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.realValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.realValue
      case ._BREAKDOWN_CONTEXT(let selection): return selection.realValue
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.realValue
      case ._BREAKDOWN_OF(let selection): return selection.realValue
      case ._CALENDAR_DATE(let selection): return selection.realValue
      case ._CERTIFICATION(let selection): return selection.realValue
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.realValue
      case ._CHANGE_GROUP(let selection): return selection.realValue
      case ._CHARACTERIZED_CLASS(let selection): return selection.realValue
      case ._CHARACTERIZED_OBJECT(let selection): return selection.realValue
      case ._CLASS(let selection): return selection.realValue
      case ._CLASSIFIED_ITEM(let selection): return selection.realValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.realValue
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.realValue
      case ._CONFIGURATION_ITEM(let selection): return selection.realValue
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.realValue
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.realValue
      case ._CONTRACT(let selection): return selection.realValue
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.realValue
      case ._CONVERSION_BASED_UNIT(let selection): return selection.realValue
      case ._DATE_AND_TIME(let selection): return selection.realValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.realValue
      case ._DATE_ASSIGNMENT(let selection): return selection.realValue
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.realValue
      case ._DERIVED_UNIT(let selection): return selection.realValue
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.realValue
      case ._DIRECTED_ACTION(let selection): return selection.realValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.realValue
      case ._DOCUMENT_FILE(let selection): return selection.realValue
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.realValue
      case ._DOCUMENT_TYPE(let selection): return selection.realValue
      case ._EFFECTIVITY(let selection): return selection.realValue
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.realValue
      case ._ENVELOPE(let selection): return selection.realValue
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.realValue
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.realValue
      case ._EVENT_OCCURRENCE(let selection): return selection.realValue
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.realValue
      case ._EVIDENCE(let selection): return selection.realValue
      case ._EXECUTED_ACTION(let selection): return selection.realValue
      case ._FEATURE_DEFINITION(let selection): return selection.realValue
      case ._GENERAL_FEATURE(let selection): return selection.realValue
      case ._GENERAL_PROPERTY(let selection): return selection.realValue
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.realValue
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.realValue
      case ._GROUP(let selection): return selection.realValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.realValue
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.realValue
      case ._INFORMATION_RIGHT(let selection): return selection.realValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.realValue
      case ._INTERFACE_CONNECTION(let selection): return selection.realValue
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.realValue
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.realValue
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.realValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.realValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.realValue
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.realValue
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.realValue
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.realValue
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.realValue
      case ._IN_ZONE(let selection): return selection.realValue
      case ._LANGUAGE(let selection): return selection.realValue
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.realValue
      case ._LOCAL_TIME(let selection): return selection.realValue
      case ._LOCATION(let selection): return selection.realValue
      case ._LOCATION_RELATIONSHIP(let selection): return selection.realValue
      case ._MATERIAL_DESIGNATION(let selection): return selection.realValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.realValue
      case ._MEASURE_QUALIFICATION(let selection): return selection.realValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.realValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.realValue
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.realValue
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.realValue
      case ._NAMED_UNIT(let selection): return selection.realValue
      case ._ORGANIZATION(let selection): return selection.realValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.realValue
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.realValue
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.realValue
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.realValue
      case ._PERSON(let selection): return selection.realValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.realValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.realValue
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.realValue
      case ._PROCESS_OPERATION(let selection): return selection.realValue
      case ._PROCESS_PLAN(let selection): return selection.realValue
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.realValue
      case ._PRODUCT(let selection): return selection.realValue
      case ._PRODUCT_CONCEPT(let selection): return selection.realValue
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.realValue
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.realValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.realValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.realValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.realValue
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.realValue
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.realValue
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.realValue
      case ._PRODUCT_GROUP(let selection): return selection.realValue
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.realValue
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.realValue
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.realValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.realValue
      case ._PROPERTY_DEFINITION(let selection): return selection.realValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.realValue
      case ._REPRESENTATION(let selection): return selection.realValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.realValue
      case ._REPRESENTATION_ITEM(let selection): return selection.realValue
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.realValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.realValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.realValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.realValue
      case ._RESOURCE_PROPERTY(let selection): return selection.realValue
      case ._RETENTION(let selection): return selection.realValue
      case ._SATISFIES_REQUIREMENT(let selection): return selection.realValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.realValue
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.realValue
      case ._SHAPE_ASPECT(let selection): return selection.realValue
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.realValue
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.realValue
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.realValue
      case ._STATE_OBSERVED(let selection): return selection.realValue
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.realValue
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.realValue
      case ._STATE_OBSERVED_ROLE(let selection): return selection.realValue
      case ._STATE_TYPE(let selection): return selection.realValue
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.realValue
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.realValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.realValue
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.realValue
      case ._TYPE_QUALIFIER(let selection): return selection.realValue
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.realValue
      case ._USAGE_ASSOCIATION(let selection): return selection.realValue
      case ._VALIDATION(let selection): return selection.realValue
      case ._VERIFICATION(let selection): return selection.realValue
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.realValue
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.realValue
      }
    }
    public var integerValue: SDAI.INTEGER? {
      switch self {
      case ._ACTION(let selection): return selection.integerValue
      case ._ACTION_DIRECTIVE(let selection): return selection.integerValue
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.integerValue
      case ._ACTION_METHOD(let selection): return selection.integerValue
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.integerValue
      case ._ACTION_PROPERTY(let selection): return selection.integerValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.integerValue
      case ._ACTION_RELATIONSHIP(let selection): return selection.integerValue
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.integerValue
      case ._ACTION_REQUEST_STATUS(let selection): return selection.integerValue
      case ._ACTION_RESOURCE(let selection): return selection.integerValue
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.integerValue
      case ._ADDRESS(let selection): return selection.integerValue
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.integerValue
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.integerValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.integerValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.integerValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.integerValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.integerValue
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.integerValue
      case ._APPROVAL(let selection): return selection.integerValue
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.integerValue
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.integerValue
      case ._APPROVAL_STATUS(let selection): return selection.integerValue
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.integerValue
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.integerValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.integerValue
      case ._BREAKDOWN_CONTEXT(let selection): return selection.integerValue
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.integerValue
      case ._BREAKDOWN_OF(let selection): return selection.integerValue
      case ._CALENDAR_DATE(let selection): return selection.integerValue
      case ._CERTIFICATION(let selection): return selection.integerValue
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.integerValue
      case ._CHANGE_GROUP(let selection): return selection.integerValue
      case ._CHARACTERIZED_CLASS(let selection): return selection.integerValue
      case ._CHARACTERIZED_OBJECT(let selection): return selection.integerValue
      case ._CLASS(let selection): return selection.integerValue
      case ._CLASSIFIED_ITEM(let selection): return selection.integerValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.integerValue
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.integerValue
      case ._CONFIGURATION_ITEM(let selection): return selection.integerValue
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.integerValue
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.integerValue
      case ._CONTRACT(let selection): return selection.integerValue
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.integerValue
      case ._CONVERSION_BASED_UNIT(let selection): return selection.integerValue
      case ._DATE_AND_TIME(let selection): return selection.integerValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.integerValue
      case ._DATE_ASSIGNMENT(let selection): return selection.integerValue
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.integerValue
      case ._DERIVED_UNIT(let selection): return selection.integerValue
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.integerValue
      case ._DIRECTED_ACTION(let selection): return selection.integerValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.integerValue
      case ._DOCUMENT_FILE(let selection): return selection.integerValue
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.integerValue
      case ._DOCUMENT_TYPE(let selection): return selection.integerValue
      case ._EFFECTIVITY(let selection): return selection.integerValue
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.integerValue
      case ._ENVELOPE(let selection): return selection.integerValue
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.integerValue
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.integerValue
      case ._EVENT_OCCURRENCE(let selection): return selection.integerValue
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.integerValue
      case ._EVIDENCE(let selection): return selection.integerValue
      case ._EXECUTED_ACTION(let selection): return selection.integerValue
      case ._FEATURE_DEFINITION(let selection): return selection.integerValue
      case ._GENERAL_FEATURE(let selection): return selection.integerValue
      case ._GENERAL_PROPERTY(let selection): return selection.integerValue
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.integerValue
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.integerValue
      case ._GROUP(let selection): return selection.integerValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.integerValue
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.integerValue
      case ._INFORMATION_RIGHT(let selection): return selection.integerValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.integerValue
      case ._INTERFACE_CONNECTION(let selection): return selection.integerValue
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.integerValue
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.integerValue
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.integerValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.integerValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.integerValue
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.integerValue
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.integerValue
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.integerValue
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.integerValue
      case ._IN_ZONE(let selection): return selection.integerValue
      case ._LANGUAGE(let selection): return selection.integerValue
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.integerValue
      case ._LOCAL_TIME(let selection): return selection.integerValue
      case ._LOCATION(let selection): return selection.integerValue
      case ._LOCATION_RELATIONSHIP(let selection): return selection.integerValue
      case ._MATERIAL_DESIGNATION(let selection): return selection.integerValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.integerValue
      case ._MEASURE_QUALIFICATION(let selection): return selection.integerValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.integerValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.integerValue
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.integerValue
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.integerValue
      case ._NAMED_UNIT(let selection): return selection.integerValue
      case ._ORGANIZATION(let selection): return selection.integerValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.integerValue
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.integerValue
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.integerValue
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.integerValue
      case ._PERSON(let selection): return selection.integerValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.integerValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.integerValue
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.integerValue
      case ._PROCESS_OPERATION(let selection): return selection.integerValue
      case ._PROCESS_PLAN(let selection): return selection.integerValue
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.integerValue
      case ._PRODUCT(let selection): return selection.integerValue
      case ._PRODUCT_CONCEPT(let selection): return selection.integerValue
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.integerValue
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.integerValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.integerValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.integerValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.integerValue
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.integerValue
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.integerValue
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.integerValue
      case ._PRODUCT_GROUP(let selection): return selection.integerValue
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.integerValue
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.integerValue
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.integerValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.integerValue
      case ._PROPERTY_DEFINITION(let selection): return selection.integerValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.integerValue
      case ._REPRESENTATION(let selection): return selection.integerValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.integerValue
      case ._REPRESENTATION_ITEM(let selection): return selection.integerValue
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.integerValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.integerValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.integerValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.integerValue
      case ._RESOURCE_PROPERTY(let selection): return selection.integerValue
      case ._RETENTION(let selection): return selection.integerValue
      case ._SATISFIES_REQUIREMENT(let selection): return selection.integerValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.integerValue
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.integerValue
      case ._SHAPE_ASPECT(let selection): return selection.integerValue
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.integerValue
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.integerValue
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.integerValue
      case ._STATE_OBSERVED(let selection): return selection.integerValue
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.integerValue
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.integerValue
      case ._STATE_OBSERVED_ROLE(let selection): return selection.integerValue
      case ._STATE_TYPE(let selection): return selection.integerValue
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.integerValue
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.integerValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.integerValue
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.integerValue
      case ._TYPE_QUALIFIER(let selection): return selection.integerValue
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.integerValue
      case ._USAGE_ASSOCIATION(let selection): return selection.integerValue
      case ._VALIDATION(let selection): return selection.integerValue
      case ._VERIFICATION(let selection): return selection.integerValue
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.integerValue
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.integerValue
      }
    }
    public var genericEnumValue: SDAI.GenericEnumValue? {
      switch self {
      case ._ACTION(let selection): return selection.genericEnumValue
      case ._ACTION_DIRECTIVE(let selection): return selection.genericEnumValue
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._ACTION_METHOD(let selection): return selection.genericEnumValue
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._ACTION_PROPERTY(let selection): return selection.genericEnumValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.genericEnumValue
      case ._ACTION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.genericEnumValue
      case ._ACTION_REQUEST_STATUS(let selection): return selection.genericEnumValue
      case ._ACTION_RESOURCE(let selection): return selection.genericEnumValue
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._ADDRESS(let selection): return selection.genericEnumValue
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.genericEnumValue
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.genericEnumValue
      case ._APPROVAL(let selection): return selection.genericEnumValue
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.genericEnumValue
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._APPROVAL_STATUS(let selection): return selection.genericEnumValue
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.genericEnumValue
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._BREAKDOWN_CONTEXT(let selection): return selection.genericEnumValue
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.genericEnumValue
      case ._BREAKDOWN_OF(let selection): return selection.genericEnumValue
      case ._CALENDAR_DATE(let selection): return selection.genericEnumValue
      case ._CERTIFICATION(let selection): return selection.genericEnumValue
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.genericEnumValue
      case ._CHANGE_GROUP(let selection): return selection.genericEnumValue
      case ._CHARACTERIZED_CLASS(let selection): return selection.genericEnumValue
      case ._CHARACTERIZED_OBJECT(let selection): return selection.genericEnumValue
      case ._CLASS(let selection): return selection.genericEnumValue
      case ._CLASSIFIED_ITEM(let selection): return selection.genericEnumValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.genericEnumValue
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.genericEnumValue
      case ._CONFIGURATION_ITEM(let selection): return selection.genericEnumValue
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.genericEnumValue
      case ._CONTRACT(let selection): return selection.genericEnumValue
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._CONVERSION_BASED_UNIT(let selection): return selection.genericEnumValue
      case ._DATE_AND_TIME(let selection): return selection.genericEnumValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._DATE_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._DERIVED_UNIT(let selection): return selection.genericEnumValue
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.genericEnumValue
      case ._DIRECTED_ACTION(let selection): return selection.genericEnumValue
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._DOCUMENT_FILE(let selection): return selection.genericEnumValue
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._DOCUMENT_TYPE(let selection): return selection.genericEnumValue
      case ._EFFECTIVITY(let selection): return selection.genericEnumValue
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._ENVELOPE(let selection): return selection.genericEnumValue
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.genericEnumValue
      case ._EVENT_OCCURRENCE(let selection): return selection.genericEnumValue
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._EVIDENCE(let selection): return selection.genericEnumValue
      case ._EXECUTED_ACTION(let selection): return selection.genericEnumValue
      case ._FEATURE_DEFINITION(let selection): return selection.genericEnumValue
      case ._GENERAL_FEATURE(let selection): return selection.genericEnumValue
      case ._GENERAL_PROPERTY(let selection): return selection.genericEnumValue
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._GROUP(let selection): return selection.genericEnumValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._INFORMATION_RIGHT(let selection): return selection.genericEnumValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.genericEnumValue
      case ._INTERFACE_CONNECTION(let selection): return selection.genericEnumValue
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.genericEnumValue
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.genericEnumValue
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.genericEnumValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.genericEnumValue
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.genericEnumValue
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.genericEnumValue
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.genericEnumValue
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.genericEnumValue
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.genericEnumValue
      case ._IN_ZONE(let selection): return selection.genericEnumValue
      case ._LANGUAGE(let selection): return selection.genericEnumValue
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._LOCAL_TIME(let selection): return selection.genericEnumValue
      case ._LOCATION(let selection): return selection.genericEnumValue
      case ._LOCATION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._MATERIAL_DESIGNATION(let selection): return selection.genericEnumValue
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.genericEnumValue
      case ._MEASURE_QUALIFICATION(let selection): return selection.genericEnumValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.genericEnumValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.genericEnumValue
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._NAMED_UNIT(let selection): return selection.genericEnumValue
      case ._ORGANIZATION(let selection): return selection.genericEnumValue
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.genericEnumValue
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.genericEnumValue
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._PERSON(let selection): return selection.genericEnumValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.genericEnumValue
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.genericEnumValue
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.genericEnumValue
      case ._PROCESS_OPERATION(let selection): return selection.genericEnumValue
      case ._PROCESS_PLAN(let selection): return selection.genericEnumValue
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.genericEnumValue
      case ._PRODUCT(let selection): return selection.genericEnumValue
      case ._PRODUCT_CONCEPT(let selection): return selection.genericEnumValue
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.genericEnumValue
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.genericEnumValue
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.genericEnumValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.genericEnumValue
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.genericEnumValue
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.genericEnumValue
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.genericEnumValue
      case ._PRODUCT_GROUP(let selection): return selection.genericEnumValue
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.genericEnumValue
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.genericEnumValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._PROPERTY_DEFINITION(let selection): return selection.genericEnumValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.genericEnumValue
      case ._REPRESENTATION(let selection): return selection.genericEnumValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.genericEnumValue
      case ._REPRESENTATION_ITEM(let selection): return selection.genericEnumValue
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.genericEnumValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.genericEnumValue
      case ._RESOURCE_PROPERTY(let selection): return selection.genericEnumValue
      case ._RETENTION(let selection): return selection.genericEnumValue
      case ._SATISFIES_REQUIREMENT(let selection): return selection.genericEnumValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.genericEnumValue
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.genericEnumValue
      case ._SHAPE_ASPECT(let selection): return selection.genericEnumValue
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._STATE_OBSERVED(let selection): return selection.genericEnumValue
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._STATE_OBSERVED_ROLE(let selection): return selection.genericEnumValue
      case ._STATE_TYPE(let selection): return selection.genericEnumValue
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.genericEnumValue
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._TYPE_QUALIFIER(let selection): return selection.genericEnumValue
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.genericEnumValue
      case ._USAGE_ASSOCIATION(let selection): return selection.genericEnumValue
      case ._VALIDATION(let selection): return selection.genericEnumValue
      case ._VERIFICATION(let selection): return selection.genericEnumValue
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.genericEnumValue
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.genericEnumValue
      }
    }
    public func arrayOptionalValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY_OPTIONAL<ELEM>? {
      switch self {
      case ._ACTION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_DIRECTIVE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_METHOD(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_PROPERTY(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_REQUEST_STATUS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_RESOURCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ADDRESS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPROVAL(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPROVAL_STATUS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._BREAKDOWN_CONTEXT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._BREAKDOWN_OF(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CALENDAR_DATE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CERTIFICATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CHANGE_GROUP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CHARACTERIZED_CLASS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CHARACTERIZED_OBJECT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CLASS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CLASSIFIED_ITEM(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CONFIGURATION_ITEM(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CONTRACT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CONVERSION_BASED_UNIT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DATE_AND_TIME(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DIRECTED_ACTION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DOCUMENT_FILE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DOCUMENT_TYPE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._EFFECTIVITY(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ENVELOPE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._EVENT_OCCURRENCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._EVIDENCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._EXECUTED_ACTION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._FEATURE_DEFINITION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._GENERAL_FEATURE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._GENERAL_PROPERTY(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._GROUP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INFORMATION_RIGHT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INTERFACE_CONNECTION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._IN_ZONE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._LANGUAGE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._LOCAL_TIME(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._LOCATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._LOCATION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._MEASURE_QUALIFICATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._NAMED_UNIT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ORGANIZATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PERSON(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PROCESS_OPERATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PROCESS_PLAN(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_CONCEPT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_GROUP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REPRESENTATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REPRESENTATION_ITEM(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._RESOURCE_PROPERTY(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._RETENTION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._SATISFIES_REQUIREMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._SHAPE_ASPECT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._STATE_OBSERVED(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._STATE_OBSERVED_ROLE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._STATE_TYPE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._TYPE_QUALIFIER(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._USAGE_ASSOCIATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._VALIDATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._VERIFICATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      }
    }
    public func arrayValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY<ELEM>? {
      switch self {
      case ._ACTION(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_DIRECTIVE(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_METHOD(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_PROPERTY(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_REQUEST_STATUS(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_RESOURCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._ADDRESS(let selection): return selection.arrayValue(elementType:elementType)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPROVAL(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPROVAL_STATUS(let selection): return selection.arrayValue(elementType:elementType)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.arrayValue(elementType:elementType)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._BREAKDOWN_CONTEXT(let selection): return selection.arrayValue(elementType:elementType)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._BREAKDOWN_OF(let selection): return selection.arrayValue(elementType:elementType)
      case ._CALENDAR_DATE(let selection): return selection.arrayValue(elementType:elementType)
      case ._CERTIFICATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._CHANGE_GROUP(let selection): return selection.arrayValue(elementType:elementType)
      case ._CHARACTERIZED_CLASS(let selection): return selection.arrayValue(elementType:elementType)
      case ._CHARACTERIZED_OBJECT(let selection): return selection.arrayValue(elementType:elementType)
      case ._CLASS(let selection): return selection.arrayValue(elementType:elementType)
      case ._CLASSIFIED_ITEM(let selection): return selection.arrayValue(elementType:elementType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.arrayValue(elementType:elementType)
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.arrayValue(elementType:elementType)
      case ._CONFIGURATION_ITEM(let selection): return selection.arrayValue(elementType:elementType)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.arrayValue(elementType:elementType)
      case ._CONTRACT(let selection): return selection.arrayValue(elementType:elementType)
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._CONVERSION_BASED_UNIT(let selection): return selection.arrayValue(elementType:elementType)
      case ._DATE_AND_TIME(let selection): return selection.arrayValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.arrayValue(elementType:elementType)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.arrayValue(elementType:elementType)
      case ._DIRECTED_ACTION(let selection): return selection.arrayValue(elementType:elementType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._DOCUMENT_FILE(let selection): return selection.arrayValue(elementType:elementType)
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._DOCUMENT_TYPE(let selection): return selection.arrayValue(elementType:elementType)
      case ._EFFECTIVITY(let selection): return selection.arrayValue(elementType:elementType)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._ENVELOPE(let selection): return selection.arrayValue(elementType:elementType)
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.arrayValue(elementType:elementType)
      case ._EVENT_OCCURRENCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._EVIDENCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._EXECUTED_ACTION(let selection): return selection.arrayValue(elementType:elementType)
      case ._FEATURE_DEFINITION(let selection): return selection.arrayValue(elementType:elementType)
      case ._GENERAL_FEATURE(let selection): return selection.arrayValue(elementType:elementType)
      case ._GENERAL_PROPERTY(let selection): return selection.arrayValue(elementType:elementType)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._GROUP(let selection): return selection.arrayValue(elementType:elementType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._INFORMATION_RIGHT(let selection): return selection.arrayValue(elementType:elementType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.arrayValue(elementType:elementType)
      case ._INTERFACE_CONNECTION(let selection): return selection.arrayValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.arrayValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.arrayValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.arrayValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.arrayValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.arrayValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.arrayValue(elementType:elementType)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.arrayValue(elementType:elementType)
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.arrayValue(elementType:elementType)
      case ._IN_ZONE(let selection): return selection.arrayValue(elementType:elementType)
      case ._LANGUAGE(let selection): return selection.arrayValue(elementType:elementType)
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._LOCAL_TIME(let selection): return selection.arrayValue(elementType:elementType)
      case ._LOCATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._LOCATION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._MEASURE_QUALIFICATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.arrayValue(elementType:elementType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.arrayValue(elementType:elementType)
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._NAMED_UNIT(let selection): return selection.arrayValue(elementType:elementType)
      case ._ORGANIZATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.arrayValue(elementType:elementType)
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.arrayValue(elementType:elementType)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PERSON(let selection): return selection.arrayValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.arrayValue(elementType:elementType)
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._PROCESS_OPERATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PROCESS_PLAN(let selection): return selection.arrayValue(elementType:elementType)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_CONCEPT(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_GROUP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._REPRESENTATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.arrayValue(elementType:elementType)
      case ._REPRESENTATION_ITEM(let selection): return selection.arrayValue(elementType:elementType)
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._RESOURCE_PROPERTY(let selection): return selection.arrayValue(elementType:elementType)
      case ._RETENTION(let selection): return selection.arrayValue(elementType:elementType)
      case ._SATISFIES_REQUIREMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.arrayValue(elementType:elementType)
      case ._SHAPE_ASPECT(let selection): return selection.arrayValue(elementType:elementType)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._STATE_OBSERVED(let selection): return selection.arrayValue(elementType:elementType)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._STATE_OBSERVED_ROLE(let selection): return selection.arrayValue(elementType:elementType)
      case ._STATE_TYPE(let selection): return selection.arrayValue(elementType:elementType)
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.arrayValue(elementType:elementType)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._TYPE_QUALIFIER(let selection): return selection.arrayValue(elementType:elementType)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.arrayValue(elementType:elementType)
      case ._USAGE_ASSOCIATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._VALIDATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._VERIFICATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.arrayValue(elementType:elementType)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      }
    }
    public func listValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.LIST<ELEM>? {
      switch self {
      case ._ACTION(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_DIRECTIVE(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_METHOD(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_PROPERTY(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_REQUEST_STATUS(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_RESOURCE(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._ADDRESS(let selection): return selection.listValue(elementType:elementType)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.listValue(elementType:elementType)
      case ._APPROVAL(let selection): return selection.listValue(elementType:elementType)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.listValue(elementType:elementType)
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._APPROVAL_STATUS(let selection): return selection.listValue(elementType:elementType)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.listValue(elementType:elementType)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._BREAKDOWN_CONTEXT(let selection): return selection.listValue(elementType:elementType)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.listValue(elementType:elementType)
      case ._BREAKDOWN_OF(let selection): return selection.listValue(elementType:elementType)
      case ._CALENDAR_DATE(let selection): return selection.listValue(elementType:elementType)
      case ._CERTIFICATION(let selection): return selection.listValue(elementType:elementType)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.listValue(elementType:elementType)
      case ._CHANGE_GROUP(let selection): return selection.listValue(elementType:elementType)
      case ._CHARACTERIZED_CLASS(let selection): return selection.listValue(elementType:elementType)
      case ._CHARACTERIZED_OBJECT(let selection): return selection.listValue(elementType:elementType)
      case ._CLASS(let selection): return selection.listValue(elementType:elementType)
      case ._CLASSIFIED_ITEM(let selection): return selection.listValue(elementType:elementType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.listValue(elementType:elementType)
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.listValue(elementType:elementType)
      case ._CONFIGURATION_ITEM(let selection): return selection.listValue(elementType:elementType)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.listValue(elementType:elementType)
      case ._CONTRACT(let selection): return selection.listValue(elementType:elementType)
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._CONVERSION_BASED_UNIT(let selection): return selection.listValue(elementType:elementType)
      case ._DATE_AND_TIME(let selection): return selection.listValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.listValue(elementType:elementType)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.listValue(elementType:elementType)
      case ._DIRECTED_ACTION(let selection): return selection.listValue(elementType:elementType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._DOCUMENT_FILE(let selection): return selection.listValue(elementType:elementType)
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._DOCUMENT_TYPE(let selection): return selection.listValue(elementType:elementType)
      case ._EFFECTIVITY(let selection): return selection.listValue(elementType:elementType)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._ENVELOPE(let selection): return selection.listValue(elementType:elementType)
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.listValue(elementType:elementType)
      case ._EVENT_OCCURRENCE(let selection): return selection.listValue(elementType:elementType)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._EVIDENCE(let selection): return selection.listValue(elementType:elementType)
      case ._EXECUTED_ACTION(let selection): return selection.listValue(elementType:elementType)
      case ._FEATURE_DEFINITION(let selection): return selection.listValue(elementType:elementType)
      case ._GENERAL_FEATURE(let selection): return selection.listValue(elementType:elementType)
      case ._GENERAL_PROPERTY(let selection): return selection.listValue(elementType:elementType)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._GROUP(let selection): return selection.listValue(elementType:elementType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._INFORMATION_RIGHT(let selection): return selection.listValue(elementType:elementType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.listValue(elementType:elementType)
      case ._INTERFACE_CONNECTION(let selection): return selection.listValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.listValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.listValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.listValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.listValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.listValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.listValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.listValue(elementType:elementType)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.listValue(elementType:elementType)
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.listValue(elementType:elementType)
      case ._IN_ZONE(let selection): return selection.listValue(elementType:elementType)
      case ._LANGUAGE(let selection): return selection.listValue(elementType:elementType)
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._LOCAL_TIME(let selection): return selection.listValue(elementType:elementType)
      case ._LOCATION(let selection): return selection.listValue(elementType:elementType)
      case ._LOCATION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION(let selection): return selection.listValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.listValue(elementType:elementType)
      case ._MEASURE_QUALIFICATION(let selection): return selection.listValue(elementType:elementType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.listValue(elementType:elementType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.listValue(elementType:elementType)
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._NAMED_UNIT(let selection): return selection.listValue(elementType:elementType)
      case ._ORGANIZATION(let selection): return selection.listValue(elementType:elementType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.listValue(elementType:elementType)
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.listValue(elementType:elementType)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PERSON(let selection): return selection.listValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.listValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.listValue(elementType:elementType)
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.listValue(elementType:elementType)
      case ._PROCESS_OPERATION(let selection): return selection.listValue(elementType:elementType)
      case ._PROCESS_PLAN(let selection): return selection.listValue(elementType:elementType)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_CONCEPT(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_GROUP(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.listValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.listValue(elementType:elementType)
      case ._REPRESENTATION(let selection): return selection.listValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.listValue(elementType:elementType)
      case ._REPRESENTATION_ITEM(let selection): return selection.listValue(elementType:elementType)
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.listValue(elementType:elementType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.listValue(elementType:elementType)
      case ._RESOURCE_PROPERTY(let selection): return selection.listValue(elementType:elementType)
      case ._RETENTION(let selection): return selection.listValue(elementType:elementType)
      case ._SATISFIES_REQUIREMENT(let selection): return selection.listValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.listValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.listValue(elementType:elementType)
      case ._SHAPE_ASPECT(let selection): return selection.listValue(elementType:elementType)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._STATE_OBSERVED(let selection): return selection.listValue(elementType:elementType)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._STATE_OBSERVED_ROLE(let selection): return selection.listValue(elementType:elementType)
      case ._STATE_TYPE(let selection): return selection.listValue(elementType:elementType)
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.listValue(elementType:elementType)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._TYPE_QUALIFIER(let selection): return selection.listValue(elementType:elementType)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.listValue(elementType:elementType)
      case ._USAGE_ASSOCIATION(let selection): return selection.listValue(elementType:elementType)
      case ._VALIDATION(let selection): return selection.listValue(elementType:elementType)
      case ._VERIFICATION(let selection): return selection.listValue(elementType:elementType)
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.listValue(elementType:elementType)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      }
    }
    public func bagValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.BAG<ELEM>? {
      switch self {
      case ._ACTION(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_DIRECTIVE(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_METHOD(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_PROPERTY(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_REQUEST_STATUS(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_RESOURCE(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._ADDRESS(let selection): return selection.bagValue(elementType:elementType)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPROVAL(let selection): return selection.bagValue(elementType:elementType)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.bagValue(elementType:elementType)
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._APPROVAL_STATUS(let selection): return selection.bagValue(elementType:elementType)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.bagValue(elementType:elementType)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._BREAKDOWN_CONTEXT(let selection): return selection.bagValue(elementType:elementType)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.bagValue(elementType:elementType)
      case ._BREAKDOWN_OF(let selection): return selection.bagValue(elementType:elementType)
      case ._CALENDAR_DATE(let selection): return selection.bagValue(elementType:elementType)
      case ._CERTIFICATION(let selection): return selection.bagValue(elementType:elementType)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.bagValue(elementType:elementType)
      case ._CHANGE_GROUP(let selection): return selection.bagValue(elementType:elementType)
      case ._CHARACTERIZED_CLASS(let selection): return selection.bagValue(elementType:elementType)
      case ._CHARACTERIZED_OBJECT(let selection): return selection.bagValue(elementType:elementType)
      case ._CLASS(let selection): return selection.bagValue(elementType:elementType)
      case ._CLASSIFIED_ITEM(let selection): return selection.bagValue(elementType:elementType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.bagValue(elementType:elementType)
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.bagValue(elementType:elementType)
      case ._CONFIGURATION_ITEM(let selection): return selection.bagValue(elementType:elementType)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.bagValue(elementType:elementType)
      case ._CONTRACT(let selection): return selection.bagValue(elementType:elementType)
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._CONVERSION_BASED_UNIT(let selection): return selection.bagValue(elementType:elementType)
      case ._DATE_AND_TIME(let selection): return selection.bagValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.bagValue(elementType:elementType)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.bagValue(elementType:elementType)
      case ._DIRECTED_ACTION(let selection): return selection.bagValue(elementType:elementType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._DOCUMENT_FILE(let selection): return selection.bagValue(elementType:elementType)
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._DOCUMENT_TYPE(let selection): return selection.bagValue(elementType:elementType)
      case ._EFFECTIVITY(let selection): return selection.bagValue(elementType:elementType)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._ENVELOPE(let selection): return selection.bagValue(elementType:elementType)
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.bagValue(elementType:elementType)
      case ._EVENT_OCCURRENCE(let selection): return selection.bagValue(elementType:elementType)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._EVIDENCE(let selection): return selection.bagValue(elementType:elementType)
      case ._EXECUTED_ACTION(let selection): return selection.bagValue(elementType:elementType)
      case ._FEATURE_DEFINITION(let selection): return selection.bagValue(elementType:elementType)
      case ._GENERAL_FEATURE(let selection): return selection.bagValue(elementType:elementType)
      case ._GENERAL_PROPERTY(let selection): return selection.bagValue(elementType:elementType)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._GROUP(let selection): return selection.bagValue(elementType:elementType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._INFORMATION_RIGHT(let selection): return selection.bagValue(elementType:elementType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.bagValue(elementType:elementType)
      case ._INTERFACE_CONNECTION(let selection): return selection.bagValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.bagValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.bagValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.bagValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.bagValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.bagValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.bagValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.bagValue(elementType:elementType)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.bagValue(elementType:elementType)
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.bagValue(elementType:elementType)
      case ._IN_ZONE(let selection): return selection.bagValue(elementType:elementType)
      case ._LANGUAGE(let selection): return selection.bagValue(elementType:elementType)
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._LOCAL_TIME(let selection): return selection.bagValue(elementType:elementType)
      case ._LOCATION(let selection): return selection.bagValue(elementType:elementType)
      case ._LOCATION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION(let selection): return selection.bagValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.bagValue(elementType:elementType)
      case ._MEASURE_QUALIFICATION(let selection): return selection.bagValue(elementType:elementType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.bagValue(elementType:elementType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.bagValue(elementType:elementType)
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._NAMED_UNIT(let selection): return selection.bagValue(elementType:elementType)
      case ._ORGANIZATION(let selection): return selection.bagValue(elementType:elementType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.bagValue(elementType:elementType)
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.bagValue(elementType:elementType)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PERSON(let selection): return selection.bagValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.bagValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.bagValue(elementType:elementType)
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.bagValue(elementType:elementType)
      case ._PROCESS_OPERATION(let selection): return selection.bagValue(elementType:elementType)
      case ._PROCESS_PLAN(let selection): return selection.bagValue(elementType:elementType)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_CONCEPT(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_GROUP(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.bagValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.bagValue(elementType:elementType)
      case ._REPRESENTATION(let selection): return selection.bagValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.bagValue(elementType:elementType)
      case ._REPRESENTATION_ITEM(let selection): return selection.bagValue(elementType:elementType)
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.bagValue(elementType:elementType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.bagValue(elementType:elementType)
      case ._RESOURCE_PROPERTY(let selection): return selection.bagValue(elementType:elementType)
      case ._RETENTION(let selection): return selection.bagValue(elementType:elementType)
      case ._SATISFIES_REQUIREMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.bagValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.bagValue(elementType:elementType)
      case ._SHAPE_ASPECT(let selection): return selection.bagValue(elementType:elementType)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._STATE_OBSERVED(let selection): return selection.bagValue(elementType:elementType)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._STATE_OBSERVED_ROLE(let selection): return selection.bagValue(elementType:elementType)
      case ._STATE_TYPE(let selection): return selection.bagValue(elementType:elementType)
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.bagValue(elementType:elementType)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._TYPE_QUALIFIER(let selection): return selection.bagValue(elementType:elementType)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.bagValue(elementType:elementType)
      case ._USAGE_ASSOCIATION(let selection): return selection.bagValue(elementType:elementType)
      case ._VALIDATION(let selection): return selection.bagValue(elementType:elementType)
      case ._VERIFICATION(let selection): return selection.bagValue(elementType:elementType)
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.bagValue(elementType:elementType)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      }
    }
    public func setValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.SET<ELEM>? {
      switch self {
      case ._ACTION(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_DIRECTIVE(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_METHOD(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_PROPERTY(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_REQUEST_STATUS(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_RESOURCE(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._ADDRESS(let selection): return selection.setValue(elementType:elementType)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.setValue(elementType:elementType)
      case ._APPROVAL(let selection): return selection.setValue(elementType:elementType)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.setValue(elementType:elementType)
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._APPROVAL_STATUS(let selection): return selection.setValue(elementType:elementType)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.setValue(elementType:elementType)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._BREAKDOWN_CONTEXT(let selection): return selection.setValue(elementType:elementType)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.setValue(elementType:elementType)
      case ._BREAKDOWN_OF(let selection): return selection.setValue(elementType:elementType)
      case ._CALENDAR_DATE(let selection): return selection.setValue(elementType:elementType)
      case ._CERTIFICATION(let selection): return selection.setValue(elementType:elementType)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.setValue(elementType:elementType)
      case ._CHANGE_GROUP(let selection): return selection.setValue(elementType:elementType)
      case ._CHARACTERIZED_CLASS(let selection): return selection.setValue(elementType:elementType)
      case ._CHARACTERIZED_OBJECT(let selection): return selection.setValue(elementType:elementType)
      case ._CLASS(let selection): return selection.setValue(elementType:elementType)
      case ._CLASSIFIED_ITEM(let selection): return selection.setValue(elementType:elementType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.setValue(elementType:elementType)
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.setValue(elementType:elementType)
      case ._CONFIGURATION_ITEM(let selection): return selection.setValue(elementType:elementType)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.setValue(elementType:elementType)
      case ._CONTRACT(let selection): return selection.setValue(elementType:elementType)
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._CONVERSION_BASED_UNIT(let selection): return selection.setValue(elementType:elementType)
      case ._DATE_AND_TIME(let selection): return selection.setValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.setValue(elementType:elementType)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.setValue(elementType:elementType)
      case ._DIRECTED_ACTION(let selection): return selection.setValue(elementType:elementType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._DOCUMENT_FILE(let selection): return selection.setValue(elementType:elementType)
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._DOCUMENT_TYPE(let selection): return selection.setValue(elementType:elementType)
      case ._EFFECTIVITY(let selection): return selection.setValue(elementType:elementType)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._ENVELOPE(let selection): return selection.setValue(elementType:elementType)
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.setValue(elementType:elementType)
      case ._EVENT_OCCURRENCE(let selection): return selection.setValue(elementType:elementType)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._EVIDENCE(let selection): return selection.setValue(elementType:elementType)
      case ._EXECUTED_ACTION(let selection): return selection.setValue(elementType:elementType)
      case ._FEATURE_DEFINITION(let selection): return selection.setValue(elementType:elementType)
      case ._GENERAL_FEATURE(let selection): return selection.setValue(elementType:elementType)
      case ._GENERAL_PROPERTY(let selection): return selection.setValue(elementType:elementType)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._GROUP(let selection): return selection.setValue(elementType:elementType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._INFORMATION_RIGHT(let selection): return selection.setValue(elementType:elementType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.setValue(elementType:elementType)
      case ._INTERFACE_CONNECTION(let selection): return selection.setValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.setValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.setValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.setValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.setValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.setValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.setValue(elementType:elementType)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.setValue(elementType:elementType)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.setValue(elementType:elementType)
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.setValue(elementType:elementType)
      case ._IN_ZONE(let selection): return selection.setValue(elementType:elementType)
      case ._LANGUAGE(let selection): return selection.setValue(elementType:elementType)
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._LOCAL_TIME(let selection): return selection.setValue(elementType:elementType)
      case ._LOCATION(let selection): return selection.setValue(elementType:elementType)
      case ._LOCATION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION(let selection): return selection.setValue(elementType:elementType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.setValue(elementType:elementType)
      case ._MEASURE_QUALIFICATION(let selection): return selection.setValue(elementType:elementType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.setValue(elementType:elementType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.setValue(elementType:elementType)
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._NAMED_UNIT(let selection): return selection.setValue(elementType:elementType)
      case ._ORGANIZATION(let selection): return selection.setValue(elementType:elementType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.setValue(elementType:elementType)
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.setValue(elementType:elementType)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PERSON(let selection): return selection.setValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.setValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.setValue(elementType:elementType)
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.setValue(elementType:elementType)
      case ._PROCESS_OPERATION(let selection): return selection.setValue(elementType:elementType)
      case ._PROCESS_PLAN(let selection): return selection.setValue(elementType:elementType)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_CONCEPT(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_GROUP(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.setValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.setValue(elementType:elementType)
      case ._REPRESENTATION(let selection): return selection.setValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.setValue(elementType:elementType)
      case ._REPRESENTATION_ITEM(let selection): return selection.setValue(elementType:elementType)
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.setValue(elementType:elementType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.setValue(elementType:elementType)
      case ._RESOURCE_PROPERTY(let selection): return selection.setValue(elementType:elementType)
      case ._RETENTION(let selection): return selection.setValue(elementType:elementType)
      case ._SATISFIES_REQUIREMENT(let selection): return selection.setValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.setValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.setValue(elementType:elementType)
      case ._SHAPE_ASPECT(let selection): return selection.setValue(elementType:elementType)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._STATE_OBSERVED(let selection): return selection.setValue(elementType:elementType)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._STATE_OBSERVED_ROLE(let selection): return selection.setValue(elementType:elementType)
      case ._STATE_TYPE(let selection): return selection.setValue(elementType:elementType)
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.setValue(elementType:elementType)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._TYPE_QUALIFIER(let selection): return selection.setValue(elementType:elementType)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.setValue(elementType:elementType)
      case ._USAGE_ASSOCIATION(let selection): return selection.setValue(elementType:elementType)
      case ._VALIDATION(let selection): return selection.setValue(elementType:elementType)
      case ._VERIFICATION(let selection): return selection.setValue(elementType:elementType)
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.setValue(elementType:elementType)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      }
    }
    public func enumValue<ENUM:SDAIEnumerationType>(enumType:ENUM.Type) -> ENUM? {
      switch self {
      case ._ACTION(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_DIRECTIVE(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_METHOD(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_METHOD_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_PROPERTY(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_REQUEST_STATUS(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_RESOURCE(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_RESOURCE_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._ADDRESS(let selection): return selection.enumValue(enumType:enumType)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_DATE_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_DOCUMENT_REFERENCE(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_USAGE_RIGHT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPROVAL(let selection): return selection.enumValue(enumType:enumType)
      case ._APPROVAL_PERSON_ORGANIZATION(let selection): return selection.enumValue(enumType:enumType)
      case ._APPROVAL_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._APPROVAL_STATUS(let selection): return selection.enumValue(enumType:enumType)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selection): return selection.enumValue(enumType:enumType)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._BREAKDOWN_CONTEXT(let selection): return selection.enumValue(enumType:enumType)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selection): return selection.enumValue(enumType:enumType)
      case ._BREAKDOWN_OF(let selection): return selection.enumValue(enumType:enumType)
      case ._CALENDAR_DATE(let selection): return selection.enumValue(enumType:enumType)
      case ._CERTIFICATION(let selection): return selection.enumValue(enumType:enumType)
      case ._CHANGE_ELEMENT_SEQUENCE(let selection): return selection.enumValue(enumType:enumType)
      case ._CHANGE_GROUP(let selection): return selection.enumValue(enumType:enumType)
      case ._CHARACTERIZED_CLASS(let selection): return selection.enumValue(enumType:enumType)
      case ._CHARACTERIZED_OBJECT(let selection): return selection.enumValue(enumType:enumType)
      case ._CLASS(let selection): return selection.enumValue(enumType:enumType)
      case ._CLASSIFIED_ITEM(let selection): return selection.enumValue(enumType:enumType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.enumValue(enumType:enumType)
      case ._CONFIGURATION_EFFECTIVITY(let selection): return selection.enumValue(enumType:enumType)
      case ._CONFIGURATION_ITEM(let selection): return selection.enumValue(enumType:enumType)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._CONTEXT_DEPENDENT_UNIT(let selection): return selection.enumValue(enumType:enumType)
      case ._CONTRACT(let selection): return selection.enumValue(enumType:enumType)
      case ._CONTRACT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._CONVERSION_BASED_UNIT(let selection): return selection.enumValue(enumType:enumType)
      case ._DATE_AND_TIME(let selection): return selection.enumValue(enumType:enumType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._DATE_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._DERIVED_UNIT(let selection): return selection.enumValue(enumType:enumType)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selection): return selection.enumValue(enumType:enumType)
      case ._DIRECTED_ACTION(let selection): return selection.enumValue(enumType:enumType)
      case ._DIRECTED_ACTION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._DOCUMENT_FILE(let selection): return selection.enumValue(enumType:enumType)
      case ._DOCUMENT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._DOCUMENT_TYPE(let selection): return selection.enumValue(enumType:enumType)
      case ._EFFECTIVITY(let selection): return selection.enumValue(enumType:enumType)
      case ._EFFECTIVITY_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._ENVELOPE(let selection): return selection.enumValue(enumType:enumType)
      case ._ENVELOPE_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._EVALUATED_CHARACTERISTIC(let selection): return selection.enumValue(enumType:enumType)
      case ._EVENT_OCCURRENCE(let selection): return selection.enumValue(enumType:enumType)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._EVIDENCE(let selection): return selection.enumValue(enumType:enumType)
      case ._EXECUTED_ACTION(let selection): return selection.enumValue(enumType:enumType)
      case ._FEATURE_DEFINITION(let selection): return selection.enumValue(enumType:enumType)
      case ._GENERAL_FEATURE(let selection): return selection.enumValue(enumType:enumType)
      case ._GENERAL_PROPERTY(let selection): return selection.enumValue(enumType:enumType)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._GROUP(let selection): return selection.enumValue(enumType:enumType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._IDENTIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._INFORMATION_RIGHT(let selection): return selection.enumValue(enumType:enumType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.enumValue(enumType:enumType)
      case ._INTERFACE_CONNECTION(let selection): return selection.enumValue(enumType:enumType)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selection): return selection.enumValue(enumType:enumType)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selection): return selection.enumValue(enumType:enumType)
      case ._INTERFACE_CONNECTOR_DESIGN(let selection): return selection.enumValue(enumType:enumType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selection): return selection.enumValue(enumType:enumType)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selection): return selection.enumValue(enumType:enumType)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selection): return selection.enumValue(enumType:enumType)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selection): return selection.enumValue(enumType:enumType)
      case ._INTERFACE_DEFINITION_CONNECTION(let selection): return selection.enumValue(enumType:enumType)
      case ._INTERFACE_DEFINITION_FOR(let selection): return selection.enumValue(enumType:enumType)
      case ._IN_ZONE(let selection): return selection.enumValue(enumType:enumType)
      case ._LANGUAGE(let selection): return selection.enumValue(enumType:enumType)
      case ._LINK_MOTION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._LOCAL_TIME(let selection): return selection.enumValue(enumType:enumType)
      case ._LOCATION(let selection): return selection.enumValue(enumType:enumType)
      case ._LOCATION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._MATERIAL_DESIGNATION(let selection): return selection.enumValue(enumType:enumType)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selection): return selection.enumValue(enumType:enumType)
      case ._MEASURE_QUALIFICATION(let selection): return selection.enumValue(enumType:enumType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.enumValue(enumType:enumType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.enumValue(enumType:enumType)
      case ._MESSAGE_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._NAMED_UNIT(let selection): return selection.enumValue(enumType:enumType)
      case ._ORGANIZATION(let selection): return selection.enumValue(enumType:enumType)
      case ._ORGANIZATIONAL_ADDRESS(let selection): return selection.enumValue(enumType:enumType)
      case ._ORGANIZATIONAL_PROJECT(let selection): return selection.enumValue(enumType:enumType)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._ORGANIZATION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PERSON(let selection): return selection.enumValue(enumType:enumType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.enumValue(enumType:enumType)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selection): return selection.enumValue(enumType:enumType)
      case ._PLUS_MINUS_TOLERANCE(let selection): return selection.enumValue(enumType:enumType)
      case ._PROCESS_OPERATION(let selection): return selection.enumValue(enumType:enumType)
      case ._PROCESS_PLAN(let selection): return selection.enumValue(enumType:enumType)
      case ._PROCESS_PRODUCT_ASSOCIATION(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_CONCEPT(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_CONCEPT_CONTEXT(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_CONCEPT_FEATURE(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_USAGE(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_GROUP(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_GROUP_MEMBERSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_GROUP_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_PROCESS_PLAN(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PROPERTY_DEFINITION(let selection): return selection.enumValue(enumType:enumType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.enumValue(enumType:enumType)
      case ._REPRESENTATION(let selection): return selection.enumValue(enumType:enumType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.enumValue(enumType:enumType)
      case ._REPRESENTATION_ITEM(let selection): return selection.enumValue(enumType:enumType)
      case ._REPRESENTATION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._REQUIREMENT_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selection): return selection.enumValue(enumType:enumType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.enumValue(enumType:enumType)
      case ._RESOURCE_PROPERTY(let selection): return selection.enumValue(enumType:enumType)
      case ._RETENTION(let selection): return selection.enumValue(enumType:enumType)
      case ._SATISFIES_REQUIREMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.enumValue(enumType:enumType)
      case ._SECURITY_CLASSIFICATION_LEVEL(let selection): return selection.enumValue(enumType:enumType)
      case ._SHAPE_ASPECT(let selection): return selection.enumValue(enumType:enumType)
      case ._SHAPE_ASPECT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._STATE_OBSERVED(let selection): return selection.enumValue(enumType:enumType)
      case ._STATE_OBSERVED_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._STATE_OBSERVED_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._STATE_OBSERVED_ROLE(let selection): return selection.enumValue(enumType:enumType)
      case ._STATE_TYPE(let selection): return selection.enumValue(enumType:enumType)
      case ._STATE_TYPE_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._STATE_TYPE_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.enumValue(enumType:enumType)
      case ._TIME_INTERVAL_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._TYPE_QUALIFIER(let selection): return selection.enumValue(enumType:enumType)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selection): return selection.enumValue(enumType:enumType)
      case ._USAGE_ASSOCIATION(let selection): return selection.enumValue(enumType:enumType)
      case ._VALIDATION(let selection): return selection.enumValue(enumType:enumType)
      case ._VERIFICATION(let selection): return selection.enumValue(enumType:enumType)
      case ._VERSIONED_ACTION_REQUEST(let selection): return selection.enumValue(enumType:enumType)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      }
    }

    //MARK: SDAIUnderlyingType
    public typealias FundamentalType = Self
    public static var typeName: String = 
      "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.CLASSIFICATION_ITEM"
    public var asFundamentalType: FundamentalType { return self }

    //MARK: SDAIObservableAggregateElement
    public var entityReferences: AnySequence<SDAI.EntityReference> {
      switch self {
      case ._ACTION(let entity): return entity.entityReferences
      case ._ACTION_DIRECTIVE(let entity): return entity.entityReferences
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let entity): return entity.entityReferences
      case ._ACTION_METHOD(let entity): return entity.entityReferences
      case ._ACTION_METHOD_RELATIONSHIP(let entity): return entity.entityReferences
      case ._ACTION_PROPERTY(let entity): return entity.entityReferences
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.entityReferences
      case ._ACTION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._ACTION_REQUEST_SOLUTION(let entity): return entity.entityReferences
      case ._ACTION_REQUEST_STATUS(let entity): return entity.entityReferences
      case ._ACTION_RESOURCE(let entity): return entity.entityReferences
      case ._ACTION_RESOURCE_RELATIONSHIP(let entity): return entity.entityReferences
      case ._ADDRESS(let entity): return entity.entityReferences
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._ANALYSIS_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_DATE_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): return entity.entityReferences
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_USAGE_RIGHT(let entity): return entity.entityReferences
      case ._APPROVAL(let entity): return entity.entityReferences
      case ._APPROVAL_PERSON_ORGANIZATION(let entity): return entity.entityReferences
      case ._APPROVAL_RELATIONSHIP(let entity): return entity.entityReferences
      case ._APPROVAL_STATUS(let entity): return entity.entityReferences
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let entity): return entity.entityReferences
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity.entityReferences
      case ._BREAKDOWN_CONTEXT(let entity): return entity.entityReferences
      case ._BREAKDOWN_ELEMENT_REALIZATION(let entity): return entity.entityReferences
      case ._BREAKDOWN_OF(let entity): return entity.entityReferences
      case ._CALENDAR_DATE(let entity): return entity.entityReferences
      case ._CERTIFICATION(let entity): return entity.entityReferences
      case ._CHANGE_ELEMENT_SEQUENCE(let entity): return entity.entityReferences
      case ._CHANGE_GROUP(let entity): return entity.entityReferences
      case ._CHARACTERIZED_CLASS(let entity): return entity.entityReferences
      case ._CHARACTERIZED_OBJECT(let entity): return entity.entityReferences
      case ._CLASS(let entity): return entity.entityReferences
      case ._CLASSIFIED_ITEM(let select): return select.entityReferences
      case ._CONFIGURATION_DESIGN(let entity): return entity.entityReferences
      case ._CONFIGURATION_EFFECTIVITY(let entity): return entity.entityReferences
      case ._CONFIGURATION_ITEM(let entity): return entity.entityReferences
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let entity): return entity.entityReferences
      case ._CONTEXT_DEPENDENT_UNIT(let entity): return entity.entityReferences
      case ._CONTRACT(let entity): return entity.entityReferences
      case ._CONTRACT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._CONVERSION_BASED_UNIT(let entity): return entity.entityReferences
      case ._DATE_AND_TIME(let entity): return entity.entityReferences
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity.entityReferences
      case ._DATE_ASSIGNMENT(let entity): return entity.entityReferences
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._DERIVED_UNIT(let entity): return entity.entityReferences
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let entity): return entity.entityReferences
      case ._DIRECTED_ACTION(let entity): return entity.entityReferences
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._DOCUMENT_FILE(let entity): return entity.entityReferences
      case ._DOCUMENT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._DOCUMENT_TYPE(let entity): return entity.entityReferences
      case ._EFFECTIVITY(let entity): return entity.entityReferences
      case ._EFFECTIVITY_RELATIONSHIP(let entity): return entity.entityReferences
      case ._ENVELOPE(let entity): return entity.entityReferences
      case ._ENVELOPE_RELATIONSHIP(let entity): return entity.entityReferences
      case ._EVALUATED_CHARACTERISTIC(let entity): return entity.entityReferences
      case ._EVENT_OCCURRENCE(let entity): return entity.entityReferences
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let entity): return entity.entityReferences
      case ._EVIDENCE(let entity): return entity.entityReferences
      case ._EXECUTED_ACTION(let entity): return entity.entityReferences
      case ._FEATURE_DEFINITION(let entity): return entity.entityReferences
      case ._GENERAL_FEATURE(let entity): return entity.entityReferences
      case ._GENERAL_PROPERTY(let entity): return entity.entityReferences
      case ._GENERAL_PROPERTY_RELATIONSHIP(let entity): return entity.entityReferences
      case ._GENERIC_PROPERTY_RELATIONSHIP(let entity): return entity.entityReferences
      case ._GROUP(let entity): return entity.entityReferences
      case ._GROUP_RELATIONSHIP(let entity): return entity.entityReferences
      case ._IDENTIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._INFORMATION_RIGHT(let entity): return entity.entityReferences
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity.entityReferences
      case ._INTERFACE_CONNECTION(let entity): return entity.entityReferences
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let entity): return entity.entityReferences
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let entity): return entity.entityReferences
      case ._INTERFACE_CONNECTOR_DESIGN(let entity): return entity.entityReferences
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let entity): return entity.entityReferences
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let entity): return entity.entityReferences
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let entity): return entity.entityReferences
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let entity): return entity.entityReferences
      case ._INTERFACE_DEFINITION_CONNECTION(let entity): return entity.entityReferences
      case ._INTERFACE_DEFINITION_FOR(let entity): return entity.entityReferences
      case ._IN_ZONE(let entity): return entity.entityReferences
      case ._LANGUAGE(let entity): return entity.entityReferences
      case ._LINK_MOTION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._LOCAL_TIME(let entity): return entity.entityReferences
      case ._LOCATION(let entity): return entity.entityReferences
      case ._LOCATION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._MATERIAL_DESIGNATION(let entity): return entity.entityReferences
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): return entity.entityReferences
      case ._MEASURE_QUALIFICATION(let entity): return entity.entityReferences
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.entityReferences
      case ._MEASURE_WITH_UNIT(let entity): return entity.entityReferences
      case ._MESSAGE_RELATIONSHIP(let entity): return entity.entityReferences
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let entity): return entity.entityReferences
      case ._NAMED_UNIT(let entity): return entity.entityReferences
      case ._ORGANIZATION(let entity): return entity.entityReferences
      case ._ORGANIZATIONAL_ADDRESS(let entity): return entity.entityReferences
      case ._ORGANIZATIONAL_PROJECT(let entity): return entity.entityReferences
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._ORGANIZATION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._PERSON(let entity): return entity.entityReferences
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.entityReferences
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): return entity.entityReferences
      case ._PLUS_MINUS_TOLERANCE(let entity): return entity.entityReferences
      case ._PROCESS_OPERATION(let entity): return entity.entityReferences
      case ._PROCESS_PLAN(let entity): return entity.entityReferences
      case ._PROCESS_PRODUCT_ASSOCIATION(let entity): return entity.entityReferences
      case ._PRODUCT(let entity): return entity.entityReferences
      case ._PRODUCT_CONCEPT(let entity): return entity.entityReferences
      case ._PRODUCT_CONCEPT_CONTEXT(let entity): return entity.entityReferences
      case ._PRODUCT_CONCEPT_FEATURE(let entity): return entity.entityReferences
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): return entity.entityReferences
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let entity): return entity.entityReferences
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): return entity.entityReferences
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_USAGE(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let entity): return entity.entityReferences
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let entity): return entity.entityReferences
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let entity): return entity.entityReferences
      case ._PRODUCT_GROUP(let entity): return entity.entityReferences
      case ._PRODUCT_GROUP_MEMBERSHIP(let entity): return entity.entityReferences
      case ._PRODUCT_GROUP_RELATIONSHIP(let entity): return entity.entityReferences
      case ._PRODUCT_PROCESS_PLAN(let entity): return entity.entityReferences
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._PROPERTY_DEFINITION(let entity): return entity.entityReferences
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.entityReferences
      case ._REPRESENTATION(let entity): return entity.entityReferences
      case ._REPRESENTATION_CONTEXT(let entity): return entity.entityReferences
      case ._REPRESENTATION_ITEM(let entity): return entity.entityReferences
      case ._REPRESENTATION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._REQUIREMENT_ASSIGNMENT(let entity): return entity.entityReferences
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): return entity.entityReferences
      case ._REQUIREMENT_SOURCE(let entity): return entity.entityReferences
      case ._RESOURCE_PROPERTY(let entity): return entity.entityReferences
      case ._RETENTION(let entity): return entity.entityReferences
      case ._SATISFIES_REQUIREMENT(let entity): return entity.entityReferences
      case ._SECURITY_CLASSIFICATION(let entity): return entity.entityReferences
      case ._SECURITY_CLASSIFICATION_LEVEL(let entity): return entity.entityReferences
      case ._SHAPE_ASPECT(let entity): return entity.entityReferences
      case ._SHAPE_ASPECT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._STATE_OBSERVED(let entity): return entity.entityReferences
      case ._STATE_OBSERVED_ASSIGNMENT(let entity): return entity.entityReferences
      case ._STATE_OBSERVED_RELATIONSHIP(let entity): return entity.entityReferences
      case ._STATE_OBSERVED_ROLE(let entity): return entity.entityReferences
      case ._STATE_TYPE(let entity): return entity.entityReferences
      case ._STATE_TYPE_ASSIGNMENT(let entity): return entity.entityReferences
      case ._STATE_TYPE_RELATIONSHIP(let entity): return entity.entityReferences
      case ._STRUCTURED_MESSAGE(let entity): return entity.entityReferences
      case ._TIME_INTERVAL_RELATIONSHIP(let entity): return entity.entityReferences
      case ._TYPE_QUALIFIER(let entity): return entity.entityReferences
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let entity): return entity.entityReferences
      case ._USAGE_ASSOCIATION(let entity): return entity.entityReferences
      case ._VALIDATION(let entity): return entity.entityReferences
      case ._VERIFICATION(let entity): return entity.entityReferences
      case ._VERSIONED_ACTION_REQUEST(let entity): return entity.entityReferences
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let entity): return entity.entityReferences
      }
    }

    public mutating func configure(with observer: SDAI.EntityReferenceObserver) {
      switch self {
      case ._ACTION(let entity): 
        entity.configure(with: observer)
        self = ._ACTION(entity)
      case ._ACTION_DIRECTIVE(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_DIRECTIVE(entity)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_DIRECTIVE_RELATIONSHIP(entity)
      case ._ACTION_METHOD(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_METHOD(entity)
      case ._ACTION_METHOD_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_METHOD_RELATIONSHIP(entity)
      case ._ACTION_PROPERTY(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_PROPERTY(entity)
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_PROPERTY_REPRESENTATION(entity)
      case ._ACTION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_RELATIONSHIP(entity)
      case ._ACTION_REQUEST_SOLUTION(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_REQUEST_SOLUTION(entity)
      case ._ACTION_REQUEST_STATUS(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_REQUEST_STATUS(entity)
      case ._ACTION_RESOURCE(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_RESOURCE(entity)
      case ._ACTION_RESOURCE_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_RESOURCE_RELATIONSHIP(entity)
      case ._ADDRESS(let entity): 
        entity.configure(with: observer)
        self = ._ADDRESS(entity)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._ALTERNATE_PRODUCT_RELATIONSHIP(entity)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._ALTERNATIVE_SOLUTION_RELATIONSHIP(entity)
      case ._ANALYSIS_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._ANALYSIS_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ACTION_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ACTION_REQUEST_ASSIGNMENT(entity)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_APPROVAL_ASSIGNMENT(entity)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_CERTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(entity)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_CONTRACT_ASSIGNMENT(entity)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_DATE_AND_TIME_ASSIGNMENT(entity)
      case ._APPLIED_DATE_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_DATE_ASSIGNMENT(entity)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(entity)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(entity)
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_DOCUMENT_REFERENCE(entity)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(entity)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(entity)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(entity)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_IDENTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_TIME_INTERVAL_ASSIGNMENT(entity)
      case ._APPLIED_USAGE_RIGHT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_USAGE_RIGHT(entity)
      case ._APPROVAL(let entity): 
        entity.configure(with: observer)
        self = ._APPROVAL(entity)
      case ._APPROVAL_PERSON_ORGANIZATION(let entity): 
        entity.configure(with: observer)
        self = ._APPROVAL_PERSON_ORGANIZATION(entity)
      case ._APPROVAL_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._APPROVAL_RELATIONSHIP(entity)
      case ._APPROVAL_STATUS(let entity): 
        entity.configure(with: observer)
        self = ._APPROVAL_STATUS(entity)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let entity): 
        entity.configure(with: observer)
        self = ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(entity)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._ASSIGNMENT_OBJECT_RELATIONSHIP(entity)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(entity)
      case ._BREAKDOWN_CONTEXT(let entity): 
        entity.configure(with: observer)
        self = ._BREAKDOWN_CONTEXT(entity)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let entity): 
        entity.configure(with: observer)
        self = ._BREAKDOWN_ELEMENT_REALIZATION(entity)
      case ._BREAKDOWN_OF(let entity): 
        entity.configure(with: observer)
        self = ._BREAKDOWN_OF(entity)
      case ._CALENDAR_DATE(let entity): 
        entity.configure(with: observer)
        self = ._CALENDAR_DATE(entity)
      case ._CERTIFICATION(let entity): 
        entity.configure(with: observer)
        self = ._CERTIFICATION(entity)
      case ._CHANGE_ELEMENT_SEQUENCE(let entity): 
        entity.configure(with: observer)
        self = ._CHANGE_ELEMENT_SEQUENCE(entity)
      case ._CHANGE_GROUP(let entity): 
        entity.configure(with: observer)
        self = ._CHANGE_GROUP(entity)
      case ._CHARACTERIZED_CLASS(let entity): 
        entity.configure(with: observer)
        self = ._CHARACTERIZED_CLASS(entity)
      case ._CHARACTERIZED_OBJECT(let entity): 
        entity.configure(with: observer)
        self = ._CHARACTERIZED_OBJECT(entity)
      case ._CLASS(let entity): 
        entity.configure(with: observer)
        self = ._CLASS(entity)
      case ._CLASSIFIED_ITEM(var select): 
        select.configure(with: observer)
        self = ._CLASSIFIED_ITEM(select)
      case ._CONFIGURATION_DESIGN(let entity): 
        entity.configure(with: observer)
        self = ._CONFIGURATION_DESIGN(entity)
      case ._CONFIGURATION_EFFECTIVITY(let entity): 
        entity.configure(with: observer)
        self = ._CONFIGURATION_EFFECTIVITY(entity)
      case ._CONFIGURATION_ITEM(let entity): 
        entity.configure(with: observer)
        self = ._CONFIGURATION_ITEM(entity)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._CONFIGURATION_ITEM_RELATIONSHIP(entity)
      case ._CONTEXT_DEPENDENT_UNIT(let entity): 
        entity.configure(with: observer)
        self = ._CONTEXT_DEPENDENT_UNIT(entity)
      case ._CONTRACT(let entity): 
        entity.configure(with: observer)
        self = ._CONTRACT(entity)
      case ._CONTRACT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._CONTRACT_RELATIONSHIP(entity)
      case ._CONVERSION_BASED_UNIT(let entity): 
        entity.configure(with: observer)
        self = ._CONVERSION_BASED_UNIT(entity)
      case ._DATE_AND_TIME(let entity): 
        entity.configure(with: observer)
        self = ._DATE_AND_TIME(entity)
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._DATE_AND_TIME_ASSIGNMENT(entity)
      case ._DATE_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._DATE_ASSIGNMENT(entity)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(entity)
      case ._DERIVED_UNIT(let entity): 
        entity.configure(with: observer)
        self = ._DERIVED_UNIT(entity)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let entity): 
        entity.configure(with: observer)
        self = ._DESCRIPTIVE_REPRESENTATION_ITEM(entity)
      case ._DIRECTED_ACTION(let entity): 
        entity.configure(with: observer)
        self = ._DIRECTED_ACTION(entity)
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._DIRECTED_ACTION_ASSIGNMENT(entity)
      case ._DOCUMENT_FILE(let entity): 
        entity.configure(with: observer)
        self = ._DOCUMENT_FILE(entity)
      case ._DOCUMENT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._DOCUMENT_RELATIONSHIP(entity)
      case ._DOCUMENT_TYPE(let entity): 
        entity.configure(with: observer)
        self = ._DOCUMENT_TYPE(entity)
      case ._EFFECTIVITY(let entity): 
        entity.configure(with: observer)
        self = ._EFFECTIVITY(entity)
      case ._EFFECTIVITY_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._EFFECTIVITY_RELATIONSHIP(entity)
      case ._ENVELOPE(let entity): 
        entity.configure(with: observer)
        self = ._ENVELOPE(entity)
      case ._ENVELOPE_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._ENVELOPE_RELATIONSHIP(entity)
      case ._EVALUATED_CHARACTERISTIC(let entity): 
        entity.configure(with: observer)
        self = ._EVALUATED_CHARACTERISTIC(entity)
      case ._EVENT_OCCURRENCE(let entity): 
        entity.configure(with: observer)
        self = ._EVENT_OCCURRENCE(entity)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._EVENT_OCCURRENCE_RELATIONSHIP(entity)
      case ._EVIDENCE(let entity): 
        entity.configure(with: observer)
        self = ._EVIDENCE(entity)
      case ._EXECUTED_ACTION(let entity): 
        entity.configure(with: observer)
        self = ._EXECUTED_ACTION(entity)
      case ._FEATURE_DEFINITION(let entity): 
        entity.configure(with: observer)
        self = ._FEATURE_DEFINITION(entity)
      case ._GENERAL_FEATURE(let entity): 
        entity.configure(with: observer)
        self = ._GENERAL_FEATURE(entity)
      case ._GENERAL_PROPERTY(let entity): 
        entity.configure(with: observer)
        self = ._GENERAL_PROPERTY(entity)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._GENERAL_PROPERTY_RELATIONSHIP(entity)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._GENERIC_PROPERTY_RELATIONSHIP(entity)
      case ._GROUP(let entity): 
        entity.configure(with: observer)
        self = ._GROUP(entity)
      case ._GROUP_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._GROUP_RELATIONSHIP(entity)
      case ._IDENTIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._IDENTIFICATION_ASSIGNMENT(entity)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(entity)
      case ._INFORMATION_RIGHT(let entity): 
        entity.configure(with: observer)
        self = ._INFORMATION_RIGHT(entity)
      case ._INFORMATION_USAGE_RIGHT(let entity): 
        entity.configure(with: observer)
        self = ._INFORMATION_USAGE_RIGHT(entity)
      case ._INTERFACE_CONNECTION(let entity): 
        entity.configure(with: observer)
        self = ._INTERFACE_CONNECTION(entity)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let entity): 
        entity.configure(with: observer)
        self = ._INTERFACE_CONNECTOR_AS_PLANNED(entity)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let entity): 
        entity.configure(with: observer)
        self = ._INTERFACE_CONNECTOR_AS_REALIZED(entity)
      case ._INTERFACE_CONNECTOR_DESIGN(let entity): 
        entity.configure(with: observer)
        self = ._INTERFACE_CONNECTOR_DESIGN(entity)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let entity): 
        entity.configure(with: observer)
        self = ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(entity)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let entity): 
        entity.configure(with: observer)
        self = ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(entity)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let entity): 
        entity.configure(with: observer)
        self = ._INTERFACE_CONNECTOR_OCCURRENCE(entity)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let entity): 
        entity.configure(with: observer)
        self = ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(entity)
      case ._INTERFACE_DEFINITION_CONNECTION(let entity): 
        entity.configure(with: observer)
        self = ._INTERFACE_DEFINITION_CONNECTION(entity)
      case ._INTERFACE_DEFINITION_FOR(let entity): 
        entity.configure(with: observer)
        self = ._INTERFACE_DEFINITION_FOR(entity)
      case ._IN_ZONE(let entity): 
        entity.configure(with: observer)
        self = ._IN_ZONE(entity)
      case ._LANGUAGE(let entity): 
        entity.configure(with: observer)
        self = ._LANGUAGE(entity)
      case ._LINK_MOTION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._LINK_MOTION_RELATIONSHIP(entity)
      case ._LOCAL_TIME(let entity): 
        entity.configure(with: observer)
        self = ._LOCAL_TIME(entity)
      case ._LOCATION(let entity): 
        entity.configure(with: observer)
        self = ._LOCATION(entity)
      case ._LOCATION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._LOCATION_RELATIONSHIP(entity)
      case ._MATERIAL_DESIGNATION(let entity): 
        entity.configure(with: observer)
        self = ._MATERIAL_DESIGNATION(entity)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): 
        entity.configure(with: observer)
        self = ._MATERIAL_DESIGNATION_CHARACTERIZATION(entity)
      case ._MEASURE_QUALIFICATION(let entity): 
        entity.configure(with: observer)
        self = ._MEASURE_QUALIFICATION(entity)
      case ._MEASURE_REPRESENTATION_ITEM(let entity): 
        entity.configure(with: observer)
        self = ._MEASURE_REPRESENTATION_ITEM(entity)
      case ._MEASURE_WITH_UNIT(let entity): 
        entity.configure(with: observer)
        self = ._MEASURE_WITH_UNIT(entity)
      case ._MESSAGE_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._MESSAGE_RELATIONSHIP(entity)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(entity)
      case ._NAMED_UNIT(let entity): 
        entity.configure(with: observer)
        self = ._NAMED_UNIT(entity)
      case ._ORGANIZATION(let entity): 
        entity.configure(with: observer)
        self = ._ORGANIZATION(entity)
      case ._ORGANIZATIONAL_ADDRESS(let entity): 
        entity.configure(with: observer)
        self = ._ORGANIZATIONAL_ADDRESS(entity)
      case ._ORGANIZATIONAL_PROJECT(let entity): 
        entity.configure(with: observer)
        self = ._ORGANIZATIONAL_PROJECT(entity)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(entity)
      case ._ORGANIZATION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._ORGANIZATION_RELATIONSHIP(entity)
      case ._PERSON(let entity): 
        entity.configure(with: observer)
        self = ._PERSON(entity)
      case ._PERSON_AND_ORGANIZATION(let entity): 
        entity.configure(with: observer)
        self = ._PERSON_AND_ORGANIZATION(entity)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): 
        entity.configure(with: observer)
        self = ._PERSON_AND_ORGANIZATION_ADDRESS(entity)
      case ._PLUS_MINUS_TOLERANCE(let entity): 
        entity.configure(with: observer)
        self = ._PLUS_MINUS_TOLERANCE(entity)
      case ._PROCESS_OPERATION(let entity): 
        entity.configure(with: observer)
        self = ._PROCESS_OPERATION(entity)
      case ._PROCESS_PLAN(let entity): 
        entity.configure(with: observer)
        self = ._PROCESS_PLAN(entity)
      case ._PROCESS_PRODUCT_ASSOCIATION(let entity): 
        entity.configure(with: observer)
        self = ._PROCESS_PRODUCT_ASSOCIATION(entity)
      case ._PRODUCT(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT(entity)
      case ._PRODUCT_CONCEPT(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_CONCEPT(entity)
      case ._PRODUCT_CONCEPT_CONTEXT(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_CONCEPT_CONTEXT(entity)
      case ._PRODUCT_CONCEPT_FEATURE(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_CONCEPT_FEATURE(entity)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(entity)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY(entity)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(entity)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_CONCEPT_RELATIONSHIP(entity)
      case ._PRODUCT_DEFINITION(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION(entity)
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_CONTEXT(entity)
      case ._PRODUCT_DEFINITION_FORMATION(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_FORMATION(entity)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(entity)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_RELATIONSHIP(entity)
      case ._PRODUCT_DEFINITION_USAGE(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_USAGE(entity)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(entity)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DESIGN_TO_INDIVIDUAL(entity)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(entity)
      case ._PRODUCT_GROUP(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_GROUP(entity)
      case ._PRODUCT_GROUP_MEMBERSHIP(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_GROUP_MEMBERSHIP(entity)
      case ._PRODUCT_GROUP_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_GROUP_RELATIONSHIP(entity)
      case ._PRODUCT_PROCESS_PLAN(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_PROCESS_PLAN(entity)
      case ._PRODUCT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_RELATIONSHIP(entity)
      case ._PROPERTY_DEFINITION(let entity): 
        entity.configure(with: observer)
        self = ._PROPERTY_DEFINITION(entity)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): 
        entity.configure(with: observer)
        self = ._PROPERTY_DEFINITION_REPRESENTATION(entity)
      case ._REPRESENTATION(let entity): 
        entity.configure(with: observer)
        self = ._REPRESENTATION(entity)
      case ._REPRESENTATION_CONTEXT(let entity): 
        entity.configure(with: observer)
        self = ._REPRESENTATION_CONTEXT(entity)
      case ._REPRESENTATION_ITEM(let entity): 
        entity.configure(with: observer)
        self = ._REPRESENTATION_ITEM(entity)
      case ._REPRESENTATION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._REPRESENTATION_RELATIONSHIP(entity)
      case ._REQUIREMENT_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._REQUIREMENT_ASSIGNMENT(entity)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): 
        entity.configure(with: observer)
        self = ._REQUIREMENT_FOR_ACTION_RESOURCE(entity)
      case ._REQUIREMENT_SOURCE(let entity): 
        entity.configure(with: observer)
        self = ._REQUIREMENT_SOURCE(entity)
      case ._RESOURCE_PROPERTY(let entity): 
        entity.configure(with: observer)
        self = ._RESOURCE_PROPERTY(entity)
      case ._RETENTION(let entity): 
        entity.configure(with: observer)
        self = ._RETENTION(entity)
      case ._SATISFIES_REQUIREMENT(let entity): 
        entity.configure(with: observer)
        self = ._SATISFIES_REQUIREMENT(entity)
      case ._SECURITY_CLASSIFICATION(let entity): 
        entity.configure(with: observer)
        self = ._SECURITY_CLASSIFICATION(entity)
      case ._SECURITY_CLASSIFICATION_LEVEL(let entity): 
        entity.configure(with: observer)
        self = ._SECURITY_CLASSIFICATION_LEVEL(entity)
      case ._SHAPE_ASPECT(let entity): 
        entity.configure(with: observer)
        self = ._SHAPE_ASPECT(entity)
      case ._SHAPE_ASPECT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._SHAPE_ASPECT_RELATIONSHIP(entity)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(entity)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(entity)
      case ._STATE_OBSERVED(let entity): 
        entity.configure(with: observer)
        self = ._STATE_OBSERVED(entity)
      case ._STATE_OBSERVED_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._STATE_OBSERVED_ASSIGNMENT(entity)
      case ._STATE_OBSERVED_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._STATE_OBSERVED_RELATIONSHIP(entity)
      case ._STATE_OBSERVED_ROLE(let entity): 
        entity.configure(with: observer)
        self = ._STATE_OBSERVED_ROLE(entity)
      case ._STATE_TYPE(let entity): 
        entity.configure(with: observer)
        self = ._STATE_TYPE(entity)
      case ._STATE_TYPE_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._STATE_TYPE_ASSIGNMENT(entity)
      case ._STATE_TYPE_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._STATE_TYPE_RELATIONSHIP(entity)
      case ._STRUCTURED_MESSAGE(let entity): 
        entity.configure(with: observer)
        self = ._STRUCTURED_MESSAGE(entity)
      case ._TIME_INTERVAL_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._TIME_INTERVAL_RELATIONSHIP(entity)
      case ._TYPE_QUALIFIER(let entity): 
        entity.configure(with: observer)
        self = ._TYPE_QUALIFIER(entity)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let entity): 
        entity.configure(with: observer)
        self = ._UNCERTAINTY_MEASURE_WITH_UNIT(entity)
      case ._USAGE_ASSOCIATION(let entity): 
        entity.configure(with: observer)
        self = ._USAGE_ASSOCIATION(entity)
      case ._VALIDATION(let entity): 
        entity.configure(with: observer)
        self = ._VALIDATION(entity)
      case ._VERIFICATION(let entity): 
        entity.configure(with: observer)
        self = ._VERIFICATION(entity)
      case ._VERSIONED_ACTION_REQUEST(let entity): 
        entity.configure(with: observer)
        self = ._VERSIONED_ACTION_REQUEST(entity)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(entity)
      }
    }

    public mutating func teardownObserver() {
      switch self {
      case ._ACTION(let entity): 
        entity.teardownObserver()
        self = ._ACTION(entity)
      case ._ACTION_DIRECTIVE(let entity): 
        entity.teardownObserver()
        self = ._ACTION_DIRECTIVE(entity)
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._ACTION_DIRECTIVE_RELATIONSHIP(entity)
      case ._ACTION_METHOD(let entity): 
        entity.teardownObserver()
        self = ._ACTION_METHOD(entity)
      case ._ACTION_METHOD_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._ACTION_METHOD_RELATIONSHIP(entity)
      case ._ACTION_PROPERTY(let entity): 
        entity.teardownObserver()
        self = ._ACTION_PROPERTY(entity)
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): 
        entity.teardownObserver()
        self = ._ACTION_PROPERTY_REPRESENTATION(entity)
      case ._ACTION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._ACTION_RELATIONSHIP(entity)
      case ._ACTION_REQUEST_SOLUTION(let entity): 
        entity.teardownObserver()
        self = ._ACTION_REQUEST_SOLUTION(entity)
      case ._ACTION_REQUEST_STATUS(let entity): 
        entity.teardownObserver()
        self = ._ACTION_REQUEST_STATUS(entity)
      case ._ACTION_RESOURCE(let entity): 
        entity.teardownObserver()
        self = ._ACTION_RESOURCE(entity)
      case ._ACTION_RESOURCE_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._ACTION_RESOURCE_RELATIONSHIP(entity)
      case ._ADDRESS(let entity): 
        entity.teardownObserver()
        self = ._ADDRESS(entity)
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._ALTERNATE_PRODUCT_RELATIONSHIP(entity)
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._ALTERNATIVE_SOLUTION_RELATIONSHIP(entity)
      case ._ANALYSIS_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._ANALYSIS_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ACTION_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ACTION_REQUEST_ASSIGNMENT(entity)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_APPROVAL_ASSIGNMENT(entity)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_CERTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(entity)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_CONTRACT_ASSIGNMENT(entity)
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_DATE_AND_TIME_ASSIGNMENT(entity)
      case ._APPLIED_DATE_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_DATE_ASSIGNMENT(entity)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(entity)
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(entity)
      case ._APPLIED_DOCUMENT_REFERENCE(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_DOCUMENT_REFERENCE(entity)
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(entity)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(entity)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(entity)
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_IDENTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_TIME_INTERVAL_ASSIGNMENT(entity)
      case ._APPLIED_USAGE_RIGHT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_USAGE_RIGHT(entity)
      case ._APPROVAL(let entity): 
        entity.teardownObserver()
        self = ._APPROVAL(entity)
      case ._APPROVAL_PERSON_ORGANIZATION(let entity): 
        entity.teardownObserver()
        self = ._APPROVAL_PERSON_ORGANIZATION(entity)
      case ._APPROVAL_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._APPROVAL_RELATIONSHIP(entity)
      case ._APPROVAL_STATUS(let entity): 
        entity.teardownObserver()
        self = ._APPROVAL_STATUS(entity)
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let entity): 
        entity.teardownObserver()
        self = ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(entity)
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._ASSIGNMENT_OBJECT_RELATIONSHIP(entity)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(entity)
      case ._BREAKDOWN_CONTEXT(let entity): 
        entity.teardownObserver()
        self = ._BREAKDOWN_CONTEXT(entity)
      case ._BREAKDOWN_ELEMENT_REALIZATION(let entity): 
        entity.teardownObserver()
        self = ._BREAKDOWN_ELEMENT_REALIZATION(entity)
      case ._BREAKDOWN_OF(let entity): 
        entity.teardownObserver()
        self = ._BREAKDOWN_OF(entity)
      case ._CALENDAR_DATE(let entity): 
        entity.teardownObserver()
        self = ._CALENDAR_DATE(entity)
      case ._CERTIFICATION(let entity): 
        entity.teardownObserver()
        self = ._CERTIFICATION(entity)
      case ._CHANGE_ELEMENT_SEQUENCE(let entity): 
        entity.teardownObserver()
        self = ._CHANGE_ELEMENT_SEQUENCE(entity)
      case ._CHANGE_GROUP(let entity): 
        entity.teardownObserver()
        self = ._CHANGE_GROUP(entity)
      case ._CHARACTERIZED_CLASS(let entity): 
        entity.teardownObserver()
        self = ._CHARACTERIZED_CLASS(entity)
      case ._CHARACTERIZED_OBJECT(let entity): 
        entity.teardownObserver()
        self = ._CHARACTERIZED_OBJECT(entity)
      case ._CLASS(let entity): 
        entity.teardownObserver()
        self = ._CLASS(entity)
      case ._CLASSIFIED_ITEM(var select): 
        select.teardownObserver()
        self = ._CLASSIFIED_ITEM(select)
      case ._CONFIGURATION_DESIGN(let entity): 
        entity.teardownObserver()
        self = ._CONFIGURATION_DESIGN(entity)
      case ._CONFIGURATION_EFFECTIVITY(let entity): 
        entity.teardownObserver()
        self = ._CONFIGURATION_EFFECTIVITY(entity)
      case ._CONFIGURATION_ITEM(let entity): 
        entity.teardownObserver()
        self = ._CONFIGURATION_ITEM(entity)
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._CONFIGURATION_ITEM_RELATIONSHIP(entity)
      case ._CONTEXT_DEPENDENT_UNIT(let entity): 
        entity.teardownObserver()
        self = ._CONTEXT_DEPENDENT_UNIT(entity)
      case ._CONTRACT(let entity): 
        entity.teardownObserver()
        self = ._CONTRACT(entity)
      case ._CONTRACT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._CONTRACT_RELATIONSHIP(entity)
      case ._CONVERSION_BASED_UNIT(let entity): 
        entity.teardownObserver()
        self = ._CONVERSION_BASED_UNIT(entity)
      case ._DATE_AND_TIME(let entity): 
        entity.teardownObserver()
        self = ._DATE_AND_TIME(entity)
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._DATE_AND_TIME_ASSIGNMENT(entity)
      case ._DATE_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._DATE_ASSIGNMENT(entity)
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(entity)
      case ._DERIVED_UNIT(let entity): 
        entity.teardownObserver()
        self = ._DERIVED_UNIT(entity)
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let entity): 
        entity.teardownObserver()
        self = ._DESCRIPTIVE_REPRESENTATION_ITEM(entity)
      case ._DIRECTED_ACTION(let entity): 
        entity.teardownObserver()
        self = ._DIRECTED_ACTION(entity)
      case ._DIRECTED_ACTION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._DIRECTED_ACTION_ASSIGNMENT(entity)
      case ._DOCUMENT_FILE(let entity): 
        entity.teardownObserver()
        self = ._DOCUMENT_FILE(entity)
      case ._DOCUMENT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._DOCUMENT_RELATIONSHIP(entity)
      case ._DOCUMENT_TYPE(let entity): 
        entity.teardownObserver()
        self = ._DOCUMENT_TYPE(entity)
      case ._EFFECTIVITY(let entity): 
        entity.teardownObserver()
        self = ._EFFECTIVITY(entity)
      case ._EFFECTIVITY_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._EFFECTIVITY_RELATIONSHIP(entity)
      case ._ENVELOPE(let entity): 
        entity.teardownObserver()
        self = ._ENVELOPE(entity)
      case ._ENVELOPE_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._ENVELOPE_RELATIONSHIP(entity)
      case ._EVALUATED_CHARACTERISTIC(let entity): 
        entity.teardownObserver()
        self = ._EVALUATED_CHARACTERISTIC(entity)
      case ._EVENT_OCCURRENCE(let entity): 
        entity.teardownObserver()
        self = ._EVENT_OCCURRENCE(entity)
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._EVENT_OCCURRENCE_RELATIONSHIP(entity)
      case ._EVIDENCE(let entity): 
        entity.teardownObserver()
        self = ._EVIDENCE(entity)
      case ._EXECUTED_ACTION(let entity): 
        entity.teardownObserver()
        self = ._EXECUTED_ACTION(entity)
      case ._FEATURE_DEFINITION(let entity): 
        entity.teardownObserver()
        self = ._FEATURE_DEFINITION(entity)
      case ._GENERAL_FEATURE(let entity): 
        entity.teardownObserver()
        self = ._GENERAL_FEATURE(entity)
      case ._GENERAL_PROPERTY(let entity): 
        entity.teardownObserver()
        self = ._GENERAL_PROPERTY(entity)
      case ._GENERAL_PROPERTY_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._GENERAL_PROPERTY_RELATIONSHIP(entity)
      case ._GENERIC_PROPERTY_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._GENERIC_PROPERTY_RELATIONSHIP(entity)
      case ._GROUP(let entity): 
        entity.teardownObserver()
        self = ._GROUP(entity)
      case ._GROUP_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._GROUP_RELATIONSHIP(entity)
      case ._IDENTIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._IDENTIFICATION_ASSIGNMENT(entity)
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(entity)
      case ._INFORMATION_RIGHT(let entity): 
        entity.teardownObserver()
        self = ._INFORMATION_RIGHT(entity)
      case ._INFORMATION_USAGE_RIGHT(let entity): 
        entity.teardownObserver()
        self = ._INFORMATION_USAGE_RIGHT(entity)
      case ._INTERFACE_CONNECTION(let entity): 
        entity.teardownObserver()
        self = ._INTERFACE_CONNECTION(entity)
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let entity): 
        entity.teardownObserver()
        self = ._INTERFACE_CONNECTOR_AS_PLANNED(entity)
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let entity): 
        entity.teardownObserver()
        self = ._INTERFACE_CONNECTOR_AS_REALIZED(entity)
      case ._INTERFACE_CONNECTOR_DESIGN(let entity): 
        entity.teardownObserver()
        self = ._INTERFACE_CONNECTOR_DESIGN(entity)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let entity): 
        entity.teardownObserver()
        self = ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(entity)
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let entity): 
        entity.teardownObserver()
        self = ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(entity)
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let entity): 
        entity.teardownObserver()
        self = ._INTERFACE_CONNECTOR_OCCURRENCE(entity)
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let entity): 
        entity.teardownObserver()
        self = ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(entity)
      case ._INTERFACE_DEFINITION_CONNECTION(let entity): 
        entity.teardownObserver()
        self = ._INTERFACE_DEFINITION_CONNECTION(entity)
      case ._INTERFACE_DEFINITION_FOR(let entity): 
        entity.teardownObserver()
        self = ._INTERFACE_DEFINITION_FOR(entity)
      case ._IN_ZONE(let entity): 
        entity.teardownObserver()
        self = ._IN_ZONE(entity)
      case ._LANGUAGE(let entity): 
        entity.teardownObserver()
        self = ._LANGUAGE(entity)
      case ._LINK_MOTION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._LINK_MOTION_RELATIONSHIP(entity)
      case ._LOCAL_TIME(let entity): 
        entity.teardownObserver()
        self = ._LOCAL_TIME(entity)
      case ._LOCATION(let entity): 
        entity.teardownObserver()
        self = ._LOCATION(entity)
      case ._LOCATION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._LOCATION_RELATIONSHIP(entity)
      case ._MATERIAL_DESIGNATION(let entity): 
        entity.teardownObserver()
        self = ._MATERIAL_DESIGNATION(entity)
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let entity): 
        entity.teardownObserver()
        self = ._MATERIAL_DESIGNATION_CHARACTERIZATION(entity)
      case ._MEASURE_QUALIFICATION(let entity): 
        entity.teardownObserver()
        self = ._MEASURE_QUALIFICATION(entity)
      case ._MEASURE_REPRESENTATION_ITEM(let entity): 
        entity.teardownObserver()
        self = ._MEASURE_REPRESENTATION_ITEM(entity)
      case ._MEASURE_WITH_UNIT(let entity): 
        entity.teardownObserver()
        self = ._MEASURE_WITH_UNIT(entity)
      case ._MESSAGE_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._MESSAGE_RELATIONSHIP(entity)
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(entity)
      case ._NAMED_UNIT(let entity): 
        entity.teardownObserver()
        self = ._NAMED_UNIT(entity)
      case ._ORGANIZATION(let entity): 
        entity.teardownObserver()
        self = ._ORGANIZATION(entity)
      case ._ORGANIZATIONAL_ADDRESS(let entity): 
        entity.teardownObserver()
        self = ._ORGANIZATIONAL_ADDRESS(entity)
      case ._ORGANIZATIONAL_PROJECT(let entity): 
        entity.teardownObserver()
        self = ._ORGANIZATIONAL_PROJECT(entity)
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(entity)
      case ._ORGANIZATION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._ORGANIZATION_RELATIONSHIP(entity)
      case ._PERSON(let entity): 
        entity.teardownObserver()
        self = ._PERSON(entity)
      case ._PERSON_AND_ORGANIZATION(let entity): 
        entity.teardownObserver()
        self = ._PERSON_AND_ORGANIZATION(entity)
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let entity): 
        entity.teardownObserver()
        self = ._PERSON_AND_ORGANIZATION_ADDRESS(entity)
      case ._PLUS_MINUS_TOLERANCE(let entity): 
        entity.teardownObserver()
        self = ._PLUS_MINUS_TOLERANCE(entity)
      case ._PROCESS_OPERATION(let entity): 
        entity.teardownObserver()
        self = ._PROCESS_OPERATION(entity)
      case ._PROCESS_PLAN(let entity): 
        entity.teardownObserver()
        self = ._PROCESS_PLAN(entity)
      case ._PROCESS_PRODUCT_ASSOCIATION(let entity): 
        entity.teardownObserver()
        self = ._PROCESS_PRODUCT_ASSOCIATION(entity)
      case ._PRODUCT(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT(entity)
      case ._PRODUCT_CONCEPT(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_CONCEPT(entity)
      case ._PRODUCT_CONCEPT_CONTEXT(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_CONCEPT_CONTEXT(entity)
      case ._PRODUCT_CONCEPT_FEATURE(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_CONCEPT_FEATURE(entity)
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(entity)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY(entity)
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(entity)
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_CONCEPT_RELATIONSHIP(entity)
      case ._PRODUCT_DEFINITION(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION(entity)
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_CONTEXT(entity)
      case ._PRODUCT_DEFINITION_FORMATION(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_FORMATION(entity)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(entity)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_RELATIONSHIP(entity)
      case ._PRODUCT_DEFINITION_USAGE(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_USAGE(entity)
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(entity)
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DESIGN_TO_INDIVIDUAL(entity)
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(entity)
      case ._PRODUCT_GROUP(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_GROUP(entity)
      case ._PRODUCT_GROUP_MEMBERSHIP(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_GROUP_MEMBERSHIP(entity)
      case ._PRODUCT_GROUP_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_GROUP_RELATIONSHIP(entity)
      case ._PRODUCT_PROCESS_PLAN(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_PROCESS_PLAN(entity)
      case ._PRODUCT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_RELATIONSHIP(entity)
      case ._PROPERTY_DEFINITION(let entity): 
        entity.teardownObserver()
        self = ._PROPERTY_DEFINITION(entity)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): 
        entity.teardownObserver()
        self = ._PROPERTY_DEFINITION_REPRESENTATION(entity)
      case ._REPRESENTATION(let entity): 
        entity.teardownObserver()
        self = ._REPRESENTATION(entity)
      case ._REPRESENTATION_CONTEXT(let entity): 
        entity.teardownObserver()
        self = ._REPRESENTATION_CONTEXT(entity)
      case ._REPRESENTATION_ITEM(let entity): 
        entity.teardownObserver()
        self = ._REPRESENTATION_ITEM(entity)
      case ._REPRESENTATION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._REPRESENTATION_RELATIONSHIP(entity)
      case ._REQUIREMENT_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._REQUIREMENT_ASSIGNMENT(entity)
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let entity): 
        entity.teardownObserver()
        self = ._REQUIREMENT_FOR_ACTION_RESOURCE(entity)
      case ._REQUIREMENT_SOURCE(let entity): 
        entity.teardownObserver()
        self = ._REQUIREMENT_SOURCE(entity)
      case ._RESOURCE_PROPERTY(let entity): 
        entity.teardownObserver()
        self = ._RESOURCE_PROPERTY(entity)
      case ._RETENTION(let entity): 
        entity.teardownObserver()
        self = ._RETENTION(entity)
      case ._SATISFIES_REQUIREMENT(let entity): 
        entity.teardownObserver()
        self = ._SATISFIES_REQUIREMENT(entity)
      case ._SECURITY_CLASSIFICATION(let entity): 
        entity.teardownObserver()
        self = ._SECURITY_CLASSIFICATION(entity)
      case ._SECURITY_CLASSIFICATION_LEVEL(let entity): 
        entity.teardownObserver()
        self = ._SECURITY_CLASSIFICATION_LEVEL(entity)
      case ._SHAPE_ASPECT(let entity): 
        entity.teardownObserver()
        self = ._SHAPE_ASPECT(entity)
      case ._SHAPE_ASPECT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._SHAPE_ASPECT_RELATIONSHIP(entity)
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(entity)
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(entity)
      case ._STATE_OBSERVED(let entity): 
        entity.teardownObserver()
        self = ._STATE_OBSERVED(entity)
      case ._STATE_OBSERVED_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._STATE_OBSERVED_ASSIGNMENT(entity)
      case ._STATE_OBSERVED_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._STATE_OBSERVED_RELATIONSHIP(entity)
      case ._STATE_OBSERVED_ROLE(let entity): 
        entity.teardownObserver()
        self = ._STATE_OBSERVED_ROLE(entity)
      case ._STATE_TYPE(let entity): 
        entity.teardownObserver()
        self = ._STATE_TYPE(entity)
      case ._STATE_TYPE_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._STATE_TYPE_ASSIGNMENT(entity)
      case ._STATE_TYPE_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._STATE_TYPE_RELATIONSHIP(entity)
      case ._STRUCTURED_MESSAGE(let entity): 
        entity.teardownObserver()
        self = ._STRUCTURED_MESSAGE(entity)
      case ._TIME_INTERVAL_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._TIME_INTERVAL_RELATIONSHIP(entity)
      case ._TYPE_QUALIFIER(let entity): 
        entity.teardownObserver()
        self = ._TYPE_QUALIFIER(entity)
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let entity): 
        entity.teardownObserver()
        self = ._UNCERTAINTY_MEASURE_WITH_UNIT(entity)
      case ._USAGE_ASSOCIATION(let entity): 
        entity.teardownObserver()
        self = ._USAGE_ASSOCIATION(entity)
      case ._VALIDATION(let entity): 
        entity.teardownObserver()
        self = ._VALIDATION(entity)
      case ._VERIFICATION(let entity): 
        entity.teardownObserver()
        self = ._VERIFICATION(entity)
      case ._VERSIONED_ACTION_REQUEST(let entity): 
        entity.teardownObserver()
        self = ._VERSIONED_ACTION_REQUEST(entity)
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(entity)
      }
    }

    //MARK: SDAIAggregationBehavior
    public var aggregationHiBound: Int? {
      switch self {
      case ._CLASSIFIED_ITEM(let selection): return selection.aggregationHiBound
      default: return nil
      }
    }
    public var aggregationHiIndex: Int? {
      switch self {
      case ._CLASSIFIED_ITEM(let selection): return selection.aggregationHiIndex
      default: return nil
      }
    }
    public var aggregationLoBound: Int? {
      switch self {
      case ._CLASSIFIED_ITEM(let selection): return selection.aggregationLoBound
      default: return nil
      }
    }
    public var aggregationLoIndex: Int? {
      switch self {
      case ._CLASSIFIED_ITEM(let selection): return selection.aggregationLoIndex
      default: return nil
      }
    }
    public var aggregationSize: Int? {
      switch self {
      case ._CLASSIFIED_ITEM(let selection): return selection.aggregationSize
      default: return nil
      }
    }

    //MARK: WHERE RULE VALIDATION (SELECT TYPE)
    public static func validateWhereRules(instance:Self?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      var result: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]
      switch instance {
      case ._ACTION(let selectValue): result = eACTION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION")
      case ._ACTION_DIRECTIVE(let selectValue): 
        result = eACTION_DIRECTIVE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_DIRECTIVE")
      case ._ACTION_DIRECTIVE_RELATIONSHIP(let selectValue): 
        result = eACTION_DIRECTIVE_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_DIRECTIVE_RELATIONSHIP")
      case ._ACTION_METHOD(let selectValue): 
        result = eACTION_METHOD.validateWhereRules(instance:selectValue, prefix:prefix + "\\ACTION_METHOD")
      case ._ACTION_METHOD_RELATIONSHIP(let selectValue): 
        result = eACTION_METHOD_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_METHOD_RELATIONSHIP")
      case ._ACTION_PROPERTY(let selectValue): 
        result = eACTION_PROPERTY.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_PROPERTY")
      case ._ACTION_PROPERTY_REPRESENTATION(let selectValue): 
        result = eACTION_PROPERTY_REPRESENTATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_PROPERTY_REPRESENTATION")
      case ._ACTION_RELATIONSHIP(let selectValue): 
        result = eACTION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_RELATIONSHIP")
      case ._ACTION_REQUEST_SOLUTION(let selectValue): 
        result = eACTION_REQUEST_SOLUTION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_REQUEST_SOLUTION")
      case ._ACTION_REQUEST_STATUS(let selectValue): 
        result = eACTION_REQUEST_STATUS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_REQUEST_STATUS")
      case ._ACTION_RESOURCE(let selectValue): 
        result = eACTION_RESOURCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_RESOURCE")
      case ._ACTION_RESOURCE_RELATIONSHIP(let selectValue): 
        result = eACTION_RESOURCE_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_RESOURCE_RELATIONSHIP")
      case ._ADDRESS(let selectValue): result = eADDRESS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ADDRESS")
      case ._ALTERNATE_PRODUCT_RELATIONSHIP(let selectValue): 
        result = eALTERNATE_PRODUCT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ALTERNATE_PRODUCT_RELATIONSHIP")
      case ._ALTERNATIVE_SOLUTION_RELATIONSHIP(let selectValue): 
        result = eALTERNATIVE_SOLUTION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ALTERNATIVE_SOLUTION_RELATIONSHIP")
      case ._ANALYSIS_ASSIGNMENT(let selectValue): 
        result = eANALYSIS_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ANALYSIS_ASSIGNMENT")
      case ._APPLIED_ACTION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ACTION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ACTION_ASSIGNMENT")
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ACTION_METHOD_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ACTION_METHOD_ASSIGNMENT")
      case ._APPLIED_ACTION_REQUEST_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ACTION_REQUEST_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ACTION_REQUEST_ASSIGNMENT")
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_APPROVAL_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_APPROVAL_ASSIGNMENT")
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_CERTIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_CERTIFICATION_ASSIGNMENT")
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP(let selectValue): 
        result = eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP")
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_CONTRACT_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_CONTRACT_ASSIGNMENT")
      case ._APPLIED_DATE_AND_TIME_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_DATE_AND_TIME_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_DATE_AND_TIME_ASSIGNMENT")
      case ._APPLIED_DATE_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_DATE_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_DATE_ASSIGNMENT")
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_DESCRIPTION_TEXT_ASSIGNMENT")
      case ._APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP(let selectValue): 
        result = eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP")
      case ._APPLIED_DOCUMENT_REFERENCE(let selectValue): 
        result = eAPPLIED_DOCUMENT_REFERENCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_DOCUMENT_REFERENCE")
      case ._APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT")
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_EFFECTIVITY_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_EFFECTIVITY_ASSIGNMENT")
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_EVENT_OCCURRENCE_ASSIGNMENT")
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT")
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selectValue): result = eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP")
      case ._APPLIED_IDENTIFICATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_IDENTIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_IDENTIFICATION_ASSIGNMENT")
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_INEFFECTIVITY_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_INEFFECTIVITY_ASSIGNMENT")
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT")
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ORGANIZATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ORGANIZATION_ASSIGNMENT")
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT")
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT")
      case ._APPLIED_TIME_INTERVAL_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_TIME_INTERVAL_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_TIME_INTERVAL_ASSIGNMENT")
      case ._APPLIED_USAGE_RIGHT(let selectValue): 
        result = eAPPLIED_USAGE_RIGHT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_USAGE_RIGHT")
      case ._APPROVAL(let selectValue): result = eAPPROVAL.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPROVAL")
      case ._APPROVAL_PERSON_ORGANIZATION(let selectValue): 
        result = eAPPROVAL_PERSON_ORGANIZATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPROVAL_PERSON_ORGANIZATION")
      case ._APPROVAL_RELATIONSHIP(let selectValue): 
        result = eAPPROVAL_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPROVAL_RELATIONSHIP")
      case ._APPROVAL_STATUS(let selectValue): 
        result = eAPPROVAL_STATUS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPROVAL_STATUS")
      case ._ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE(let selectValue): 
        result = eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ASSEMBLY_COMPONENT_USAGE_SUBSTITUTE")
      case ._ASSIGNMENT_OBJECT_RELATIONSHIP(let selectValue): 
        result = eASSIGNMENT_OBJECT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ASSIGNMENT_OBJECT_RELATIONSHIP")
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selectValue): 
        result = eATTRIBUTE_LANGUAGE_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ATTRIBUTE_LANGUAGE_ASSIGNMENT")
      case ._BREAKDOWN_CONTEXT(let selectValue): 
        result = eBREAKDOWN_CONTEXT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\BREAKDOWN_CONTEXT")
      case ._BREAKDOWN_ELEMENT_REALIZATION(let selectValue): 
        result = eBREAKDOWN_ELEMENT_REALIZATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\BREAKDOWN_ELEMENT_REALIZATION")
      case ._BREAKDOWN_OF(let selectValue): result = eBREAKDOWN_OF.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\BREAKDOWN_OF")
      case ._CALENDAR_DATE(let selectValue): 
        result = eCALENDAR_DATE.validateWhereRules(instance:selectValue, prefix:prefix + "\\CALENDAR_DATE")
      case ._CERTIFICATION(let selectValue): 
        result = eCERTIFICATION.validateWhereRules(instance:selectValue, prefix:prefix + "\\CERTIFICATION")
      case ._CHANGE_ELEMENT_SEQUENCE(let selectValue): 
        result = eCHANGE_ELEMENT_SEQUENCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CHANGE_ELEMENT_SEQUENCE")
      case ._CHANGE_GROUP(let selectValue): result = eCHANGE_GROUP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CHANGE_GROUP")
      case ._CHARACTERIZED_CLASS(let selectValue): 
        result = eCHARACTERIZED_CLASS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CHARACTERIZED_CLASS")
      case ._CHARACTERIZED_OBJECT(let selectValue): 
        result = eCHARACTERIZED_OBJECT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CHARACTERIZED_OBJECT")
      case ._CLASS(let selectValue): result = eCLASS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CLASS")
      case ._CLASSIFIED_ITEM(let selectValue): 
        result = sCLASSIFIED_ITEM.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CLASSIFIED_ITEM")
      case ._CONFIGURATION_DESIGN(let selectValue): 
        result = eCONFIGURATION_DESIGN.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CONFIGURATION_DESIGN")
      case ._CONFIGURATION_EFFECTIVITY(let selectValue): 
        result = eCONFIGURATION_EFFECTIVITY.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CONFIGURATION_EFFECTIVITY")
      case ._CONFIGURATION_ITEM(let selectValue): 
        result = eCONFIGURATION_ITEM.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CONFIGURATION_ITEM")
      case ._CONFIGURATION_ITEM_RELATIONSHIP(let selectValue): 
        result = eCONFIGURATION_ITEM_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CONFIGURATION_ITEM_RELATIONSHIP")
      case ._CONTEXT_DEPENDENT_UNIT(let selectValue): 
        result = eCONTEXT_DEPENDENT_UNIT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CONTEXT_DEPENDENT_UNIT")
      case ._CONTRACT(let selectValue): result = eCONTRACT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CONTRACT")
      case ._CONTRACT_RELATIONSHIP(let selectValue): 
        result = eCONTRACT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CONTRACT_RELATIONSHIP")
      case ._CONVERSION_BASED_UNIT(let selectValue): 
        result = eCONVERSION_BASED_UNIT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CONVERSION_BASED_UNIT")
      case ._DATE_AND_TIME(let selectValue): 
        result = eDATE_AND_TIME.validateWhereRules(instance:selectValue, prefix:prefix + "\\DATE_AND_TIME")
      case ._DATE_AND_TIME_ASSIGNMENT(let selectValue): 
        result = eDATE_AND_TIME_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DATE_AND_TIME_ASSIGNMENT")
      case ._DATE_ASSIGNMENT(let selectValue): 
        result = eDATE_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DATE_ASSIGNMENT")
      case ._DEFINITIONAL_REPRESENTATION_RELATIONSHIP(let selectValue): 
        result = eDEFINITIONAL_REPRESENTATION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DEFINITIONAL_REPRESENTATION_RELATIONSHIP")
      case ._DERIVED_UNIT(let selectValue): result = eDERIVED_UNIT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DERIVED_UNIT")
      case ._DESCRIPTIVE_REPRESENTATION_ITEM(let selectValue): 
        result = eDESCRIPTIVE_REPRESENTATION_ITEM.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DESCRIPTIVE_REPRESENTATION_ITEM")
      case ._DIRECTED_ACTION(let selectValue): 
        result = eDIRECTED_ACTION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DIRECTED_ACTION")
      case ._DIRECTED_ACTION_ASSIGNMENT(let selectValue): 
        result = eDIRECTED_ACTION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DIRECTED_ACTION_ASSIGNMENT")
      case ._DOCUMENT_FILE(let selectValue): 
        result = eDOCUMENT_FILE.validateWhereRules(instance:selectValue, prefix:prefix + "\\DOCUMENT_FILE")
      case ._DOCUMENT_RELATIONSHIP(let selectValue): 
        result = eDOCUMENT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DOCUMENT_RELATIONSHIP")
      case ._DOCUMENT_TYPE(let selectValue): 
        result = eDOCUMENT_TYPE.validateWhereRules(instance:selectValue, prefix:prefix + "\\DOCUMENT_TYPE")
      case ._EFFECTIVITY(let selectValue): result = eEFFECTIVITY.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\EFFECTIVITY")
      case ._EFFECTIVITY_RELATIONSHIP(let selectValue): 
        result = eEFFECTIVITY_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\EFFECTIVITY_RELATIONSHIP")
      case ._ENVELOPE(let selectValue): result = eENVELOPE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ENVELOPE")
      case ._ENVELOPE_RELATIONSHIP(let selectValue): 
        result = eENVELOPE_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ENVELOPE_RELATIONSHIP")
      case ._EVALUATED_CHARACTERISTIC(let selectValue): 
        result = eEVALUATED_CHARACTERISTIC.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\EVALUATED_CHARACTERISTIC")
      case ._EVENT_OCCURRENCE(let selectValue): 
        result = eEVENT_OCCURRENCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\EVENT_OCCURRENCE")
      case ._EVENT_OCCURRENCE_RELATIONSHIP(let selectValue): 
        result = eEVENT_OCCURRENCE_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\EVENT_OCCURRENCE_RELATIONSHIP")
      case ._EVIDENCE(let selectValue): result = eEVIDENCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\EVIDENCE")
      case ._EXECUTED_ACTION(let selectValue): 
        result = eEXECUTED_ACTION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\EXECUTED_ACTION")
      case ._FEATURE_DEFINITION(let selectValue): 
        result = eFEATURE_DEFINITION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\FEATURE_DEFINITION")
      case ._GENERAL_FEATURE(let selectValue): 
        result = eGENERAL_FEATURE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\GENERAL_FEATURE")
      case ._GENERAL_PROPERTY(let selectValue): 
        result = eGENERAL_PROPERTY.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\GENERAL_PROPERTY")
      case ._GENERAL_PROPERTY_RELATIONSHIP(let selectValue): 
        result = eGENERAL_PROPERTY_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\GENERAL_PROPERTY_RELATIONSHIP")
      case ._GENERIC_PROPERTY_RELATIONSHIP(let selectValue): 
        result = eGENERIC_PROPERTY_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\GENERIC_PROPERTY_RELATIONSHIP")
      case ._GROUP(let selectValue): result = eGROUP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\GROUP")
      case ._GROUP_RELATIONSHIP(let selectValue): 
        result = eGROUP_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\GROUP_RELATIONSHIP")
      case ._IDENTIFICATION_ASSIGNMENT(let selectValue): 
        result = eIDENTIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\IDENTIFICATION_ASSIGNMENT")
      case ._IDENTIFICATION_ASSIGNMENT_RELATIONSHIP(let selectValue): 
        result = eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\IDENTIFICATION_ASSIGNMENT_RELATIONSHIP")
      case ._INFORMATION_RIGHT(let selectValue): 
        result = eINFORMATION_RIGHT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INFORMATION_RIGHT")
      case ._INFORMATION_USAGE_RIGHT(let selectValue): 
        result = eINFORMATION_USAGE_RIGHT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INFORMATION_USAGE_RIGHT")
      case ._INTERFACE_CONNECTION(let selectValue): 
        result = eINTERFACE_CONNECTION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INTERFACE_CONNECTION")
      case ._INTERFACE_CONNECTOR_AS_PLANNED(let selectValue): 
        result = eINTERFACE_CONNECTOR_AS_PLANNED.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INTERFACE_CONNECTOR_AS_PLANNED")
      case ._INTERFACE_CONNECTOR_AS_REALIZED(let selectValue): 
        result = eINTERFACE_CONNECTOR_AS_REALIZED.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INTERFACE_CONNECTOR_AS_REALIZED")
      case ._INTERFACE_CONNECTOR_DESIGN(let selectValue): 
        result = eINTERFACE_CONNECTOR_DESIGN.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INTERFACE_CONNECTOR_DESIGN")
      case ._INTERFACE_CONNECTOR_DESIGN_TO_PLANNED(let selectValue): 
        result = eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INTERFACE_CONNECTOR_DESIGN_TO_PLANNED")
      case ._INTERFACE_CONNECTOR_DESIGN_TO_REALIZED(let selectValue): 
        result = eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INTERFACE_CONNECTOR_DESIGN_TO_REALIZED")
      case ._INTERFACE_CONNECTOR_OCCURRENCE(let selectValue): 
        result = eINTERFACE_CONNECTOR_OCCURRENCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INTERFACE_CONNECTOR_OCCURRENCE")
      case ._INTERFACE_CONNECTOR_PLANNED_TO_REALIZED(let selectValue): 
        result = eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INTERFACE_CONNECTOR_PLANNED_TO_REALIZED")
      case ._INTERFACE_DEFINITION_CONNECTION(let selectValue): 
        result = eINTERFACE_DEFINITION_CONNECTION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INTERFACE_DEFINITION_CONNECTION")
      case ._INTERFACE_DEFINITION_FOR(let selectValue): 
        result = eINTERFACE_DEFINITION_FOR.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INTERFACE_DEFINITION_FOR")
      case ._IN_ZONE(let selectValue): result = eIN_ZONE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\IN_ZONE")
      case ._LANGUAGE(let selectValue): result = eLANGUAGE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\LANGUAGE")
      case ._LINK_MOTION_RELATIONSHIP(let selectValue): 
        result = eLINK_MOTION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\LINK_MOTION_RELATIONSHIP")
      case ._LOCAL_TIME(let selectValue): result = eLOCAL_TIME.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\LOCAL_TIME")
      case ._LOCATION(let selectValue): result = eLOCATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\LOCATION")
      case ._LOCATION_RELATIONSHIP(let selectValue): 
        result = eLOCATION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\LOCATION_RELATIONSHIP")
      case ._MATERIAL_DESIGNATION(let selectValue): 
        result = eMATERIAL_DESIGNATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\MATERIAL_DESIGNATION")
      case ._MATERIAL_DESIGNATION_CHARACTERIZATION(let selectValue): 
        result = eMATERIAL_DESIGNATION_CHARACTERIZATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\MATERIAL_DESIGNATION_CHARACTERIZATION")
      case ._MEASURE_QUALIFICATION(let selectValue): 
        result = eMEASURE_QUALIFICATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\MEASURE_QUALIFICATION")
      case ._MEASURE_REPRESENTATION_ITEM(let selectValue): 
        result = eMEASURE_REPRESENTATION_ITEM.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\MEASURE_REPRESENTATION_ITEM")
      case ._MEASURE_WITH_UNIT(let selectValue): 
        result = eMEASURE_WITH_UNIT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\MEASURE_WITH_UNIT")
      case ._MESSAGE_RELATIONSHIP(let selectValue): 
        result = eMESSAGE_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\MESSAGE_RELATIONSHIP")
      case ._MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT(let selectValue): 
        result = eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\MULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT")
      case ._NAMED_UNIT(let selectValue): result = eNAMED_UNIT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\NAMED_UNIT")
      case ._ORGANIZATION(let selectValue): result = eORGANIZATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ORGANIZATION")
      case ._ORGANIZATIONAL_ADDRESS(let selectValue): 
        result = eORGANIZATIONAL_ADDRESS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ORGANIZATIONAL_ADDRESS")
      case ._ORGANIZATIONAL_PROJECT(let selectValue): 
        result = eORGANIZATIONAL_PROJECT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ORGANIZATIONAL_PROJECT")
      case ._ORGANIZATIONAL_PROJECT_RELATIONSHIP(let selectValue): 
        result = eORGANIZATIONAL_PROJECT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ORGANIZATIONAL_PROJECT_RELATIONSHIP")
      case ._ORGANIZATION_RELATIONSHIP(let selectValue): 
        result = eORGANIZATION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ORGANIZATION_RELATIONSHIP")
      case ._PERSON(let selectValue): result = ePERSON.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PERSON")
      case ._PERSON_AND_ORGANIZATION(let selectValue): 
        result = ePERSON_AND_ORGANIZATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PERSON_AND_ORGANIZATION")
      case ._PERSON_AND_ORGANIZATION_ADDRESS(let selectValue): 
        result = ePERSON_AND_ORGANIZATION_ADDRESS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PERSON_AND_ORGANIZATION_ADDRESS")
      case ._PLUS_MINUS_TOLERANCE(let selectValue): 
        result = ePLUS_MINUS_TOLERANCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PLUS_MINUS_TOLERANCE")
      case ._PROCESS_OPERATION(let selectValue): 
        result = ePROCESS_OPERATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PROCESS_OPERATION")
      case ._PROCESS_PLAN(let selectValue): result = ePROCESS_PLAN.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PROCESS_PLAN")
      case ._PROCESS_PRODUCT_ASSOCIATION(let selectValue): 
        result = ePROCESS_PRODUCT_ASSOCIATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PROCESS_PRODUCT_ASSOCIATION")
      case ._PRODUCT(let selectValue): result = ePRODUCT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT")
      case ._PRODUCT_CONCEPT(let selectValue): 
        result = ePRODUCT_CONCEPT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_CONCEPT")
      case ._PRODUCT_CONCEPT_CONTEXT(let selectValue): 
        result = ePRODUCT_CONCEPT_CONTEXT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_CONCEPT_CONTEXT")
      case ._PRODUCT_CONCEPT_FEATURE(let selectValue): 
        result = ePRODUCT_CONCEPT_FEATURE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_CONCEPT_FEATURE")
      case ._PRODUCT_CONCEPT_FEATURE_ASSOCIATION(let selectValue): 
        result = ePRODUCT_CONCEPT_FEATURE_ASSOCIATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_CONCEPT_FEATURE_ASSOCIATION")
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY(let selectValue): 
        result = ePRODUCT_CONCEPT_FEATURE_CATEGORY.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_CONCEPT_FEATURE_CATEGORY")
      case ._PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE(let selectValue): 
        result = ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE")
      case ._PRODUCT_CONCEPT_RELATIONSHIP(let selectValue): 
        result = ePRODUCT_CONCEPT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_CONCEPT_RELATIONSHIP")
      case ._PRODUCT_DEFINITION(let selectValue): 
        result = ePRODUCT_DEFINITION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION")
      case ._PRODUCT_DEFINITION_CONTEXT(let selectValue): 
        result = ePRODUCT_DEFINITION_CONTEXT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_CONTEXT")
      case ._PRODUCT_DEFINITION_FORMATION(let selectValue): 
        result = ePRODUCT_DEFINITION_FORMATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_FORMATION")
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selectValue): 
        result = ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_FORMATION_RELATIONSHIP")
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selectValue): 
        result = ePRODUCT_DEFINITION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_RELATIONSHIP")
      case ._PRODUCT_DEFINITION_USAGE(let selectValue): 
        result = ePRODUCT_DEFINITION_USAGE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_USAGE")
      case ._PRODUCT_DEFINITION_USAGE_RELATIONSHIP(let selectValue): 
        result = ePRODUCT_DEFINITION_USAGE_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_USAGE_RELATIONSHIP")
      case ._PRODUCT_DESIGN_TO_INDIVIDUAL(let selectValue): 
        result = ePRODUCT_DESIGN_TO_INDIVIDUAL.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DESIGN_TO_INDIVIDUAL")
      case ._PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL(let selectValue): 
        result = ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DESIGN_VERSION_TO_INDIVIDUAL")
      case ._PRODUCT_GROUP(let selectValue): 
        result = ePRODUCT_GROUP.validateWhereRules(instance:selectValue, prefix:prefix + "\\PRODUCT_GROUP")
      case ._PRODUCT_GROUP_MEMBERSHIP(let selectValue): 
        result = ePRODUCT_GROUP_MEMBERSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_GROUP_MEMBERSHIP")
      case ._PRODUCT_GROUP_RELATIONSHIP(let selectValue): 
        result = ePRODUCT_GROUP_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_GROUP_RELATIONSHIP")
      case ._PRODUCT_PROCESS_PLAN(let selectValue): 
        result = ePRODUCT_PROCESS_PLAN.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_PROCESS_PLAN")
      case ._PRODUCT_RELATIONSHIP(let selectValue): 
        result = ePRODUCT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_RELATIONSHIP")
      case ._PROPERTY_DEFINITION(let selectValue): 
        result = ePROPERTY_DEFINITION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PROPERTY_DEFINITION")
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selectValue): 
        result = ePROPERTY_DEFINITION_REPRESENTATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PROPERTY_DEFINITION_REPRESENTATION")
      case ._REPRESENTATION(let selectValue): 
        result = eREPRESENTATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REPRESENTATION")
      case ._REPRESENTATION_CONTEXT(let selectValue): 
        result = eREPRESENTATION_CONTEXT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REPRESENTATION_CONTEXT")
      case ._REPRESENTATION_ITEM(let selectValue): 
        result = eREPRESENTATION_ITEM.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REPRESENTATION_ITEM")
      case ._REPRESENTATION_RELATIONSHIP(let selectValue): 
        result = eREPRESENTATION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REPRESENTATION_RELATIONSHIP")
      case ._REQUIREMENT_ASSIGNMENT(let selectValue): 
        result = eREQUIREMENT_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REQUIREMENT_ASSIGNMENT")
      case ._REQUIREMENT_FOR_ACTION_RESOURCE(let selectValue): 
        result = eREQUIREMENT_FOR_ACTION_RESOURCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REQUIREMENT_FOR_ACTION_RESOURCE")
      case ._REQUIREMENT_SOURCE(let selectValue): 
        result = eREQUIREMENT_SOURCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REQUIREMENT_SOURCE")
      case ._RESOURCE_PROPERTY(let selectValue): 
        result = eRESOURCE_PROPERTY.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\RESOURCE_PROPERTY")
      case ._RETENTION(let selectValue): result = eRETENTION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\RETENTION")
      case ._SATISFIES_REQUIREMENT(let selectValue): 
        result = eSATISFIES_REQUIREMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\SATISFIES_REQUIREMENT")
      case ._SECURITY_CLASSIFICATION(let selectValue): 
        result = eSECURITY_CLASSIFICATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\SECURITY_CLASSIFICATION")
      case ._SECURITY_CLASSIFICATION_LEVEL(let selectValue): 
        result = eSECURITY_CLASSIFICATION_LEVEL.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\SECURITY_CLASSIFICATION_LEVEL")
      case ._SHAPE_ASPECT(let selectValue): result = eSHAPE_ASPECT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\SHAPE_ASPECT")
      case ._SHAPE_ASPECT_RELATIONSHIP(let selectValue): 
        result = eSHAPE_ASPECT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\SHAPE_ASPECT_RELATIONSHIP")
      case ._SHAPE_FEATURE_DEFINITION_RELATIONSHIP(let selectValue): 
        result = eSHAPE_FEATURE_DEFINITION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\SHAPE_FEATURE_DEFINITION_RELATIONSHIP")
      case ._STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP(let selectValue): 
        result = eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\STATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP")
      case ._STATE_OBSERVED(let selectValue): 
        result = eSTATE_OBSERVED.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\STATE_OBSERVED")
      case ._STATE_OBSERVED_ASSIGNMENT(let selectValue): 
        result = eSTATE_OBSERVED_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\STATE_OBSERVED_ASSIGNMENT")
      case ._STATE_OBSERVED_RELATIONSHIP(let selectValue): 
        result = eSTATE_OBSERVED_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\STATE_OBSERVED_RELATIONSHIP")
      case ._STATE_OBSERVED_ROLE(let selectValue): 
        result = eSTATE_OBSERVED_ROLE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\STATE_OBSERVED_ROLE")
      case ._STATE_TYPE(let selectValue): result = eSTATE_TYPE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\STATE_TYPE")
      case ._STATE_TYPE_ASSIGNMENT(let selectValue): 
        result = eSTATE_TYPE_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\STATE_TYPE_ASSIGNMENT")
      case ._STATE_TYPE_RELATIONSHIP(let selectValue): 
        result = eSTATE_TYPE_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\STATE_TYPE_RELATIONSHIP")
      case ._STRUCTURED_MESSAGE(let selectValue): 
        result = eSTRUCTURED_MESSAGE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\STRUCTURED_MESSAGE")
      case ._TIME_INTERVAL_RELATIONSHIP(let selectValue): 
        result = eTIME_INTERVAL_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\TIME_INTERVAL_RELATIONSHIP")
      case ._TYPE_QUALIFIER(let selectValue): 
        result = eTYPE_QUALIFIER.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\TYPE_QUALIFIER")
      case ._UNCERTAINTY_MEASURE_WITH_UNIT(let selectValue): 
        result = eUNCERTAINTY_MEASURE_WITH_UNIT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\UNCERTAINTY_MEASURE_WITH_UNIT")
      case ._USAGE_ASSOCIATION(let selectValue): 
        result = eUSAGE_ASSOCIATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\USAGE_ASSOCIATION")
      case ._VALIDATION(let selectValue): result = eVALIDATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\VALIDATION")
      case ._VERIFICATION(let selectValue): result = eVERIFICATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\VERIFICATION")
      case ._VERSIONED_ACTION_REQUEST(let selectValue): 
        result = eVERSIONED_ACTION_REQUEST.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\VERSIONED_ACTION_REQUEST")
      case ._VERSIONED_ACTION_REQUEST_RELATIONSHIP(let selectValue): 
        result = eVERSIONED_ACTION_REQUEST_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\VERSIONED_ACTION_REQUEST_RELATIONSHIP")
      case nil: break
      }

      return result
    }

  }

}


//MARK: - SELECT TYPE HIERARCHY
public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sCLASSIFICATION_ITEM__type: SDAISelectType {

  //MARK: GROUP REFERENCES
  var super_sCLASSIFIED_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCLASSIFIED_ITEM? { get }
  var super_eGROUP_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP_RELATIONSHIP? { get }
  var super_ePLUS_MINUS_TOLERANCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLUS_MINUS_TOLERANCE? { get }
  var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT? { get }
  var super_eREPRESENTATION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_RELATIONSHIP? { get }
  var super_eDATE_AND_TIME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME? { get }
  var super_eGENERIC_PROPERTY_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERIC_PROPERTY_RELATIONSHIP? { get }
  var super_eRETENTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRETENTION? { get }
  var super_eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP? { get }
  var super_eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE? { get }
  var super_eEVENT_OCCURRENCE_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE_RELATIONSHIP? { get }
  var super_eMATERIAL_DESIGNATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATERIAL_DESIGNATION? { get }
  var super_eORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION_ASSIGNMENT? { get }
  var super_eREPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION? { get }
  var super_eSTATE_OBSERVED_ROLE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED_ROLE? { get }
  var super_eENVELOPE_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eENVELOPE_RELATIONSHIP? { get }
  var super_eENVELOPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eENVELOPE? { get }
  var super_eACTION_RESOURCE_REQUIREMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE_REQUIREMENT? { get }
  var super_eREQUIREMENT_SOURCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_SOURCE? { get }
  var super_eINFORMATION_USAGE_RIGHT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT? { get }
  var super_eAPPLIED_IDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_IDENTIFICATION_ASSIGNMENT? { get }
  var super_eEFFECTIVITY_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY_RELATIONSHIP? { get }
  var super_eORGANIZATION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION_RELATIONSHIP? { get }
  var super_eALTERNATIVE_SOLUTION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eALTERNATIVE_SOLUTION_RELATIONSHIP? { get }
  var super_eGENERAL_FEATURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_FEATURE? { get }
  var super_eINTERFACE_DEFINITION_CONNECTION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_DEFINITION_CONNECTION? { get }
  var super_eORGANIZATIONAL_ADDRESS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_ADDRESS? { get }
  var super_ePERSONAL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSONAL_ADDRESS? { get }
  var super_eSHAPE_ASPECT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_RELATIONSHIP? { get }
  var super_eEFFECTIVITY_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY_ASSIGNMENT? { get }
  var super_eAPPLIED_USAGE_RIGHT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_USAGE_RIGHT? { get }
  var super_eCHANGE_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_GROUP? { get }
  var super_eINFORMATION_RIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_RIGHT? { get }
  var super_eAPPLIED_CERTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CERTIFICATION_ASSIGNMENT? { get }
  var super_eINTERFACE_CONNECTOR_AS_PLANNED: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_AS_PLANNED? { get }
  var super_ePROPERTY_DEFINITION_REPRESENTATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION_REPRESENTATION? { get }
  var super_eSECURITY_CLASSIFICATION_LEVEL: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_LEVEL? { get }
  var super_eAPPLIED_TIME_INTERVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_TIME_INTERVAL_ASSIGNMENT? { get }
  var super_eEVENT_OCCURRENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE? { get }
  var super_eEVALUATED_CHARACTERISTIC: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVALUATED_CHARACTERISTIC? { get }
  var super_eLOCATION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCATION_RELATIONSHIP? { get }
  var super_eACTION_REQUEST_STATUS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_REQUEST_STATUS? { get }
  var super_ePERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON? { get }
  var super_eSTATE_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE? { get }
  var super_eINTERFACE_CONNECTOR_DESIGN: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_DESIGN? { get }
  var super_eACTION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RELATIONSHIP? { get }
  var super_eAPPROVAL_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_RELATIONSHIP? { get }
  var super_eCHARACTERIZED_OBJECT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHARACTERIZED_OBJECT_RELATIONSHIP? { get }
  var super_eCERTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION? { get }
  var super_eMEASURE_REPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_REPRESENTATION_ITEM? { get }
  var super_eIDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT? { get }
  var super_ePROPERTY_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION? { get }
  var super_eSTATE_TYPE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE_ASSIGNMENT? { get }
  var super_eORGANIZATIONAL_PROJECT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT_RELATIONSHIP? { get }
  var super_eTYPE_QUALIFIER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTYPE_QUALIFIER? { get }
  var super_eAPPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL? { get }
  var super_eSTRUCTURED_MESSAGE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE? { get }
  var super_eVALIDATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVALIDATION? { get }
  var super_eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP? { get }
  var super_ePRODUCT_CONCEPT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT? { get }
  var super_eGROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP? { get }
  var super_ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL? { get }
  var super_eCONFIGURATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_ITEM? { get }
  var super_eINTERFACE_CONNECTOR_AS_REALIZED: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_AS_REALIZED? { get }
  var super_eMESSAGE_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMESSAGE_RELATIONSHIP? { get }
  var super_ePROCESS_PLAN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROCESS_PLAN? { get }
  var super_eAPPLICATION_CONTEXT_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLICATION_CONTEXT_ELEMENT? { get }
  var super_eREPRESENTATION_CONTEXT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_CONTEXT? { get }
  var super_eCLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLASS? { get }
  var super_eDESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP? { get }
  var super_eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? { get }
  var super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT? { get }
  var super_eANALYSIS_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANALYSIS_ASSIGNMENT? { get }
  var super_eAPPLIED_EFFECTIVITY_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EFFECTIVITY_ASSIGNMENT? { get }
  var super_eSTATE_OBSERVED_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED_ASSIGNMENT? { get }
  var super_eSTATE_TYPE_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE_RELATIONSHIP? { get }
  var super_eAPPLIED_DATE_AND_TIME_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DATE_AND_TIME_ASSIGNMENT? { get }
  var super_eACTION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD? { get }
  var super_eGROUP_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP_ASSIGNMENT? { get }
  var super_ePRODUCT_DEFINITION_PROCESS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_PROCESS? { get }
  var super_eCONFIGURATION_DESIGN: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_DESIGN? { get }
  var super_eCONTEXT_DEPENDENT_UNIT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTEXT_DEPENDENT_UNIT? { get }
  var super_eEXECUTED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXECUTED_ACTION? { get }
  var super_ePRODUCT_DEFINITION_RELATIONSHIP_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP_RELATIONSHIP? { get }
  var super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP? { get }
  var super_eGENERAL_PROPERTY_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_PROPERTY_RELATIONSHIP? { get }
  var super_eCONTRACT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT_ASSIGNMENT? { get }
  var super_eDATE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_ASSIGNMENT? { get }
  var super_eCHARACTERIZED_CLASS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHARACTERIZED_CLASS? { get }
  var super_ePRODUCT_CONCEPT_FEATURE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE? { get }
  var super_eDESCRIPTION_TEXT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDESCRIPTION_TEXT_ASSIGNMENT? { get }
  var super_eAPPLIED_DATE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DATE_ASSIGNMENT? { get }
  var super_ePERSON_AND_ORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION_ASSIGNMENT? { get }
  var super_eSHAPE_FEATURE_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_FEATURE_DEFINITION? { get }
  var super_eACTION_PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY? { get }
  var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_IDENTIFICATION_ASSIGNMENT? { get }
  var super_ePRODUCT_DEFINITION_USAGE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_USAGE? { get }
  var super_eACTION_REQUEST_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_REQUEST_ASSIGNMENT? { get }
  var super_eORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION? { get }
  var super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_INEFFECTIVITY_ASSIGNMENT? { get }
  var super_eDERIVED_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT? { get }
  var super_eORGANIZATIONAL_PROJECT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT_ASSIGNMENT? { get }
  var super_eAPPLIED_ACTION_METHOD_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_METHOD_ASSIGNMENT? { get }
  var super_eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT? { get }
  var super_eATTRIBUTE_CLASSIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_CLASSIFICATION_ASSIGNMENT? { get }
  var super_ePRODUCT_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_GROUP? { get }
  var super_eGENERAL_PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_PROPERTY? { get }
  var super_eATTRIBUTE_VALUE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_VALUE_ASSIGNMENT? { get }
  var super_eCALENDAR_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCALENDAR_DATE? { get }
  var super_eSTATE_OBSERVED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED? { get }
  var super_eFEATURE_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFEATURE_DEFINITION? { get }
  var super_eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED? { get }
  var super_eRESOURCE_PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRESOURCE_PROPERTY? { get }
  var super_eREPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION? { get }
  var super_ePRODUCT_GROUP_MEMBERSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_GROUP_MEMBERSHIP? { get }
  var super_eBREAKDOWN_CONTEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBREAKDOWN_CONTEXT? { get }
  var super_eVERSIONED_ACTION_REQUEST_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST_RELATIONSHIP? { get }
  var super_ePRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION? { get }
  var super_eINTERFACE_CONNECTION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTION? { get }
  var super_eSECURITY_CLASSIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_ASSIGNMENT? { get }
  var super_eLINK_MOTION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLINK_MOTION_RELATIONSHIP? { get }
  var super_ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE? { get }
  var super_eAPPLIED_DOCUMENT_REFERENCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DOCUMENT_REFERENCE? { get }
  var super_eEVIDENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVIDENCE? { get }
  var super_eBREAKDOWN_ELEMENT_REALIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBREAKDOWN_ELEMENT_REALIZATION? { get }
  var super_eREPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM? { get }
  var super_eACTION_METHOD_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD_RELATIONSHIP? { get }
  var super_eASCRIBABLE_STATE_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASCRIBABLE_STATE_RELATIONSHIP? { get }
  var super_eUSAGE_ASSOCIATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUSAGE_ASSOCIATION? { get }
  var super_eCONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT? { get }
  var super_eDOCUMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT? { get }
  var super_eIN_ZONE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIN_ZONE? { get }
  var super_eACTION_METHOD_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD_ASSIGNMENT? { get }
  var super_eDATE_AND_TIME_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME_ASSIGNMENT? { get }
  var super_eCONFIGURATION_EFFECTIVITY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_EFFECTIVITY? { get }
  var super_ePRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT? { get }
  var super_eMATERIAL_DESIGNATION_CHARACTERIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATERIAL_DESIGNATION_CHARACTERIZATION? { get }
  var super_eSTATE_OBSERVED_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED_RELATIONSHIP? { get }
  var super_eAPPLIED_CONTRACT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CONTRACT_ASSIGNMENT? { get }
  var super_eDOCUMENT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_RELATIONSHIP? { get }
  var super_eVERSIONED_ACTION_REQUEST: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST? { get }
  var super_eORGANIZATIONAL_PROJECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT? { get }
  var super_eMEASURE_WITH_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT? { get }
  var super_eDATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE? { get }
  var super_eAPPROVAL_PERSON_ORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_PERSON_ORGANIZATION? { get }
  var super_ePROCESS_OPERATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROCESS_OPERATION? { get }
  var super_eUNCERTAINTY_MEASURE_WITH_UNIT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUNCERTAINTY_MEASURE_WITH_UNIT? { get }
  var super_ePRODUCT_DEFINITION_USAGE_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_USAGE_RELATIONSHIP? { get }
  var super_eVERIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERIFICATION? { get }
  var super_eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT? { get }
  var super_eEFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY? { get }
  var super_eSATISFIES_REQUIREMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSATISFIES_REQUIREMENT? { get }
  var super_ePRODUCT_CONCEPT_CONTEXT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_CONTEXT? { get }
  var super_eDIRECTED_ACTION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTED_ACTION_ASSIGNMENT? { get }
  var super_ePRODUCT_PROCESS_PLAN: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_PROCESS_PLAN? { get }
  var super_eBREAKDOWN_OF: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBREAKDOWN_OF? { get }
  var super_eASSIGNMENT_OBJECT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSIGNMENT_OBJECT_RELATIONSHIP? { get }
  var super_eATTRIBUTE_LANGUAGE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_LANGUAGE_ASSIGNMENT? { get }
  var super_eLOCAL_TIME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_TIME? { get }
  var super_eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED? { get }
  var super_ePRODUCT_DEFINITION_FORMATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION? { get }
  var super_eCONVERSION_BASED_UNIT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONVERSION_BASED_UNIT? { get }
  var super_ePRODUCT_DEFINITION_EFFECTIVITY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_EFFECTIVITY? { get }
  var super_eDEFINITIONAL_REPRESENTATION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDEFINITIONAL_REPRESENTATION_RELATIONSHIP? { get }
  var super_eMEASURE_QUALIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_QUALIFICATION? { get }
  var super_eINTERFACE_DEFINITION_FOR: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_DEFINITION_FOR? { get }
  var super_ePRODUCT_GROUP_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_GROUP_RELATIONSHIP? { get }
  var super_eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED? { get }
  var super_eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP? { get }
  var super_eCONFIGURATION_ITEM_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_ITEM_RELATIONSHIP? { get }
  var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP? { get }
  var super_eACTION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_ASSIGNMENT? { get }
  var super_eAPPROVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_ASSIGNMENT? { get }
  var super_eCLASSIFICATION_ASSIGNMENT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLASSIFICATION_ASSIGNMENT_RELATIONSHIP? { get }
  var super_eDOCUMENT_REFERENCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_REFERENCE? { get }
  var super_eCERTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION_ASSIGNMENT? { get }
  var super_eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? { get }
  var super_eLANGUAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLANGUAGE? { get }
  var super_eAPPLIED_ACTION_REQUEST_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_REQUEST_ASSIGNMENT? { get }
  var super_eSHAPE_ASPECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT? { get }
  var super_eACTION_PROPERTY_REPRESENTATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY_REPRESENTATION? { get }
  var super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT? { get }
  var super_eACTION_RESOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE? { get }
  var super_eAPPLIED_ORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATION_ASSIGNMENT? { get }
  var super_ePRODUCT_CONCEPT_FEATURE_CATEGORY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_CATEGORY? { get }
  var super_eACTION_REQUEST_SOLUTION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_REQUEST_SOLUTION? { get }
  var super_eTIME_INTERVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL_ASSIGNMENT? { get }
  var super_ePROCESS_PRODUCT_ASSOCIATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROCESS_PRODUCT_ASSOCIATION? { get }
  var super_eDIRECTED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTED_ACTION? { get }
  var super_eAPPLIED_APPROVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_APPROVAL_ASSIGNMENT? { get }
  var super_eREQUIREMENT_FOR_ACTION_RESOURCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_FOR_ACTION_RESOURCE? { get }
  var super_eSHAPE_FEATURE_DEFINITION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_FEATURE_DEFINITION_RELATIONSHIP? { get }
  var super_eACTION_RESOURCE_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE_RELATIONSHIP? { get }
  var super_eAPPROVAL_STATUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_STATUS? { get }
  var super_ePRODUCT_DESIGN_TO_INDIVIDUAL: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DESIGN_TO_INDIVIDUAL? { get }
  var super_ePERSON_AND_ORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION? { get }
  var super_eALTERNATE_PRODUCT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eALTERNATE_PRODUCT_RELATIONSHIP? { get }
  var super_ePRODUCT_CONCEPT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_RELATIONSHIP? { get }
  var super_eDOCUMENT_FILE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_FILE? { get }
  var super_eSECURITY_CLASSIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION? { get }
  var super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT? { get }
  var super_ePRODUCT_DEFINITION_CONTEXT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_CONTEXT? { get }
  var super_ePRODUCT_DEFINITION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP? { get }
  var super_eLOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCATION? { get }
  var super_ePRODUCT_DEFINITION_ELEMENT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_ELEMENT_RELATIONSHIP? { get }
  var super_eACTION_DIRECTIVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_DIRECTIVE? { get }
  var super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT? { get }
  var super_eDESCRIPTIVE_REPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDESCRIPTIVE_REPRESENTATION_ITEM? { get }
  var super_eADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eADDRESS? { get }
  var super_eCONTRACT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT_RELATIONSHIP? { get }
  var super_eDOCUMENT_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_TYPE? { get }
  var super_ePRODUCT_CONCEPT_FEATURE_ASSOCIATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_ASSOCIATION? { get }
  var super_eTIME_INTERVAL_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL_RELATIONSHIP? { get }
  var super_eAPPLIED_ACTION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_ASSIGNMENT? { get }
  var super_ePRODUCT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_RELATIONSHIP? { get }
  var super_eACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION? { get }
  var super_eINTERFACE_CONNECTOR_OCCURRENCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_OCCURRENCE? { get }
  var super_ePERSON_AND_ORGANIZATION_ADDRESS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION_ADDRESS? { get }
  var super_eREQUIREMENT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_ASSIGNMENT? { get }
  var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP? { get }
  var super_eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP? { get }
  var super_eEVENT_OCCURRENCE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE_ASSIGNMENT? { get }
  var super_eCHANGE_ELEMENT_SEQUENCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT_SEQUENCE? { get }
  var super_eACTION_DIRECTIVE_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_DIRECTIVE_RELATIONSHIP? { get }
  var super_eNAMED_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNAMED_UNIT? { get }
  var super_eCHARACTERIZED_OBJECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHARACTERIZED_OBJECT? { get }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var ASSIGNED_DOCUMENT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_USAGE_CONSTRAINT?  { get }
  var REQUEST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { get }
  var UNDIRECTED_LINK: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHAINED_REPRESENTATION_LINK>/*[1:nil]*/ )?  { get }
  var RANGE_ON_SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { get }
  var DERIVING_RELATIONSHIPS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_DERIVING_RELATIONSHIP>/*[1:nil]*/ )?  { get }
  var SECOND_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tSECOND_IN_MINUTE?  { get }
  var STYLE_CONTEXT: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSTYLE_CONTEXT_SELECT>/*[1:
    nil]*/ )?  { get }
  var RANGE_ON_SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { get }
  var SLOT_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var RELATED_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { get }
  var ATTRIBUTE_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sATTRIBUTE_TYPE?  { get }
  var END_EXIT_FACES: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[0:
    nil]*/ >/*[2:2]*/ )?  { get }
  var CONCENTRATION_EXPONENT: SDAI.REAL?  { get }
  var DIAMETER_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTOLERANCE_VALUE_OR_LIMITS_AND_FITS?  { get }
  var INDIRECTLY_PICKED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { get }
  var RANGE_ON_PAIR_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { get }
  var REPLICATE_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { get }
  var PEOPLE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON>/*[1:nil]*/ )?  { get }
  var PRODUCT_DEFINITIONAL: SDAI.LOGICAL { get }
  var ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var CURRENT_RESULT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { get }
  var ASSIGNED_STATE_OBSERVED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED?  { get }
  var ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT_ELEMENT>/*[1:nil]*/ )?  { get }
  var ASSIGNED_SECURITY_CLASSIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION?  { get }
  var DEPTH_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTOLERANCE_VALUE?  { get }
  var CFS_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE>/*[1:nil]*/ )?  { get }
  var CONTAINER: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_VIEW>/*[1:nil]*/ )?  { get }
  var REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { get }
  var CTRIANGLES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[10:10]*/ >/*[1:nil]*/ )?  { get }
  var RADIUS_LIST: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[2:
    nil]*/ )?  { get }
  var STREET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var CLOSED_INTERPOLATION: SDAI.LOGICAL { get }
  var ASSIGNED_EVENT_OCCURRENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { get }
  var ACCURACY_TYPES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ACCURACY_TYPE_NAME>/*[0:
    nil]*/ )?  { get }
  var ANGULAR_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var COUNTERDRILL_ANGLE_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTOLERANCE_VALUE?  { get }
  var OFFSET1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var ACTUAL_POINT_ON_CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_CURVE?  { get }
  var FLOOR_BLEND_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var PROPERTIES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROCESS_PROPERTY_ASSOCIATION>/*[
    1:nil]*/ )?  { get }
  var GENERALISED_MAJOR_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ASSIGNED_DIRECTED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTED_ACTION?  { get }
  var OFFSET2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var NO_OF_BYTES: SDAI.INTEGER?  { get }
  var ORGANIZATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION>/*[1:nil]*/ )?  { get }
  var MIDDLE_NAMES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { get }
  var CURVE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var FORM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTOLERANCE_ZONE_FORM?  { get }
  var MAJOR_ORIENTATION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var BASE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sGENERALIZED_SURFACE_SELECT?  { get }
  var CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var DIRECTIVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_DIRECTIVE?  { get }
  var CONTEXT_IDENTIFIER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var CONTENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDRAUGHTING_CALLOUT_ELEMENT>/*[1:
    nil]*/ )?  { get }
  var VSENSE: SDAI.BOOLEAN?  { get }
  var RELATING_PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_PROPERTY?  { get }
  var START_OF_NEXT_HATCH_LINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eONE_DIRECTION_REPEAT_FACTOR?  { get }
  var CURVE_FORM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nB_SPLINE_CURVE_FORM?  { get }
  var TRANSFORMATION_OPERATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTRANSFORMATION?  { get }
  var OVER_RIDDEN_STYLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTYLED_ITEM?  { get }
  var MEASURED_VALUE_FOR_INSPECTED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sEQUIVALENCE_MEASURED_VALUE_SELECT?  { get }
  var ASSIGNED_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE?  { get }
  var ITEM: SDAI.GENERIC_ENTITY?  { get }
  var RADIAL_ALIGNMENT: SDAI.BOOLEAN?  { get }
  var HATCH_LINE_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var SUFFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { get }
  var CONSTRAINED_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { get }
  var TANGENT_CONTACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTANGENT_CONTACT_TYPE?  { get }
  var SEGMENT_RADII: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[1:
    SEGMENTS]*/ )?  { get }
  var RIGHT_APPLIED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_RIGHT?  { get }
  var REALIZED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var DEPENDENT_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_ENVIRONMENT?  { get }
  var LEFT_OFFSET: SDAI.BOOLEAN?  { get }
  var PATCHES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE_PATCH>/*[1:nil]*/ )?  { get }
  var REPEAT_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { get }
  var ROW_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var TIP_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var TRANSLATION_LANGUAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLANGUAGE?  { get }
  var DETECTED_DIFFERENCE_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_DETECTED_DIFFERENCE_TYPE_NAME>/*[0:nil]*/ )?  { get }
  var HATCH_LINE_APPEARANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE_STYLE?  { get }
  var SWEPT_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { get }
  var NEXT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNEXT_ASSEMBLY_USAGE_OCCURRENCE?  { get }
  var ARC_LENGTH_DISTANCE_FACTOR: SDAI.REAL?  { get }
  var ROLE: SDAI.GENERIC_ENTITY?  { get }
  var PARENT_PT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { get }
  var OFFSET_DIRECTION_CONSTRAINED: SDAI.BOOLEAN?  { get }
  var THICKNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var N_U: SDAI.INTEGER?  { get }
  var DIRECTION_OF_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var TEE_SECTION_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var FILLET_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var RELATING_ORGANIZATIONAL_PROJECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT?  { get }
  var SCANNER_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var N_V: SDAI.INTEGER?  { get }
  var FIRST_TRIM_INTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRIM_INTENT?  { get }
  var OPERATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nBOOLEAN_OPERATOR?  { get }
  var SUBSKETCH_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_ELEMENT_SELECT>
    /*[1:nil]*/ )?  { get }
  var X_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { get }
  var SCANNED_POINTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSCANNED_DATA_ITEM>/*[1:nil]*/ )?  { get }
  var ENCLOSURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBOX_DOMAIN?  { get }
  var COUNTERSINK_DIAMETER: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  { get }
  var RELATING_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { get }
  var REFERENCE_DESIGNATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var FIXED_ATTRIBUTES: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINSTANCE_ATTRIBUTE_REFERENCE>/*[1:nil]*/ )?  { get }
  var PARAMETER_DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var COMPARING_SPECIFIED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { get }
  var RELATED_PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_PROPERTY?  { get }
  var SECOND_TRIM_INTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRIM_INTENT?  { get }
  var ZONE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOORDINATED_UNIVERSAL_TIME_OFFSET?  { get }
  var SHAPE_CRITERIA: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eA3MA_ASSEMBLY_AND_SHAPE_CRITERIA_RELATIONSHIP>/*[1:nil]*/ )?  { get }
  var SECOND_OPERAND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBOOLEAN_OPERAND?  { get }
  var SUBSTITUTE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE?  { get }
  var RELATED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { get }
  var TRIM_1: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTRIMMING_SELECT>/*[1:2]*/ )?  { get }
  var RANGE_ON_CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { get }
  var RELATED_PRODUCT_DEFINITION_FORMATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var CHARACTER_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANAR_EXTENT?  { get }
  var INNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var PROTRUSION_HEIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var DESIGNATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATERIAL_DESIGNATION?  { get }
  var TURN_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var REGION_COLOUR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLOUR?  { get }
  var DESIGN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCONFIGURATION_DESIGN_ITEM?  { get }
  var TRIM_2: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTRIMMING_SELECT>/*[1:2]*/ )?  { get }
  var RANGE_ON_CURVE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { get }
  var ANALYSIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var CONSTITUENT_AMOUNT: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_PRODUCT_COMPOSITION_VALUE>/*[1:nil]*/ )?  { get }
  var TILES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sFILL_AREA_STYLE_TILE_SHAPE_SELECT>/*[
    1:nil]*/ )?  { get }
  var OPERATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_ACTION_DEFINITION>
    /*[1:nil]*/ )?  { get }
  var TARGET_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var RELATED_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { get }
  var INSPECTED_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_ELEMENT_SELECT>
    /*[1:nil]*/ )?  { get }
  var ASSIGNED_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { get }
  var UPPER_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE?  { get }
  var RESOURCES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE>/*[1:nil]*/ )?  { get }
  var DATE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE?  { get }
  var ROW_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { get }
  var POCKET_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSYMBOL_TARGET?  { get }
  var EXTERNAL_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { get }
  var GEAR_RATIO: SDAI.REAL?  { get }
  var EXTERNAL_GROOVE: SDAI.BOOLEAN?  { get }
  var RELATED_ASCRIBABLE_STATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASCRIBABLE_STATE?  { get }
  var PERSON_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPERSON_ORGANIZATION_SELECT?  { get }
  var RANKING_RATIONALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var REPLICATED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMODIFIED_SOLID_WITH_PLACED_CONFIGURATION?  { get }
  var A: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var PARENT_VOLUME_SET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_VOLUME_SET?  { get }
  var SELECT_OUTER: SDAI.BOOLEAN?  { get }
  var DEFINITIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_DEFINITION>/*[1:
    nil]*/ )?  { get }
  var B: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var PNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var COMPONENT_SHAPE_ASPECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINTERNAL_OR_REFLECTED_SHAPE_ASPECT?  { get }
  var RELATING_IDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT?  { get }
  var C: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var V_SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { get }
  var SECURITY_LEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_LEVEL?  { get }
  var RELATED_VERSIONED_ACTION_REQUEST: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { get }
  var CLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var SCANNER_INFO: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSCANNER_PROPERTY>/*[1:nil]*/ )?  { get }
  var SILHOUETTED_MODEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSURFACE_OR_SOLID_MODEL?  { get }
  var SOURCES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLIGHT_SOURCE>/*[1:nil]*/ )?  { get }
  var SENSE_AGREEMENT: SDAI.BOOLEAN?  { get }
  var PARENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT?  { get }
  var EDGE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE?  { get }
  var BASIS_VOLUME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME?  { get }
  var TELEX_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var SWEPT_FACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE?  { get }
  var LINK_REPRESENTATION_ASSOCIATIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePAIR_REPRESENTATION_RELATIONSHIP>/*[1:nil]*/ )?  { get }
  var UPPER_LIMIT_ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var CM_LINK: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVARIATIONAL_CURRENT_REPRESENTATION_RELATIONSHIP?  { get }
  var ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var LOWER_LIMIT_RACK_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var LOOP_VERTEX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { get }
  var RELATING_CONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT?  { get }
  var PRODUCT_DATA_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var LAST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var T_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var PTS_PER_SUBLIST: SDAI.INTEGER?  { get }
  var END_CONDITIONS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBLEND_END_CONDITION_SELECT>
    /*[2:2]*/ )?  { get }
  var DEFINED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var RELATED_MESSAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE?  { get }
  var DEFINED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_PRODUCT_DEFINITION?  { get }
  var AXIS_POSITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS1_PLACEMENT?  { get }
  var ORIENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nORIENTED_TOLERANCE_ZONE_TYPE?  { get }
  var FACSIMILE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var RELATED_OBJECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_FEATURE_DEFINITION?  { get }
  var OF_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { get }
  var SBWM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSHELL>/*[1:nil]*/ )?  { get }
  var KNOT_VALUES: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tSPLINE_KNOT_VALUES?  { get }
  var DIMENSIONS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIMENSIONAL_EXPONENTS?  { get }
  var PITCH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var REGION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var PERMANENT_AGGREGATE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var TILING_PATTERN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTWO_DIRECTION_REPEAT_FACTOR?  { get }
  var PCURVE_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePCURVE?  { get }
  var OUTLINES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_FILL_AREA>/*[1:nil]*/ )?  { get }
  var REPRESENTATIONS_IN_CONTEXT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION>
    /*[1:nil]*/ )?  { get }
  var COMPARED_SPECIFIED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { get }
  var APPLIES_TO_PAIR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PAIR?  { get }
  var UPPER_LIMIT_ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var PRODUCT_DESIGN_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var CONICAL_TRANSITIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONICAL_STEPPED_HOLE_TRANSITION>/*[1:nil]*/ )?  { get }
  var ELECTRONIC_MAIL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var OF_SHAPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_SHAPE?  { get }
  var RANKING: SDAI.INTEGER?  { get }
  var REQUIRED_GENERAL_ACCURACY: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  { get }
  var REPORT_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { get }
  var STREET_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var SYMBOL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_SYMBOL_OCCURRENCE?  { get }
  var U1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var BEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var LEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var MONTH_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tMONTH_IN_YEAR_NUMBER?  { get }
  var INNER_BOUNDARY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCOMPOUND_INNER_AREA_BOUNDARY?  { get }
  var CLOSED_PATH: SDAI.LOGICAL { get }
  var MAKE_OR_BUY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nSOURCE?  { get }
  var U2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var MEASURED_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMEASURED_VALUE_SELECT?  { get }
  var POINT_COORDINATES: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  { get }
  var SKEWNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var TILING_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { get }
  var CHOSEN_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { get }
  var RELATING_RESOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE?  { get }
  var EFFECTIVITY_LOT_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var VOLUME_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME?  { get }
  var PROTRUSION_DRAFT_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var USED_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { get }
  var LOCAL_ORIGIN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var ATTRIBUTE_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var REFERENCE_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[0:
    nil]*/ )?  { get }
  var SCL: SDAI.REAL?  { get }
  var PURPOSE: SDAI.STRING?  { get }
  var QUALIFIERS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sVALUE_QUALIFIER>/*[1:nil]*/ )?  { get }
  var UNITS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT>/*[1:nil]*/ )?  { get }
  var PATH_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePATH?  { get }
  var LANGUAGE_INDICATION: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_LANGUAGE_ASSIGNMENT>/*[1:1]*/ )?  { get }
  var PLANE_OF_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANE?  { get }
  var RESOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_RESOURCE_DEFINITION?  { get }
  var PATTERN_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var TRANSFORM_ITEM_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sRIGID_PLACEMENT?  { get }
  var TEST_POINT_DISTANCE_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var PROTRUSION_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ASSOCIATED_SHAPE_REPRESENTATION: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION_ASSOCIATION>/*[0:1]*/ )?  { get }
  var CONSTRAINING_EXPRESSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXPRESSION?  { get }
  var SECOND_ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var RELATED_RESOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE?  { get }
  var CONCEPT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT?  { get }
  var COLOUR_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nCOLOUR_TYPE_ENUM?  { get }
  var POINT_OF_REFERENCE_HATCH_LINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var RELATING_STATE_TYPE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE>/*[1:nil]*/ )?  { get }
  var COMPARING_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { get }
  var TRANSFORM_ITEM_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sRIGID_PLACEMENT?  { get }
  var LOWER_LIMIT_SECOND_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var POCKET_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var RELATING_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { get }
  var ASSIGNED_DATE_AND_TIME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME?  { get }
  var EDGE_LIST: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORIENTED_EDGE>/*[1:nil]*/ )?  { get }
  var SIZE_IN_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var RADIUS_SECOND_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var THICKENED_FACE_LIST: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>
    /*[1:nil]*/ >/*[1:nil]*/ )?  { get }
  var UPPER_LIMIT_FIRST_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var DATUM_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATUM_SYSTEM?  { get }
  var CRITERION_REPORT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_EQUIVALENCE_INSPECTION_CRITERION_REPORT?  { get }
  var SIZE_IN_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var CORNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var RELATING_PRODUCT_DEFINITION_FORMATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var MARKET_SEGMENT_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ACTUAL_POINT_ON_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_CURVE?  { get }
  var RELATING_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var INTENSITIES: (SDAI.LIST<SDAI.REAL>/*[1:nil]*/ )?  { get }
  var LOWER_LIMIT_ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var IDENTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var PARENT_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var RELATING_CONFIGURATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_ITEM?  { get }
  var RELATED_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { get }
  var Y_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { get }
  var CONFIGURED_MECHANISM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMECHANISM_REPRESENTATION?  { get }
  var ACTUAL_PLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var LOWER_LIMIT_ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var USENSE: SDAI.BOOLEAN?  { get }
  var ASSIGNED_CLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLANGUAGE?  { get }
  var DISTANCE_FROM_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var SURFACE_FORM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nB_SPLINE_SURFACE_FORM?  { get }
  var AUTHORIZED_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { get }
  var PREVIOUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { get }
  var EFFECTIVITY_END_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { get }
  var FIRST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var COMPOSITION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ANNOTATED_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_CURVE_OCCURRENCE?  { get }
  var SEMI_IMAG_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var EQUIVALENT_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var PHI: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var THE_CALLOUT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDRAUGHTING_CALLOUT?  { get }
  var DOCUMENTATION_IDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT>/*[1:nil]*/ )?  { get }
  var SCANNER_IDENTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ESTABLISHED_BY_RELATIONSHIPS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_RELATIONSHIP>/*[1:nil]*/ )?  { get }
  var SLOT_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var EFFECTIVITY_LOT_SIZE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { get }
  var KNOT_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var COUNTERSINK_ANGLE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_PLANE_ANGLE_MEASURE_WITH_UNIT?  { get }
  var ASSIGNED_TIME_INTERVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { get }
  var PARENT_FACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE?  { get }
  var RIGHT_OFFSET_DISTANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var RELATION_TYPE: SDAI.STRING?  { get }
  var BASELINE_RATIO: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tRATIO_MEASURE?  { get }
  var ASSIGNED_CERTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION?  { get }
  var RIGHT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT?  { get }
  var CONVERSION_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { get }
  var RELATING_PRODUCT_CONCEPT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT?  { get }
  var GENERALISED_MINOR_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ASSIGNED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { get }
  var ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { get }
  var V2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var GROOVE_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var LINE_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var TREE_ROOT_EXPRESSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCSG_SELECT?  { get }
  var POINT_PARAMETER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var BASIS_EDGE_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE?  { get }
  var POCKET_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ITEM_CONCEPT_FEATURE: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_ASSOCIATION>/*[1:nil]*/ )?  { get }
  var PREFIX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nSI_PREFIX?  { get }
  var MINOR_ORIENTATION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var BASE_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var FIXED_CONSTITUENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATIVE_SHAPE_REPRESENTATION?  { get }
  var V1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var COLOUR_INDICES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[3:3]*/ >/*[1:nil]*/ )?  { get }
  var HELICAL_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var ASSIGNED_ACTION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { get }
  var BASE_EVENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { get }
  var LITERAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPRESENTABLE_TEXT?  { get }
  var CLOTHOID_CONSTANT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var PAIR_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var THE_PERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON?  { get }
  var BINARY_VALUE: SDAI.BINARY?  { get }
  var PARENT_FACE_SET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_FACE_SET?  { get }
  var INTERNAL_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var SPECIFICATION: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION>/*[1:nil]*/ )?  { get }
  var FILL_STYLE_TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { get }
  var POSITIVE_SIDE: SDAI.BOOLEAN?  { get }
  var ASSIGNED_ACTION_REQUEST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { get }
  var PLANNED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var STYLED_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_CURVE_OCCURRENCE?  { get }
  var AXIS3: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var CONSTITUENTS: (SDAI.LIST_UNIQUE<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATUM_REFERENCE_COMPARTMENT>/*[1:3]*/ )?  { get }
  var REPRESENTATION_ASSOCIATIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION_REPRESENTATION>/*[0:nil]*/ )?  { get }
  var PICKED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[1:nil]*/ )?  { get }
  var COLOURED_COORDINATE_VALUES: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOORDINATES_LIST?  { get }
  var AXIS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var AXIS1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var ASSIGNED_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var ARC_LENGTH_SEPARATION_FACTOR: SDAI.REAL?  { get }
  var OPEN_SHELL_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eOPEN_SHELL?  { get }
  var AUXILIARY_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAUXILIARY_GEOMETRIC_REPRESENTATION_ITEM>/*[0:nil]*/ )?  { get }
  var REVISION_IDENTIFIER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var SIZE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_SIZE?  { get }
  var BASE_SOLID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBASE_SOLID_SELECT?  { get }
  var DELETED_FACE_SET: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[1:nil]*/ )?  { get }
  var DAY_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDAY_IN_MONTH_NUMBER?  { get }
  var DRAFTED_EDGES: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE>/*[1:nil]*/ >
    /*[2:nil]*/ )?  { get }
  var SUCCESSOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var UPPER_INDEX_ON_CONTROL_POINTS: SDAI.INTEGER?  { get }
  var RELATING_VERSIONED_ACTION_REQUEST: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { get }
  var VERTEX_SHELL_EXTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX_LOOP?  { get }
  var ASSESSMENT_THRESHOLD_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eA3MA_EQUIVALENCE_CRITERION_ASSESSMENT_THRESHOLD_RELATIONSHIP?  { get }
  var COMPARED_ELEMENT_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  { get }
  var UPPER_INDEX_ON_KNOTS: SDAI.INTEGER?  { get }
  var OFFSET_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { get }
  var TESSELLATION_ACCURACY_PARAMETERS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTESSELLATION_ACCURACY_PARAMETER_ITEM>/*[1:nil]*/ )?  { get }
  var LEFT_OFFSET_DISTANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var SEGMENT_DEPTHS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[
    1:SEGMENTS]*/ )?  { get }
  var NEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { get }
  var QUALIFIED_MEASURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { get }
  var INPUT_SKEW_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var SKEW_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANE_ANGLE_MEASURE_WITH_UNIT?  { get }
  var RADIUS_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var COLLAR_DEPTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var UNIT_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { get }
  var FEATURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE?  { get }
  var ASSOCIATED_GEOMETRY: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPCURVE_OR_SURFACE>/*[1:
    2]*/ )?  { get }
  var MEMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_SELECT?  { get }
  var RELATED_IDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT?  { get }
  var REPRESENTED_JOINTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_JOINT>/*[1:nil]*/ )?  { get }
  var CLOSED_SHELL_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLOSED_SHELL?  { get }
  var ANGLE_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var EFFECTIVITY_PERIOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { get }
  var INDIVIDUAL_PRODUCT: SDAI.GENERIC_ENTITY?  { get }
  var BOUND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOOP?  { get }
  var DIRECTION_RATIOS: (SDAI.LIST<SDAI.REAL>/*[2:3]*/ )?  { get }
  var CLOSED_ENDS: (SDAI.LIST<SDAI.LOGICAL>/*[2:2]*/ )?  { get }
  var FBSM_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_FACE_SET>/*[1:nil]*/ )?  { get }
  var THE_DRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDERS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDER>/*[0:
    1]*/ )?  { get }
  var BASE_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var PARENT_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var RELATED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { get }
  var RELATED_EVENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { get }
  var COMPARED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { get }
  var DIAMETER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  { get }
  var EFFECTIVITY_START_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { get }
  var CONDITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONCEPT_FEATURE_RELATIONSHIP_WITH_CONDITION?  { get }
  var POSTAL_CODE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var EDGE_END: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { get }
  var SPOTFACE: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSPOTFACE_DEFINITION>/*[1:
    nil]*/ )?  { get }
  var POSTAL_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ITEM_CONCEPT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT?  { get }
  var BOX_HEIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var VIEW_WINDOW: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANAR_BOX?  { get }
  var UPPER_LIMIT_ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var RELATED_PRODUCT_CONCEPT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT?  { get }
  var UPPER_LIMIT_ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var RELATING_TIME_INTERVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { get }
  var LIFE_CYCLE_STAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var UPPER_LIMIT_ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var LINE_STRIP: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var GROOVE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var TIME_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_TIME?  { get }
  var ITEM_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCOMPOUND_ITEM_DEFINITION?  { get }
  var EXTERNAL_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var COUNTERDRILL_ANGLE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_PLANE_ANGLE_MEASURE_WITH_UNIT?  { get }
  var CVS_VOLUMES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME_WITH_FACES>/*[1:nil]*/ )?  { get }
  var SPHERE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var FIRST_ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var ASSIGNED_STATE_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE?  { get }
  var KIND: SDAI.GENERIC_ENTITY?  { get }
  var RELATING_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCATION?  { get }
  var PARAMETER_CURRENT_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMATHS_VALUE?  { get }
  var RANGE_ON_PAIR_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { get }
  var JOINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_JOINT?  { get }
  var ACTUAL_ROTATION_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var COUNTERSINK_ANGLE_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTOLERANCE_VALUE?  { get }
  var MEASURED_DATA_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_MEASURED_DATA_TYPE_NAME?  { get }
  var GAMMA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var FIRST_OFFSET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var URL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var REP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { get }
  var COORDINATE_SPACE_DIMENSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDIMENSION_COUNT?  { get }
  var OWNING_SKETCH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_TYPE_SELECT?  { get }
  var VIEW_WINDOW_CLIPPING: SDAI.BOOLEAN?  { get }
  var W_UPPER: SDAI.INTEGER?  { get }
  var ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var MODIFIERS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATUM_REFERENCE_MODIFIER>/*[1:nil]*/ )?  { get }
  var CURVE_3D: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var DRAFT_ANGLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE>/*[2:nil]*/ )?  { get }
  var DETERMINATION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var LINE_STRIP_FACE2: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var UPPER_LIMIT_RACK_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var RELATED_STATE_TYPE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE>/*[1:nil]*/ )?  { get }
  var RELATING_OBJECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_FEATURE_DEFINITION?  { get }
  var MAP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_MAP?  { get }
  var GEOMETRIC_MODEL_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPATH_OR_COMPOSITE_CURVE?  { get }
  var LINE_STRIP_FACE1: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var FACE_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var FACE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE?  { get }
  var BASE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var LOWER_LIMIT_ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var RELATING_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { get }
  var VERTEX_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { get }
  var LOWER_LIMIT_ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var COLUMN_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { get }
  var RELATED_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY?  { get }
  var EDGE_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var LOWER_LIMIT_ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var THICKNESS_LIST: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE>/*[1:nil]*/ )?  { get }
  var COLUMN_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var PROTRUSION_CORNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var WIRE_SHELL_EXTENT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOOP>/*[1:nil]*/ )?  { get }
  var MAGNITUDE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var CURVE_PLANE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANE?  { get }
  var SPREAD_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { get }
  var SWEPT_AREA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE_BOUNDED_SURFACE?  { get }
  var SCULPTURING_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sGENERALIZED_SURFACE_SELECT?  { get }
  var LOWER_LIMIT_FIRST_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var CONSEQUENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var ROOT: SDAI.GENERIC_ENTITY?  { get }
  var STYLES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_STYLE_ASSIGNMENT>/*[0:
    nil]*/ )?  { get }
  var EFFECTIVITY_END_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var RELATING_EVENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { get }
  var CONE_ANGLE1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var PLACEMENT_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLACEMENT?  { get }
  var B_SPLINES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_B_SPLINE>/*[2:nil]*/ )?  { get }
  var RELATING_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { get }
  var PROCESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_PROCESS?  { get }
  var NOTABLE_INSTANCES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEQUIVALENCE_NOTABLE_INSTANCE>/*[1:nil]*/ )?  { get }
  var ASSIGNED_CONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT?  { get }
  var EXPLICIT_SHAPE: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eITEM_IDENTIFIED_REPRESENTATION_USAGE>/*[0:nil]*/ )?  { get }
  var COMPOSITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_GROUP?  { get }
  var THE_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { get }
  var COLOUR_VALUES: (SDAI.LIST<SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tUNSIGNED_8_BIT_INTEGER>/*[3:4]*/ >/*[1:nil]*/ )?  { get }
  var CONE_ANGLE2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var THICKNESS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var COMPONENT_RELATIONSHIPS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_RELATIONSHIP>/*[2:nil]*/ )?  { get }
  var RELATED_ORGANIZATIONAL_PROJECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT?  { get }
  var SCANNER_UNCERTAINTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var EBWM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_EDGE_SET>/*[1:nil]*/ )?  { get }
  var W_B_SPLINES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_B_SPLINE>/*[8:nil]*/ )?  { get }
  var SEMI_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ASSIGNED_PERSON_AND_ORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION?  { get }
  var FIXED_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var MINUTE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tMINUTE_IN_HOUR?  { get }
  var BASE_COMMON_DATUM_LIST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tCOMMON_DATUM_LIST?  { get }
  var RELATING_STATE_OBSERVED: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED>/*[1:
    nil]*/ )?  { get }
  var PRODUCT_DEFINITIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROCESS_PRODUCT_ASSOCIATION>/*[1:nil]*/ )?  { get }
  var RELATING_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { get }
  var STROKES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE>/*[1:nil]*/ )?  { get }
  var SECOND_OFFSET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var REPRESENTATION_TYPES: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_REPRESENTATION_TYPE>/*[0:nil]*/ )?  { get }
  var ASSIGNED_REQUEST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { get }
  var NODES: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION>/*[2:nil]*/ )?  { get }
  var EDGE_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { get }
  var NPOINTS: SDAI.INTEGER?  { get }
  var W_DEGREE: SDAI.INTEGER?  { get }
  var HIDDEN_LINE_SURFACE_REMOVAL: SDAI.BOOLEAN?  { get }
  var MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var RELATED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var ALPHA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var BETA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var HOUR_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tHOUR_IN_DAY?  { get }
  var SUBLISTS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_CLOUD_DATASET>/*[2:nil]*/ )?  { get }
  var OFFSET_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nPARALLEL_OFFSET_TYPE?  { get }
  var RELATED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { get }
  var MIRROR_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sLINEAR_GEOMETRY_CONSTRAINT_ELEMENT?  { get }
  var RELATING_DOCUMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT?  { get }
  var LIGHT_COLOUR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLOUR?  { get }
  var EDGE_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var LENGTH_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var PROTRUSION_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var APPLIED_GENERAL_ACCURACY: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  { get }
  var CONTEXT_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var TRANSITION_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { get }
  var PROTRUSION_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var RELATING_MESSAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE?  { get }
  var SECOND_REPEAT_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { get }
  var SLOT_CENTRELINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBOUNDED_CURVE?  { get }
  var FEATURE_BASIS_RELATIONSHIP: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_RELATIONSHIP>/*[1:nil]*/ )?  { get }
  var RADIUS_FIRST_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var SEMI_APEX_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { get }
  var ALTERNATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { get }
  var CONTEXT_OF_ITEMS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_CONTEXT?  { get }
  var BLENDED_EDGES: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE>/*[1:nil]*/ )?  { get }
  var REP_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sREPRESENTATION_OR_REPRESENTATION_REFERENCE?  { get }
  var SUPPRESSED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[0:
    nil]*/ )?  { get }
  var REP_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sREPRESENTATION_OR_REPRESENTATION_REFERENCE?  { get }
  var PARAMETER_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { get }
  var VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var TOWN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var SKETCH_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_BASIS_SELECT?  { get }
  var SBSM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSHELL>/*[1:nil]*/ )?  { get }
  var POINT_PARAMETER_W: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var ASSOCIATED_VARIABLE_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eENVIRONMENT?  { get }
  var OUTER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLOSED_SHELL?  { get }
  var POSITION_COORDS: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  { get }
  var SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var COUNTRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var DIRECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nDIRECTED_TOLERANCE_ZONE_TYPE?  { get }
  var RELATED_SHAPE_ASPECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT?  { get }
  var SPOTFACE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  { get }
  var RELATED_CONFIGURATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_ITEM?  { get }
  var EDGE_FUNCTION_LIST: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nBLEND_RADIUS_VARIATION_TYPE>/*[1:nil]*/ )?  { get }
  var CES_EDGES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE>/*[1:nil]*/ )?  { get }
  var ASSOCIATED_LINK_REPRESENTATIONS_1: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  { get }
  var SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var ANGLE_SELECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nANGLE_RELATOR?  { get }
  var RELATED_TIME_INTERVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { get }
  var RESPONSIBLE_ORGANIZATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION>/*[1:
    nil]*/ )?  { get }
  var CONSTRAINT_GROUP: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCONSTRAINT_GROUP_MEMBER>
    /*[2:nil]*/ )?  { get }
  var VIEW_REFERENCE_SYSTEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var OF_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { get }
  var EFFECTIVITY_START_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var REPRESENTATION_RELATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PROPERTY_DEFINITION_REPRESENTATION?  { get }
  var RELATED_REPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sANGLE_DIRECTION_REFERENCE_SELECT?  { get }
  var PRODUCT_DEFINITION_OCCURRENCE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var ASSOCIATED_LINK_REPRESENTATIONS_2: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  { get }
  var ASSIGNED_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY?  { get }
  var DIRECTED_LINK: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_RELATIONSHIP>
    /*[1:nil]*/ )?  { get }
  var INTERSECTED_MODEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSURFACE_OR_SOLID_MODEL?  { get }
  var IMPLICIT_OUTER: SDAI.BOOLEAN?  { get }
  var UPPER_LIMIT_SECOND_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var DEFINING_TOLERANCE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTOLERANCE_ZONE_TARGET>
    /*[1:nil]*/ )?  { get }
  var TELEPHONE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ASSIGNED_DOCUMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT?  { get }
  var NEUTRAL_SKETCH_SEMANTICS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nCURVES_OR_AREA?  { get }
  var W_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var YEAR_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tYEAR_NUMBER?  { get }
  var SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { get }
  var RELATED_STATE_OBSERVED: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED>/*[1:
    nil]*/ )?  { get }
  var REQUESTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST>/*[1:nil]*/ )?  { get }
  var INSPECTED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_EQUIVALENCE_INSPECTED_ELEMENT_PAIR?  { get }
  var EXTREME_INSTANCES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTREME_INSTANCE>/*[1:
    nil]*/ )?  { get }
  var EXIT_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[1:nil]*/ )?  { get }
  var OFFSET_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var MARKET_CONTEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_CONTEXT?  { get }
  var REPRESENTED_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK?  { get }
  var REPRESENTED_TOPOLOGY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sKINEMATIC_TOPOLOGY_REPRESENTATION_SELECT?  { get }
  var POINT_INDEX: SDAI.INTEGER?  { get }
  var UNCERTAINTY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUNCERTAINTY_MEASURE_WITH_UNIT>
    /*[1:nil]*/ )?  { get }
  var CONE_BASE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var ASSIGNED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { get }
  var VALUE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMEASURE_VALUE?  { get }
  var PERMANENT_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var DIR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { get }
  var ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var COLLECTED_TEXT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTEXT_OR_CHARACTER>/*[2:nil]*/ )?  { get }
  var ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var PLACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var COMMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var ACTUAL_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var BASIS_FACE_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE?  { get }
  var RELATING_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY?  { get }
  var RELATED_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCATION?  { get }
  var MAPPING_SOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_MAP?  { get }
  var FOCAL_DIST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var RELATING_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { get }
  var RADIUS1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var PERSPECTIVE_OF_VOLUME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVIEW_VOLUME?  { get }
  var CONFIGURATION: SDAI.GENERIC_ENTITY?  { get }
  var RADIUS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var SPOTFACE_RADIUS_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTOLERANCE_VALUE?  { get }
  var RELATED_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { get }
  var MAPPING_TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM?  { get }
  var POINT_3: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var RELATED_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { get }
  var POINT_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var POINT_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var RANGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTOLERANCE_METHOD_DEFINITION?  { get }
  var KNOT_W_UPPER: SDAI.INTEGER?  { get }
  var DEPTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  { get }
  var CHILDREN: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTESSELLATED_ITEM>/*[1:nil]*/ )?  { get }
  var RELATING_ASCRIBABLE_STATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASCRIBABLE_STATE?  { get }
  var COUNTERSINK_DIAMETER_TOLERANCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTOLERANCE_VALUE_OR_LIMITS_AND_FITS?  { get }
  var RELATING_REPRESENTATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sORIENTATION_BASIS_SELECT?  { get }
  var BASIS_RELATIONSHIPS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_DERIVING_RELATIONSHIP>/*[1:nil]*/ )?  { get }
  var ASSIGNED_ORGANIZATIONAL_PROJECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT?  { get }
  var VIEW_DIRECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var MOTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PATH?  { get }
  var RELATING_SHAPE_ASPECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT?  { get }
  var RELATED_CONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT?  { get }
  var PREFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { get }
  var PARENT_SOLID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSOLID_MODEL?  { get }
  var POINT_4: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var TOLERANCED_DIMENSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDIMENSIONAL_CHARACTERISTIC?  { get }
  var REPRESENTED_MECHANISM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMECHANISM_REPRESENTATION?  { get }
  var ACTUAL_POINT_ON_SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_SURFACE?  { get }
  var NEGATIVE_DIRECTION: SDAI.BOOLEAN?  { get }
  var PREDECESSOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var FIRST_OPERAND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBOOLEAN_OPERAND?  { get }
  var ACTUAL_POINT_ON_SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_SURFACE?  { get }
  var EXTRUSION_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { get }
  var RELATING_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { get }
  var COMPARING_ELEMENT_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  { get }
  var VOIDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORIENTED_CLOSED_SHELL>/*[1:nil]*/ )?  { get }
  var OFFSET: SDAI.GENERIC_ENTITY?  { get }
  var RELATING_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { get }
  var CONE_APEX_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var POLYGON: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT>/*[3:nil]*/ )?  { get }
  var U_SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { get }
  var PRODUCT_DESIGN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { get }
  var RELATED_DOCUMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT?  { get }
  var DIM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDIMENSION_COUNT?  { get }
  var LINE_STRIPS: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ >/*[1:nil]*/ )?  { get }
  var SMALL_VECTOR_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var APPLIED_VALUES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_REPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { get }
  var TARGET_BASIS_RELATIONSHIP: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_RELATIONSHIP>/*[1:nil]*/ )?  { get }
  var ASSIGNED_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { get }
  var FORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var FONT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sFONT_SELECT?  { get }
}

public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sCLASSIFICATION_ITEM__subtype: 
  AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sCLASSIFICATION_ITEM__type, SDAIDefinedType
where Supertype: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sCLASSIFICATION_ITEM__type
{}

public extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sCLASSIFICATION_ITEM__subtype {
  //MARK: CONSTRUCTORS
  init?(possiblyFrom complex: SDAI.ComplexEntity?) {
    self.init(fundamental: FundamentalType(possiblyFrom: complex))
  }

  init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?) {
    self.init(fundamental: FundamentalType(possiblyFrom: underlyingType))
  }

  init?<G: SDAIGenericType>(fromGeneric generic: G?) {
    self.init(fundamental: FundamentalType.convert(fromGeneric: generic))
  }

  //MARK: GROUP REFERENCES
  var super_sCLASSIFIED_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCLASSIFIED_ITEM? { rep.super_sCLASSIFIED_ITEM }
  var super_eGROUP_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP_RELATIONSHIP? { rep.super_eGROUP_RELATIONSHIP }
  var super_ePLUS_MINUS_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLUS_MINUS_TOLERANCE? { rep.super_ePLUS_MINUS_TOLERANCE }
  var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT? { rep.super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT }
  var super_eREPRESENTATION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_RELATIONSHIP? { rep.super_eREPRESENTATION_RELATIONSHIP }
  var super_eDATE_AND_TIME: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME? { rep.super_eDATE_AND_TIME }
  var super_eGENERIC_PROPERTY_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERIC_PROPERTY_RELATIONSHIP? { rep.super_eGENERIC_PROPERTY_RELATIONSHIP }
  var super_eRETENTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRETENTION? { rep.super_eRETENTION }
  var super_eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP? { rep.super_eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP }
  var super_eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE? { rep.super_eASSEMBLY_COMPONENT_USAGE_SUBSTITUTE }
  var super_eEVENT_OCCURRENCE_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE_RELATIONSHIP? { rep.super_eEVENT_OCCURRENCE_RELATIONSHIP }
  var super_eMATERIAL_DESIGNATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATERIAL_DESIGNATION? { rep.super_eMATERIAL_DESIGNATION }
  var super_eORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION_ASSIGNMENT? { rep.super_eORGANIZATION_ASSIGNMENT }
  var super_eREPRESENTATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION? { rep.super_eREPRESENTATION }
  var super_eSTATE_OBSERVED_ROLE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED_ROLE? { rep.super_eSTATE_OBSERVED_ROLE }
  var super_eENVELOPE_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eENVELOPE_RELATIONSHIP? { rep.super_eENVELOPE_RELATIONSHIP }
  var super_eENVELOPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eENVELOPE? { rep.super_eENVELOPE }
  var super_eACTION_RESOURCE_REQUIREMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE_REQUIREMENT? { rep.super_eACTION_RESOURCE_REQUIREMENT }
  var super_eREQUIREMENT_SOURCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_SOURCE? { rep.super_eREQUIREMENT_SOURCE }
  var super_eINFORMATION_USAGE_RIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT? { rep.super_eINFORMATION_USAGE_RIGHT }
  var super_eAPPLIED_IDENTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_IDENTIFICATION_ASSIGNMENT? { rep.super_eAPPLIED_IDENTIFICATION_ASSIGNMENT }
  var super_eEFFECTIVITY_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY_RELATIONSHIP? { rep.super_eEFFECTIVITY_RELATIONSHIP }
  var super_eORGANIZATION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION_RELATIONSHIP? { rep.super_eORGANIZATION_RELATIONSHIP }
  var super_eALTERNATIVE_SOLUTION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eALTERNATIVE_SOLUTION_RELATIONSHIP? { rep.super_eALTERNATIVE_SOLUTION_RELATIONSHIP }
  var super_eGENERAL_FEATURE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_FEATURE? { rep.super_eGENERAL_FEATURE }
  var super_eINTERFACE_DEFINITION_CONNECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_DEFINITION_CONNECTION? { rep.super_eINTERFACE_DEFINITION_CONNECTION }
  var super_eORGANIZATIONAL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_ADDRESS? { rep.super_eORGANIZATIONAL_ADDRESS }
  var super_ePERSONAL_ADDRESS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSONAL_ADDRESS? { rep.super_ePERSONAL_ADDRESS }
  var super_eSHAPE_ASPECT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_RELATIONSHIP? { rep.super_eSHAPE_ASPECT_RELATIONSHIP }
  var super_eEFFECTIVITY_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY_ASSIGNMENT? { rep.super_eEFFECTIVITY_ASSIGNMENT }
  var super_eAPPLIED_USAGE_RIGHT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_USAGE_RIGHT? { rep.super_eAPPLIED_USAGE_RIGHT }
  var super_eCHANGE_GROUP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_GROUP? { rep.super_eCHANGE_GROUP }
  var super_eINFORMATION_RIGHT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_RIGHT? { rep.super_eINFORMATION_RIGHT }
  var super_eAPPLIED_CERTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CERTIFICATION_ASSIGNMENT? { rep.super_eAPPLIED_CERTIFICATION_ASSIGNMENT }
  var super_eINTERFACE_CONNECTOR_AS_PLANNED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_AS_PLANNED? { rep.super_eINTERFACE_CONNECTOR_AS_PLANNED }
  var super_ePROPERTY_DEFINITION_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION_REPRESENTATION? { rep.super_ePROPERTY_DEFINITION_REPRESENTATION }
  var super_eSECURITY_CLASSIFICATION_LEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_LEVEL? { rep.super_eSECURITY_CLASSIFICATION_LEVEL }
  var super_eAPPLIED_TIME_INTERVAL_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_TIME_INTERVAL_ASSIGNMENT? { rep.super_eAPPLIED_TIME_INTERVAL_ASSIGNMENT }
  var super_eEVENT_OCCURRENCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE? { rep.super_eEVENT_OCCURRENCE }
  var super_eEVALUATED_CHARACTERISTIC: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVALUATED_CHARACTERISTIC? { rep.super_eEVALUATED_CHARACTERISTIC }
  var super_eLOCATION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCATION_RELATIONSHIP? { rep.super_eLOCATION_RELATIONSHIP }
  var super_eACTION_REQUEST_STATUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_REQUEST_STATUS? { rep.super_eACTION_REQUEST_STATUS }
  var super_ePERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON? { rep.super_ePERSON }
  var super_eSTATE_TYPE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE? { rep.super_eSTATE_TYPE }
  var super_eINTERFACE_CONNECTOR_DESIGN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_DESIGN? { rep.super_eINTERFACE_CONNECTOR_DESIGN }
  var super_eACTION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RELATIONSHIP? { rep.super_eACTION_RELATIONSHIP }
  var super_eAPPROVAL_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_RELATIONSHIP? { rep.super_eAPPROVAL_RELATIONSHIP }
  var super_eCHARACTERIZED_OBJECT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHARACTERIZED_OBJECT_RELATIONSHIP? { rep.super_eCHARACTERIZED_OBJECT_RELATIONSHIP }
  var super_eCERTIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION? { rep.super_eCERTIFICATION }
  var super_eMEASURE_REPRESENTATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_REPRESENTATION_ITEM? { rep.super_eMEASURE_REPRESENTATION_ITEM }
  var super_eIDENTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT? { rep.super_eIDENTIFICATION_ASSIGNMENT }
  var super_ePROPERTY_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION? { rep.super_ePROPERTY_DEFINITION }
  var super_eSTATE_TYPE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE_ASSIGNMENT? { rep.super_eSTATE_TYPE_ASSIGNMENT }
  var super_eORGANIZATIONAL_PROJECT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT_RELATIONSHIP? { rep.super_eORGANIZATIONAL_PROJECT_RELATIONSHIP }
  var super_eTYPE_QUALIFIER: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTYPE_QUALIFIER? { rep.super_eTYPE_QUALIFIER }
  var super_eAPPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL? { rep.super_eAPPROVAL }
  var super_eSTRUCTURED_MESSAGE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE? { rep.super_eSTRUCTURED_MESSAGE }
  var super_eVALIDATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVALIDATION? { rep.super_eVALIDATION }
  var super_eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP? { rep.super_eAPPLIED_CLASSIFICATION_ASSIGNMENT_RELATIONSHIP }
  var super_ePRODUCT_CONCEPT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT? { rep.super_ePRODUCT_CONCEPT }
  var super_eGROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP? { rep.super_eGROUP }
  var super_ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL? { rep.super_ePRODUCT_DESIGN_VERSION_TO_INDIVIDUAL }
  var super_eCONFIGURATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_ITEM? { rep.super_eCONFIGURATION_ITEM }
  var super_eINTERFACE_CONNECTOR_AS_REALIZED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_AS_REALIZED? { rep.super_eINTERFACE_CONNECTOR_AS_REALIZED }
  var super_eMESSAGE_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMESSAGE_RELATIONSHIP? { rep.super_eMESSAGE_RELATIONSHIP }
  var super_ePROCESS_PLAN: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROCESS_PLAN? { rep.super_ePROCESS_PLAN }
  var super_eAPPLICATION_CONTEXT_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLICATION_CONTEXT_ELEMENT? { rep.super_eAPPLICATION_CONTEXT_ELEMENT }
  var super_eREPRESENTATION_CONTEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_CONTEXT? { rep.super_eREPRESENTATION_CONTEXT }
  var super_eCLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLASS? { rep.super_eCLASS }
  var super_eDESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP? { rep.super_eDESCRIPTION_TEXT_ASSIGNMENT_RELATIONSHIP }
  var super_eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? { rep.super_eDOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT }
  var super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT? { rep.super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT }
  var super_eANALYSIS_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANALYSIS_ASSIGNMENT? { rep.super_eANALYSIS_ASSIGNMENT }
  var super_eAPPLIED_EFFECTIVITY_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EFFECTIVITY_ASSIGNMENT? { rep.super_eAPPLIED_EFFECTIVITY_ASSIGNMENT }
  var super_eSTATE_OBSERVED_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED_ASSIGNMENT? { rep.super_eSTATE_OBSERVED_ASSIGNMENT }
  var super_eSTATE_TYPE_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE_RELATIONSHIP? { rep.super_eSTATE_TYPE_RELATIONSHIP }
  var super_eAPPLIED_DATE_AND_TIME_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DATE_AND_TIME_ASSIGNMENT? { rep.super_eAPPLIED_DATE_AND_TIME_ASSIGNMENT }
  var super_eACTION_METHOD: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD? { rep.super_eACTION_METHOD }
  var super_eGROUP_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP_ASSIGNMENT? { rep.super_eGROUP_ASSIGNMENT }
  var super_ePRODUCT_DEFINITION_PROCESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_PROCESS? { rep.super_ePRODUCT_DEFINITION_PROCESS }
  var super_eCONFIGURATION_DESIGN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_DESIGN? { rep.super_eCONFIGURATION_DESIGN }
  var super_eCONTEXT_DEPENDENT_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTEXT_DEPENDENT_UNIT? { rep.super_eCONTEXT_DEPENDENT_UNIT }
  var super_eEXECUTED_ACTION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXECUTED_ACTION? { rep.super_eEXECUTED_ACTION }
  var super_ePRODUCT_DEFINITION_RELATIONSHIP_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP_RELATIONSHIP? { rep.super_ePRODUCT_DEFINITION_RELATIONSHIP_RELATIONSHIP }
  var super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP? { rep.super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP }
  var super_eGENERAL_PROPERTY_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_PROPERTY_RELATIONSHIP? { rep.super_eGENERAL_PROPERTY_RELATIONSHIP }
  var super_eCONTRACT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT_ASSIGNMENT? { rep.super_eCONTRACT_ASSIGNMENT }
  var super_eDATE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_ASSIGNMENT? { rep.super_eDATE_ASSIGNMENT }
  var super_eCHARACTERIZED_CLASS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHARACTERIZED_CLASS? { rep.super_eCHARACTERIZED_CLASS }
  var super_ePRODUCT_CONCEPT_FEATURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE? { rep.super_ePRODUCT_CONCEPT_FEATURE }
  var super_eDESCRIPTION_TEXT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDESCRIPTION_TEXT_ASSIGNMENT? { rep.super_eDESCRIPTION_TEXT_ASSIGNMENT }
  var super_eAPPLIED_DATE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DATE_ASSIGNMENT? { rep.super_eAPPLIED_DATE_ASSIGNMENT }
  var super_ePERSON_AND_ORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION_ASSIGNMENT? { rep.super_ePERSON_AND_ORGANIZATION_ASSIGNMENT }
  var super_eSHAPE_FEATURE_DEFINITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_FEATURE_DEFINITION? { rep.super_eSHAPE_FEATURE_DEFINITION }
  var super_eACTION_PROPERTY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY? { rep.super_eACTION_PROPERTY }
  var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_IDENTIFICATION_ASSIGNMENT? { rep.super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT }
  var super_ePRODUCT_DEFINITION_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_USAGE? { rep.super_ePRODUCT_DEFINITION_USAGE }
  var super_eACTION_REQUEST_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_REQUEST_ASSIGNMENT? { rep.super_eACTION_REQUEST_ASSIGNMENT }
  var super_eORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION? { rep.super_eORGANIZATION }
  var super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_INEFFECTIVITY_ASSIGNMENT? { rep.super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT }
  var super_eDERIVED_UNIT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT? { rep.super_eDERIVED_UNIT }
  var super_eORGANIZATIONAL_PROJECT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT_ASSIGNMENT? { rep.super_eORGANIZATIONAL_PROJECT_ASSIGNMENT }
  var super_eAPPLIED_ACTION_METHOD_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_METHOD_ASSIGNMENT? { rep.super_eAPPLIED_ACTION_METHOD_ASSIGNMENT }
  var super_eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT? { rep.super_eMULTI_LANGUAGE_ATTRIBUTE_ASSIGNMENT }
  var super_eATTRIBUTE_CLASSIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_CLASSIFICATION_ASSIGNMENT? { rep.super_eATTRIBUTE_CLASSIFICATION_ASSIGNMENT }
  var super_ePRODUCT_GROUP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_GROUP? { rep.super_ePRODUCT_GROUP }
  var super_eGENERAL_PROPERTY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_PROPERTY? { rep.super_eGENERAL_PROPERTY }
  var super_eATTRIBUTE_VALUE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_VALUE_ASSIGNMENT? { rep.super_eATTRIBUTE_VALUE_ASSIGNMENT }
  var super_eCALENDAR_DATE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCALENDAR_DATE? { rep.super_eCALENDAR_DATE }
  var super_eSTATE_OBSERVED: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED? { rep.super_eSTATE_OBSERVED }
  var super_eFEATURE_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFEATURE_DEFINITION? { rep.super_eFEATURE_DEFINITION }
  var super_eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED? { rep.super_eINTERFACE_CONNECTOR_PLANNED_TO_REALIZED }
  var super_eRESOURCE_PROPERTY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRESOURCE_PROPERTY? { rep.super_eRESOURCE_PROPERTY }
  var super_eREPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION? { rep.super_eREPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION }
  var super_ePRODUCT_GROUP_MEMBERSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_GROUP_MEMBERSHIP? { rep.super_ePRODUCT_GROUP_MEMBERSHIP }
  var super_eBREAKDOWN_CONTEXT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBREAKDOWN_CONTEXT? { rep.super_eBREAKDOWN_CONTEXT }
  var super_eVERSIONED_ACTION_REQUEST_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST_RELATIONSHIP? { rep.super_eVERSIONED_ACTION_REQUEST_RELATIONSHIP }
  var super_ePRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION? { rep.super_ePRODUCT_DEFINITION }
  var super_eINTERFACE_CONNECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTION? { rep.super_eINTERFACE_CONNECTION }
  var super_eSECURITY_CLASSIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_ASSIGNMENT? { rep.super_eSECURITY_CLASSIFICATION_ASSIGNMENT }
  var super_eLINK_MOTION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLINK_MOTION_RELATIONSHIP? { rep.super_eLINK_MOTION_RELATIONSHIP }
  var super_ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE? { rep.super_ePRODUCT_CONCEPT_FEATURE_CATEGORY_USAGE }
  var super_eAPPLIED_DOCUMENT_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DOCUMENT_REFERENCE? { rep.super_eAPPLIED_DOCUMENT_REFERENCE }
  var super_eEVIDENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVIDENCE? { rep.super_eEVIDENCE }
  var super_eBREAKDOWN_ELEMENT_REALIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBREAKDOWN_ELEMENT_REALIZATION? { rep.super_eBREAKDOWN_ELEMENT_REALIZATION }
  var super_eREPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM? { rep.super_eREPRESENTATION_ITEM }
  var super_eACTION_METHOD_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD_RELATIONSHIP? { rep.super_eACTION_METHOD_RELATIONSHIP }
  var super_eASCRIBABLE_STATE_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASCRIBABLE_STATE_RELATIONSHIP? { rep.super_eASCRIBABLE_STATE_RELATIONSHIP }
  var super_eUSAGE_ASSOCIATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUSAGE_ASSOCIATION? { rep.super_eUSAGE_ASSOCIATION }
  var super_eCONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT? { rep.super_eCONTRACT }
  var super_eDOCUMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT? { rep.super_eDOCUMENT }
  var super_eIN_ZONE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIN_ZONE? { rep.super_eIN_ZONE }
  var super_eACTION_METHOD_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD_ASSIGNMENT? { rep.super_eACTION_METHOD_ASSIGNMENT }
  var super_eDATE_AND_TIME_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME_ASSIGNMENT? { rep.super_eDATE_AND_TIME_ASSIGNMENT }
  var super_eCONFIGURATION_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_EFFECTIVITY? { rep.super_eCONFIGURATION_EFFECTIVITY }
  var super_ePRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT? { rep.super_ePRODUCT }
  var super_eMATERIAL_DESIGNATION_CHARACTERIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATERIAL_DESIGNATION_CHARACTERIZATION? { rep.super_eMATERIAL_DESIGNATION_CHARACTERIZATION }
  var super_eSTATE_OBSERVED_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED_RELATIONSHIP? { rep.super_eSTATE_OBSERVED_RELATIONSHIP }
  var super_eAPPLIED_CONTRACT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CONTRACT_ASSIGNMENT? { rep.super_eAPPLIED_CONTRACT_ASSIGNMENT }
  var super_eDOCUMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_RELATIONSHIP? { rep.super_eDOCUMENT_RELATIONSHIP }
  var super_eVERSIONED_ACTION_REQUEST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST? { rep.super_eVERSIONED_ACTION_REQUEST }
  var super_eORGANIZATIONAL_PROJECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT? { rep.super_eORGANIZATIONAL_PROJECT }
  var super_eMEASURE_WITH_UNIT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT? { rep.super_eMEASURE_WITH_UNIT }
  var super_eDATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE? { rep.super_eDATE }
  var super_eAPPROVAL_PERSON_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_PERSON_ORGANIZATION? { rep.super_eAPPROVAL_PERSON_ORGANIZATION }
  var super_ePROCESS_OPERATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROCESS_OPERATION? { rep.super_ePROCESS_OPERATION }
  var super_eUNCERTAINTY_MEASURE_WITH_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUNCERTAINTY_MEASURE_WITH_UNIT? { rep.super_eUNCERTAINTY_MEASURE_WITH_UNIT }
  var super_ePRODUCT_DEFINITION_USAGE_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_USAGE_RELATIONSHIP? { rep.super_ePRODUCT_DEFINITION_USAGE_RELATIONSHIP }
  var super_eVERIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERIFICATION? { rep.super_eVERIFICATION }
  var super_eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT? { rep.super_eAPPLIED_DESCRIPTION_TEXT_ASSIGNMENT }
  var super_eEFFECTIVITY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY? { rep.super_eEFFECTIVITY }
  var super_eSATISFIES_REQUIREMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSATISFIES_REQUIREMENT? { rep.super_eSATISFIES_REQUIREMENT }
  var super_ePRODUCT_CONCEPT_CONTEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_CONTEXT? { rep.super_ePRODUCT_CONCEPT_CONTEXT }
  var super_eDIRECTED_ACTION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTED_ACTION_ASSIGNMENT? { rep.super_eDIRECTED_ACTION_ASSIGNMENT }
  var super_ePRODUCT_PROCESS_PLAN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_PROCESS_PLAN? { rep.super_ePRODUCT_PROCESS_PLAN }
  var super_eBREAKDOWN_OF: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBREAKDOWN_OF? { rep.super_eBREAKDOWN_OF }
  var super_eASSIGNMENT_OBJECT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSIGNMENT_OBJECT_RELATIONSHIP? { rep.super_eASSIGNMENT_OBJECT_RELATIONSHIP }
  var super_eATTRIBUTE_LANGUAGE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_LANGUAGE_ASSIGNMENT? { rep.super_eATTRIBUTE_LANGUAGE_ASSIGNMENT }
  var super_eLOCAL_TIME: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_TIME? { rep.super_eLOCAL_TIME }
  var super_eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED? { rep.super_eINTERFACE_CONNECTOR_DESIGN_TO_REALIZED }
  var super_ePRODUCT_DEFINITION_FORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION? { rep.super_ePRODUCT_DEFINITION_FORMATION }
  var super_eCONVERSION_BASED_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONVERSION_BASED_UNIT? { rep.super_eCONVERSION_BASED_UNIT }
  var super_ePRODUCT_DEFINITION_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_EFFECTIVITY? { rep.super_ePRODUCT_DEFINITION_EFFECTIVITY }
  var super_eDEFINITIONAL_REPRESENTATION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDEFINITIONAL_REPRESENTATION_RELATIONSHIP? { rep.super_eDEFINITIONAL_REPRESENTATION_RELATIONSHIP }
  var super_eMEASURE_QUALIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_QUALIFICATION? { rep.super_eMEASURE_QUALIFICATION }
  var super_eINTERFACE_DEFINITION_FOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_DEFINITION_FOR? { rep.super_eINTERFACE_DEFINITION_FOR }
  var super_ePRODUCT_GROUP_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_GROUP_RELATIONSHIP? { rep.super_ePRODUCT_GROUP_RELATIONSHIP }
  var super_eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED? { rep.super_eINTERFACE_CONNECTOR_DESIGN_TO_PLANNED }
  var super_eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP? { rep.super_eIDENTIFICATION_ASSIGNMENT_RELATIONSHIP }
  var super_eCONFIGURATION_ITEM_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_ITEM_RELATIONSHIP? { rep.super_eCONFIGURATION_ITEM_RELATIONSHIP }
  var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP? { rep.super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP }
  var super_eACTION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_ASSIGNMENT? { rep.super_eACTION_ASSIGNMENT }
  var super_eAPPROVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_ASSIGNMENT? { rep.super_eAPPROVAL_ASSIGNMENT }
  var super_eCLASSIFICATION_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLASSIFICATION_ASSIGNMENT_RELATIONSHIP? { rep.super_eCLASSIFICATION_ASSIGNMENT_RELATIONSHIP }
  var super_eDOCUMENT_REFERENCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_REFERENCE? { rep.super_eDOCUMENT_REFERENCE }
  var super_eCERTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION_ASSIGNMENT? { rep.super_eCERTIFICATION_ASSIGNMENT }
  var super_eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT? { rep.super_eAPPLIED_DOCUMENT_USAGE_CONSTRAINT_ASSIGNMENT }
  var super_eLANGUAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLANGUAGE? { rep.super_eLANGUAGE }
  var super_eAPPLIED_ACTION_REQUEST_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_REQUEST_ASSIGNMENT? { rep.super_eAPPLIED_ACTION_REQUEST_ASSIGNMENT }
  var super_eSHAPE_ASPECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT? { rep.super_eSHAPE_ASPECT }
  var super_eACTION_PROPERTY_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY_REPRESENTATION? { rep.super_eACTION_PROPERTY_REPRESENTATION }
  var super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT? { rep.super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT }
  var super_eACTION_RESOURCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE? { rep.super_eACTION_RESOURCE }
  var super_eAPPLIED_ORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATION_ASSIGNMENT? { rep.super_eAPPLIED_ORGANIZATION_ASSIGNMENT }
  var super_ePRODUCT_CONCEPT_FEATURE_CATEGORY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_CATEGORY? { rep.super_ePRODUCT_CONCEPT_FEATURE_CATEGORY }
  var super_eACTION_REQUEST_SOLUTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_REQUEST_SOLUTION? { rep.super_eACTION_REQUEST_SOLUTION }
  var super_eTIME_INTERVAL_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL_ASSIGNMENT? { rep.super_eTIME_INTERVAL_ASSIGNMENT }
  var super_ePROCESS_PRODUCT_ASSOCIATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROCESS_PRODUCT_ASSOCIATION? { rep.super_ePROCESS_PRODUCT_ASSOCIATION }
  var super_eDIRECTED_ACTION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTED_ACTION? { rep.super_eDIRECTED_ACTION }
  var super_eAPPLIED_APPROVAL_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_APPROVAL_ASSIGNMENT? { rep.super_eAPPLIED_APPROVAL_ASSIGNMENT }
  var super_eREQUIREMENT_FOR_ACTION_RESOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_FOR_ACTION_RESOURCE? { rep.super_eREQUIREMENT_FOR_ACTION_RESOURCE }
  var super_eSHAPE_FEATURE_DEFINITION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_FEATURE_DEFINITION_RELATIONSHIP? { rep.super_eSHAPE_FEATURE_DEFINITION_RELATIONSHIP }
  var super_eACTION_RESOURCE_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE_RELATIONSHIP? { rep.super_eACTION_RESOURCE_RELATIONSHIP }
  var super_eAPPROVAL_STATUS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_STATUS? { rep.super_eAPPROVAL_STATUS }
  var super_ePRODUCT_DESIGN_TO_INDIVIDUAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DESIGN_TO_INDIVIDUAL? { rep.super_ePRODUCT_DESIGN_TO_INDIVIDUAL }
  var super_ePERSON_AND_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION? { rep.super_ePERSON_AND_ORGANIZATION }
  var super_eALTERNATE_PRODUCT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eALTERNATE_PRODUCT_RELATIONSHIP? { rep.super_eALTERNATE_PRODUCT_RELATIONSHIP }
  var super_ePRODUCT_CONCEPT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_RELATIONSHIP? { rep.super_ePRODUCT_CONCEPT_RELATIONSHIP }
  var super_eDOCUMENT_FILE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_FILE? { rep.super_eDOCUMENT_FILE }
  var super_eSECURITY_CLASSIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION? { rep.super_eSECURITY_CLASSIFICATION }
  var super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT? { rep.super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT }
  var super_ePRODUCT_DEFINITION_CONTEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_CONTEXT? { rep.super_ePRODUCT_DEFINITION_CONTEXT }
  var super_ePRODUCT_DEFINITION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP? { rep.super_ePRODUCT_DEFINITION_RELATIONSHIP }
  var super_eLOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCATION? { rep.super_eLOCATION }
  var super_ePRODUCT_DEFINITION_ELEMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_ELEMENT_RELATIONSHIP? { rep.super_ePRODUCT_DEFINITION_ELEMENT_RELATIONSHIP }
  var super_eACTION_DIRECTIVE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_DIRECTIVE? { rep.super_eACTION_DIRECTIVE }
  var super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT? { rep.super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT }
  var super_eDESCRIPTIVE_REPRESENTATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDESCRIPTIVE_REPRESENTATION_ITEM? { rep.super_eDESCRIPTIVE_REPRESENTATION_ITEM }
  var super_eADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eADDRESS? { rep.super_eADDRESS }
  var super_eCONTRACT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT_RELATIONSHIP? { rep.super_eCONTRACT_RELATIONSHIP }
  var super_eDOCUMENT_TYPE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_TYPE? { rep.super_eDOCUMENT_TYPE }
  var super_ePRODUCT_CONCEPT_FEATURE_ASSOCIATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_ASSOCIATION? { rep.super_ePRODUCT_CONCEPT_FEATURE_ASSOCIATION }
  var super_eTIME_INTERVAL_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL_RELATIONSHIP? { rep.super_eTIME_INTERVAL_RELATIONSHIP }
  var super_eAPPLIED_ACTION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_ASSIGNMENT? { rep.super_eAPPLIED_ACTION_ASSIGNMENT }
  var super_ePRODUCT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_RELATIONSHIP? { rep.super_ePRODUCT_RELATIONSHIP }
  var super_eACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION? { rep.super_eACTION }
  var super_eINTERFACE_CONNECTOR_OCCURRENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINTERFACE_CONNECTOR_OCCURRENCE? { rep.super_eINTERFACE_CONNECTOR_OCCURRENCE }
  var super_ePERSON_AND_ORGANIZATION_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION_ADDRESS? { rep.super_ePERSON_AND_ORGANIZATION_ADDRESS }
  var super_eREQUIREMENT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_ASSIGNMENT? { rep.super_eREQUIREMENT_ASSIGNMENT }
  var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP? { rep.super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT_RELATIONSHIP }
  var super_eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP? { rep.super_eSTATE_DEFINITION_TO_STATE_ASSIGNMENT_RELATIONSHIP }
  var super_eEVENT_OCCURRENCE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE_ASSIGNMENT? { rep.super_eEVENT_OCCURRENCE_ASSIGNMENT }
  var super_eCHANGE_ELEMENT_SEQUENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT_SEQUENCE? { rep.super_eCHANGE_ELEMENT_SEQUENCE }
  var super_eACTION_DIRECTIVE_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_DIRECTIVE_RELATIONSHIP? { rep.super_eACTION_DIRECTIVE_RELATIONSHIP }
  var super_eNAMED_UNIT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNAMED_UNIT? { rep.super_eNAMED_UNIT }
  var super_eCHARACTERIZED_OBJECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHARACTERIZED_OBJECT? { rep.super_eCHARACTERIZED_OBJECT }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var ASSIGNED_DOCUMENT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_USAGE_CONSTRAINT?  { rep.ASSIGNED_DOCUMENT_USAGE }
  var REQUEST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { rep.REQUEST }
  var UNDIRECTED_LINK: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHAINED_REPRESENTATION_LINK>/*[1:nil]*/ )?  { rep.UNDIRECTED_LINK }
  var RANGE_ON_SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { rep.RANGE_ON_SURFACE_1 }
  var DERIVING_RELATIONSHIPS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_DERIVING_RELATIONSHIP>/*[1:nil]*/ )?  { rep.DERIVING_RELATIONSHIPS }
  var SECOND_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tSECOND_IN_MINUTE?  { rep.SECOND_COMPONENT }
  var STYLE_CONTEXT: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSTYLE_CONTEXT_SELECT>/*[1:
    nil]*/ )?  { rep.STYLE_CONTEXT }
  var RANGE_ON_SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { rep.RANGE_ON_SURFACE_2 }
  var SLOT_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SLOT_WIDTH }
  var RELATED_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { rep.RELATED_METHOD }
  var ATTRIBUTE_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sATTRIBUTE_TYPE?  { rep.ATTRIBUTE_VALUE }
  var END_EXIT_FACES: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[0:
    nil]*/ >/*[2:2]*/ )?  { rep.END_EXIT_FACES }
  var CONCENTRATION_EXPONENT: SDAI.REAL?  { rep.CONCENTRATION_EXPONENT }
  var DIAMETER_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTOLERANCE_VALUE_OR_LIMITS_AND_FITS?  { rep.DIAMETER_TOLERANCE }
  var INDIRECTLY_PICKED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { rep.INDIRECTLY_PICKED_ITEMS }
  var RANGE_ON_PAIR_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { rep.RANGE_ON_PAIR_CURVE }
  var REPLICATE_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { rep.REPLICATE_COUNT }
  var PEOPLE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON>/*[1:nil]*/ )?  { rep.PEOPLE }
  var PRODUCT_DEFINITIONAL: SDAI.LOGICAL { rep.PRODUCT_DEFINITIONAL }
  var ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ROTATION_ANGLE }
  var CURRENT_RESULT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { rep.CURRENT_RESULT }
  var ASSIGNED_STATE_OBSERVED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED?  { rep.ASSIGNED_STATE_OBSERVED }
  var ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT_ELEMENT>/*[1:nil]*/ )?  { rep.ELEMENTS }
  var ASSIGNED_SECURITY_CLASSIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION?  { rep.ASSIGNED_SECURITY_CLASSIFICATION }
  var DEPTH_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTOLERANCE_VALUE?  { rep.DEPTH_TOLERANCE }
  var CFS_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE>/*[1:nil]*/ )?  { rep.CFS_FACES }
  var CONTAINER: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_VIEW>/*[1:nil]*/ )?  { rep.CONTAINER }
  var REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { rep.REPRESENTATION }
  var CTRIANGLES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[10:10]*/ >/*[1:nil]*/ )?  { rep.CTRIANGLES }
  var RADIUS_LIST: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[2:
    nil]*/ )?  { rep.RADIUS_LIST }
  var STREET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.STREET }
  var CLOSED_INTERPOLATION: SDAI.LOGICAL { rep.CLOSED_INTERPOLATION }
  var ASSIGNED_EVENT_OCCURRENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { rep.ASSIGNED_EVENT_OCCURRENCE }
  var ACCURACY_TYPES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ACCURACY_TYPE_NAME>/*[0:
    nil]*/ )?  { rep.ACCURACY_TYPES }
  var ANGULAR_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ANGULAR_SPACING }
  var COUNTERDRILL_ANGLE_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTOLERANCE_VALUE?  { rep.COUNTERDRILL_ANGLE_TOLERANCE }
  var OFFSET1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.OFFSET1 }
  var ACTUAL_POINT_ON_CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_CURVE?  { rep.ACTUAL_POINT_ON_CURVE_2 }
  var FLOOR_BLEND_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.FLOOR_BLEND_RADIUS }
  var PROPERTIES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROCESS_PROPERTY_ASSOCIATION>/*[
    1:nil]*/ )?  { rep.PROPERTIES }
  var GENERALISED_MAJOR_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.GENERALISED_MAJOR_RADIUS }
  var ASSIGNED_DIRECTED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTED_ACTION?  { rep.ASSIGNED_DIRECTED_ACTION }
  var OFFSET2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.OFFSET2 }
  var NO_OF_BYTES: SDAI.INTEGER?  { rep.NO_OF_BYTES }
  var ORGANIZATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION>/*[1:nil]*/ )?  { rep.ORGANIZATIONS }
  var MIDDLE_NAMES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { rep.MIDDLE_NAMES }
  var CURVE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.CURVE_1 }
  var FORM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTOLERANCE_ZONE_FORM?  { rep.FORM }
  var MAJOR_ORIENTATION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.MAJOR_ORIENTATION_BASIS }
  var BASE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sGENERALIZED_SURFACE_SELECT?  { rep.BASE_ELEMENT }
  var CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.CURVE_2 }
  var DIRECTIVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_DIRECTIVE?  { rep.DIRECTIVE }
  var CONTEXT_IDENTIFIER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.CONTEXT_IDENTIFIER }
  var CONTENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDRAUGHTING_CALLOUT_ELEMENT>/*[1:
    nil]*/ )?  { rep.CONTENTS }
  var VSENSE: SDAI.BOOLEAN?  { rep.VSENSE }
  var RELATING_PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_PROPERTY?  { rep.RELATING_PROPERTY }
  var START_OF_NEXT_HATCH_LINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eONE_DIRECTION_REPEAT_FACTOR?  { rep.START_OF_NEXT_HATCH_LINE }
  var CURVE_FORM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nB_SPLINE_CURVE_FORM?  { rep.CURVE_FORM }
  var TRANSFORMATION_OPERATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTRANSFORMATION?  { rep.TRANSFORMATION_OPERATOR }
  var OVER_RIDDEN_STYLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTYLED_ITEM?  { rep.OVER_RIDDEN_STYLE }
  var MEASURED_VALUE_FOR_INSPECTED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sEQUIVALENCE_MEASURED_VALUE_SELECT?  { rep.MEASURED_VALUE_FOR_INSPECTED_ELEMENT }
  var ASSIGNED_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE?  { rep.ASSIGNED_DATE }
  var ITEM: SDAI.GENERIC_ENTITY?  { rep.ITEM }
  var RADIAL_ALIGNMENT: SDAI.BOOLEAN?  { rep.RADIAL_ALIGNMENT }
  var HATCH_LINE_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.HATCH_LINE_ANGLE }
  var SUFFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { rep.SUFFIX_TITLES }
  var CONSTRAINED_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { rep.CONSTRAINED_ELEMENTS }
  var TANGENT_CONTACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTANGENT_CONTACT_TYPE?  { rep.TANGENT_CONTACT }
  var SEGMENT_RADII: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[1:
    SEGMENTS]*/ )?  { rep.SEGMENT_RADII }
  var RIGHT_APPLIED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_RIGHT?  { rep.RIGHT_APPLIED }
  var REALIZED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.REALIZED_PRODUCT }
  var DEPENDENT_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_ENVIRONMENT?  { rep.DEPENDENT_ENVIRONMENT }
  var LEFT_OFFSET: SDAI.BOOLEAN?  { rep.LEFT_OFFSET }
  var PATCHES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE_PATCH>/*[1:nil]*/ )?  { rep.PATCHES }
  var REPEAT_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { rep.REPEAT_FACTOR }
  var ROW_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.ROW_SPACING }
  var TIP_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.TIP_RADIUS }
  var TRANSLATION_LANGUAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLANGUAGE?  { rep.TRANSLATION_LANGUAGE }
  var DETECTED_DIFFERENCE_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_DETECTED_DIFFERENCE_TYPE_NAME>/*[0:nil]*/ )?  { rep.DETECTED_DIFFERENCE_TYPES }
  var HATCH_LINE_APPEARANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE_STYLE?  { rep.HATCH_LINE_APPEARANCE }
  var SWEPT_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.SWEPT_CURVE }
  var METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { rep.METHOD }
  var NEXT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNEXT_ASSEMBLY_USAGE_OCCURRENCE?  { rep.NEXT_USAGE }
  var ARC_LENGTH_DISTANCE_FACTOR: SDAI.REAL?  { rep.ARC_LENGTH_DISTANCE_FACTOR }
  var ROLE: SDAI.GENERIC_ENTITY?  { rep.ROLE }
  var PARENT_PT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { rep.PARENT_PT }
  var OFFSET_DIRECTION_CONSTRAINED: SDAI.BOOLEAN?  { rep.OFFSET_DIRECTION_CONSTRAINED }
  var THICKNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.THICKNESS }
  var N_U: SDAI.INTEGER?  { rep.N_U }
  var DIRECTION_OF_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.DIRECTION_OF_AXIS }
  var TEE_SECTION_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.TEE_SECTION_WIDTH }
  var FILLET_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.FILLET_RADIUS }
  var RELATING_ORGANIZATIONAL_PROJECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT?  { rep.RELATING_ORGANIZATIONAL_PROJECT }
  var SCANNER_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.SCANNER_LOCATION }
  var N_V: SDAI.INTEGER?  { rep.N_V }
  var FIRST_TRIM_INTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRIM_INTENT?  { rep.FIRST_TRIM_INTENT }
  var OPERATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nBOOLEAN_OPERATOR?  { rep.OPERATOR }
  var SUBSKETCH_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_ELEMENT_SELECT>
    /*[1:nil]*/ )?  { rep.SUBSKETCH_ELEMENTS }
  var X_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { rep.X_SCALE }
  var SCANNED_POINTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSCANNED_DATA_ITEM>/*[1:nil]*/ )?  { rep.SCANNED_POINTS }
  var ENCLOSURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBOX_DOMAIN?  { rep.ENCLOSURE }
  var COUNTERSINK_DIAMETER: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  { rep.COUNTERSINK_DIAMETER }
  var RELATING_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { rep.RELATING_ORGANIZATION }
  var REFERENCE_DESIGNATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.REFERENCE_DESIGNATOR }
  var FIXED_ATTRIBUTES: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINSTANCE_ATTRIBUTE_REFERENCE>/*[1:nil]*/ )?  { rep.FIXED_ATTRIBUTES }
  var PARAMETER_DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.PARAMETER_DESCRIPTION }
  var COMPARING_SPECIFIED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { rep.COMPARING_SPECIFIED_ELEMENTS }
  var RELATED_PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_PROPERTY?  { rep.RELATED_PROPERTY }
  var SECOND_TRIM_INTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRIM_INTENT?  { rep.SECOND_TRIM_INTENT }
  var ZONE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOORDINATED_UNIVERSAL_TIME_OFFSET?  { rep.ZONE }
  var SHAPE_CRITERIA: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eA3MA_ASSEMBLY_AND_SHAPE_CRITERIA_RELATIONSHIP>/*[1:nil]*/ )?  { rep.SHAPE_CRITERIA }
  var SECOND_OPERAND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBOOLEAN_OPERAND?  { rep.SECOND_OPERAND }
  var SUBSTITUTE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE?  { rep.SUBSTITUTE }
  var RELATED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { rep.RELATED_GROUP }
  var TRIM_1: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTRIMMING_SELECT>/*[1:2]*/ )?  { rep.TRIM_1 }
  var RANGE_ON_CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { rep.RANGE_ON_CURVE_2 }
  var RELATED_PRODUCT_DEFINITION_FORMATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.RELATED_PRODUCT_DEFINITION_FORMATION }
  var CHARACTER_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANAR_EXTENT?  { rep.CHARACTER_BOX }
  var INNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.INNER_RADIUS }
  var PROTRUSION_HEIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.PROTRUSION_HEIGHT }
  var DESIGNATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATERIAL_DESIGNATION?  { rep.DESIGNATION }
  var TURN_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.TURN_ANGLE }
  var REGION_COLOUR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLOUR?  { rep.REGION_COLOUR }
  var DESIGN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCONFIGURATION_DESIGN_ITEM?  { rep.DESIGN }
  var TRIM_2: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTRIMMING_SELECT>/*[1:2]*/ )?  { rep.TRIM_2 }
  var RANGE_ON_CURVE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { rep.RANGE_ON_CURVE_1 }
  var ANALYSIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.ANALYSIS }
  var CONSTITUENT_AMOUNT: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_PRODUCT_COMPOSITION_VALUE>/*[1:nil]*/ )?  { rep.CONSTITUENT_AMOUNT }
  var TILES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sFILL_AREA_STYLE_TILE_SHAPE_SELECT>/*[
    1:nil]*/ )?  { rep.TILES }
  var OPERATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_ACTION_DEFINITION>
    /*[1:nil]*/ )?  { rep.OPERATIONS }
  var TARGET_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.TARGET_ID }
  var RELATED_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { rep.RELATED_APPROVAL }
  var INSPECTED_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_ELEMENT_SELECT>
    /*[1:nil]*/ )?  { rep.INSPECTED_ELEMENTS }
  var ASSIGNED_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { rep.ASSIGNED_APPROVAL }
  var UPPER_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE?  { rep.UPPER_USAGE }
  var RESOURCES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE>/*[1:nil]*/ )?  { rep.RESOURCES }
  var DATE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE?  { rep.DATE_COMPONENT }
  var ROW_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { rep.ROW_COUNT }
  var POCKET_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.POCKET_LENGTH }
  var TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSYMBOL_TARGET?  { rep.TARGET }
  var EXTERNAL_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { rep.EXTERNAL_POINT }
  var GEAR_RATIO: SDAI.REAL?  { rep.GEAR_RATIO }
  var EXTERNAL_GROOVE: SDAI.BOOLEAN?  { rep.EXTERNAL_GROOVE }
  var RELATED_ASCRIBABLE_STATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASCRIBABLE_STATE?  { rep.RELATED_ASCRIBABLE_STATE }
  var PERSON_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPERSON_ORGANIZATION_SELECT?  { rep.PERSON_ORGANIZATION }
  var RANKING_RATIONALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.RANKING_RATIONALE }
  var REPLICATED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMODIFIED_SOLID_WITH_PLACED_CONFIGURATION?  { rep.REPLICATED_ELEMENT }
  var A: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.A }
  var PARENT_VOLUME_SET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_VOLUME_SET?  { rep.PARENT_VOLUME_SET }
  var SELECT_OUTER: SDAI.BOOLEAN?  { rep.SELECT_OUTER }
  var DEFINITIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_DEFINITION>/*[1:
    nil]*/ )?  { rep.DEFINITIONS }
  var B: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.B }
  var PNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.PNT }
  var COMPONENT_SHAPE_ASPECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINTERNAL_OR_REFLECTED_SHAPE_ASPECT?  { rep.COMPONENT_SHAPE_ASPECT }
  var RELATING_IDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT?  { rep.RELATING_IDENTIFICATION_ASSIGNMENT }
  var C: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.C }
  var V_SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { rep.V_SMOOTHNESS }
  var SECURITY_LEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_LEVEL?  { rep.SECURITY_LEVEL }
  var RELATED_VERSIONED_ACTION_REQUEST: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { rep.RELATED_VERSIONED_ACTION_REQUEST }
  var CLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.CLASS }
  var SCANNER_INFO: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSCANNER_PROPERTY>/*[1:nil]*/ )?  { rep.SCANNER_INFO }
  var SILHOUETTED_MODEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSURFACE_OR_SOLID_MODEL?  { rep.SILHOUETTED_MODEL }
  var SOURCES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLIGHT_SOURCE>/*[1:nil]*/ )?  { rep.SOURCES }
  var SENSE_AGREEMENT: SDAI.BOOLEAN?  { rep.SENSE_AGREEMENT }
  var PARENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT?  { rep.PARENT }
  var EDGE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE?  { rep.EDGE_ELEMENT }
  var BASIS_VOLUME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME?  { rep.BASIS_VOLUME }
  var TELEX_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TELEX_NUMBER }
  var SWEPT_FACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE?  { rep.SWEPT_FACE }
  var LINK_REPRESENTATION_ASSOCIATIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePAIR_REPRESENTATION_RELATIONSHIP>/*[1:nil]*/ )?  { rep.LINK_REPRESENTATION_ASSOCIATIONS }
  var UPPER_LIMIT_ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.UPPER_LIMIT_ACTUAL_TRANSLATION_Z }
  var CM_LINK: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVARIATIONAL_CURRENT_REPRESENTATION_RELATIONSHIP?  { rep.CM_LINK }
  var ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.ACTUAL_TRANSLATION_Z }
  var LOWER_LIMIT_RACK_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.LOWER_LIMIT_RACK_DISPLACEMENT }
  var LOOP_VERTEX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { rep.LOOP_VERTEX }
  var RELATING_CONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT?  { rep.RELATING_CONTRACT }
  var PRODUCT_DATA_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.PRODUCT_DATA_TYPE }
  var LAST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.LAST_NAME }
  var T_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.T_START }
  var PTS_PER_SUBLIST: SDAI.INTEGER?  { rep.PTS_PER_SUBLIST }
  var END_CONDITIONS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBLEND_END_CONDITION_SELECT>
    /*[2:2]*/ )?  { rep.END_CONDITIONS }
  var DEFINED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.DEFINED_VERSION }
  var RELATED_MESSAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE?  { rep.RELATED_MESSAGE }
  var DEFINED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_PRODUCT_DEFINITION?  { rep.DEFINED_PRODUCT }
  var AXIS_POSITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS1_PLACEMENT?  { rep.AXIS_POSITION }
  var ORIENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nORIENTED_TOLERANCE_ZONE_TYPE?  { rep.ORIENTATION }
  var FACSIMILE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.FACSIMILE_NUMBER }
  var RELATED_OBJECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_FEATURE_DEFINITION?  { rep.RELATED_OBJECT }
  var OF_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { rep.OF_COLLECTION }
  var SBWM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSHELL>/*[1:nil]*/ )?  { rep.SBWM_BOUNDARY }
  var KNOT_VALUES: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tSPLINE_KNOT_VALUES?  { rep.KNOT_VALUES }
  var DIMENSIONS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIMENSIONAL_EXPONENTS?  { rep.DIMENSIONS }
  var PITCH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.PITCH }
  var REGION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.REGION }
  var PERMANENT_AGGREGATE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.PERMANENT_AGGREGATE_ID }
  var TILING_PATTERN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTWO_DIRECTION_REPEAT_FACTOR?  { rep.TILING_PATTERN }
  var PCURVE_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePCURVE?  { rep.PCURVE_REFERENCE }
  var OUTLINES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_FILL_AREA>/*[1:nil]*/ )?  { rep.OUTLINES }
  var REPRESENTATIONS_IN_CONTEXT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION>
    /*[1:nil]*/ )?  { rep.REPRESENTATIONS_IN_CONTEXT }
  var COMPARED_SPECIFIED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { rep.COMPARED_SPECIFIED_ELEMENTS }
  var APPLIES_TO_PAIR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PAIR?  { rep.APPLIES_TO_PAIR }
  var UPPER_LIMIT_ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_ACTUAL_ROTATION_1 }
  var PRODUCT_DESIGN_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.PRODUCT_DESIGN_VERSION }
  var CONICAL_TRANSITIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONICAL_STEPPED_HOLE_TRANSITION>/*[1:nil]*/ )?  { rep.CONICAL_TRANSITIONS }
  var ELECTRONIC_MAIL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.ELECTRONIC_MAIL_ADDRESS }
  var OF_SHAPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_SHAPE?  { rep.OF_SHAPE }
  var RANKING: SDAI.INTEGER?  { rep.RANKING }
  var REQUIRED_GENERAL_ACCURACY: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  { rep.REQUIRED_GENERAL_ACCURACY }
  var REPORT_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { rep.REPORT_VALUE }
  var STREET_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.STREET_NUMBER }
  var SYMBOL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_SYMBOL_OCCURRENCE?  { rep.SYMBOL }
  var U1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.U1 }
  var BEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.BEVEL }
  var BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.BASIS }
  var LEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.LEVEL }
  var MONTH_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tMONTH_IN_YEAR_NUMBER?  { rep.MONTH_COMPONENT }
  var INNER_BOUNDARY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCOMPOUND_INNER_AREA_BOUNDARY?  { rep.INNER_BOUNDARY }
  var CLOSED_PATH: SDAI.LOGICAL { rep.CLOSED_PATH }
  var MAKE_OR_BUY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nSOURCE?  { rep.MAKE_OR_BUY }
  var U2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.U2 }
  var MEASURED_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMEASURED_VALUE_SELECT?  { rep.MEASURED_VALUE }
  var POINT_COORDINATES: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  { rep.POINT_COORDINATES }
  var SKEWNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.SKEWNESS }
  var TILING_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { rep.TILING_SCALE }
  var CHOSEN_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { rep.CHOSEN_METHOD }
  var RELATING_RESOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE?  { rep.RELATING_RESOURCE }
  var EFFECTIVITY_LOT_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.EFFECTIVITY_LOT_ID }
  var VOLUME_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME?  { rep.VOLUME_GEOMETRY }
  var PROTRUSION_DRAFT_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.PROTRUSION_DRAFT_ANGLE }
  var USED_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { rep.USED_REPRESENTATION }
  var LOCAL_ORIGIN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.LOCAL_ORIGIN }
  var ATTRIBUTE_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.ATTRIBUTE_NAME }
  var REFERENCE_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[0:
    nil]*/ )?  { rep.REFERENCE_ELEMENTS }
  var SCL: SDAI.REAL?  { rep.SCL }
  var PURPOSE: SDAI.STRING?  { rep.PURPOSE }
  var QUALIFIERS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sVALUE_QUALIFIER>/*[1:nil]*/ )?  { rep.QUALIFIERS }
  var UNITS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT>/*[1:nil]*/ )?  { rep.UNITS }
  var PATH_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePATH?  { rep.PATH_ELEMENT }
  var LANGUAGE_INDICATION: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_LANGUAGE_ASSIGNMENT>/*[1:1]*/ )?  { rep.LANGUAGE_INDICATION }
  var PLANE_OF_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANE?  { rep.PLANE_OF_POINT }
  var RESOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_RESOURCE_DEFINITION?  { rep.RESOURCE }
  var PATTERN_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.PATTERN_START }
  var TRANSFORM_ITEM_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sRIGID_PLACEMENT?  { rep.TRANSFORM_ITEM_1 }
  var TEST_POINT_DISTANCE_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.TEST_POINT_DISTANCE_TOLERANCE }
  var PROTRUSION_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.PROTRUSION_LENGTH }
  var ASSOCIATED_SHAPE_REPRESENTATION: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION_ASSOCIATION>/*[0:1]*/ )?  { rep.ASSOCIATED_SHAPE_REPRESENTATION }
  var CONSTRAINING_EXPRESSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXPRESSION?  { rep.CONSTRAINING_EXPRESSION }
  var SECOND_ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.SECOND_ROTATION_ANGLE }
  var RELATED_RESOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_RESOURCE?  { rep.RELATED_RESOURCE }
  var CONCEPT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT?  { rep.CONCEPT }
  var COLOUR_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nCOLOUR_TYPE_ENUM?  { rep.COLOUR_TYPE }
  var POINT_OF_REFERENCE_HATCH_LINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.POINT_OF_REFERENCE_HATCH_LINE }
  var RELATING_STATE_TYPE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE>/*[1:nil]*/ )?  { rep.RELATING_STATE_TYPE }
  var COMPARING_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { rep.COMPARING_ELEMENTS }
  var TRANSFORM_ITEM_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sRIGID_PLACEMENT?  { rep.TRANSFORM_ITEM_2 }
  var LOWER_LIMIT_SECOND_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_SECOND_ROTATION }
  var POCKET_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.POCKET_RADIUS }
  var RELATING_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { rep.RELATING_ACTION }
  var ASSIGNED_DATE_AND_TIME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME?  { rep.ASSIGNED_DATE_AND_TIME }
  var EDGE_LIST: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORIENTED_EDGE>/*[1:nil]*/ )?  { rep.EDGE_LIST }
  var SIZE_IN_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.SIZE_IN_X }
  var RADIUS_SECOND_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.RADIUS_SECOND_LINK }
  var THICKENED_FACE_LIST: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>
    /*[1:nil]*/ >/*[1:nil]*/ )?  { rep.THICKENED_FACE_LIST }
  var UPPER_LIMIT_FIRST_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_FIRST_ROTATION }
  var DATUM_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATUM_SYSTEM?  { rep.DATUM_REFERENCE }
  var CRITERION_REPORT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_EQUIVALENCE_INSPECTION_CRITERION_REPORT?  { rep.CRITERION_REPORT }
  var SIZE_IN_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.SIZE_IN_Y }
  var CORNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.CORNER_RADIUS }
  var RELATING_PRODUCT_DEFINITION_FORMATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.RELATING_PRODUCT_DEFINITION_FORMATION }
  var MARKET_SEGMENT_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.MARKET_SEGMENT_TYPE }
  var ACTUAL_POINT_ON_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_CURVE?  { rep.ACTUAL_POINT_ON_CURVE }
  var RELATING_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.RELATING_VERSION }
  var INTENSITIES: (SDAI.LIST<SDAI.REAL>/*[1:nil]*/ )?  { rep.INTENSITIES }
  var LOWER_LIMIT_ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_ACTUAL_ROTATION_1 }
  var IDENTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.IDENTIFICATION }
  var PARENT_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.PARENT_SURFACE }
  var RELATING_CONFIGURATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_ITEM?  { rep.RELATING_CONFIGURATION_ITEM }
  var RELATED_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { rep.RELATED_COLLECTION }
  var Y_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { rep.Y_SCALE }
  var CONFIGURED_MECHANISM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMECHANISM_REPRESENTATION?  { rep.CONFIGURED_MECHANISM }
  var ACTUAL_PLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.ACTUAL_PLACEMENT }
  var LOWER_LIMIT_ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.LOWER_LIMIT_ACTUAL_TRANSLATION_Z }
  var USENSE: SDAI.BOOLEAN?  { rep.USENSE }
  var ASSIGNED_CLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLANGUAGE?  { rep.ASSIGNED_CLASS }
  var DISTANCE_FROM_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.DISTANCE_FROM_START }
  var SURFACE_FORM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nB_SPLINE_SURFACE_FORM?  { rep.SURFACE_FORM }
  var AUTHORIZED_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { rep.AUTHORIZED_APPROVAL }
  var PREVIOUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { rep.PREVIOUS }
  var EFFECTIVITY_END_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { rep.EFFECTIVITY_END_DATE }
  var FIRST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.FIRST_NAME }
  var COMPOSITION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.COMPOSITION_BASIS }
  var ANNOTATED_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_CURVE_OCCURRENCE?  { rep.ANNOTATED_CURVE }
  var SEMI_IMAG_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SEMI_IMAG_AXIS }
  var EQUIVALENT_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.EQUIVALENT_POINT }
  var PHI: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.PHI }
  var THE_CALLOUT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDRAUGHTING_CALLOUT?  { rep.THE_CALLOUT }
  var DOCUMENTATION_IDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT>/*[1:nil]*/ )?  { rep.DOCUMENTATION_IDS }
  var SCANNER_IDENTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.SCANNER_IDENTIFICATION }
  var ESTABLISHED_BY_RELATIONSHIPS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_RELATIONSHIP>/*[1:nil]*/ )?  { rep.ESTABLISHED_BY_RELATIONSHIPS }
  var SLOT_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SLOT_LENGTH }
  var EFFECTIVITY_LOT_SIZE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { rep.EFFECTIVITY_LOT_SIZE }
  var KNOT_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.KNOT_MULTIPLICITIES }
  var COUNTERSINK_ANGLE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_PLANE_ANGLE_MEASURE_WITH_UNIT?  { rep.COUNTERSINK_ANGLE }
  var ASSIGNED_TIME_INTERVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { rep.ASSIGNED_TIME_INTERVAL }
  var PARENT_FACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE?  { rep.PARENT_FACE }
  var RIGHT_OFFSET_DISTANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.RIGHT_OFFSET_DISTANCE }
  var RELATION_TYPE: SDAI.STRING?  { rep.RELATION_TYPE }
  var BASELINE_RATIO: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tRATIO_MEASURE?  { rep.BASELINE_RATIO }
  var ASSIGNED_CERTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION?  { rep.ASSIGNED_CERTIFICATION }
  var RIGHT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT?  { rep.RIGHT_USAGE }
  var CONVERSION_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { rep.CONVERSION_FACTOR }
  var RELATING_PRODUCT_CONCEPT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT?  { rep.RELATING_PRODUCT_CONCEPT }
  var GENERALISED_MINOR_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.GENERALISED_MINOR_RADIUS }
  var ASSIGNED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { rep.ASSIGNED_ACTION }
  var ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { rep.ELEMENT }
  var V2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.V2 }
  var GROOVE_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.GROOVE_WIDTH }
  var LINE_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.LINE_SPACING }
  var TREE_ROOT_EXPRESSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCSG_SELECT?  { rep.TREE_ROOT_EXPRESSION }
  var POINT_PARAMETER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.POINT_PARAMETER }
  var BASIS_EDGE_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE?  { rep.BASIS_EDGE_CURVE }
  var POCKET_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.POCKET_WIDTH }
  var ITEM_CONCEPT_FEATURE: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE_ASSOCIATION>/*[1:nil]*/ )?  { rep.ITEM_CONCEPT_FEATURE }
  var PREFIX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nSI_PREFIX?  { rep.PREFIX }
  var MINOR_ORIENTATION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.MINOR_ORIENTATION_BASIS }
  var BASE_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.BASE_CURVE }
  var FIXED_CONSTITUENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATIVE_SHAPE_REPRESENTATION?  { rep.FIXED_CONSTITUENT }
  var V1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.V1 }
  var COLOUR_INDICES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[3:3]*/ >/*[1:nil]*/ )?  { rep.COLOUR_INDICES }
  var HELICAL_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.HELICAL_ANGLE }
  var ASSIGNED_ACTION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { rep.ASSIGNED_ACTION_METHOD }
  var BASE_EVENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { rep.BASE_EVENT }
  var LITERAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPRESENTABLE_TEXT?  { rep.LITERAL }
  var CLOTHOID_CONSTANT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.CLOTHOID_CONSTANT }
  var PAIR_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.PAIR_SURFACE }
  var THE_PERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON?  { rep.THE_PERSON }
  var BINARY_VALUE: SDAI.BINARY?  { rep.BINARY_VALUE }
  var PARENT_FACE_SET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_FACE_SET?  { rep.PARENT_FACE_SET }
  var INTERNAL_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.INTERNAL_LOCATION }
  var SPECIFICATION: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION>/*[1:nil]*/ )?  { rep.SPECIFICATION }
  var FILL_STYLE_TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { rep.FILL_STYLE_TARGET }
  var POSITIVE_SIDE: SDAI.BOOLEAN?  { rep.POSITIVE_SIDE }
  var ASSIGNED_ACTION_REQUEST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { rep.ASSIGNED_ACTION_REQUEST }
  var PLANNED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.PLANNED_PRODUCT }
  var STYLED_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_CURVE_OCCURRENCE?  { rep.STYLED_CURVE }
  var AXIS3: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.AXIS3 }
  var CONSTITUENTS: (SDAI.LIST_UNIQUE<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATUM_REFERENCE_COMPARTMENT>/*[1:3]*/ )?  { rep.CONSTITUENTS }
  var REPRESENTATION_ASSOCIATIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION_REPRESENTATION>/*[0:nil]*/ )?  { rep.REPRESENTATION_ASSOCIATIONS }
  var PICKED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[1:nil]*/ )?  { rep.PICKED_ITEMS }
  var COLOURED_COORDINATE_VALUES: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOORDINATES_LIST?  { rep.COLOURED_COORDINATE_VALUES }
  var AXIS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.AXIS2 }
  var AXIS1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.AXIS1 }
  var ASSIGNED_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.ASSIGNED_ID }
  var ARC_LENGTH_SEPARATION_FACTOR: SDAI.REAL?  { rep.ARC_LENGTH_SEPARATION_FACTOR }
  var OPEN_SHELL_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eOPEN_SHELL?  { rep.OPEN_SHELL_ELEMENT }
  var AUXILIARY_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAUXILIARY_GEOMETRIC_REPRESENTATION_ITEM>/*[0:nil]*/ )?  { rep.AUXILIARY_ELEMENTS }
  var REVISION_IDENTIFIER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.REVISION_IDENTIFIER }
  var SIZE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_SIZE?  { rep.SIZE }
  var BASE_SOLID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBASE_SOLID_SELECT?  { rep.BASE_SOLID }
  var DELETED_FACE_SET: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[1:nil]*/ )?  { rep.DELETED_FACE_SET }
  var DAY_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDAY_IN_MONTH_NUMBER?  { rep.DAY_COMPONENT }
  var DRAFTED_EDGES: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE>/*[1:nil]*/ >
    /*[2:nil]*/ )?  { rep.DRAFTED_EDGES }
  var SUCCESSOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.SUCCESSOR }
  var UPPER_INDEX_ON_CONTROL_POINTS: SDAI.INTEGER?  { rep.UPPER_INDEX_ON_CONTROL_POINTS }
  var RELATING_VERSIONED_ACTION_REQUEST: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { rep.RELATING_VERSIONED_ACTION_REQUEST }
  var VERTEX_SHELL_EXTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX_LOOP?  { rep.VERTEX_SHELL_EXTENT }
  var ASSESSMENT_THRESHOLD_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eA3MA_EQUIVALENCE_CRITERION_ASSESSMENT_THRESHOLD_RELATIONSHIP?  { rep.ASSESSMENT_THRESHOLD_2 }
  var COMPARED_ELEMENT_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  { rep.COMPARED_ELEMENT_TYPES }
  var UPPER_INDEX_ON_KNOTS: SDAI.INTEGER?  { rep.UPPER_INDEX_ON_KNOTS }
  var OFFSET_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { rep.OFFSET_ANGLE }
  var TESSELLATION_ACCURACY_PARAMETERS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTESSELLATION_ACCURACY_PARAMETER_ITEM>/*[1:nil]*/ )?  { rep.TESSELLATION_ACCURACY_PARAMETERS }
  var LEFT_OFFSET_DISTANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.LEFT_OFFSET_DISTANCE }
  var SEGMENT_DEPTHS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[
    1:SEGMENTS]*/ )?  { rep.SEGMENT_DEPTHS }
  var NEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { rep.NEXT }
  var QUALIFIED_MEASURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { rep.QUALIFIED_MEASURE }
  var INPUT_SKEW_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.INPUT_SKEW_ANGLE }
  var SKEW_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.SKEW_ANGLE }
  var ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANE_ANGLE_MEASURE_WITH_UNIT?  { rep.ANGLE }
  var RADIUS_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.RADIUS_VALUE }
  var COLLAR_DEPTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.COLLAR_DEPTH }
  var UNIT_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { rep.UNIT_COMPONENT }
  var FEATURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_FEATURE?  { rep.FEATURE }
  var ASSOCIATED_GEOMETRY: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPCURVE_OR_SURFACE>/*[1:
    2]*/ )?  { rep.ASSOCIATED_GEOMETRY }
  var MEMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_SELECT?  { rep.MEMBER }
  var RELATED_IDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT?  { rep.RELATED_IDENTIFICATION_ASSIGNMENT }
  var REPRESENTED_JOINTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_JOINT>/*[1:nil]*/ )?  { rep.REPRESENTED_JOINTS }
  var CLOSED_SHELL_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLOSED_SHELL?  { rep.CLOSED_SHELL_ELEMENT }
  var ANGLE_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ANGLE_VALUE }
  var EFFECTIVITY_PERIOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { rep.EFFECTIVITY_PERIOD }
  var INDIVIDUAL_PRODUCT: SDAI.GENERIC_ENTITY?  { rep.INDIVIDUAL_PRODUCT }
  var BOUND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOOP?  { rep.BOUND }
  var DIRECTION_RATIOS: (SDAI.LIST<SDAI.REAL>/*[2:3]*/ )?  { rep.DIRECTION_RATIOS }
  var CLOSED_ENDS: (SDAI.LIST<SDAI.LOGICAL>/*[2:2]*/ )?  { rep.CLOSED_ENDS }
  var FBSM_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_FACE_SET>/*[1:nil]*/ )?  { rep.FBSM_FACES }
  var THE_DRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDERS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDER>/*[0:
    1]*/ )?  { rep.THE_DRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDERS }
  var BASE_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.BASE_SURFACE }
  var PARENT_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.PARENT_CURVE }
  var RELATED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { rep.RELATED_PRODUCT }
  var RELATED_EVENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { rep.RELATED_EVENT }
  var COMPARED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { rep.COMPARED_ELEMENTS }
  var DIAMETER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  { rep.DIAMETER }
  var EFFECTIVITY_START_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { rep.EFFECTIVITY_START_DATE }
  var CONDITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONCEPT_FEATURE_RELATIONSHIP_WITH_CONDITION?  { rep.CONDITION }
  var POSTAL_CODE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.POSTAL_CODE }
  var EDGE_END: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { rep.EDGE_END }
  var SPOTFACE: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSPOTFACE_DEFINITION>/*[1:
    nil]*/ )?  { rep.SPOTFACE }
  var POSTAL_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.POSTAL_BOX }
  var ITEM_CONCEPT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT?  { rep.ITEM_CONCEPT }
  var BOX_HEIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.BOX_HEIGHT }
  var VIEW_WINDOW: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANAR_BOX?  { rep.VIEW_WINDOW }
  var UPPER_LIMIT_ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_ACTUAL_ROTATION_Y }
  var RELATED_PRODUCT_CONCEPT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT?  { rep.RELATED_PRODUCT_CONCEPT }
  var UPPER_LIMIT_ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_ACTUAL_ROTATION_X }
  var RELATING_TIME_INTERVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { rep.RELATING_TIME_INTERVAL }
  var LIFE_CYCLE_STAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.LIFE_CYCLE_STAGE }
  var UPPER_LIMIT_ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_ACTUAL_ROTATION_Z }
  var LINE_STRIP: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.LINE_STRIP }
  var GROOVE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.GROOVE_RADIUS }
  var TIME_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_TIME?  { rep.TIME_COMPONENT }
  var ITEM_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCOMPOUND_ITEM_DEFINITION?  { rep.ITEM_ELEMENT }
  var EXTERNAL_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.EXTERNAL_SURFACE }
  var COUNTERDRILL_ANGLE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_PLANE_ANGLE_MEASURE_WITH_UNIT?  { rep.COUNTERDRILL_ANGLE }
  var CVS_VOLUMES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME_WITH_FACES>/*[1:nil]*/ )?  { rep.CVS_VOLUMES }
  var SPHERE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SPHERE_RADIUS }
  var FIRST_ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.FIRST_ROTATION_ANGLE }
  var ASSIGNED_STATE_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE?  { rep.ASSIGNED_STATE_TYPE }
  var KIND: SDAI.GENERIC_ENTITY?  { rep.KIND }
  var RELATING_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCATION?  { rep.RELATING_LOCATION }
  var PARAMETER_CURRENT_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMATHS_VALUE?  { rep.PARAMETER_CURRENT_VALUE }
  var RANGE_ON_PAIR_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { rep.RANGE_ON_PAIR_SURFACE }
  var JOINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_JOINT?  { rep.JOINT }
  var ACTUAL_ROTATION_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ACTUAL_ROTATION_2 }
  var COUNTERSINK_ANGLE_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTOLERANCE_VALUE?  { rep.COUNTERSINK_ANGLE_TOLERANCE }
  var MEASURED_DATA_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_MEASURED_DATA_TYPE_NAME?  { rep.MEASURED_DATA_TYPE }
  var GAMMA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.GAMMA }
  var FIRST_OFFSET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.FIRST_OFFSET }
  var URL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.URL }
  var REP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { rep.REP }
  var COORDINATE_SPACE_DIMENSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDIMENSION_COUNT?  { rep.COORDINATE_SPACE_DIMENSION }
  var OWNING_SKETCH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_TYPE_SELECT?  { rep.OWNING_SKETCH }
  var VIEW_WINDOW_CLIPPING: SDAI.BOOLEAN?  { rep.VIEW_WINDOW_CLIPPING }
  var W_UPPER: SDAI.INTEGER?  { rep.W_UPPER }
  var ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ACTUAL_ROTATION_1 }
  var MODIFIERS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATUM_REFERENCE_MODIFIER>/*[1:nil]*/ )?  { rep.MODIFIERS }
  var CURVE_3D: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.CURVE_3D }
  var DRAFT_ANGLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE>/*[2:nil]*/ )?  { rep.DRAFT_ANGLES }
  var DETERMINATION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.DETERMINATION_METHOD }
  var LINE_STRIP_FACE2: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.LINE_STRIP_FACE2 }
  var UPPER_LIMIT_RACK_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.UPPER_LIMIT_RACK_DISPLACEMENT }
  var RELATED_STATE_TYPE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE>/*[1:nil]*/ )?  { rep.RELATED_STATE_TYPE }
  var RELATING_OBJECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_FEATURE_DEFINITION?  { rep.RELATING_OBJECT }
  var MAP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_MAP?  { rep.MAP }
  var GEOMETRIC_MODEL_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPATH_OR_COMPOSITE_CURVE?  { rep.GEOMETRIC_MODEL_LINK }
  var LINE_STRIP_FACE1: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.LINE_STRIP_FACE1 }
  var FACE_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.FACE_GEOMETRY }
  var FACE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE?  { rep.FACE_ELEMENT }
  var BASE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.BASE_RADIUS }
  var LOWER_LIMIT_ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_ACTUAL_ROTATION_X }
  var RELATING_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { rep.RELATING_COLLECTION }
  var VERTEX_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { rep.VERTEX_GEOMETRY }
  var LOWER_LIMIT_ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_ACTUAL_ROTATION_Y }
  var COLUMN_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { rep.COLUMN_COUNT }
  var RELATED_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY?  { rep.RELATED_EFFECTIVITY }
  var EDGE_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.EDGE_LENGTH }
  var LOWER_LIMIT_ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_ACTUAL_ROTATION_Z }
  var THICKNESS_LIST: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE>/*[1:nil]*/ )?  { rep.THICKNESS_LIST }
  var COLUMN_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.COLUMN_SPACING }
  var PROTRUSION_CORNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.PROTRUSION_CORNER_RADIUS }
  var WIRE_SHELL_EXTENT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOOP>/*[1:nil]*/ )?  { rep.WIRE_SHELL_EXTENT }
  var MAGNITUDE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.MAGNITUDE }
  var CURVE_PLANE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANE?  { rep.CURVE_PLANE }
  var SPREAD_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { rep.SPREAD_ANGLE }
  var SWEPT_AREA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE_BOUNDED_SURFACE?  { rep.SWEPT_AREA }
  var SCULPTURING_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sGENERALIZED_SURFACE_SELECT?  { rep.SCULPTURING_ELEMENT }
  var LOWER_LIMIT_FIRST_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_FIRST_ROTATION }
  var CONSEQUENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.CONSEQUENCE }
  var ROOT: SDAI.GENERIC_ENTITY?  { rep.ROOT }
  var STYLES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_STYLE_ASSIGNMENT>/*[0:
    nil]*/ )?  { rep.STYLES }
  var EFFECTIVITY_END_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.EFFECTIVITY_END_ID }
  var RELATING_EVENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { rep.RELATING_EVENT }
  var CONE_ANGLE1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.CONE_ANGLE1 }
  var PLACEMENT_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLACEMENT?  { rep.PLACEMENT_START }
  var B_SPLINES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_B_SPLINE>/*[2:nil]*/ )?  { rep.B_SPLINES }
  var RELATING_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { rep.RELATING_GROUP }
  var PROCESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_PROCESS?  { rep.PROCESS }
  var NOTABLE_INSTANCES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEQUIVALENCE_NOTABLE_INSTANCE>/*[1:nil]*/ )?  { rep.NOTABLE_INSTANCES }
  var ASSIGNED_CONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT?  { rep.ASSIGNED_CONTRACT }
  var EXPLICIT_SHAPE: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eITEM_IDENTIFIED_REPRESENTATION_USAGE>/*[0:nil]*/ )?  { rep.EXPLICIT_SHAPE }
  var COMPOSITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_GROUP?  { rep.COMPOSITION }
  var THE_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { rep.THE_ORGANIZATION }
  var COLOUR_VALUES: (SDAI.LIST<SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tUNSIGNED_8_BIT_INTEGER>/*[3:4]*/ >/*[1:nil]*/ )?  { rep.COLOUR_VALUES }
  var CONE_ANGLE2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.CONE_ANGLE2 }
  var THICKNESS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.THICKNESS2 }
  var COMPONENT_RELATIONSHIPS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_RELATIONSHIP>/*[2:nil]*/ )?  { rep.COMPONENT_RELATIONSHIPS }
  var RELATED_ORGANIZATIONAL_PROJECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT?  { rep.RELATED_ORGANIZATIONAL_PROJECT }
  var SCANNER_UNCERTAINTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SCANNER_UNCERTAINTY }
  var EBWM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_EDGE_SET>/*[1:nil]*/ )?  { rep.EBWM_BOUNDARY }
  var W_B_SPLINES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_B_SPLINE>/*[8:nil]*/ )?  { rep.W_B_SPLINES }
  var SEMI_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SEMI_AXIS }
  var ASSIGNED_PERSON_AND_ORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION?  { rep.ASSIGNED_PERSON_AND_ORGANIZATION }
  var FIXED_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.FIXED_REFERENCE }
  var MINUTE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tMINUTE_IN_HOUR?  { rep.MINUTE_COMPONENT }
  var BASE_COMMON_DATUM_LIST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tCOMMON_DATUM_LIST?  { rep.BASE_COMMON_DATUM_LIST }
  var RELATING_STATE_OBSERVED: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED>/*[1:
    nil]*/ )?  { rep.RELATING_STATE_OBSERVED }
  var PRODUCT_DEFINITIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROCESS_PRODUCT_ASSOCIATION>/*[1:nil]*/ )?  { rep.PRODUCT_DEFINITIONS }
  var RELATING_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { rep.RELATING_PRODUCT_DEFINITION }
  var STROKES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE>/*[1:nil]*/ )?  { rep.STROKES }
  var SECOND_OFFSET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.SECOND_OFFSET }
  var REPRESENTATION_TYPES: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT_REPRESENTATION_TYPE>/*[0:nil]*/ )?  { rep.REPRESENTATION_TYPES }
  var ASSIGNED_REQUEST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { rep.ASSIGNED_REQUEST }
  var NODES: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION>/*[2:nil]*/ )?  { rep.NODES }
  var EDGE_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { rep.EDGE_START }
  var NPOINTS: SDAI.INTEGER?  { rep.NPOINTS }
  var W_DEGREE: SDAI.INTEGER?  { rep.W_DEGREE }
  var HIDDEN_LINE_SURFACE_REMOVAL: SDAI.BOOLEAN?  { rep.HIDDEN_LINE_SURFACE_REMOVAL }
  var MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.MULTIPLICITIES }
  var RELATED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.RELATED_VERSION }
  var ALPHA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ALPHA }
  var BETA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.BETA }
  var HOUR_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tHOUR_IN_DAY?  { rep.HOUR_COMPONENT }
  var SUBLISTS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_CLOUD_DATASET>/*[2:nil]*/ )?  { rep.SUBLISTS }
  var OFFSET_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nPARALLEL_OFFSET_TYPE?  { rep.OFFSET_TYPE }
  var RELATED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { rep.RELATED_ACTION }
  var MIRROR_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sLINEAR_GEOMETRY_CONSTRAINT_ELEMENT?  { rep.MIRROR_ELEMENT }
  var RELATING_DOCUMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT?  { rep.RELATING_DOCUMENT }
  var LIGHT_COLOUR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLOUR?  { rep.LIGHT_COLOUR }
  var EDGE_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.EDGE_GEOMETRY }
  var LENGTH_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.LENGTH_VALUE }
  var PROTRUSION_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.PROTRUSION_WIDTH }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.ID }
  var APPLIED_GENERAL_ACCURACY: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  { rep.APPLIED_GENERAL_ACCURACY }
  var CONTEXT_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.CONTEXT_TYPE }
  var TRANSITION_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { rep.TRANSITION_NUMBER }
  var PROTRUSION_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.PROTRUSION_RADIUS }
  var RELATING_MESSAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE?  { rep.RELATING_MESSAGE }
  var SECOND_REPEAT_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { rep.SECOND_REPEAT_FACTOR }
  var SLOT_CENTRELINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBOUNDED_CURVE?  { rep.SLOT_CENTRELINE }
  var FEATURE_BASIS_RELATIONSHIP: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_RELATIONSHIP>/*[1:nil]*/ )?  { rep.FEATURE_BASIS_RELATIONSHIP }
  var RADIUS_FIRST_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.RADIUS_FIRST_LINK }
  var SEMI_APEX_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { rep.SEMI_APEX_ANGLE }
  var ALTERNATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { rep.ALTERNATE }
  var CONTEXT_OF_ITEMS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_CONTEXT?  { rep.CONTEXT_OF_ITEMS }
  var BLENDED_EDGES: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE>/*[1:nil]*/ )?  { rep.BLENDED_EDGES }
  var REP_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sREPRESENTATION_OR_REPRESENTATION_REFERENCE?  { rep.REP_1 }
  var SUPPRESSED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[0:
    nil]*/ )?  { rep.SUPPRESSED_ITEMS }
  var REP_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sREPRESENTATION_OR_REPRESENTATION_REFERENCE?  { rep.REP_2 }
  var PARAMETER_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { rep.PARAMETER_UNIT }
  var VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.VERSION }
  var TOWN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TOWN }
  var SKETCH_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_BASIS_SELECT?  { rep.SKETCH_BASIS }
  var SBSM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSHELL>/*[1:nil]*/ )?  { rep.SBSM_BOUNDARY }
  var POINT_PARAMETER_W: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.POINT_PARAMETER_W }
  var ASSOCIATED_VARIABLE_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eENVIRONMENT?  { rep.ASSOCIATED_VARIABLE_ENVIRONMENT }
  var OUTER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLOSED_SHELL?  { rep.OUTER }
  var POSITION_COORDS: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  { rep.POSITION_COORDS }
  var SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.SURFACE_2 }
  var COUNTRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.COUNTRY }
  var DIRECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nDIRECTED_TOLERANCE_ZONE_TYPE?  { rep.DIRECTION }
  var RELATED_SHAPE_ASPECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT?  { rep.RELATED_SHAPE_ASPECT }
  var SPOTFACE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  { rep.SPOTFACE_RADIUS }
  var RELATED_CONFIGURATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_ITEM?  { rep.RELATED_CONFIGURATION_ITEM }
  var EDGE_FUNCTION_LIST: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nBLEND_RADIUS_VARIATION_TYPE>/*[1:nil]*/ )?  { rep.EDGE_FUNCTION_LIST }
  var CES_EDGES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE>/*[1:nil]*/ )?  { rep.CES_EDGES }
  var ASSOCIATED_LINK_REPRESENTATIONS_1: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  { rep.ASSOCIATED_LINK_REPRESENTATIONS_1 }
  var SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.SURFACE_1 }
  var ANGLE_SELECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nANGLE_RELATOR?  { rep.ANGLE_SELECTION }
  var RELATED_TIME_INTERVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { rep.RELATED_TIME_INTERVAL }
  var RESPONSIBLE_ORGANIZATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION>/*[1:
    nil]*/ )?  { rep.RESPONSIBLE_ORGANIZATIONS }
  var CONSTRAINT_GROUP: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCONSTRAINT_GROUP_MEMBER>
    /*[2:nil]*/ )?  { rep.CONSTRAINT_GROUP }
  var VIEW_REFERENCE_SYSTEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.VIEW_REFERENCE_SYSTEM }
  var OF_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { rep.OF_PRODUCT }
  var EFFECTIVITY_START_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.EFFECTIVITY_START_ID }
  var REPRESENTATION_RELATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PROPERTY_DEFINITION_REPRESENTATION?  { rep.REPRESENTATION_RELATION }
  var RELATED_REPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sANGLE_DIRECTION_REFERENCE_SELECT?  { rep.RELATED_REPRESENTATION_ITEM }
  var PRODUCT_DEFINITION_OCCURRENCE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.PRODUCT_DEFINITION_OCCURRENCE_ID }
  var ASSOCIATED_LINK_REPRESENTATIONS_2: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  { rep.ASSOCIATED_LINK_REPRESENTATIONS_2 }
  var ASSIGNED_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY?  { rep.ASSIGNED_EFFECTIVITY }
  var DIRECTED_LINK: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_RELATIONSHIP>
    /*[1:nil]*/ )?  { rep.DIRECTED_LINK }
  var INTERSECTED_MODEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSURFACE_OR_SOLID_MODEL?  { rep.INTERSECTED_MODEL }
  var IMPLICIT_OUTER: SDAI.BOOLEAN?  { rep.IMPLICIT_OUTER }
  var UPPER_LIMIT_SECOND_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_SECOND_ROTATION }
  var DEFINING_TOLERANCE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTOLERANCE_ZONE_TARGET>
    /*[1:nil]*/ )?  { rep.DEFINING_TOLERANCE }
  var TELEPHONE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TELEPHONE_NUMBER }
  var ASSIGNED_DOCUMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT?  { rep.ASSIGNED_DOCUMENT }
  var NEUTRAL_SKETCH_SEMANTICS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nCURVES_OR_AREA?  { rep.NEUTRAL_SKETCH_SEMANTICS }
  var W_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.W_MULTIPLICITIES }
  var YEAR_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tYEAR_NUMBER?  { rep.YEAR_COMPONENT }
  var SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { rep.SMOOTHNESS }
  var RELATED_STATE_OBSERVED: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_OBSERVED>/*[1:
    nil]*/ )?  { rep.RELATED_STATE_OBSERVED }
  var REQUESTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST>/*[1:nil]*/ )?  { rep.REQUESTS }
  var INSPECTED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_EQUIVALENCE_INSPECTED_ELEMENT_PAIR?  { rep.INSPECTED_ELEMENT }
  var EXTREME_INSTANCES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTREME_INSTANCE>/*[1:
    nil]*/ )?  { rep.EXTREME_INSTANCES }
  var EXIT_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[1:nil]*/ )?  { rep.EXIT_FACES }
  var OFFSET_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.OFFSET_VALUE }
  var MARKET_CONTEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_CONCEPT_CONTEXT?  { rep.MARKET_CONTEXT }
  var REPRESENTED_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK?  { rep.REPRESENTED_LINK }
  var REPRESENTED_TOPOLOGY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sKINEMATIC_TOPOLOGY_REPRESENTATION_SELECT?  { rep.REPRESENTED_TOPOLOGY }
  var POINT_INDEX: SDAI.INTEGER?  { rep.POINT_INDEX }
  var UNCERTAINTY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUNCERTAINTY_MEASURE_WITH_UNIT>
    /*[1:nil]*/ )?  { rep.UNCERTAINTY }
  var CONE_BASE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.CONE_BASE_RADIUS }
  var ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ACTUAL_ROTATION_Z }
  var ASSIGNED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { rep.ASSIGNED_GROUP }
  var VALUE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMEASURE_VALUE?  { rep.VALUE_COMPONENT }
  var PERMANENT_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.PERMANENT_ID }
  var DIR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { rep.DIR }
  var ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ACTUAL_ROTATION_X }
  var COLLECTED_TEXT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTEXT_OR_CHARACTER>/*[2:nil]*/ )?  { rep.COLLECTED_TEXT }
  var ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ACTUAL_ROTATION_Y }
  var PLACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.PLACING }
  var COMMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.COMMENT }
  var ACTUAL_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.ACTUAL_DISPLACEMENT }
  var BASIS_FACE_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE?  { rep.BASIS_FACE_SURFACE }
  var RELATING_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY?  { rep.RELATING_EFFECTIVITY }
  var RELATED_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCATION?  { rep.RELATED_LOCATION }
  var MAPPING_SOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_MAP?  { rep.MAPPING_SOURCE }
  var FOCAL_DIST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.FOCAL_DIST }
  var RELATING_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { rep.RELATING_PRODUCT }
  var RADIUS1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.RADIUS1 }
  var PERSPECTIVE_OF_VOLUME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVIEW_VOLUME?  { rep.PERSPECTIVE_OF_VOLUME }
  var CONFIGURATION: SDAI.GENERIC_ENTITY?  { rep.CONFIGURATION }
  var RADIUS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.RADIUS2 }
  var SPOTFACE_RADIUS_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTOLERANCE_VALUE?  { rep.SPOTFACE_RADIUS_TOLERANCE }
  var RELATED_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { rep.RELATED_ORGANIZATION }
  var MAPPING_TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM?  { rep.MAPPING_TARGET }
  var POINT_3: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.POINT_3 }
  var RELATED_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { rep.RELATED_PRODUCT_DEFINITION }
  var POINT_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.POINT_2 }
  var POINT_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.POINT_1 }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.NAME }
  var RANGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTOLERANCE_METHOD_DEFINITION?  { rep.RANGE }
  var KNOT_W_UPPER: SDAI.INTEGER?  { rep.KNOT_W_UPPER }
  var DEPTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOSITIVE_LENGTH_MEASURE_WITH_UNIT?  { rep.DEPTH }
  var CHILDREN: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTESSELLATED_ITEM>/*[1:nil]*/ )?  { rep.CHILDREN }
  var RELATING_ASCRIBABLE_STATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASCRIBABLE_STATE?  { rep.RELATING_ASCRIBABLE_STATE }
  var COUNTERSINK_DIAMETER_TOLERANCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTOLERANCE_VALUE_OR_LIMITS_AND_FITS?  { rep.COUNTERSINK_DIAMETER_TOLERANCE }
  var RELATING_REPRESENTATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sORIENTATION_BASIS_SELECT?  { rep.RELATING_REPRESENTATION_ITEM }
  var BASIS_RELATIONSHIPS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_DERIVING_RELATIONSHIP>/*[1:nil]*/ )?  { rep.BASIS_RELATIONSHIPS }
  var ASSIGNED_ORGANIZATIONAL_PROJECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT?  { rep.ASSIGNED_ORGANIZATIONAL_PROJECT }
  var VIEW_DIRECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.VIEW_DIRECTION }
  var MOTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PATH?  { rep.MOTION }
  var RELATING_SHAPE_ASPECT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT?  { rep.RELATING_SHAPE_ASPECT }
  var RELATED_CONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT?  { rep.RELATED_CONTRACT }
  var PREFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { rep.PREFIX_TITLES }
  var PARENT_SOLID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSOLID_MODEL?  { rep.PARENT_SOLID }
  var POINT_4: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.POINT_4 }
  var TOLERANCED_DIMENSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDIMENSIONAL_CHARACTERISTIC?  { rep.TOLERANCED_DIMENSION }
  var REPRESENTED_MECHANISM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMECHANISM_REPRESENTATION?  { rep.REPRESENTED_MECHANISM }
  var ACTUAL_POINT_ON_SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_SURFACE?  { rep.ACTUAL_POINT_ON_SURFACE_2 }
  var NEGATIVE_DIRECTION: SDAI.BOOLEAN?  { rep.NEGATIVE_DIRECTION }
  var PREDECESSOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.PREDECESSOR }
  var FIRST_OPERAND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBOOLEAN_OPERAND?  { rep.FIRST_OPERAND }
  var ACTUAL_POINT_ON_SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_SURFACE?  { rep.ACTUAL_POINT_ON_SURFACE_1 }
  var EXTRUSION_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { rep.EXTRUSION_AXIS }
  var RELATING_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { rep.RELATING_METHOD }
  var COMPARING_ELEMENT_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  { rep.COMPARING_ELEMENT_TYPES }
  var VOIDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORIENTED_CLOSED_SHELL>/*[1:nil]*/ )?  { rep.VOIDS }
  var OFFSET: SDAI.GENERIC_ENTITY?  { rep.OFFSET }
  var RELATING_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { rep.RELATING_APPROVAL }
  var CONE_APEX_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.CONE_APEX_ANGLE }
  var POLYGON: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT>/*[3:nil]*/ )?  { rep.POLYGON }
  var U_SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { rep.U_SMOOTHNESS }
  var PRODUCT_DESIGN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { rep.PRODUCT_DESIGN }
  var RELATED_DOCUMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT?  { rep.RELATED_DOCUMENT }
  var DIM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDIMENSION_COUNT?  { rep.DIM }
  var LINE_STRIPS: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ >/*[1:nil]*/ )?  { rep.LINE_STRIPS }
  var SMALL_VECTOR_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.SMALL_VECTOR_TOLERANCE }
  var APPLIED_VALUES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_REPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { rep.APPLIED_VALUES }
  var TARGET_BASIS_RELATIONSHIP: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_ASPECT_RELATIONSHIP>/*[1:nil]*/ )?  { rep.TARGET_BASIS_RELATIONSHIP }
  var ASSIGNED_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { rep.ASSIGNED_ORGANIZATION }
  var FORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.FORMATION }
  var FONT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sFONT_SELECT?  { rep.FONT }
}

