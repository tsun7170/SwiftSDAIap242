/* file: evidence_item.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -TYPE DEFINITION in EXPRESS
/*
  TYPE evidence_item = SELECT
    ( action_property (*ENTITY*),
     action_property_representation (*ENTITY*),
     analysis_assignment (*ENTITY*),
     applied_action_assignment (*ENTITY*),
     applied_approval_assignment (*ENTITY*),
     applied_certification_assignment (*ENTITY*),
     applied_classification_assignment (*ENTITY*),
     applied_contract_assignment (*ENTITY*),
     applied_effectivity_assignment (*ENTITY*),
     applied_event_occurrence_assignment (*ENTITY*),
     applied_external_identification_assignment (*ENTITY*),
     applied_ineffectivity_assignment (*ENTITY*),
     applied_organizational_project_assignment (*ENTITY*),
     applied_organization_assignment (*ENTITY*),
     applied_person_and_organization_assignment (*ENTITY*),
     applied_security_classification_assignment (*ENTITY*),
     date_and_time_assignment (*ENTITY*),
     date_assignment (*ENTITY*),
     measure_representation_item (*ENTITY*),
     person (*ENTITY*),
     person_and_organization (*ENTITY*),
     product (*ENTITY*),
     product_definition (*ENTITY*),
     product_definition_context (*ENTITY*),
     product_definition_formation (*ENTITY*),
     product_definition_formation_relationship (*ENTITY*),
     product_definition_relationship (*ENTITY*),
     product_relationship (*ENTITY*),
     property_definition (*ENTITY*),
     property_definition_representation (*ENTITY*),
     representation (*ENTITY*),
     representation_context (*ENTITY*),
     representation_item (*ENTITY*),
     state_type (*ENTITY*),
     structured_message (*ENTITY*),
     validation (*ENTITY*),
     value_representation_item (*ENTITY*),
     verification (*ENTITY*) );
  END_TYPE; -- evidence_item (line:2987 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES FOR SELECT
/*
  action_property (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  definition: characterized_action_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  action_property_representation (*ENTITY*):
  ATTR:  representation: representation
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  property: action_property
  ATTR:  name: label *** Multiple Select Case Sources ***

  analysis_assignment (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  applied_action_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF action_items (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_action: action

  applied_approval_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  assigned_approval: approval
  ATTR:  items: SET [1 : ?] OF approval_item (AMBIGUOUS (SELECT LEVEL))

  applied_certification_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF certification_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_certification: certification

  applied_classification_assignment (*ENTITY*):
  ATTR:  role: classification_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF classification_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_class: group

  applied_contract_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF contract_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_contract: contract

  applied_effectivity_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF effectivity_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_effectivity: effectivity

  applied_event_occurrence_assignment (*ENTITY*):
  ATTR:  assigned_event_occurrence: event_occurrence
  ATTR:  role: event_occurrence_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF event_occurrence_item (AMBIGUOUS (SELECT LEVEL))

  applied_external_identification_assignment (*ENTITY*):
  ATTR:  role: identification_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF external_identification_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_id: identifier
  ATTR:  source: external_source *** Multiple Select Case Sources ***

  applied_ineffectivity_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF effectivity_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_effectivity: effectivity

  applied_organizational_project_assignment (*ENTITY*):
  ATTR:  role: organizational_project_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF project_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_organizational_project: organizational_project

  applied_organization_assignment (*ENTITY*):
  ATTR:  role: organization_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF organization_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_organization: organization

  applied_person_and_organization_assignment (*ENTITY*):
  ATTR:  role: person_and_organization_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF person_and_organization_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_person_and_organization: person_and_organization

  applied_security_classification_assignment (*ENTITY*):
  ATTR:  assigned_security_classification: security_classification
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF security_classification_item (AMBIGUOUS (SELECT LEVEL))

  date_and_time_assignment (*ENTITY*):
  ATTR:  role: date_time_role *** Multiple Select Case Sources ***
  ATTR:  items: (AMBIGUOUS (CASE LEVEL))
  ATTR:  assigned_date_and_time: date_and_time

  date_assignment (*ENTITY*):
  ATTR:  assigned_date: date
  ATTR:  role: date_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF date_item (AMBIGUOUS (SELECT LEVEL))

  measure_representation_item (*ENTITY*):
  ATTR:  unit_component: unit
  ATTR:  value_component: measure_value *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  person (*ENTITY*):
  ATTR:  middle_names: LIST [1 : ?] OF label
  ATTR:  suffix_titles: LIST [1 : ?] OF label
  ATTR:  last_name: label
  ATTR:  first_name: label
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  prefix_titles: LIST [1 : ?] OF label

  person_and_organization (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  the_person: person
  ATTR:  the_organization: organization
  ATTR:  name: label *** Multiple Select Case Sources ***

  product (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  frame_of_reference: SET [1 : ?] OF product_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_definition (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  defined_version: collection_version
  ATTR:  documentation_ids: SET [1 : ?] OF document
  ATTR:  relating_product_definition: linear_array_placement_group_component *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  frame_of_reference: product_definition_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  definition: assembly_component (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition: linear_array_placement_group_component *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  formation: product_definition_formation

  product_definition_context (*ENTITY*):
  ATTR:  items: SET [1 : ?] OF instance_usage_context_select (AMBIGUOUS (SELECT LEVEL))
  ATTR:  life_cycle_stage: label
  ATTR:  frame_of_reference: application_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_definition_formation (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  status: STRING
  ATTR:  of_collection: collection
  ATTR:  make_or_buy: source
  ATTR:  specification: SET [1 : ?] OF product_definition
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  of_product: product

  product_definition_formation_relationship (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  realized_product: product_definition_formation
  ATTR:  related_product_definition_formation: product_definition_formation
  ATTR:  product_design_version: product_definition_formation
  ATTR:  relating_product_definition_formation: product_definition_formation
  ATTR:  relating_version: collection_version
  ATTR:  relation_type: STRING
  ATTR:  planned_product: product_definition_formation
  ATTR:  successor: collection_version
  ATTR:  individual_product: product_definition_formation *** Multiple Select Case Sources ***
  ATTR:  related_version: collection_version
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  predecessor: collection_version

  product_definition_relationship (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  leaf: product_definition_or_reference
  ATTR:  next_usage: next_assembly_usage_occurrence
  ATTR:  reference_designator: identifier
  ATTR:  constituent_amount: SET [1 : ?] OF characterized_product_composition_value
  ATTR:  upper_usage: assembly_component_usage
  ATTR:  ranking_rationale: text
  ATTR:  quantity: (AMBIGUOUS (CASE LEVEL))
  ATTR:  class: label
  ATTR:  items: SET [0 : ?] OF product_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  of_shape: mated_part_relationship
  ATTR:  ranking: INTEGER
  ATTR:  composition_basis: label
  ATTR:  determination_method: text
  ATTR:  root: product_definition
  ATTR:  relating_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  product_definition_occurrence_id: identifier
  ATTR:  assigned_group: mated_part_relationship
  ATTR:  location: LIST [1 : ?] OF UNIQUE next_assembly_usage_occurrence
  ATTR:  definition: mated_part_relationship (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_relationship (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  related_message: structured_message
  ATTR:  related_collection: collection
  ATTR:  individual_product: product *** Multiple Select Case Sources ***
  ATTR:  related_product: product
  ATTR:  relating_collection: collection
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  relating_message: structured_message
  ATTR:  relating_product: product
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  product_design: product

  property_definition (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  items: SET [0 : ?] OF product_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  of_shape: mated_part_relationship
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  representation_relation: kinematic_property_definition_representation
  ATTR:  assigned_group: mated_part_relationship
  ATTR:  definition: characterized_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  property_definition_representation (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  dependent_environment: data_environment
  ATTR:  used_representation: representation
  ATTR:  base: (AMBIGUOUS (CASE LEVEL))
  ATTR:  definition: represented_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  representation (*ENTITY*):
  ATTR:  criteria_inspected: (AMBIGUOUS (CASE LEVEL))
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  controlling_joints: (AMBIGUOUS (CASE LEVEL))
  ATTR:  character_box: planar_extent
  ATTR:  parent: (AMBIGUOUS (CASE LEVEL))
  ATTR:  cm_link: variational_current_representation_relationship
  ATTR:  items: SET [1 : ?] OF representation_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  outlines: SET [1 : ?] OF annotation_fill_area
  ATTR:  required_general_accuracy: SET [1 : ?] OF shape_measurement_accuracy
  ATTR:  associated_shape_representation: SET [0 : 1] OF kinematic_link_representation_association
  ATTR:  baseline_ratio: ratio_measure
  ATTR:  revision_identifier: identifier
  ATTR:  size: presentation_size
  ATTR:  tessellation_accuracy_parameters: SET [1 : ?] OF tessellation_accuracy_parameter_item
  ATTR:  represented_joints: SET [1 : ?] OF kinematic_joint
  ATTR:  box_height: length_measure
  ATTR:  strokes: SET [1 : ?] OF curve
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  applied_general_accuracy: SET [1 : ?] OF shape_measurement_accuracy
  ATTR:  context_of_items: representation_context
  ATTR:  neutral_sketch_semantics: curves_or_area
  ATTR:  represented_link: kinematic_link
  ATTR:  represented_topology: kinematic_topology_representation_select
  ATTR:  uncertainty: SET [1 : ?] OF uncertainty_measure_with_unit *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  represented_mechanism: mechanism_representation

  representation_context (*ENTITY*):
  ATTR:  context_identifier: identifier
  ATTR:  representations_in_context: SET [1 : ?] OF representation
  ATTR:  units: SET [1 : ?] OF unit
  ATTR:  coordinate_space_dimension: dimension_count
  ATTR:  context_type: text
  ATTR:  parameter_unit: unit
  ATTR:  uncertainty: SET [1 : ?] OF uncertainty_measure_with_unit *** Multiple Select Case Sources ***

  representation_item (*ENTITY*):
  ATTR:  constant_attenuation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  knot_v_upper: (AMBIGUOUS (CASE LEVEL))
  ATTR:  lower_limit_pitch: (AMBIGUOUS (CASE LEVEL))
  ATTR:  range_on_surface_1: rectangular_trimmed_surface
  ATTR:  offset_distance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  major_radius: (AMBIGUOUS (CASE LEVEL))
  ATTR:  ne: (AMBIGUOUS (CASE LEVEL))
  ATTR:  style_context: LIST [1 : ?] OF style_context_select
  ATTR:  range_on_surface_2: rectangular_trimmed_surface
  ATTR:  slot_width: positive_length_measure
  ATTR:  end_exit_faces: LIST [2 : 2] OF SET [0 : ?] OF face_surface
  ATTR:  concentration_exponent: REAL
  ATTR:  indirectly_picked_items: SET [1 : ?] OF representation_item
  ATTR:  range_on_pair_curve: trimmed_curve
  ATTR:  replicate_count: positive_integer
  ATTR:  rotation_angle: plane_angle_measure
  ATTR:  elements: (AMBIGUOUS (CASE LEVEL))
  ATTR:  cfs_faces: SET [1 : ?] OF face
  ATTR:  container: SET [1 : ?] OF presentation_view
  ATTR:  ctriangles: LIST [1 : ?] OF LIST [10 : 10] OF INTEGER
  ATTR:  radius_list: LIST [2 : ?] OF positive_length_measure
  ATTR:  closed_interpolation: LOGICAL
  ATTR:  reference_to_curve: (AMBIGUOUS (CASE LEVEL))
  ATTR:  ltx: (AMBIGUOUS (CASE LEVEL))
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  accuracy_types: LIST [0 : ?] OF a3m_accuracy_type_name
  ATTR:  actual_point_on_curve_1: (AMBIGUOUS (CASE LEVEL))
  ATTR:  angular_spacing: plane_angle_measure
  ATTR:  offset1: length_measure
  ATTR:  actual_point_on_curve_2: point_on_curve
  ATTR:  floor_blend_radius: non_negative_length_measure
  ATTR:  generalised_major_radius: positive_length_measure
  ATTR:  shape_clipping: (AMBIGUOUS (CASE LEVEL))
  ATTR:  u_b_splines: (AMBIGUOUS (CASE LEVEL))
  ATTR:  second_trim_condition: (AMBIGUOUS (CASE LEVEL))
  ATTR:  offset2: length_measure
  ATTR:  no_of_bytes: INTEGER
  ATTR:  curve_1: curve
  ATTR:  major_orientation_basis: axis2_placement_3d
  ATTR:  base_element: generalized_surface_select
  ATTR:  curve_2: curve
  ATTR:  contents: SET [1 : ?] OF draughting_callout_element
  ATTR:  u_multiplicities: (AMBIGUOUS (CASE LEVEL))
  ATTR:  vsense: BOOLEAN
  ATTR:  weights_data: (AMBIGUOUS (CASE LEVEL))
  ATTR:  start_of_next_hatch_line: one_direction_repeat_factor
  ATTR:  curve_form: b_spline_curve_form
  ATTR:  over_ridden_style: styled_item
  ATTR:  measured_value_for_inspected_element: equivalence_measured_value_select
  ATTR:  transformation_operator: kinematic_pair
  ATTR:  control_points_list: (AMBIGUOUS (CASE LEVEL))
  ATTR:  item: (AMBIGUOUS (CASE LEVEL))
  ATTR:  face1: (AMBIGUOUS (CASE LEVEL))
  ATTR:  radial_alignment: BOOLEAN
  ATTR:  hatch_line_angle: plane_angle_measure
  ATTR:  constrained_elements: SET [1 : ?] OF representation_item
  ATTR:  tangent_contact: tangent_contact_type
  ATTR:  actual_orientation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  segment_radii: LIST [1 : segments] OF positive_length_measure
  ATTR:  face2: (AMBIGUOUS (CASE LEVEL))
  ATTR:  left_offset: BOOLEAN
  ATTR:  patches: SET [1 : ?] OF surface_patch
  ATTR:  repeat_factor: vector
  ATTR:  centre: (AMBIGUOUS (CASE LEVEL))
  ATTR:  row_spacing: length_measure
  ATTR:  tip_radius: non_negative_length_measure
  ATTR:  statistical_values: (AMBIGUOUS (CASE LEVEL))
  ATTR:  detected_difference_types: LIST [0 : ?] OF a3m_detected_difference_type_name
  ATTR:  hatch_line_appearance: curve_style
  ATTR:  swept_curve: curve
  ATTR:  flat_curvature_radius_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  arc_length_distance_factor: REAL
  ATTR:  bounds: (AMBIGUOUS (CASE LEVEL))
  ATTR:  role: (AMBIGUOUS (CASE LEVEL))
  ATTR:  parent_pt: point
  ATTR:  offset_direction_constrained: BOOLEAN
  ATTR:  basis_curve: (AMBIGUOUS (CASE LEVEL))
  ATTR:  thickness: length_measure
  ATTR:  n_u: INTEGER
  ATTR:  reference_surface: (AMBIGUOUS (CASE LEVEL))
  ATTR:  direction_of_axis: direction
  ATTR:  tee_section_width: positive_length_measure
  ATTR:  fillet_radius: non_negative_length_measure
  ATTR:  scanner_location: axis2_placement_3d
  ATTR:  n_v: INTEGER
  ATTR:  first_trim_intent: trim_intent
  ATTR:  operator: boolean_operator
  ATTR:  scale: (AMBIGUOUS (CASE LEVEL))
  ATTR:  subsketch_elements: SET [1 : ?] OF sketch_element_select
  ATTR:  outer_bound: (AMBIGUOUS (CASE LEVEL))
  ATTR:  x_scale: positive_ratio_measure
  ATTR:  scanned_points: SET [1 : ?] OF scanned_data_item
  ATTR:  normals: (AMBIGUOUS (CASE LEVEL))
  ATTR:  enclosure: box_domain
  ATTR:  linearly_independent: (AMBIGUOUS (CASE LEVEL))
  ATTR:  x_offset: (AMBIGUOUS (CASE LEVEL))
  ATTR:  fixed_attributes: SET [1 : ?] OF instance_attribute_reference
  ATTR:  parameter_description: text
  ATTR:  comparing_specified_elements: SET [1 : ?] OF inspected_equivalence_element_select
  ATTR:  second_trim_intent: trim_intent
  ATTR:  shape_criteria: SET [1 : ?] OF a3ma_assembly_and_shape_criteria_relationship
  ATTR:  second_operand: boolean_operand
  ATTR:  trim_1: SET [1 : 2] OF trimming_select
  ATTR:  range_on_curve_2: trimmed_curve
  ATTR:  inspection_result: (AMBIGUOUS (CASE LEVEL))
  ATTR:  inner_radius: positive_length_measure
  ATTR:  protrusion_height: positive_length_measure
  ATTR:  turn_angle: plane_angle_measure
  ATTR:  region_colour: colour
  ATTR:  trim_2: SET [1 : 2] OF trimming_select
  ATTR:  range_on_curve_1: trimmed_curve
  ATTR:  path: text_path
  ATTR:  tiles: SET [1 : ?] OF fill_area_style_tile_shape_select
  ATTR:  v_degree: (AMBIGUOUS (CASE LEVEL))
  ATTR:  inspected_elements: SET [1 : ?] OF inspected_element_select
  ATTR:  locally_refined_spline_type: (AMBIGUOUS (CASE LEVEL))
  ATTR:  v_multiplicities: (AMBIGUOUS (CASE LEVEL))
  ATTR:  boundaries: (AMBIGUOUS (CASE LEVEL))
  ATTR:  geometric_link: (AMBIGUOUS (CASE LEVEL))
  ATTR:  row_count: positive_integer
  ATTR:  pocket_length: positive_length_measure
  ATTR:  target: symbol_target
  ATTR:  external_point: point
  ATTR:  gear_ratio: REAL
  ATTR:  external_groove: BOOLEAN
  ATTR:  knots: (AMBIGUOUS (CASE LEVEL))
  ATTR:  r_y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  replicated_element: modified_solid_with_placed_configuration
  ATTR:  a: length_measure
  ATTR:  parent_volume_set: connected_volume_set
  ATTR:  r_x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  pinion_radius: (AMBIGUOUS (CASE LEVEL))
  ATTR:  angle_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  select_outer: BOOLEAN
  ATTR:  minor_radius: (AMBIGUOUS (CASE LEVEL))
  ATTR:  b: length_measure
  ATTR:  pnt: cartesian_point
  ATTR:  c: length_measure
  ATTR:  r_z: (AMBIGUOUS (CASE LEVEL))
  ATTR:  v_smoothness: transition_code
  ATTR:  scanner_info: SET [1 : ?] OF scanner_property
  ATTR:  silhouetted_model: surface_or_solid_model
  ATTR:  sources: SET [1 : ?] OF light_source
  ATTR:  sense_agreement: BOOLEAN
  ATTR:  edge_element: edge
  ATTR:  basis_volume: volume
  ATTR:  inspected_instances: (AMBIGUOUS (CASE LEVEL))
  ATTR:  swept_face: face_surface
  ATTR:  actual_translation_y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  actual_translation_x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  link_representation_associations: SET [1 : ?] OF pair_representation_relationship
  ATTR:  upper_limit_actual_translation_z: length_measure
  ATTR:  topological_link: (AMBIGUOUS (CASE LEVEL))
  ATTR:  actual_translation_z: length_measure
  ATTR:  lower_limit_rack_displacement: length_measure
  ATTR:  loop_vertex: vertex
  ATTR:  upper_limit_actual_translation_x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  t_start: parameter_value
  ATTR:  pts_per_sublist: INTEGER
  ATTR:  upper_limit_actual_translation_y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  end_conditions: LIST [2 : 2] OF blend_end_condition_select
  ATTR:  v_upper: (AMBIGUOUS (CASE LEVEL))
  ATTR:  orientation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  end_param: (AMBIGUOUS (CASE LEVEL))
  ATTR:  axis_position: axis1_placement
  ATTR:  sbwm_boundary: SET [1 : ?] OF shell
  ATTR:  distance_attenuation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  knot_values: spline_knot_values
  ATTR:  items: (AMBIGUOUS (CASE LEVEL))
  ATTR:  p: (AMBIGUOUS (CASE LEVEL))
  ATTR:  pitch: length_measure
  ATTR:  degree: (AMBIGUOUS (CASE LEVEL))
  ATTR:  representative_measured_value: (AMBIGUOUS (CASE LEVEL))
  ATTR:  permanent_aggregate_id: identifier
  ATTR:  v_closed: (AMBIGUOUS (CASE LEVEL))
  ATTR:  r: (AMBIGUOUS (CASE LEVEL))
  ATTR:  tiling_pattern: two_direction_repeat_factor
  ATTR:  pcurve_reference: pcurve
  ATTR:  compared_specified_elements: SET [1 : ?] OF inspected_equivalence_element_select
  ATTR:  applies_to_pair: kinematic_pair
  ATTR:  u: (AMBIGUOUS (CASE LEVEL))
  ATTR:  actual_translation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_limit_actual_rotation_1: plane_angle_measure
  ATTR:  coordinates: (AMBIGUOUS (CASE LEVEL))
  ATTR:  conical_transitions: SET [1 : ?] OF conical_stepped_hole_transition
  ATTR:  report_value: measure_with_unit
  ATTR:  symbol: annotation_symbol_occurrence
  ATTR:  x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  u1: parameter_value
  ATTR:  y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  bevel: plane_angle_measure
  ATTR:  first_trim_condition: (AMBIGUOUS (CASE LEVEL))
  ATTR:  inner_boundary: compound_inner_area_boundary
  ATTR:  z: (AMBIGUOUS (CASE LEVEL))
  ATTR:  closed_path: LOGICAL
  ATTR:  criterion_inspected: (AMBIGUOUS (CASE LEVEL))
  ATTR:  u2: parameter_value
  ATTR:  measured_value: measured_value_select
  ATTR:  point_coordinates: LIST [1 : ?] OF LIST [3 : 3] OF REAL
  ATTR:  skewness: length_measure
  ATTR:  tiling_scale: positive_ratio_measure
  ATTR:  volume_geometry: volume
  ATTR:  agreement_flag: (AMBIGUOUS (CASE LEVEL))
  ATTR:  protrusion_draft_angle: plane_angle_measure
  ATTR:  local_origin: cartesian_point
  ATTR:  using_sketch: (AMBIGUOUS (CASE LEVEL))
  ATTR:  reference_elements: SET [0 : ?] OF representation_item
  ATTR:  scl: REAL
  ATTR:  qualifiers: SET [1 : ?] OF value_qualifier
  ATTR:  path_element: path
  ATTR:  plane_of_point: plane
  ATTR:  pattern_start: cartesian_point
  ATTR:  transform_item_1: rigid_placement
  ATTR:  test_point_distance_tolerance: length_measure
  ATTR:  protrusion_length: positive_length_measure
  ATTR:  constraining_expression: expression
  ATTR:  w_knots: (AMBIGUOUS (CASE LEVEL))
  ATTR:  second_rotation_angle: plane_angle_measure
  ATTR:  colour_type: colour_type_enum
  ATTR:  point_of_reference_hatch_line: cartesian_point
  ATTR:  comparing_elements: SET [1 : ?] OF inspected_equivalence_element_select
  ATTR:  transform_item_2: rigid_placement
  ATTR:  point_list: (AMBIGUOUS (CASE LEVEL))
  ATTR:  lower_limit_second_rotation: plane_angle_measure
  ATTR:  pocket_radius: positive_length_measure
  ATTR:  edge_list: LIST [1 : ?] OF UNIQUE oriented_edge
  ATTR:  size_in_x: length_measure
  ATTR:  radius_second_link: length_measure
  ATTR:  thickened_face_list: LIST [1 : ?] OF SET [1 : ?] OF face_surface
  ATTR:  upper_limit_first_rotation: plane_angle_measure
  ATTR:  criterion_report: data_equivalence_inspection_criterion_report
  ATTR:  size_in_y: length_measure
  ATTR:  corner_radius: non_negative_length_measure
  ATTR:  actual_point_on_curve: point_on_curve
  ATTR:  intensities: LIST [1 : ?] OF REAL
  ATTR:  lower_limit_actual_rotation_1: plane_angle_measure
  ATTR:  parent_surface: surface
  ATTR:  y_scale: positive_ratio_measure
  ATTR:  configured_mechanism: mechanism_representation
  ATTR:  actual_placement: axis2_placement_3d
  ATTR:  lower_limit_actual_translation_z: length_measure
  ATTR:  usense: BOOLEAN
  ATTR:  radius: (AMBIGUOUS (CASE LEVEL))
  ATTR:  distance_from_start: positive_length_measure
  ATTR:  lower_limit_actual_translation_y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  surface_form: b_spline_surface_form
  ATTR:  lower_limit_actual_translation_x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  annotated_curve: annotation_curve_occurrence
  ATTR:  semi_imag_axis: positive_length_measure
  ATTR:  equivalent_point: cartesian_point
  ATTR:  phi: plane_angle_measure
  ATTR:  the_callout: draughting_callout
  ATTR:  scaling_factors: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_limit_roll: (AMBIGUOUS (CASE LEVEL))
  ATTR:  distance_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  scanner_identification: label
  ATTR:  omitted_instances: (AMBIGUOUS (CASE LEVEL))
  ATTR:  distance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  slot_length: positive_length_measure
  ATTR:  knot_multiplicities: LIST [2 : ?] OF INTEGER
  ATTR:  rationale: (AMBIGUOUS (CASE LEVEL))
  ATTR:  judgement: (AMBIGUOUS (CASE LEVEL))
  ATTR:  position: (AMBIGUOUS (CASE LEVEL))
  ATTR:  ratio: (AMBIGUOUS (CASE LEVEL))
  ATTR:  parent_face: face
  ATTR:  right_offset_distance: positive_length_measure
  ATTR:  interference_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  transformation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  generalised_minor_radius: positive_length_measure
  ATTR:  lower_limit_yaw: (AMBIGUOUS (CASE LEVEL))
  ATTR:  v2: parameter_value
  ATTR:  groove_width: positive_length_measure
  ATTR:  line_spacing: positive_length_measure
  ATTR:  tree_root_expression: csg_select
  ATTR:  point_parameter: parameter_value
  ATTR:  basis_edge_curve: edge_curve
  ATTR:  pocket_width: positive_length_measure
  ATTR:  minor_orientation_basis: axis2_placement_3d
  ATTR:  base_curve: curve
  ATTR:  fixed_constituent: representative_shape_representation
  ATTR:  v1: parameter_value
  ATTR:  colour_indices: LIST [1 : ?] OF LIST [3 : 3] OF INTEGER
  ATTR:  helical_angle: plane_angle_measure
  ATTR:  literal: presentable_text
  ATTR:  clothoid_constant: length_measure
  ATTR:  pair_surface: surface
  ATTR:  binary_value: BINARY
  ATTR:  parent_face_set: connected_face_set
  ATTR:  u_closed: (AMBIGUOUS (CASE LEVEL))
  ATTR:  delineation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  fill_style_target: point
  ATTR:  positive_side: BOOLEAN
  ATTR:  styled_curve: annotation_curve_occurrence
  ATTR:  axis3: direction
  ATTR:  picked_items: SET [1 : ?] OF representation_item
  ATTR:  coloured_coordinate_values: coordinates_list
  ATTR:  axis2: direction
  ATTR:  axis1: direction
  ATTR:  arc_length_separation_factor: REAL
  ATTR:  open_shell_element: open_shell
  ATTR:  statistical_value: (AMBIGUOUS (CASE LEVEL))
  ATTR:  auxiliary_elements: SET [0 : ?] OF auxiliary_geometric_representation_item
  ATTR:  base_solid: base_solid_select
  ATTR:  deleted_face_set: SET [1 : ?] OF face_surface
  ATTR:  drafted_edges: LIST [2 : ?] OF SET [1 : ?] OF edge_curve
  ATTR:  axis_line: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_index_on_control_points: INTEGER
  ATTR:  vertex_shell_extent: vertex_loop
  ATTR:  assessment_threshold_2: a3ma_equivalence_criterion_assessment_threshold_relationship
  ATTR:  curvature_ratio_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  compared_element_types: LIST [1 : ?] OF a3m_element_type_name
  ATTR:  u_knots: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_index_on_knots: INTEGER
  ATTR:  offset_angle: positive_plane_angle_measure
  ATTR:  left_offset_distance: positive_length_measure
  ATTR:  segment_depths: LIST [1 : segments] OF positive_length_measure
  ATTR:  angle: (AMBIGUOUS (CASE LEVEL))
  ATTR:  input_skew_angle: plane_angle_measure
  ATTR:  skew_angle: plane_angle_measure
  ATTR:  radius_value: positive_length_measure
  ATTR:  collar_depth: positive_length_measure
  ATTR:  associated_geometry: LIST [1 : 2] OF pcurve_or_surface
  ATTR:  placement: (AMBIGUOUS (CASE LEVEL))
  ATTR:  closed_shell_element: closed_shell
  ATTR:  angle_value: plane_angle_measure
  ATTR:  bound: loop
  ATTR:  direction_ratios: LIST [2 : 3] OF REAL
  ATTR:  axis: (AMBIGUOUS (CASE LEVEL))
  ATTR:  closed_ends: LIST [2 : 2] OF LOGICAL
  ATTR:  fbsm_faces: SET [1 : ?] OF connected_face_set
  ATTR:  the_draughting_model_item_association_with_placeholders: SET [0 : 1] OF
    draughting_model_item_association_with_placeholder
  ATTR:  base_surface: surface
  ATTR:  parent_curve: curve
  ATTR:  compared_elements: SET [1 : ?] OF inspected_equivalence_element_select
  ATTR:  master_representation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  edge_end: vertex
  ATTR:  n_segments: (AMBIGUOUS (CASE LEVEL))
  ATTR:  view_window: planar_box
  ATTR:  upper_limit_actual_rotation_y: plane_angle_measure
  ATTR:  semi_angle: (AMBIGUOUS (CASE LEVEL))
  ATTR:  directrix: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_limit_actual_rotation_x: plane_angle_measure
  ATTR:  reference_point: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_limit_actual_rotation_z: plane_angle_measure
  ATTR:  line_strip: LIST [2 : ?] OF INTEGER
  ATTR:  groove_radius: positive_length_measure
  ATTR:  item_element: compound_item_definition
  ATTR:  external_surface: surface
  ATTR:  cvs_volumes: SET [1 : ?] OF volume_with_faces
  ATTR:  knot_spec: (AMBIGUOUS (CASE LEVEL))
  ATTR:  sphere_radius: positive_length_measure
  ATTR:  first_rotation_angle: plane_angle_measure
  ATTR:  pair_curve: (AMBIGUOUS (CASE LEVEL))
  ATTR:  parameter_current_value: maths_value
  ATTR:  range_on_pair_surface: rectangular_trimmed_surface
  ATTR:  joint: kinematic_joint
  ATTR:  actual_rotation_2: plane_angle_measure
  ATTR:  measured_data_type: a3m_measured_data_type_name
  ATTR:  gamma: plane_angle_measure
  ATTR:  first_offset: non_negative_length_measure
  ATTR:  lower_limit_actual_rotation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  owning_sketch: sketch_type_select
  ATTR:  view_window_clipping: BOOLEAN
  ATTR:  self_intersect: (AMBIGUOUS (CASE LEVEL))
  ATTR:  w_upper: INTEGER
  ATTR:  actual_rotation_1: plane_angle_measure
  ATTR:  points: (AMBIGUOUS (CASE LEVEL))
  ATTR:  curve_3d: curve
  ATTR:  draft_angles: LIST [2 : ?] OF plane_angle_measure
  ATTR:  distance_value: (AMBIGUOUS (CASE LEVEL))
  ATTR:  line_strip_face2: LIST [2 : ?] OF INTEGER
  ATTR:  upper_limit_rack_displacement: length_measure
  ATTR:  map: representation_map
  ATTR:  geometric_model_link: path_or_composite_curve
  ATTR:  extruded_direction: (AMBIGUOUS (CASE LEVEL))
  ATTR:  line_strip_face1: LIST [2 : ?] OF INTEGER
  ATTR:  face_geometry: surface
  ATTR:  face_element: face
  ATTR:  base_radius: positive_length_measure
  ATTR:  lower_limit_actual_rotation_x: plane_angle_measure
  ATTR:  segments: (AMBIGUOUS (CASE LEVEL))
  ATTR:  vertex_geometry: point
  ATTR:  lower_limit_actual_rotation_y: plane_angle_measure
  ATTR:  column_count: positive_integer
  ATTR:  edge_length: positive_length_measure
  ATTR:  actual_point_on_surface: (AMBIGUOUS (CASE LEVEL))
  ATTR:  lower_limit_actual_rotation_z: plane_angle_measure
  ATTR:  thickness_list: LIST [1 : ?] OF length_measure
  ATTR:  column_spacing: length_measure
  ATTR:  protrusion_corner_radius: non_negative_length_measure
  ATTR:  wire_shell_extent: SET [1 : ?] OF loop
  ATTR:  magnitude: length_measure
  ATTR:  semi_axis_1: (AMBIGUOUS (CASE LEVEL))
  ATTR:  curve_plane: plane
  ATTR:  spread_angle: positive_plane_angle_measure
  ATTR:  swept_area: curve_bounded_surface
  ATTR:  v_knots: (AMBIGUOUS (CASE LEVEL))
  ATTR:  sculpturing_element: generalized_surface_select
  ATTR:  lower_limit_first_rotation: plane_angle_measure
  ATTR:  styles: SET [0 : ?] OF presentation_style_assignment
  ATTR:  cone_angle1: plane_angle_measure
  ATTR:  semi_axis_3: (AMBIGUOUS (CASE LEVEL))
  ATTR:  start_param: (AMBIGUOUS (CASE LEVEL))
  ATTR:  basis_surface: (AMBIGUOUS (CASE LEVEL))
  ATTR:  placement_start: placement
  ATTR:  b_splines: LIST [2 : ?] OF local_b_spline
  ATTR:  semi_axis_2: (AMBIGUOUS (CASE LEVEL))
  ATTR:  notable_instances: LIST [1 : ?] OF equivalence_notable_instance
  ATTR:  triangle_strips: (AMBIGUOUS (CASE LEVEL))
  ATTR:  profile: (AMBIGUOUS (CASE LEVEL))
  ATTR:  colour_values: LIST [1 : ?] OF LIST [3 : 4] OF unsigned_8_bit_integer
  ATTR:  cone_angle2: plane_angle_measure
  ATTR:  width_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  thickness2: length_measure
  ATTR:  value_type: (AMBIGUOUS (CASE LEVEL))
  ATTR:  scanner_uncertainty: positive_length_measure
  ATTR:  ebwm_boundary: SET [1 : ?] OF connected_edge_set
  ATTR:  w_b_splines: LIST [8 : ?] OF local_b_spline
  ATTR:  semi_axis: positive_length_measure
  ATTR:  fixed_reference: direction
  ATTR:  approximation_tolerance: (AMBIGUOUS (CASE LEVEL))
  ATTR:  extent: (AMBIGUOUS (CASE LEVEL))
  ATTR:  t_z: (AMBIGUOUS (CASE LEVEL))
  ATTR:  t_y: (AMBIGUOUS (CASE LEVEL))
  ATTR:  input_orientation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  t_x: (AMBIGUOUS (CASE LEVEL))
  ATTR:  upper_limit_pitch: (AMBIGUOUS (CASE LEVEL))
  ATTR:  second_offset: non_negative_length_measure
  ATTR:  upper_limit_yaw: (AMBIGUOUS (CASE LEVEL))
  ATTR:  edge_start: vertex
  ATTR:  npoints: INTEGER
  ATTR:  w_degree: INTEGER
  ATTR:  control_points: (AMBIGUOUS (CASE LEVEL))
  ATTR:  hidden_line_surface_removal: BOOLEAN
  ATTR:  multiplicities: LIST [2 : ?] OF INTEGER
  ATTR:  alpha: plane_angle_measure
  ATTR:  beta: plane_angle_measure
  ATTR:  closed_curve: (AMBIGUOUS (CASE LEVEL))
  ATTR:  sublists: LIST [2 : ?] OF point_cloud_dataset
  ATTR:  offset_type: parallel_offset_type
  ATTR:  mirror_element: linear_geometry_constraint_element
  ATTR:  light_colour: colour
  ATTR:  edge_geometry: curve
  ATTR:  source: applied_external_identification_assignment *** Multiple Select Case Sources ***
  ATTR:  length_value: positive_length_measure
  ATTR:  protrusion_width: positive_length_measure
  ATTR:  transition_number: positive_integer
  ATTR:  protrusion_radius: positive_length_measure
  ATTR:  second_repeat_factor: vector
  ATTR:  ref_direction: (AMBIGUOUS (CASE LEVEL))
  ATTR:  slot_centreline: bounded_curve
  ATTR:  radius_first_link: length_measure
  ATTR:  semi_apex_angle: positive_plane_angle_measure
  ATTR:  y_offset: (AMBIGUOUS (CASE LEVEL))
  ATTR:  triangles: (AMBIGUOUS (CASE LEVEL))
  ATTR:  blended_edges: LIST [1 : ?] OF UNIQUE edge_curve
  ATTR:  suppressed_items: SET [0 : ?] OF representation_item
  ATTR:  rep_1: kinematic_link_representation
  ATTR:  point_parameter_u: (AMBIGUOUS (CASE LEVEL))
  ATTR:  rep_2: kinematic_link_representation
  ATTR:  computed_representation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  sketch_basis: sketch_basis_select
  ATTR:  sbsm_boundary: SET [1 : ?] OF shell
  ATTR:  point_parameter_w: parameter_value
  ATTR:  draft_angle: (AMBIGUOUS (CASE LEVEL))
  ATTR:  outer: closed_shell
  ATTR:  point_parameter_v: (AMBIGUOUS (CASE LEVEL))
  ATTR:  position_coords: LIST [1 : ?] OF LIST [3 : 3] OF REAL
  ATTR:  surface_2: surface
  ATTR:  external_curve: (AMBIGUOUS (CASE LEVEL))
  ATTR:  height: (AMBIGUOUS (CASE LEVEL))
  ATTR:  projection_direction: (AMBIGUOUS (CASE LEVEL))
  ATTR:  edge_function_list: LIST [1 : ?] OF blend_radius_variation_type
  ATTR:  ces_edges: SET [1 : ?] OF edge
  ATTR:  associated_link_representations_1: SET [1 : ?] OF kinematic_link_representation
  ATTR:  u_degree: (AMBIGUOUS (CASE LEVEL))
  ATTR:  surface_1: surface
  ATTR:  constraint_group: SET [2 : ?] OF constraint_group_member
  ATTR:  view_reference_system: axis2_placement_3d
  ATTR:  related_representation_item: angle_direction_reference_select
  ATTR:  actual_rotation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  same_sense: (AMBIGUOUS (CASE LEVEL))
  ATTR:  associated_link_representations_2: SET [1 : ?] OF kinematic_link_representation
  ATTR:  assessment_specification_2: (AMBIGUOUS (CASE LEVEL))
  ATTR:  assessment_specification: (AMBIGUOUS (CASE LEVEL))
  ATTR:  intersected_model: surface_or_solid_model
  ATTR:  implicit_outer: BOOLEAN
  ATTR:  upper_limit_second_rotation: plane_angle_measure
  ATTR:  w_multiplicities: LIST [2 : ?] OF INTEGER
  ATTR:  blanking: (AMBIGUOUS (CASE LEVEL))
  ATTR:  smoothness: transition_code
  ATTR:  theta: (AMBIGUOUS (CASE LEVEL))
  ATTR:  inspected_element: data_equivalence_inspected_element_pair
  ATTR:  extreme_instances: LIST [1 : ?] OF extreme_instance
  ATTR:  knot_u_upper: (AMBIGUOUS (CASE LEVEL))
  ATTR:  exit_faces: SET [1 : ?] OF face_surface
  ATTR:  offset_value: positive_length_measure
  ATTR:  point_index: INTEGER
  ATTR:  geodesic_separation_factor: (AMBIGUOUS (CASE LEVEL))
  ATTR:  cone_base_radius: positive_length_measure
  ATTR:  actual_rotation_z: plane_angle_measure
  ATTR:  upper_limit_actual_rotation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  permanent_id: identifier
  ATTR:  value_component: measure_value *** Multiple Select Case Sources ***
  ATTR:  parent_edge: (AMBIGUOUS (CASE LEVEL))
  ATTR:  location: (AMBIGUOUS (CASE LEVEL))
  ATTR:  dir: vector
  ATTR:  u_upper: (AMBIGUOUS (CASE LEVEL))
  ATTR:  actual_rotation_x: plane_angle_measure
  ATTR:  pnindex: (AMBIGUOUS (CASE LEVEL))
  ATTR:  collected_text: SET [2 : ?] OF text_or_character
  ATTR:  actual_rotation_y: plane_angle_measure
  ATTR:  placing: axis2_placement_3d
  ATTR:  actual_displacement: length_measure
  ATTR:  basis_face_surface: face_surface
  ATTR:  mapping_source: representation_map
  ATTR:  definition: (AMBIGUOUS (CASE LEVEL))
  ATTR:  v_b_splines: (AMBIGUOUS (CASE LEVEL))
  ATTR:  lower_limit_roll: (AMBIGUOUS (CASE LEVEL))
  ATTR:  pnmax: (AMBIGUOUS (CASE LEVEL))
  ATTR:  domain: (AMBIGUOUS (CASE LEVEL))
  ATTR:  focal_dist: length_measure
  ATTR:  radius1: positive_length_measure
  ATTR:  perspective_of_volume: view_volume
  ATTR:  upper_limit_actual_translation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  radius2: positive_length_measure
  ATTR:  mapping_target: representation_item
  ATTR:  point_3: cartesian_point
  ATTR:  point_2: cartesian_point
  ATTR:  point_1: cartesian_point
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  ylength: (AMBIGUOUS (CASE LEVEL))
  ATTR:  knot_w_upper: INTEGER
  ATTR:  children: SET [1 : ?] OF tessellated_item
  ATTR:  near_points: (AMBIGUOUS (CASE LEVEL))
  ATTR:  depth: (AMBIGUOUS (CASE LEVEL))
  ATTR:  relating_representation_item: orientation_basis_select
  ATTR:  view_direction: direction
  ATTR:  xlength: (AMBIGUOUS (CASE LEVEL))
  ATTR:  parent_solid: solid_model
  ATTR:  point_4: cartesian_point
  ATTR:  alignment: (AMBIGUOUS (CASE LEVEL))
  ATTR:  actual_point_on_surface_2: point_on_surface
  ATTR:  smooth: (AMBIGUOUS (CASE LEVEL))
  ATTR:  lower_limit_actual_translation: (AMBIGUOUS (CASE LEVEL))
  ATTR:  negative_direction: BOOLEAN
  ATTR:  first_operand: boolean_operand
  ATTR:  actual_point_on_surface_1: point_on_surface
  ATTR:  extrusion_axis: vector
  ATTR:  comparing_element_types: LIST [1 : ?] OF a3m_element_type_name
  ATTR:  voids: SET [1 : ?] OF oriented_closed_shell
  ATTR:  weights: (AMBIGUOUS (CASE LEVEL))
  ATTR:  cone_apex_angle: plane_angle_measure
  ATTR:  polygon: LIST [3 : ?] OF UNIQUE cartesian_point
  ATTR:  u_smoothness: transition_code
  ATTR:  floor_fillet_radius: (AMBIGUOUS (CASE LEVEL))
  ATTR:  triangle_fans: (AMBIGUOUS (CASE LEVEL))
  ATTR:  dim: dimension_count
  ATTR:  line_strips: LIST [1 : ?] OF LIST [2 : ?] OF INTEGER
  ATTR:  small_vector_tolerance: length_measure
  ATTR:  applied_values: SET [1 : ?] OF measure_representation_item
  ATTR:  font: font_select
  ATTR:  associated_curves: (AMBIGUOUS (CASE LEVEL))

  state_type (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  structured_message (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  frame_of_reference: SET [1 : ?] OF product_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  validation (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  value_representation_item (*ENTITY*):
  ATTR:  value_component: measure_value *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  verification (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

*/

/** SELECT type
- EXPRESS:
```express
  TYPE evidence_item = SELECT
    ( action_property (*ENTITY*),
     action_property_representation (*ENTITY*),
     analysis_assignment (*ENTITY*),
     applied_action_assignment (*ENTITY*),
     applied_approval_assignment (*ENTITY*),
     applied_certification_assignment (*ENTITY*),
     applied_classification_assignment (*ENTITY*),
     applied_contract_assignment (*ENTITY*),
     applied_effectivity_assignment (*ENTITY*),
     applied_event_occurrence_assignment (*ENTITY*),
     applied_external_identification_assignment (*ENTITY*),
     applied_ineffectivity_assignment (*ENTITY*),
     applied_organizational_project_assignment (*ENTITY*),
     applied_organization_assignment (*ENTITY*),
     applied_person_and_organization_assignment (*ENTITY*),
     applied_security_classification_assignment (*ENTITY*),
     date_and_time_assignment (*ENTITY*),
     date_assignment (*ENTITY*),
     measure_representation_item (*ENTITY*),
     person (*ENTITY*),
     person_and_organization (*ENTITY*),
     product (*ENTITY*),
     product_definition (*ENTITY*),
     product_definition_context (*ENTITY*),
     product_definition_formation (*ENTITY*),
     product_definition_formation_relationship (*ENTITY*),
     product_definition_relationship (*ENTITY*),
     product_relationship (*ENTITY*),
     property_definition (*ENTITY*),
     property_definition_representation (*ENTITY*),
     representation (*ENTITY*),
     representation_context (*ENTITY*),
     representation_item (*ENTITY*),
     state_type (*ENTITY*),
     structured_message (*ENTITY*),
     validation (*ENTITY*),
     value_representation_item (*ENTITY*),
     verification (*ENTITY*) );
  END_TYPE; -- evidence_item (line:2987 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public enum sEVIDENCE_ITEM : SDAIValue, AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sEVIDENCE_ITEM__type {

    /// SELECT case ``eACTION_PROPERTY`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _ACTION_PROPERTY(eACTION_PROPERTY)	// (ENTITY)

    /// SELECT case ``eACTION_PROPERTY_REPRESENTATION`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _ACTION_PROPERTY_REPRESENTATION(eACTION_PROPERTY_REPRESENTATION)	// (ENTITY)

    /// SELECT case ``eANALYSIS_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _ANALYSIS_ASSIGNMENT(eANALYSIS_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ACTION_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_ACTION_ASSIGNMENT(eAPPLIED_ACTION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_APPROVAL_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_APPROVAL_ASSIGNMENT(eAPPLIED_APPROVAL_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_CERTIFICATION_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_CERTIFICATION_ASSIGNMENT(eAPPLIED_CERTIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_CLASSIFICATION_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_CLASSIFICATION_ASSIGNMENT(eAPPLIED_CLASSIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_CONTRACT_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_CONTRACT_ASSIGNMENT(eAPPLIED_CONTRACT_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_EFFECTIVITY_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_EFFECTIVITY_ASSIGNMENT(eAPPLIED_EFFECTIVITY_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(
      eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_INEFFECTIVITY_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_INEFFECTIVITY_ASSIGNMENT(eAPPLIED_INEFFECTIVITY_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ORGANIZATION_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_ORGANIZATION_ASSIGNMENT(eAPPLIED_ORGANIZATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(
      eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(
      eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eDATE_AND_TIME_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _DATE_AND_TIME_ASSIGNMENT(eDATE_AND_TIME_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eDATE_ASSIGNMENT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _DATE_ASSIGNMENT(eDATE_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eMEASURE_REPRESENTATION_ITEM`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _MEASURE_REPRESENTATION_ITEM(eMEASURE_REPRESENTATION_ITEM)	// (ENTITY)

    /// SELECT case ``ePERSON`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _PERSON(ePERSON)	// (ENTITY)

    /// SELECT case ``ePERSON_AND_ORGANIZATION`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _PERSON_AND_ORGANIZATION(ePERSON_AND_ORGANIZATION)	// (ENTITY)

    /// SELECT case ``ePRODUCT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _PRODUCT(ePRODUCT)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _PRODUCT_DEFINITION(ePRODUCT_DEFINITION)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_CONTEXT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _PRODUCT_DEFINITION_CONTEXT(ePRODUCT_DEFINITION_CONTEXT)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_FORMATION`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _PRODUCT_DEFINITION_FORMATION(ePRODUCT_DEFINITION_FORMATION)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_RELATIONSHIP`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _PRODUCT_DEFINITION_RELATIONSHIP(ePRODUCT_DEFINITION_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``ePRODUCT_RELATIONSHIP`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _PRODUCT_RELATIONSHIP(ePRODUCT_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``ePROPERTY_DEFINITION`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _PROPERTY_DEFINITION(ePROPERTY_DEFINITION)	// (ENTITY)

    /// SELECT case ``ePROPERTY_DEFINITION_REPRESENTATION`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _PROPERTY_DEFINITION_REPRESENTATION(ePROPERTY_DEFINITION_REPRESENTATION)	// (ENTITY)

    /// SELECT case ``eREPRESENTATION`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _REPRESENTATION(eREPRESENTATION)	// (ENTITY)

    /// SELECT case ``eREPRESENTATION_CONTEXT`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _REPRESENTATION_CONTEXT(eREPRESENTATION_CONTEXT)	// (ENTITY)

    /// SELECT case ``eREPRESENTATION_ITEM`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _REPRESENTATION_ITEM(eREPRESENTATION_ITEM)	// (ENTITY)

    /// SELECT case ``eSTATE_TYPE`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _STATE_TYPE(eSTATE_TYPE)	// (ENTITY)

    /// SELECT case ``eSTRUCTURED_MESSAGE`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _STRUCTURED_MESSAGE(eSTRUCTURED_MESSAGE)	// (ENTITY)

    /// SELECT case ``eVALIDATION`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _VALIDATION(eVALIDATION)	// (ENTITY)

    /// SELECT case ``eVALUE_REPRESENTATION_ITEM`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _VALUE_REPRESENTATION_ITEM(eVALUE_REPRESENTATION_ITEM)	// (ENTITY)

    /// SELECT case ``eVERIFICATION`` (ENTITY) in ``sEVIDENCE_ITEM``
    case _VERIFICATION(eVERIFICATION)	// (ENTITY)

    //MARK: - CONSTRUCTORS
    public init(fundamental: FundamentalType) { self = fundamental }

    public init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?){
      return nil
    }

    public init?(possiblyFrom complex: SDAI.ComplexEntity?) {
      guard let complex = complex else { return nil }

      if let base = complex.entityReference(eACTION_PROPERTY.self) {self = ._ACTION_PROPERTY(base) }
      else if let base = complex.entityReference(eACTION_PROPERTY_REPRESENTATION.self) {self = ._ACTION_PROPERTY_REPRESENTATION(base) }
      else if let base = complex.entityReference(eANALYSIS_ASSIGNMENT.self) {self = ._ANALYSIS_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ACTION_ASSIGNMENT.self) {self = ._APPLIED_ACTION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_APPROVAL_ASSIGNMENT.self) {self = ._APPLIED_APPROVAL_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_CERTIFICATION_ASSIGNMENT.self) {self = ._APPLIED_CERTIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_CLASSIFICATION_ASSIGNMENT.self) {self = ._APPLIED_CLASSIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_CONTRACT_ASSIGNMENT.self) {self = ._APPLIED_CONTRACT_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_EFFECTIVITY_ASSIGNMENT.self) {self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT.self) {self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT.self) {self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_INEFFECTIVITY_ASSIGNMENT.self) {self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT.self) {self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ORGANIZATION_ASSIGNMENT.self) {self = ._APPLIED_ORGANIZATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.self) {self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.self) {self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eDATE_AND_TIME_ASSIGNMENT.self) {self = ._DATE_AND_TIME_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eDATE_ASSIGNMENT.self) {self = ._DATE_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eMEASURE_REPRESENTATION_ITEM.self) {self = ._MEASURE_REPRESENTATION_ITEM(base) }
      else if let base = complex.entityReference(ePERSON.self) {self = ._PERSON(base) }
      else if let base = complex.entityReference(ePERSON_AND_ORGANIZATION.self) {self = ._PERSON_AND_ORGANIZATION(base) }
      else if let base = complex.entityReference(ePRODUCT.self) {self = ._PRODUCT(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION.self) {self = ._PRODUCT_DEFINITION(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_CONTEXT.self) {self = ._PRODUCT_DEFINITION_CONTEXT(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_FORMATION.self) {self = ._PRODUCT_DEFINITION_FORMATION(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.self) {self = ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_RELATIONSHIP.self) {self = ._PRODUCT_DEFINITION_RELATIONSHIP(base) }
      else if let base = complex.entityReference(ePRODUCT_RELATIONSHIP.self) {self = ._PRODUCT_RELATIONSHIP(base) }
      else if let base = complex.entityReference(ePROPERTY_DEFINITION.self) {self = ._PROPERTY_DEFINITION(base) }
      else if let base = complex.entityReference(ePROPERTY_DEFINITION_REPRESENTATION.self) {self = ._PROPERTY_DEFINITION_REPRESENTATION(base) }
      else if let base = complex.entityReference(eREPRESENTATION.self) {self = ._REPRESENTATION(base) }
      else if let base = complex.entityReference(eREPRESENTATION_CONTEXT.self) {self = ._REPRESENTATION_CONTEXT(base) }
      else if let base = complex.entityReference(eREPRESENTATION_ITEM.self) {self = ._REPRESENTATION_ITEM(base) }
      else if let base = complex.entityReference(eSTATE_TYPE.self) {self = ._STATE_TYPE(base) }
      else if let base = complex.entityReference(eSTRUCTURED_MESSAGE.self) {self = ._STRUCTURED_MESSAGE(base) }
      else if let base = complex.entityReference(eVALIDATION.self) {self = ._VALIDATION(base) }
      else if let base = complex.entityReference(eVALUE_REPRESENTATION_ITEM.self) {self = ._VALUE_REPRESENTATION_ITEM(base) }
      else if let base = complex.entityReference(eVERIFICATION.self) {self = ._VERIFICATION(base) }
      else { return nil }
    }

    public init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let select = generic else { return nil }

      if let fundamental = select as? Self {
        self.init(fundamental: fundamental)
      }
      else if let base = eACTION_PROPERTY.convert(fromGeneric: select) {
        self = ._ACTION_PROPERTY(base)
      }
      else if let base = eACTION_PROPERTY_REPRESENTATION.convert(fromGeneric: select) {
        self = ._ACTION_PROPERTY_REPRESENTATION(base)
      }
      else if let base = eANALYSIS_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._ANALYSIS_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ACTION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ACTION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_APPROVAL_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_APPROVAL_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_CERTIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_CERTIFICATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_CLASSIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_CLASSIFICATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_CONTRACT_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_CONTRACT_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_EFFECTIVITY_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_INEFFECTIVITY_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ORGANIZATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ORGANIZATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(base)
      }
      else if let base = eDATE_AND_TIME_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._DATE_AND_TIME_ASSIGNMENT(base)
      }
      else if let base = eDATE_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._DATE_ASSIGNMENT(base)
      }
      else if let base = eMEASURE_REPRESENTATION_ITEM.convert(fromGeneric: select) {
        self = ._MEASURE_REPRESENTATION_ITEM(base)
      }
      else if let base = ePERSON.convert(fromGeneric: select) {
        self = ._PERSON(base)
      }
      else if let base = ePERSON_AND_ORGANIZATION.convert(fromGeneric: select) {
        self = ._PERSON_AND_ORGANIZATION(base)
      }
      else if let base = ePRODUCT.convert(fromGeneric: select) {
        self = ._PRODUCT(base)
      }
      else if let base = ePRODUCT_DEFINITION.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION(base)
      }
      else if let base = ePRODUCT_DEFINITION_CONTEXT.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_CONTEXT(base)
      }
      else if let base = ePRODUCT_DEFINITION_FORMATION.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_FORMATION(base)
      }
      else if let base = ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(base)
      }
      else if let base = ePRODUCT_DEFINITION_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_RELATIONSHIP(base)
      }
      else if let base = ePRODUCT_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._PRODUCT_RELATIONSHIP(base)
      }
      else if let base = ePROPERTY_DEFINITION.convert(fromGeneric: select) {
        self = ._PROPERTY_DEFINITION(base)
      }
      else if let base = ePROPERTY_DEFINITION_REPRESENTATION.convert(fromGeneric: select) {
        self = ._PROPERTY_DEFINITION_REPRESENTATION(base)
      }
      else if let base = eREPRESENTATION.convert(fromGeneric: select) {
        self = ._REPRESENTATION(base)
      }
      else if let base = eREPRESENTATION_CONTEXT.convert(fromGeneric: select) {
        self = ._REPRESENTATION_CONTEXT(base)
      }
      else if let base = eREPRESENTATION_ITEM.convert(fromGeneric: select) {
        self = ._REPRESENTATION_ITEM(base)
      }
      else if let base = eSTATE_TYPE.convert(fromGeneric: select) {
        self = ._STATE_TYPE(base)
      }
      else if let base = eSTRUCTURED_MESSAGE.convert(fromGeneric: select) {
        self = ._STRUCTURED_MESSAGE(base)
      }
      else if let base = eVALIDATION.convert(fromGeneric: select) {
        self = ._VALIDATION(base)
      }
      else if let base = eVALUE_REPRESENTATION_ITEM.convert(fromGeneric: select) {
        self = ._VALUE_REPRESENTATION_ITEM(base)
      }
      else if let base = eVERIFICATION.convert(fromGeneric: select) {
        self = ._VERIFICATION(base)
      }
      else { return nil }
    }

    // InitializableByP21Parameter
    public static var bareTypeName: String = "EVIDENCE_ITEM"

    public init?(p21typedParam: P21Decode.ExchangeStructure.TypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      guard let keyword = p21typedParam.keyword.asStandardKeyword else { exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"; return nil }

      switch(keyword) {
      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"
        return nil
      }
    }

    public init?(p21untypedParam: P21Decode.ExchangeStructure.UntypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      switch p21untypedParam {
      case .rhsOccurenceName(let rhsname):
        switch rhsname {
        case .constantEntityName(let name):
          guard let entity = exchangeStructure.resolve(constantEntityName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: entity.complexEntity)

        case .entityInstanceName(let name):
          guard let complex = exchangeStructure.resolve(entityInstanceName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: complex)

        default:
          exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
          return nil
        }

      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
        return nil
      }
    }

    public init?(p21omittedParamfrom exchangeStructure: P21Decode.ExchangeStructure) {
      return nil
    }


    //MARK: - ENTITY UNDERLYING TYPE REFERENCES
    public var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT: 
      eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eORGANIZATION_ASSIGNMENT: eORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.super_eORGANIZATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eREPRESENTATION: eREPRESENTATION? {
      switch self {
      case ._REPRESENTATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eEFFECTIVITY_ASSIGNMENT: eEFFECTIVITY_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.super_eEFFECTIVITY_ASSIGNMENT
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.super_eEFFECTIVITY_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_CERTIFICATION_ASSIGNMENT: eAPPLIED_CERTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePROPERTY_DEFINITION_REPRESENTATION: ePROPERTY_DEFINITION_REPRESENTATION? {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity
      default: return nil
      }
    }

    public var super_ePERSON: ePERSON? {
      switch self {
      case ._PERSON(let entity): return entity
      default: return nil
      }
    }

    public var super_eSTATE_TYPE: eSTATE_TYPE? {
      switch self {
      case ._STATE_TYPE(let entity): return entity
      default: return nil
      }
    }

    public var super_eMEASURE_REPRESENTATION_ITEM: eMEASURE_REPRESENTATION_ITEM? {
      switch self {
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity
      default: return nil
      }
    }

    public var super_eIDENTIFICATION_ASSIGNMENT: eIDENTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity
        .super_eIDENTIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_ePROPERTY_DEFINITION: ePROPERTY_DEFINITION? {
      switch self {
      case ._PROPERTY_DEFINITION(let entity): return entity
      default: return nil
      }
    }

    public var super_eSTRUCTURED_MESSAGE: eSTRUCTURED_MESSAGE? {
      switch self {
      case ._STRUCTURED_MESSAGE(let entity): return entity
      default: return nil
      }
    }

    public var super_eVALIDATION: eVALIDATION? {
      switch self {
      case ._VALIDATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eVALUE_REPRESENTATION_ITEM: eVALUE_REPRESENTATION_ITEM? {
      switch self {
      case ._VALUE_REPRESENTATION_ITEM(let entity): return entity
      default: return nil
      }
    }

    public var super_eGROUP: eGROUP? {
      switch self {
      case ._ANALYSIS_ASSIGNMENT(let entity): return entity.super_eGROUP
      case ._VALIDATION(let entity): return entity.super_eGROUP
      case ._VERIFICATION(let entity): return entity.super_eGROUP
      default: return nil
      }
    }

    public var super_eAPPLICATION_CONTEXT_ELEMENT: eAPPLICATION_CONTEXT_ELEMENT? {
      switch self {
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.super_eAPPLICATION_CONTEXT_ELEMENT
      default: return nil
      }
    }

    public var super_eREPRESENTATION_CONTEXT: eREPRESENTATION_CONTEXT? {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT: 
      eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eANALYSIS_ASSIGNMENT: eANALYSIS_ASSIGNMENT? {
      switch self {
      case ._ANALYSIS_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_EFFECTIVITY_ASSIGNMENT: eAPPLIED_EFFECTIVITY_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP: 
      ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP? {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eCONTRACT_ASSIGNMENT: eCONTRACT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.super_eCONTRACT_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eDATE_ASSIGNMENT: eDATE_ASSIGNMENT? {
      switch self {
      case ._DATE_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePERSON_AND_ORGANIZATION_ASSIGNMENT: ePERSON_AND_ORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity
        .super_ePERSON_AND_ORGANIZATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eACTION_PROPERTY: eACTION_PROPERTY? {
      switch self {
      case ._ACTION_PROPERTY(let entity): return entity
      default: return nil
      }
    }

    public var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT: eEXTERNAL_IDENTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity
        .super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT: eAPPLIED_INEFFECTIVITY_ASSIGNMENT? {
      switch self {
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eORGANIZATIONAL_PROJECT_ASSIGNMENT: eORGANIZATIONAL_PROJECT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity
        .super_eORGANIZATIONAL_PROJECT_ASSIGNMENT
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION: ePRODUCT_DEFINITION? {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity
      default: return nil
      }
    }

    public var super_eSECURITY_CLASSIFICATION_ASSIGNMENT: eSECURITY_CLASSIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity
        .super_eSECURITY_CLASSIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eREPRESENTATION_ITEM: eREPRESENTATION_ITEM? {
      switch self {
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.super_eREPRESENTATION_ITEM
      case ._REPRESENTATION_ITEM(let entity): return entity
      case ._VALUE_REPRESENTATION_ITEM(let entity): return entity.super_eREPRESENTATION_ITEM
      default: return nil
      }
    }

    public var super_eAPPLIED_CLASSIFICATION_ASSIGNMENT: eAPPLIED_CLASSIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eDATE_AND_TIME_ASSIGNMENT: eDATE_AND_TIME_ASSIGNMENT? {
      switch self {
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT: ePRODUCT? {
      switch self {
      case ._PRODUCT(let entity): return entity
      case ._STRUCTURED_MESSAGE(let entity): return entity.super_ePRODUCT
      default: return nil
      }
    }

    public var super_eAPPLIED_CONTRACT_ASSIGNMENT: eAPPLIED_CONTRACT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eMEASURE_WITH_UNIT: eMEASURE_WITH_UNIT? {
      switch self {
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.super_eMEASURE_WITH_UNIT
      default: return nil
      }
    }

    public var super_eVERIFICATION: eVERIFICATION? {
      switch self {
      case ._VERIFICATION(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_FORMATION: ePRODUCT_DEFINITION_FORMATION? {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_ASSIGNMENT: eACTION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.super_eACTION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPROVAL_ASSIGNMENT: eAPPROVAL_ASSIGNMENT? {
      switch self {
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.super_eAPPROVAL_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eCERTIFICATION_ASSIGNMENT: eCERTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.super_eCERTIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eACTION_PROPERTY_REPRESENTATION: eACTION_PROPERTY_REPRESENTATION? {
      switch self {
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT: 
      eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_ORGANIZATION_ASSIGNMENT: eAPPLIED_ORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eCLASSIFICATION_ASSIGNMENT: eCLASSIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let entity): return entity.super_eCLASSIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPLIED_APPROVAL_ASSIGNMENT: eAPPLIED_APPROVAL_ASSIGNMENT? {
      switch self {
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePERSON_AND_ORGANIZATION: ePERSON_AND_ORGANIZATION? {
      switch self {
      case ._PERSON_AND_ORGANIZATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT: eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_CONTEXT: ePRODUCT_DEFINITION_CONTEXT? {
      switch self {
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_RELATIONSHIP: ePRODUCT_DEFINITION_RELATIONSHIP? {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT: 
      eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPLIED_ACTION_ASSIGNMENT: eAPPLIED_ACTION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_RELATIONSHIP: ePRODUCT_RELATIONSHIP? {
      switch self {
      case ._PRODUCT_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eEVENT_OCCURRENCE_ASSIGNMENT: eEVENT_OCCURRENCE_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity
        .super_eEVENT_OCCURRENCE_ASSIGNMENT
      default: return nil
      }
    }


    //MARK: - ENTITY ATTRIBUTE REFERENCES
    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_SURFACE_1: eRECTANGULAR_TRIMMED_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_SURFACE_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var STYLE_CONTEXT: (SDAI.LIST<sSTYLE_CONTEXT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.STYLE_CONTEXT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_SURFACE_2: eRECTANGULAR_TRIMMED_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_SURFACE_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SLOT_WIDTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SLOT_WIDTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var END_EXIT_FACES: (SDAI.LIST<SDAI.SET<eFACE_SURFACE>/*[0:nil]*/ >/*[2:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.END_EXIT_FACES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONCENTRATION_EXPONENT: SDAI.REAL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONCENTRATION_EXPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INDIRECTLY_PICKED_ITEMS: (SDAI.SET<eREPRESENTATION_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INDIRECTLY_PICKED_ITEMS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_PAIR_CURVE: eTRIMMED_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_PAIR_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REPLICATE_COUNT: tPOSITIVE_INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REPLICATE_COUNT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ROTATION_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ROTATION_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT`` )
    public var ASSIGNED_SECURITY_CLASSIFICATION: eSECURITY_CLASSIFICATION?  {
      switch self {
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return 
        entity.ASSIGNED_SECURITY_CLASSIFICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CFS_FACES: (SDAI.SET<eFACE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CFS_FACES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONTAINER: (SDAI.SET<ePRESENTATION_VIEW>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONTAINER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eACTION_PROPERTY_REPRESENTATION`` )
    public var REPRESENTATION: eREPRESENTATION?  {
      switch self {
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.REPRESENTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CTRIANGLES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[10:10]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CTRIANGLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS_LIST: (SDAI.LIST<tPOSITIVE_LENGTH_MEASURE>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS_LIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CLOSED_INTERPOLATION: SDAI.LOGICAL {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CLOSED_INTERPOLATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eACTION_PROPERTY`` )
    /// - origin: ENTITY( ``eACTION_PROPERTY_REPRESENTATION`` )
    /// - origin: ENTITY( ``eANALYSIS_ASSIGNMENT`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION`` )
    /// - origin: ENTITY( ``ePRODUCT`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    /// - origin: ENTITY( ``eSTATE_TYPE`` )
    /// - origin: ENTITY( ``eSTRUCTURED_MESSAGE`` )
    /// - origin: ENTITY( ``eVALIDATION`` )
    /// - origin: ENTITY( ``eVERIFICATION`` )
    public var DESCRIPTION: tTEXT?  {
      switch self {
      case ._ACTION_PROPERTY(let entity): return entity.DESCRIPTION
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.DESCRIPTION
      case ._ANALYSIS_ASSIGNMENT(let entity): return entity.DESCRIPTION
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.DESCRIPTION
      case ._PRODUCT(let entity): return entity.DESCRIPTION
      case ._PRODUCT_DEFINITION(let entity): return entity.DESCRIPTION
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.DESCRIPTION
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.DESCRIPTION
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.DESCRIPTION
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.DESCRIPTION
      case ._PROPERTY_DEFINITION(let entity): return entity.DESCRIPTION
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.DESCRIPTION
      case ._REPRESENTATION(let entity): return entity.DESCRIPTION
      case ._REPRESENTATION_ITEM/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREPRESENTATION_ITEM
      case ._STATE_TYPE(let entity): return entity.DESCRIPTION
      case ._STRUCTURED_MESSAGE(let entity): return entity.DESCRIPTION
      case ._VALIDATION(let entity): return entity.DESCRIPTION
      case ._VERIFICATION(let entity): return entity.DESCRIPTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT`` )
    public var ASSIGNED_EVENT_OCCURRENCE: eEVENT_OCCURRENCE?  {
      switch self {
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity.ASSIGNED_EVENT_OCCURRENCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACCURACY_TYPES: (SDAI.LIST<nA3M_ACCURACY_TYPE_NAME>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACCURACY_TYPES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ANGULAR_SPACING: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ANGULAR_SPACING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET1: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_POINT_ON_CURVE_2: ePOINT_ON_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_POINT_ON_CURVE_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FLOOR_BLEND_RADIUS: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FLOOR_BLEND_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GENERALISED_MAJOR_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GENERALISED_MAJOR_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var LEAF: sPRODUCT_DEFINITION_OR_REFERENCE?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.LEAF
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET2: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var NO_OF_BYTES: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.NO_OF_BYTES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var MIDDLE_NAMES: (SDAI.LIST<tLABEL>/*[1:nil]*/ )?  {
      switch self {
      case ._PERSON(let entity): return entity.MIDDLE_NAMES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CURVE_1: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CURVE_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MAJOR_ORIENTATION_BASIS: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MAJOR_ORIENTATION_BASIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASE_ELEMENT: sGENERALIZED_SURFACE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASE_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CURVE_2: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CURVE_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var CONTEXT_IDENTIFIER: tIDENTIFIER?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.CONTEXT_IDENTIFIER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONTENTS: (SDAI.SET<sDRAUGHTING_CALLOUT_ELEMENT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONTENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VSENSE: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VSENSE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var START_OF_NEXT_HATCH_LINE: eONE_DIRECTION_REPEAT_FACTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.START_OF_NEXT_HATCH_LINE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CURVE_FORM: nB_SPLINE_CURVE_FORM?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CURVE_FORM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OVER_RIDDEN_STYLE: eSTYLED_ITEM?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OVER_RIDDEN_STYLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MEASURED_VALUE_FOR_INSPECTED_ELEMENT: sEQUIVALENCE_MEASURED_VALUE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MEASURED_VALUE_FOR_INSPECTED_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TRANSFORMATION_OPERATOR: eKINEMATIC_PAIR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TRANSFORMATION_OPERATOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eDATE_ASSIGNMENT`` )
    public var ASSIGNED_DATE: eDATE?  {
      switch self {
      case ._DATE_ASSIGNMENT(let entity): return entity.ASSIGNED_DATE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIAL_ALIGNMENT: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIAL_ALIGNMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var HATCH_LINE_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.HATCH_LINE_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var SUFFIX_TITLES: (SDAI.LIST<tLABEL>/*[1:nil]*/ )?  {
      switch self {
      case ._PERSON(let entity): return entity.SUFFIX_TITLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONSTRAINED_ELEMENTS: (SDAI.SET<eREPRESENTATION_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONSTRAINED_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TANGENT_CONTACT: nTANGENT_CONTACT_TYPE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TANGENT_CONTACT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SEGMENT_RADII: (SDAI.LIST<tPOSITIVE_LENGTH_MEASURE>/*[1:SEGMENTS]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SEGMENT_RADII
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var REALIZED_PRODUCT: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.REALIZED_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    public var DEPENDENT_ENVIRONMENT: eDATA_ENVIRONMENT?  {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.DEPENDENT_ENVIRONMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LEFT_OFFSET: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LEFT_OFFSET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PATCHES: (SDAI.SET<eSURFACE_PATCH>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PATCHES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REPEAT_FACTOR: eVECTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REPEAT_FACTOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ROW_SPACING: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ROW_SPACING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TIP_RADIUS: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TIP_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DETECTED_DIFFERENCE_TYPES: (SDAI.LIST<nA3M_DETECTED_DIFFERENCE_TYPE_NAME>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DETECTED_DIFFERENCE_TYPES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var HATCH_LINE_APPEARANCE: eCURVE_STYLE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.HATCH_LINE_APPEARANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SWEPT_CURVE: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SWEPT_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var NEXT_USAGE: eNEXT_ASSEMBLY_USAGE_OCCURRENCE?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.NEXT_USAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ARC_LENGTH_DISTANCE_FACTOR: SDAI.REAL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ARC_LENGTH_DISTANCE_FACTOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_APPROVAL_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_CERTIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_CLASSIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_CONTRACT_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_EFFECTIVITY_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_INEFFECTIVITY_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eDATE_AND_TIME_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eDATE_ASSIGNMENT`` )
    public var ROLE: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity.ROLE
      case ._DATE_ASSIGNMENT(let entity): return entity.ROLE
      case ._REPRESENTATION_ITEM/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREPRESENTATION_ITEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_PT: ePOINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_PT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET_DIRECTION_CONSTRAINED: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET_DIRECTION_CONSTRAINED
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THICKNESS: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.THICKNESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var N_U: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.N_U
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DIRECTION_OF_AXIS: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DIRECTION_OF_AXIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TEE_SECTION_WIDTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TEE_SECTION_WIDTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FILLET_RADIUS: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FILLET_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCANNER_LOCATION: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCANNER_LOCATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var N_V: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.N_V
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIRST_TRIM_INTENT: nTRIM_INTENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIRST_TRIM_INTENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OPERATOR: nBOOLEAN_OPERATOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OPERATOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SUBSKETCH_ELEMENTS: (SDAI.SET<sSKETCH_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SUBSKETCH_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var X_SCALE: tPOSITIVE_RATIO_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.X_SCALE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCANNED_POINTS: (SDAI.SET<eSCANNED_DATA_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCANNED_POINTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ENCLOSURE: eBOX_DOMAIN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ENCLOSURE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var REFERENCE_DESIGNATOR: tIDENTIFIER?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.REFERENCE_DESIGNATOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIXED_ATTRIBUTES: (SDAI.SET<eINSTANCE_ATTRIBUTE_REFERENCE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIXED_ATTRIBUTES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARAMETER_DESCRIPTION: tTEXT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARAMETER_DESCRIPTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARING_SPECIFIED_ELEMENTS: (SDAI.SET<sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARING_SPECIFIED_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SECOND_TRIM_INTENT: nTRIM_INTENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SECOND_TRIM_INTENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SHAPE_CRITERIA: (SDAI.SET<eA3MA_ASSEMBLY_AND_SHAPE_CRITERIA_RELATIONSHIP>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SHAPE_CRITERIA
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SECOND_OPERAND: sBOOLEAN_OPERAND?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SECOND_OPERAND
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TRIM_1: (SDAI.SET<sTRIMMING_SELECT>/*[1:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TRIM_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_CURVE_2: eTRIMMED_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_CURVE_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    public var STATUS: SDAI.STRING?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.STATUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var RELATED_PRODUCT_DEFINITION_FORMATION: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return 
        entity.RELATED_PRODUCT_DEFINITION_FORMATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var CHARACTER_BOX: ePLANAR_EXTENT?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.CHARACTER_BOX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INNER_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INNER_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_HEIGHT: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_HEIGHT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TURN_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TURN_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REGION_COLOUR: eCOLOUR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REGION_COLOUR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TRIM_2: (SDAI.SET<sTRIMMING_SELECT>/*[1:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TRIM_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_CURVE_1: eTRIMMED_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_CURVE_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var CONSTITUENT_AMOUNT: (SDAI.SET<sCHARACTERIZED_PRODUCT_COMPOSITION_VALUE>/*[1:nil]*/ )?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.CONSTITUENT_AMOUNT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PATH: nTEXT_PATH?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PATH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TILES: (SDAI.SET<sFILL_AREA_STYLE_TILE_SHAPE_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TILES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INSPECTED_ELEMENTS: (SDAI.SET<sINSPECTED_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INSPECTED_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_APPROVAL_ASSIGNMENT`` )
    public var ASSIGNED_APPROVAL: eAPPROVAL?  {
      switch self {
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.ASSIGNED_APPROVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var UPPER_USAGE: eASSEMBLY_COMPONENT_USAGE?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.UPPER_USAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ROW_COUNT: tPOSITIVE_INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ROW_COUNT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POCKET_LENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POCKET_LENGTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TARGET: eSYMBOL_TARGET?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TARGET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXTERNAL_POINT: ePOINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXTERNAL_POINT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GEAR_RATIO: SDAI.REAL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GEAR_RATIO
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXTERNAL_GROOVE: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXTERNAL_GROOVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var RANKING_RATIONALE: tTEXT?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.RANKING_RATIONALE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REPLICATED_ELEMENT: eMODIFIED_SOLID_WITH_PLACED_CONFIGURATION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REPLICATED_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var A: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.A
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_VOLUME_SET: eCONNECTED_VOLUME_SET?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_VOLUME_SET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SELECT_OUTER: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SELECT_OUTER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var B: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.B
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PNT: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PNT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var C: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.C
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var V_SMOOTHNESS: nTRANSITION_CODE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.V_SMOOTHNESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var CLASS: tLABEL?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.CLASS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCANNER_INFO: (SDAI.SET<eSCANNER_PROPERTY>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCANNER_INFO
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SILHOUETTED_MODEL: sSURFACE_OR_SOLID_MODEL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SILHOUETTED_MODEL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SOURCES: (SDAI.SET<eLIGHT_SOURCE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SOURCES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SENSE_AGREEMENT: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SENSE_AGREEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_ELEMENT: eEDGE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASIS_VOLUME: eVOLUME?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASIS_VOLUME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SWEPT_FACE: eFACE_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SWEPT_FACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINK_REPRESENTATION_ASSOCIATIONS: (SDAI.SET<ePAIR_REPRESENTATION_RELATIONSHIP>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINK_REPRESENTATION_ASSOCIATIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_ACTUAL_TRANSLATION_Z: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_ACTUAL_TRANSLATION_Z
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var CM_LINK: eVARIATIONAL_CURRENT_REPRESENTATION_RELATIONSHIP?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.CM_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_TRANSLATION_Z: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_TRANSLATION_Z
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_RACK_DISPLACEMENT: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_RACK_DISPLACEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOOP_VERTEX: eVERTEX?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOOP_VERTEX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var LAST_NAME: tLABEL?  {
      switch self {
      case ._PERSON(let entity): return entity.LAST_NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var T_START: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.T_START
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PTS_PER_SUBLIST: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PTS_PER_SUBLIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var END_CONDITIONS: (SDAI.LIST<sBLEND_END_CONDITION_SELECT>/*[2:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.END_CONDITIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var DEFINED_VERSION: eCOLLECTION_VERSION?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.DEFINED_VERSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATED_MESSAGE: eSTRUCTURED_MESSAGE?  {
      switch self {
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATED_MESSAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var AXIS_POSITION: eAXIS1_PLACEMENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.AXIS_POSITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    public var OF_COLLECTION: eCOLLECTION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.OF_COLLECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SBWM_BOUNDARY: (SDAI.SET<sSHELL>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SBWM_BOUNDARY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var KNOT_VALUES: tSPLINE_KNOT_VALUES?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.KNOT_VALUES
      default: return nil
      }
    }

    //MARK: var ITEMS: (AMBIGUOUS)

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PITCH: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PITCH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PERMANENT_AGGREGATE_ID: tIDENTIFIER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PERMANENT_AGGREGATE_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TILING_PATTERN: eTWO_DIRECTION_REPEAT_FACTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TILING_PATTERN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PCURVE_REFERENCE: ePCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PCURVE_REFERENCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var OUTLINES: (SDAI.SET<eANNOTATION_FILL_AREA>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.OUTLINES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var REPRESENTATIONS_IN_CONTEXT: (SDAI.SET<eREPRESENTATION>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.REPRESENTATIONS_IN_CONTEXT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARED_SPECIFIED_ELEMENTS: (SDAI.SET<sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARED_SPECIFIED_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var APPLIES_TO_PAIR: eKINEMATIC_PAIR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.APPLIES_TO_PAIR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_ACTUAL_ROTATION_1: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_ACTUAL_ROTATION_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var PRODUCT_DESIGN_VERSION: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.PRODUCT_DESIGN_VERSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONICAL_TRANSITIONS: (SDAI.SET<eCONICAL_STEPPED_HOLE_TRANSITION>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONICAL_TRANSITIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    public var OF_SHAPE: eMATED_PART_RELATIONSHIP?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.OF_SHAPE
      case ._PROPERTY_DEFINITION(let entity): return entity.OF_SHAPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var RANKING: SDAI.INTEGER?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.RANKING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REQUIRED_GENERAL_ACCURACY: (SDAI.SET<eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REQUIRED_GENERAL_ACCURACY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REPORT_VALUE: eMEASURE_WITH_UNIT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REPORT_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SYMBOL: eANNOTATION_SYMBOL_OCCURRENCE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SYMBOL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var U1: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.U1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BEVEL: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BEVEL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INNER_BOUNDARY: sCOMPOUND_INNER_AREA_BOUNDARY?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INNER_BOUNDARY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CLOSED_PATH: SDAI.LOGICAL {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CLOSED_PATH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    public var MAKE_OR_BUY: nSOURCE?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.MAKE_OR_BUY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var U2: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.U2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MEASURED_VALUE: sMEASURED_VALUE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MEASURED_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_COORDINATES: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_COORDINATES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SKEWNESS: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SKEWNESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TILING_SCALE: tPOSITIVE_RATIO_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TILING_SCALE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VOLUME_GEOMETRY: eVOLUME?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VOLUME_GEOMETRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_DRAFT_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_DRAFT_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    public var USED_REPRESENTATION: eREPRESENTATION?  {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.USED_REPRESENTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOCAL_ORIGIN: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOCAL_ORIGIN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REFERENCE_ELEMENTS: (SDAI.SET<eREPRESENTATION_ITEM>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REFERENCE_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCL: SDAI.REAL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var UNITS: (SDAI.SET<sUNIT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.UNITS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var QUALIFIERS: (SDAI.SET<sVALUE_QUALIFIER>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.QUALIFIERS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PATH_ELEMENT: ePATH?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PATH_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PLANE_OF_POINT: ePLANE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PLANE_OF_POINT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PATTERN_START: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PATTERN_START
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TRANSFORM_ITEM_1: sRIGID_PLACEMENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TRANSFORM_ITEM_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TEST_POINT_DISTANCE_TOLERANCE: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TEST_POINT_DISTANCE_TOLERANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_LENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_LENGTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var ASSOCIATED_SHAPE_REPRESENTATION: (SDAI.SET<eKINEMATIC_LINK_REPRESENTATION_ASSOCIATION>/*[0:1]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.ASSOCIATED_SHAPE_REPRESENTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONSTRAINING_EXPRESSION: eEXPRESSION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONSTRAINING_EXPRESSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SECOND_ROTATION_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SECOND_ROTATION_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLOUR_TYPE: nCOLOUR_TYPE_ENUM?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLOUR_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_OF_REFERENCE_HATCH_LINE: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_OF_REFERENCE_HATCH_LINE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARING_ELEMENTS: (SDAI.SET<sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARING_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TRANSFORM_ITEM_2: sRIGID_PLACEMENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TRANSFORM_ITEM_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_SECOND_ROTATION: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_SECOND_ROTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POCKET_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POCKET_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eDATE_AND_TIME_ASSIGNMENT`` )
    public var ASSIGNED_DATE_AND_TIME: eDATE_AND_TIME?  {
      switch self {
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity.ASSIGNED_DATE_AND_TIME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_LIST: (SDAI.LIST_UNIQUE<eORIENTED_EDGE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_LIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SIZE_IN_X: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SIZE_IN_X
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS_SECOND_LINK: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS_SECOND_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THICKENED_FACE_LIST: (SDAI.LIST<SDAI.SET<eFACE_SURFACE>/*[1:nil]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.THICKENED_FACE_LIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_FIRST_ROTATION: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_FIRST_ROTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CRITERION_REPORT: eDATA_EQUIVALENCE_INSPECTION_CRITERION_REPORT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CRITERION_REPORT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SIZE_IN_Y: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SIZE_IN_Y
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CORNER_RADIUS: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CORNER_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var RELATING_PRODUCT_DEFINITION_FORMATION: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return 
        entity.RELATING_PRODUCT_DEFINITION_FORMATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_POINT_ON_CURVE: ePOINT_ON_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_POINT_ON_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var RELATING_VERSION: eCOLLECTION_VERSION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.RELATING_VERSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INTENSITIES: (SDAI.LIST<SDAI.REAL>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INTENSITIES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_ACTUAL_ROTATION_1: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_ACTUAL_ROTATION_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_SURFACE: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_SURFACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATED_COLLECTION: eCOLLECTION?  {
      switch self {
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATED_COLLECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var Y_SCALE: tPOSITIVE_RATIO_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.Y_SCALE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONFIGURED_MECHANISM: eMECHANISM_REPRESENTATION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONFIGURED_MECHANISM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_PLACEMENT: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_PLACEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_ACTUAL_TRANSLATION_Z: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_ACTUAL_TRANSLATION_Z
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var USENSE: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.USENSE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_CLASSIFICATION_ASSIGNMENT`` )
    public var ASSIGNED_CLASS: eGROUP?  {
      switch self {
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let entity): return entity.ASSIGNED_CLASS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DISTANCE_FROM_START: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DISTANCE_FROM_START
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SURFACE_FORM: nB_SPLINE_SURFACE_FORM?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SURFACE_FORM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var FIRST_NAME: tLABEL?  {
      switch self {
      case ._PERSON(let entity): return entity.FIRST_NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var COMPOSITION_BASIS: tLABEL?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.COMPOSITION_BASIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ANNOTATED_CURVE: eANNOTATION_CURVE_OCCURRENCE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ANNOTATED_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SEMI_IMAG_AXIS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SEMI_IMAG_AXIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EQUIVALENT_POINT: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EQUIVALENT_POINT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PHI: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PHI
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THE_CALLOUT: eDRAUGHTING_CALLOUT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.THE_CALLOUT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var DOCUMENTATION_IDS: (SDAI.SET<eDOCUMENT>/*[1:nil]*/ )?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.DOCUMENTATION_IDS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCANNER_IDENTIFICATION: tLABEL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCANNER_IDENTIFICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SLOT_LENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SLOT_LENGTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var KNOT_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.KNOT_MULTIPLICITIES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_FACE: eFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_FACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RIGHT_OFFSET_DISTANCE: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RIGHT_OFFSET_DISTANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var RELATION_TYPE: SDAI.STRING?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.RELATION_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var BASELINE_RATIO: tRATIO_MEASURE?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.BASELINE_RATIO
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_CERTIFICATION_ASSIGNMENT`` )
    public var ASSIGNED_CERTIFICATION: eCERTIFICATION?  {
      switch self {
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.ASSIGNED_CERTIFICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GENERALISED_MINOR_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GENERALISED_MINOR_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_ASSIGNMENT`` )
    public var ASSIGNED_ACTION: eACTION?  {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.ASSIGNED_ACTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var V2: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.V2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GROOVE_WIDTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GROOVE_WIDTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINE_SPACING: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINE_SPACING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TREE_ROOT_EXPRESSION: sCSG_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TREE_ROOT_EXPRESSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_PARAMETER: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_PARAMETER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASIS_EDGE_CURVE: eEDGE_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASIS_EDGE_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POCKET_WIDTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POCKET_WIDTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eACTION_PROPERTY_REPRESENTATION`` )
    public var PROPERTY: eACTION_PROPERTY?  {
      switch self {
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.PROPERTY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MINOR_ORIENTATION_BASIS: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MINOR_ORIENTATION_BASIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASE_CURVE: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASE_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIXED_CONSTITUENT: eREPRESENTATIVE_SHAPE_REPRESENTATION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIXED_CONSTITUENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var V1: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.V1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLOUR_INDICES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[3:3]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLOUR_INDICES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var HELICAL_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.HELICAL_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LITERAL: tPRESENTABLE_TEXT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LITERAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CLOTHOID_CONSTANT: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CLOTHOID_CONSTANT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PAIR_SURFACE: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PAIR_SURFACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION`` )
    public var THE_PERSON: ePERSON?  {
      switch self {
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.THE_PERSON
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BINARY_VALUE: SDAI.BINARY?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BINARY_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_FACE_SET: eCONNECTED_FACE_SET?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_FACE_SET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    public var SPECIFICATION: (SDAI.SET<ePRODUCT_DEFINITION>/*[1:nil]*/ )?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.SPECIFICATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FILL_STYLE_TARGET: ePOINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FILL_STYLE_TARGET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POSITIVE_SIDE: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POSITIVE_SIDE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var PLANNED_PRODUCT: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.PLANNED_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var STYLED_CURVE: eANNOTATION_CURVE_OCCURRENCE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.STYLED_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var AXIS3: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.AXIS3
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PICKED_ITEMS: (SDAI.SET<eREPRESENTATION_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PICKED_ITEMS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLOURED_COORDINATE_VALUES: eCOORDINATES_LIST?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLOURED_COORDINATE_VALUES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var AXIS2: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.AXIS2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var AXIS1: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.AXIS1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT`` )
    public var ASSIGNED_ID: tIDENTIFIER?  {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity.ASSIGNED_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ARC_LENGTH_SEPARATION_FACTOR: SDAI.REAL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ARC_LENGTH_SEPARATION_FACTOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OPEN_SHELL_ELEMENT: eOPEN_SHELL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OPEN_SHELL_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var AUXILIARY_ELEMENTS: (SDAI.SET<eAUXILIARY_GEOMETRIC_REPRESENTATION_ITEM>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.AUXILIARY_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REVISION_IDENTIFIER: tIDENTIFIER?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REVISION_IDENTIFIER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var SIZE: ePRESENTATION_SIZE?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.SIZE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASE_SOLID: sBASE_SOLID_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASE_SOLID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DELETED_FACE_SET: (SDAI.SET<eFACE_SURFACE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DELETED_FACE_SET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DRAFTED_EDGES: (SDAI.LIST<SDAI.SET<eEDGE_CURVE>/*[1:nil]*/ >/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DRAFTED_EDGES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var SUCCESSOR: eCOLLECTION_VERSION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.SUCCESSOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_INDEX_ON_CONTROL_POINTS: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_INDEX_ON_CONTROL_POINTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VERTEX_SHELL_EXTENT: eVERTEX_LOOP?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VERTEX_SHELL_EXTENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ASSESSMENT_THRESHOLD_2: eA3MA_EQUIVALENCE_CRITERION_ASSESSMENT_THRESHOLD_RELATIONSHIP?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ASSESSMENT_THRESHOLD_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARED_ELEMENT_TYPES: (SDAI.LIST<nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARED_ELEMENT_TYPES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_INDEX_ON_KNOTS: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_INDEX_ON_KNOTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET_ANGLE: tPOSITIVE_PLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var TESSELLATION_ACCURACY_PARAMETERS: (SDAI.SET<sTESSELLATION_ACCURACY_PARAMETER_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.TESSELLATION_ACCURACY_PARAMETERS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LEFT_OFFSET_DISTANCE: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LEFT_OFFSET_DISTANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SEGMENT_DEPTHS: (SDAI.LIST<tPOSITIVE_LENGTH_MEASURE>/*[1:SEGMENTS]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SEGMENT_DEPTHS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INPUT_SKEW_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INPUT_SKEW_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SKEW_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SKEW_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS_VALUE: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLLAR_DEPTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLLAR_DEPTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eMEASURE_REPRESENTATION_ITEM`` )
    public var UNIT_COMPONENT: sUNIT?  {
      switch self {
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.UNIT_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ASSOCIATED_GEOMETRY: (SDAI.LIST<sPCURVE_OR_SURFACE>/*[1:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ASSOCIATED_GEOMETRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REPRESENTED_JOINTS: (SDAI.SET<eKINEMATIC_JOINT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REPRESENTED_JOINTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CLOSED_SHELL_ELEMENT: eCLOSED_SHELL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CLOSED_SHELL_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ANGLE_VALUE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ANGLE_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var INDIVIDUAL_PRODUCT: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.INDIVIDUAL_PRODUCT
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.INDIVIDUAL_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BOUND: eLOOP?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BOUND
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DIRECTION_RATIOS: (SDAI.LIST<SDAI.REAL>/*[2:3]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DIRECTION_RATIOS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CLOSED_ENDS: (SDAI.LIST<SDAI.LOGICAL>/*[2:2]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CLOSED_ENDS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FBSM_FACES: (SDAI.SET<eCONNECTED_FACE_SET>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FBSM_FACES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THE_DRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDERS: (SDAI.SET<
      eDRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDER>/*[0:1]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return 
        entity.THE_DRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDERS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASE_SURFACE: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASE_SURFACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_CURVE: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_CURVE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATED_PRODUCT: ePRODUCT?  {
      switch self {
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATED_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARED_ELEMENTS: (SDAI.SET<sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARED_ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_END: eVERTEX?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_END
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var BOX_HEIGHT: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.BOX_HEIGHT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VIEW_WINDOW: ePLANAR_BOX?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VIEW_WINDOW
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_ACTUAL_ROTATION_Y: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_ACTUAL_ROTATION_Y
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_ACTUAL_ROTATION_X: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_ACTUAL_ROTATION_X
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_CONTEXT`` )
    public var LIFE_CYCLE_STAGE: tLABEL?  {
      switch self {
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.LIFE_CYCLE_STAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_ACTUAL_ROTATION_Z: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_ACTUAL_ROTATION_Z
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINE_STRIP: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINE_STRIP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GROOVE_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GROOVE_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ITEM_ELEMENT: sCOMPOUND_ITEM_DEFINITION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ITEM_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXTERNAL_SURFACE: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXTERNAL_SURFACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CVS_VOLUMES: (SDAI.SET<eVOLUME_WITH_FACES>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CVS_VOLUMES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SPHERE_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SPHERE_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIRST_ROTATION_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIRST_ROTATION_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARAMETER_CURRENT_VALUE: sMATHS_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARAMETER_CURRENT_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RANGE_ON_PAIR_SURFACE: eRECTANGULAR_TRIMMED_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RANGE_ON_PAIR_SURFACE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var JOINT: eKINEMATIC_JOINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.JOINT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_ROTATION_2: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_ROTATION_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MEASURED_DATA_TYPE: nA3M_MEASURED_DATA_TYPE_NAME?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MEASURED_DATA_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GAMMA: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GAMMA
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIRST_OFFSET: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIRST_OFFSET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var COORDINATE_SPACE_DIMENSION: tDIMENSION_COUNT?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.COORDINATE_SPACE_DIMENSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OWNING_SKETCH: sSKETCH_TYPE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OWNING_SKETCH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VIEW_WINDOW_CLIPPING: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VIEW_WINDOW_CLIPPING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var W_UPPER: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.W_UPPER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_ROTATION_1: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_ROTATION_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CURVE_3D: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CURVE_3D
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DRAFT_ANGLES: (SDAI.LIST<tPLANE_ANGLE_MEASURE>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DRAFT_ANGLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var DETERMINATION_METHOD: tTEXT?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.DETERMINATION_METHOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINE_STRIP_FACE2: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINE_STRIP_FACE2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_RACK_DISPLACEMENT: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_RACK_DISPLACEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MAP: eREPRESENTATION_MAP?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MAP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var GEOMETRIC_MODEL_LINK: sPATH_OR_COMPOSITE_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.GEOMETRIC_MODEL_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINE_STRIP_FACE1: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINE_STRIP_FACE1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FACE_GEOMETRY: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FACE_GEOMETRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FACE_ELEMENT: eFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FACE_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASE_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASE_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_ACTUAL_ROTATION_X: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_ACTUAL_ROTATION_X
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATING_COLLECTION: eCOLLECTION?  {
      switch self {
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATING_COLLECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VERTEX_GEOMETRY: ePOINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VERTEX_GEOMETRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_ACTUAL_ROTATION_Y: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_ACTUAL_ROTATION_Y
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLUMN_COUNT: tPOSITIVE_INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLUMN_COUNT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_LENGTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_LENGTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_ACTUAL_ROTATION_Z: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_ACTUAL_ROTATION_Z
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THICKNESS_LIST: (SDAI.LIST<tLENGTH_MEASURE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.THICKNESS_LIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLUMN_SPACING: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLUMN_SPACING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_CORNER_RADIUS: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_CORNER_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var WIRE_SHELL_EXTENT: (SDAI.SET<eLOOP>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.WIRE_SHELL_EXTENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MAGNITUDE: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MAGNITUDE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CURVE_PLANE: ePLANE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CURVE_PLANE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SPREAD_ANGLE: tPOSITIVE_PLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SPREAD_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SWEPT_AREA: eCURVE_BOUNDED_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SWEPT_AREA
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCULPTURING_ELEMENT: sGENERALIZED_SURFACE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCULPTURING_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LOWER_LIMIT_FIRST_ROTATION: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LOWER_LIMIT_FIRST_ROTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var ROOT: ePRODUCT_DEFINITION?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.ROOT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var STYLES: (SDAI.SET<ePRESENTATION_STYLE_ASSIGNMENT>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.STYLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONE_ANGLE1: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONE_ANGLE1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PLACEMENT_START: ePLACEMENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PLACEMENT_START
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var B_SPLINES: (SDAI.LIST<eLOCAL_B_SPLINE>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.B_SPLINES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var NOTABLE_INSTANCES: (SDAI.LIST<eEQUIVALENCE_NOTABLE_INSTANCE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.NOTABLE_INSTANCES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_CONTRACT_ASSIGNMENT`` )
    public var ASSIGNED_CONTRACT: eCONTRACT?  {
      switch self {
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.ASSIGNED_CONTRACT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION`` )
    public var THE_ORGANIZATION: eORGANIZATION?  {
      switch self {
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.THE_ORGANIZATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLOUR_VALUES: (SDAI.LIST<SDAI.LIST<tUNSIGNED_8_BIT_INTEGER>/*[3:4]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLOUR_VALUES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONE_ANGLE2: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONE_ANGLE2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var THICKNESS2: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.THICKNESS2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SCANNER_UNCERTAINTY: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SCANNER_UNCERTAINTY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EBWM_BOUNDARY: (SDAI.SET<eCONNECTED_EDGE_SET>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EBWM_BOUNDARY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var W_B_SPLINES: (SDAI.LIST<eLOCAL_B_SPLINE>/*[8:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.W_B_SPLINES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SEMI_AXIS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SEMI_AXIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT`` )
    public var ASSIGNED_PERSON_AND_ORGANIZATION: ePERSON_AND_ORGANIZATION?  {
      switch self {
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return 
        entity.ASSIGNED_PERSON_AND_ORGANIZATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIXED_REFERENCE: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIXED_REFERENCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var RELATING_PRODUCT_DEFINITION: sPRODUCT_DEFINITION_OR_REFERENCE?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return sPRODUCT_DEFINITION_OR_REFERENCE(
        entity.RELATING_PRODUCT_DEFINITION)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.RELATING_PRODUCT_DEFINITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var STROKES: (SDAI.SET<eCURVE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.STROKES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SECOND_OFFSET: tNON_NEGATIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SECOND_OFFSET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_START: eVERTEX?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_START
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var NPOINTS: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.NPOINTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var W_DEGREE: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.W_DEGREE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var HIDDEN_LINE_SURFACE_REMOVAL: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.HIDDEN_LINE_SURFACE_REMOVAL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MULTIPLICITIES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var RELATED_VERSION: eCOLLECTION_VERSION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.RELATED_VERSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ALPHA: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ALPHA
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BETA: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BETA
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SUBLISTS: (SDAI.LIST<ePOINT_CLOUD_DATASET>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SUBLISTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET_TYPE: nPARALLEL_OFFSET_TYPE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MIRROR_ELEMENT: sLINEAR_GEOMETRY_CONSTRAINT_ELEMENT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MIRROR_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SOURCE: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity.SOURCE
      case ._REPRESENTATION_ITEM(let entity): return entity.SOURCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LIGHT_COLOUR: eCOLOUR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LIGHT_COLOUR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_GEOMETRY: eCURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_GEOMETRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LENGTH_VALUE: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LENGTH_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_WIDTH: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_WIDTH
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eANALYSIS_ASSIGNMENT`` )
    /// - origin: ENTITY( ``ePERSON`` )
    /// - origin: ENTITY( ``ePRODUCT`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    /// - origin: ENTITY( ``eSTRUCTURED_MESSAGE`` )
    /// - origin: ENTITY( ``eVALIDATION`` )
    /// - origin: ENTITY( ``eVERIFICATION`` )
    public var ID: tIDENTIFIER?  {
      switch self {
      case ._ANALYSIS_ASSIGNMENT(let entity): return entity.ID
      case ._PERSON(let entity): return entity.ID
      case ._PRODUCT(let entity): return entity.ID
      case ._PRODUCT_DEFINITION(let entity): return entity.ID
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.ID
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.ID
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.ID
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.ID
      case ._PROPERTY_DEFINITION(let entity): return entity.ID
      case ._REPRESENTATION(let entity): return entity.ID
      case ._STRUCTURED_MESSAGE(let entity): return entity.ID
      case ._VALIDATION(let entity): return entity.ID
      case ._VERIFICATION(let entity): return entity.ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var APPLIED_GENERAL_ACCURACY: (SDAI.SET<eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.APPLIED_GENERAL_ACCURACY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var CONTEXT_TYPE: tTEXT?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.CONTEXT_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var TRANSITION_NUMBER: tPOSITIVE_INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.TRANSITION_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PROTRUSION_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PROTRUSION_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATING_MESSAGE: eSTRUCTURED_MESSAGE?  {
      switch self {
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATING_MESSAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SECOND_REPEAT_FACTOR: eVECTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SECOND_REPEAT_FACTOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SLOT_CENTRELINE: eBOUNDED_CURVE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SLOT_CENTRELINE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS_FIRST_LINK: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS_FIRST_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SEMI_APEX_ANGLE: tPOSITIVE_PLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SEMI_APEX_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var CONTEXT_OF_ITEMS: eREPRESENTATION_CONTEXT?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.CONTEXT_OF_ITEMS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BLENDED_EDGES: (SDAI.LIST_UNIQUE<eEDGE_CURVE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BLENDED_EDGES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SUPPRESSED_ITEMS: (SDAI.SET<eREPRESENTATION_ITEM>/*[0:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SUPPRESSED_ITEMS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REP_1: eKINEMATIC_LINK_REPRESENTATION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REP_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var PARAMETER_UNIT: sUNIT?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.PARAMETER_UNIT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var REP_2: eKINEMATIC_LINK_REPRESENTATION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.REP_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SKETCH_BASIS: sSKETCH_BASIS_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SKETCH_BASIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SBSM_BOUNDARY: (SDAI.SET<sSHELL>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SBSM_BOUNDARY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_PARAMETER_W: tPARAMETER_VALUE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_PARAMETER_W
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OUTER: eCLOSED_SHELL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OUTER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POSITION_COORDS: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POSITION_COORDS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SURFACE_2: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SURFACE_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EDGE_FUNCTION_LIST: (SDAI.LIST<nBLEND_RADIUS_VARIATION_TYPE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EDGE_FUNCTION_LIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CES_EDGES: (SDAI.SET<eEDGE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CES_EDGES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ASSOCIATED_LINK_REPRESENTATIONS_1: (SDAI.SET<eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ASSOCIATED_LINK_REPRESENTATIONS_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SURFACE_1: eSURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SURFACE_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONSTRAINT_GROUP: (SDAI.SET<sCONSTRAINT_GROUP_MEMBER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONSTRAINT_GROUP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VIEW_REFERENCE_SYSTEM: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VIEW_REFERENCE_SYSTEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION`` )
    public var OF_PRODUCT: ePRODUCT?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.OF_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    public var REPRESENTATION_RELATION: eKINEMATIC_PROPERTY_DEFINITION_REPRESENTATION?  {
      switch self {
      case ._PROPERTY_DEFINITION(let entity): return entity.REPRESENTATION_RELATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RELATED_REPRESENTATION_ITEM: sANGLE_DIRECTION_REFERENCE_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RELATED_REPRESENTATION_ITEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var PRODUCT_DEFINITION_OCCURRENCE_ID: tIDENTIFIER?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.PRODUCT_DEFINITION_OCCURRENCE_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ASSOCIATED_LINK_REPRESENTATIONS_2: (SDAI.SET<eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ASSOCIATED_LINK_REPRESENTATIONS_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_EFFECTIVITY_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_INEFFECTIVITY_ASSIGNMENT`` )
    public var ASSIGNED_EFFECTIVITY: eEFFECTIVITY?  {
      switch self {
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.ASSIGNED_EFFECTIVITY
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.ASSIGNED_EFFECTIVITY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INTERSECTED_MODEL: sSURFACE_OR_SOLID_MODEL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INTERSECTED_MODEL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var IMPLICIT_OUTER: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.IMPLICIT_OUTER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var UPPER_LIMIT_SECOND_ROTATION: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.UPPER_LIMIT_SECOND_ROTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var NEUTRAL_SKETCH_SEMANTICS: nCURVES_OR_AREA?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.NEUTRAL_SKETCH_SEMANTICS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var W_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.W_MULTIPLICITIES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SMOOTHNESS: nTRANSITION_CODE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SMOOTHNESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var INSPECTED_ELEMENT: eDATA_EQUIVALENCE_INSPECTED_ELEMENT_PAIR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.INSPECTED_ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXTREME_INSTANCES: (SDAI.LIST<eEXTREME_INSTANCE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXTREME_INSTANCES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXIT_FACES: (SDAI.SET<eFACE_SURFACE>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXIT_FACES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var OFFSET_VALUE: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.OFFSET_VALUE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REPRESENTED_LINK: eKINEMATIC_LINK?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REPRESENTED_LINK
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REPRESENTED_TOPOLOGY: sKINEMATIC_TOPOLOGY_REPRESENTATION_SELECT?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REPRESENTED_TOPOLOGY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_INDEX: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_INDEX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var UNCERTAINTY: (SDAI.SET<eUNCERTAINTY_MEASURE_WITH_UNIT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.UNCERTAINTY
      case ._REPRESENTATION_CONTEXT(let entity): return entity.UNCERTAINTY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONE_BASE_RADIUS: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONE_BASE_RADIUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_ROTATION_Z: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_ROTATION_Z
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eMEASURE_REPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eVALUE_REPRESENTATION_ITEM`` )
    public var VALUE_COMPONENT: sMEASURE_VALUE?  {
      switch self {
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.VALUE_COMPONENT
      case ._REPRESENTATION_ITEM(let entity): return entity.VALUE_COMPONENT
      case ._VALUE_REPRESENTATION_ITEM(let entity): return entity.VALUE_COMPONENT
      default: return nil
      }
    }

    //MARK: var FRAME_OF_REFERENCE: (AMBIGUOUS)

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    public var ASSIGNED_GROUP: eMATED_PART_RELATIONSHIP?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.ASSIGNED_GROUP
      case ._PROPERTY_DEFINITION(let entity): return entity.ASSIGNED_GROUP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PERMANENT_ID: tIDENTIFIER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PERMANENT_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var LOCATION: (SDAI.LIST_UNIQUE<eNEXT_ASSEMBLY_USAGE_OCCURRENCE>/*[1:nil]*/ )?  {
      switch self {
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.LOCATION
      case ._REPRESENTATION_ITEM/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eREPRESENTATION_ITEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DIR: eVECTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DIR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_ROTATION_X: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_ROTATION_X
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COLLECTED_TEXT: (SDAI.SET<sTEXT_OR_CHARACTER>/*[2:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COLLECTED_TEXT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_ROTATION_Y: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_ROTATION_Y
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PLACING: eAXIS2_PLACEMENT_3D?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PLACING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_DISPLACEMENT: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_DISPLACEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var BASIS_FACE_SURFACE: eFACE_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.BASIS_FACE_SURFACE
      default: return nil
      }
    }

    //MARK: var DEFINITION: (AMBIGUOUS)

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MAPPING_SOURCE: eREPRESENTATION_MAP?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MAPPING_SOURCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FOCAL_DIST: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FOCAL_DIST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var RELATING_PRODUCT: ePRODUCT?  {
      switch self {
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.RELATING_PRODUCT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS1: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PERSPECTIVE_OF_VOLUME: eVIEW_VOLUME?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PERSPECTIVE_OF_VOLUME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RADIUS2: tPOSITIVE_LENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RADIUS2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var MAPPING_TARGET: eREPRESENTATION_ITEM?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.MAPPING_TARGET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_3: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_3
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    public var RELATED_PRODUCT_DEFINITION: sPRODUCT_DEFINITION_OR_REFERENCE?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return sPRODUCT_DEFINITION_OR_REFERENCE(
        entity.RELATED_PRODUCT_DEFINITION)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.RELATED_PRODUCT_DEFINITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_2: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_1: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eACTION_PROPERTY`` )
    /// - origin: ENTITY( ``eACTION_PROPERTY_REPRESENTATION`` )
    /// - origin: ENTITY( ``eANALYSIS_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eMEASURE_REPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION`` )
    /// - origin: ENTITY( ``ePRODUCT`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_CONTEXT`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eSTATE_TYPE`` )
    /// - origin: ENTITY( ``eSTRUCTURED_MESSAGE`` )
    /// - origin: ENTITY( ``eVALIDATION`` )
    /// - origin: ENTITY( ``eVALUE_REPRESENTATION_ITEM`` )
    /// - origin: ENTITY( ``eVERIFICATION`` )
    public var NAME: tLABEL?  {
      switch self {
      case ._ACTION_PROPERTY(let entity): return entity.NAME
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.NAME
      case ._ANALYSIS_ASSIGNMENT(let entity): return entity.NAME
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.NAME
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.NAME
      case ._PRODUCT(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.NAME
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.NAME
      case ._PROPERTY_DEFINITION(let entity): return entity.NAME
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.NAME
      case ._REPRESENTATION(let entity): return entity.NAME
      case ._REPRESENTATION_ITEM(let entity): return entity.NAME
      case ._STATE_TYPE(let entity): return entity.NAME
      case ._STRUCTURED_MESSAGE(let entity): return entity.NAME
      case ._VALIDATION(let entity): return entity.NAME
      case ._VALUE_REPRESENTATION_ITEM(let entity): return entity.NAME
      case ._VERIFICATION(let entity): return entity.NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var KNOT_W_UPPER: SDAI.INTEGER?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.KNOT_W_UPPER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CHILDREN: (SDAI.SET<eTESSELLATED_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CHILDREN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var RELATING_REPRESENTATION_ITEM: sORIENTATION_BASIS_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.RELATING_REPRESENTATION_ITEM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT`` )
    public var ASSIGNED_ORGANIZATIONAL_PROJECT: eORGANIZATIONAL_PROJECT?  {
      switch self {
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return 
        entity.ASSIGNED_ORGANIZATIONAL_PROJECT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VIEW_DIRECTION: eDIRECTION?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VIEW_DIRECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var PREFIX_TITLES: (SDAI.LIST<tLABEL>/*[1:nil]*/ )?  {
      switch self {
      case ._PERSON(let entity): return entity.PREFIX_TITLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var PARENT_SOLID: eSOLID_MODEL?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.PARENT_SOLID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POINT_4: eCARTESIAN_POINT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POINT_4
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION`` )
    public var REPRESENTED_MECHANISM: eMECHANISM_REPRESENTATION?  {
      switch self {
      case ._REPRESENTATION(let entity): return entity.REPRESENTED_MECHANISM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_POINT_ON_SURFACE_2: ePOINT_ON_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_POINT_ON_SURFACE_2
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var NEGATIVE_DIRECTION: SDAI.BOOLEAN?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.NEGATIVE_DIRECTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP`` )
    public var PREDECESSOR: eCOLLECTION_VERSION?  {
      switch self {
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.PREDECESSOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FIRST_OPERAND: sBOOLEAN_OPERAND?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FIRST_OPERAND
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var ACTUAL_POINT_ON_SURFACE_1: ePOINT_ON_SURFACE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.ACTUAL_POINT_ON_SURFACE_1
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var EXTRUSION_AXIS: eVECTOR?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.EXTRUSION_AXIS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var COMPARING_ELEMENT_TYPES: (SDAI.LIST<nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.COMPARING_ELEMENT_TYPES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var VOIDS: (SDAI.SET<eORIENTED_CLOSED_SHELL>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.VOIDS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var CONE_APEX_ANGLE: tPLANE_ANGLE_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.CONE_APEX_ANGLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var POLYGON: (SDAI.LIST_UNIQUE<eCARTESIAN_POINT>/*[3:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.POLYGON
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var U_SMOOTHNESS: nTRANSITION_CODE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.U_SMOOTHNESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_RELATIONSHIP`` )
    public var PRODUCT_DESIGN: ePRODUCT?  {
      switch self {
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.PRODUCT_DESIGN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var DIM: tDIMENSION_COUNT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.DIM
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var LINE_STRIPS: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ >/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.LINE_STRIPS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var SMALL_VECTOR_TOLERANCE: tLENGTH_MEASURE?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.SMALL_VECTOR_TOLERANCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var APPLIED_VALUES: (SDAI.SET<eMEASURE_REPRESENTATION_ITEM>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.APPLIED_VALUES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ORGANIZATION_ASSIGNMENT`` )
    public var ASSIGNED_ORGANIZATION: eORGANIZATION?  {
      switch self {
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.ASSIGNED_ORGANIZATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var FORMATION: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.FORMATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sEVIDENCE_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_ITEM`` )
    public var FONT: sFONT_SELECT?  {
      switch self {
      case ._REPRESENTATION_ITEM(let entity): return entity.FONT
      default: return nil
      }
    }


    //MARK: - SDAIValue
    public func isValueEqual<T: SDAIValue>(to rhs: T) -> Bool {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PERSON(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs)
      case ._STATE_TYPE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._STRUCTURED_MESSAGE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._VALIDATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs)
      case ._VERIFICATION(let selection): return selection.value.isValueEqual(to: rhs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?) -> Bool? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PERSON(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._STATE_TYPE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._STRUCTURED_MESSAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._VALIDATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._VERIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      }
    }

    public func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      switch self {
      case ._ACTION_PROPERTY(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ANALYSIS_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DATE_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PERSON(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PERSON_AND_ORGANIZATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PROPERTY_DEFINITION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REPRESENTATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REPRESENTATION_CONTEXT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REPRESENTATION_ITEM(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._STATE_TYPE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._STRUCTURED_MESSAGE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._VALIDATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._VALUE_REPRESENTATION_ITEM(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._VERIFICATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      }
    }

    public func isValueEqual<T: SDAIValue>(to rhs: T, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PERSON(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._STATE_TYPE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._STRUCTURED_MESSAGE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._VALIDATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._VERIFICATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DATE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PERSON(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._STATE_TYPE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._STRUCTURED_MESSAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._VALIDATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._VERIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      }
    }


    //MARK: SDAIGenericTypeBase
    public func copy() -> Self {
      switch self {
      case ._ACTION_PROPERTY(let selection): return ._ACTION_PROPERTY(selection.copy())
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return ._ACTION_PROPERTY_REPRESENTATION(selection.copy())
      case ._ANALYSIS_ASSIGNMENT(let selection): return ._ANALYSIS_ASSIGNMENT(selection.copy())
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return ._APPLIED_ACTION_ASSIGNMENT(selection.copy())
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return ._APPLIED_APPROVAL_ASSIGNMENT(selection.copy())
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return ._APPLIED_CERTIFICATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return ._APPLIED_CLASSIFICATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return ._APPLIED_CONTRACT_ASSIGNMENT(selection.copy())
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return ._APPLIED_EFFECTIVITY_ASSIGNMENT(selection.copy())
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(selection.copy())
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return ._APPLIED_INEFFECTIVITY_ASSIGNMENT(selection.copy())
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(selection.copy())
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return ._APPLIED_ORGANIZATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(selection.copy())
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(selection.copy())
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return ._DATE_AND_TIME_ASSIGNMENT(selection.copy())
      case ._DATE_ASSIGNMENT(let selection): return ._DATE_ASSIGNMENT(selection.copy())
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return ._MEASURE_REPRESENTATION_ITEM(selection.copy())
      case ._PERSON(let selection): return ._PERSON(selection.copy())
      case ._PERSON_AND_ORGANIZATION(let selection): return ._PERSON_AND_ORGANIZATION(selection.copy())
      case ._PRODUCT(let selection): return ._PRODUCT(selection.copy())
      case ._PRODUCT_DEFINITION(let selection): return ._PRODUCT_DEFINITION(selection.copy())
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return ._PRODUCT_DEFINITION_CONTEXT(selection.copy())
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return ._PRODUCT_DEFINITION_FORMATION(selection.copy())
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(selection.copy())
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return ._PRODUCT_DEFINITION_RELATIONSHIP(selection.copy())
      case ._PRODUCT_RELATIONSHIP(let selection): return ._PRODUCT_RELATIONSHIP(selection.copy())
      case ._PROPERTY_DEFINITION(let selection): return ._PROPERTY_DEFINITION(selection.copy())
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return ._PROPERTY_DEFINITION_REPRESENTATION(selection.copy())
      case ._REPRESENTATION(let selection): return ._REPRESENTATION(selection.copy())
      case ._REPRESENTATION_CONTEXT(let selection): return ._REPRESENTATION_CONTEXT(selection.copy())
      case ._REPRESENTATION_ITEM(let selection): return ._REPRESENTATION_ITEM(selection.copy())
      case ._STATE_TYPE(let selection): return ._STATE_TYPE(selection.copy())
      case ._STRUCTURED_MESSAGE(let selection): return ._STRUCTURED_MESSAGE(selection.copy())
      case ._VALIDATION(let selection): return ._VALIDATION(selection.copy())
      case ._VALUE_REPRESENTATION_ITEM(let selection): return ._VALUE_REPRESENTATION_ITEM(selection.copy())
      case ._VERIFICATION(let selection): return ._VERIFICATION(selection.copy())
      }
    }

    //MARK: SDAIGenericType
    public var typeMembers: Set<SDAI.STRING> {
      var members: Set<SDAI.STRING> = [SDAI.STRING(Self.typeName)]
      switch self {
      case ._ACTION_PROPERTY(let selection): members.formUnion(selection.typeMembers)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): members.formUnion(selection.typeMembers)
      case ._ANALYSIS_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._DATE_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): members.formUnion(selection.typeMembers)
      case ._PERSON(let selection): members.formUnion(selection.typeMembers)
      case ._PERSON_AND_ORGANIZATION(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PROPERTY_DEFINITION(let selection): members.formUnion(selection.typeMembers)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): members.formUnion(selection.typeMembers)
      case ._REPRESENTATION(let selection): members.formUnion(selection.typeMembers)
      case ._REPRESENTATION_CONTEXT(let selection): members.formUnion(selection.typeMembers)
      case ._REPRESENTATION_ITEM(let selection): members.formUnion(selection.typeMembers)
      case ._STATE_TYPE(let selection): members.formUnion(selection.typeMembers)
      case ._STRUCTURED_MESSAGE(let selection): members.formUnion(selection.typeMembers)
      case ._VALIDATION(let selection): members.formUnion(selection.typeMembers)
      case ._VALUE_REPRESENTATION_ITEM(let selection): members.formUnion(selection.typeMembers)
      case ._VERIFICATION(let selection): members.formUnion(selection.typeMembers)
      }
      return members
    }

    public var entityReference: SDAI.EntityReference? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.entityReference
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.entityReference
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.entityReference
      case ._DATE_ASSIGNMENT(let selection): return selection.entityReference
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.entityReference
      case ._PERSON(let selection): return selection.entityReference
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.entityReference
      case ._PRODUCT(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.entityReference
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.entityReference
      case ._PROPERTY_DEFINITION(let selection): return selection.entityReference
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.entityReference
      case ._REPRESENTATION(let selection): return selection.entityReference
      case ._REPRESENTATION_CONTEXT(let selection): return selection.entityReference
      case ._REPRESENTATION_ITEM(let selection): return selection.entityReference
      case ._STATE_TYPE(let selection): return selection.entityReference
      case ._STRUCTURED_MESSAGE(let selection): return selection.entityReference
      case ._VALIDATION(let selection): return selection.entityReference
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.entityReference
      case ._VERIFICATION(let selection): return selection.entityReference
      }
    }
    public var stringValue: SDAI.STRING? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.stringValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.stringValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.stringValue
      case ._DATE_ASSIGNMENT(let selection): return selection.stringValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.stringValue
      case ._PERSON(let selection): return selection.stringValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.stringValue
      case ._PRODUCT(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.stringValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.stringValue
      case ._PROPERTY_DEFINITION(let selection): return selection.stringValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.stringValue
      case ._REPRESENTATION(let selection): return selection.stringValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.stringValue
      case ._REPRESENTATION_ITEM(let selection): return selection.stringValue
      case ._STATE_TYPE(let selection): return selection.stringValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.stringValue
      case ._VALIDATION(let selection): return selection.stringValue
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.stringValue
      case ._VERIFICATION(let selection): return selection.stringValue
      }
    }
    public var binaryValue: SDAI.BINARY? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.binaryValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.binaryValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.binaryValue
      case ._DATE_ASSIGNMENT(let selection): return selection.binaryValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.binaryValue
      case ._PERSON(let selection): return selection.binaryValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.binaryValue
      case ._PRODUCT(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.binaryValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.binaryValue
      case ._PROPERTY_DEFINITION(let selection): return selection.binaryValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.binaryValue
      case ._REPRESENTATION(let selection): return selection.binaryValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.binaryValue
      case ._REPRESENTATION_ITEM(let selection): return selection.binaryValue
      case ._STATE_TYPE(let selection): return selection.binaryValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.binaryValue
      case ._VALIDATION(let selection): return selection.binaryValue
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.binaryValue
      case ._VERIFICATION(let selection): return selection.binaryValue
      }
    }
    public var logicalValue: SDAI.LOGICAL? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.logicalValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.logicalValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.logicalValue
      case ._DATE_ASSIGNMENT(let selection): return selection.logicalValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.logicalValue
      case ._PERSON(let selection): return selection.logicalValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.logicalValue
      case ._PRODUCT(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.logicalValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.logicalValue
      case ._PROPERTY_DEFINITION(let selection): return selection.logicalValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.logicalValue
      case ._REPRESENTATION(let selection): return selection.logicalValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.logicalValue
      case ._REPRESENTATION_ITEM(let selection): return selection.logicalValue
      case ._STATE_TYPE(let selection): return selection.logicalValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.logicalValue
      case ._VALIDATION(let selection): return selection.logicalValue
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.logicalValue
      case ._VERIFICATION(let selection): return selection.logicalValue
      }
    }
    public var booleanValue: SDAI.BOOLEAN? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.booleanValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.booleanValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.booleanValue
      case ._DATE_ASSIGNMENT(let selection): return selection.booleanValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.booleanValue
      case ._PERSON(let selection): return selection.booleanValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.booleanValue
      case ._PRODUCT(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.booleanValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.booleanValue
      case ._PROPERTY_DEFINITION(let selection): return selection.booleanValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.booleanValue
      case ._REPRESENTATION(let selection): return selection.booleanValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.booleanValue
      case ._REPRESENTATION_ITEM(let selection): return selection.booleanValue
      case ._STATE_TYPE(let selection): return selection.booleanValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.booleanValue
      case ._VALIDATION(let selection): return selection.booleanValue
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.booleanValue
      case ._VERIFICATION(let selection): return selection.booleanValue
      }
    }
    public var numberValue: SDAI.NUMBER? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.numberValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.numberValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.numberValue
      case ._DATE_ASSIGNMENT(let selection): return selection.numberValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.numberValue
      case ._PERSON(let selection): return selection.numberValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.numberValue
      case ._PRODUCT(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.numberValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.numberValue
      case ._PROPERTY_DEFINITION(let selection): return selection.numberValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.numberValue
      case ._REPRESENTATION(let selection): return selection.numberValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.numberValue
      case ._REPRESENTATION_ITEM(let selection): return selection.numberValue
      case ._STATE_TYPE(let selection): return selection.numberValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.numberValue
      case ._VALIDATION(let selection): return selection.numberValue
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.numberValue
      case ._VERIFICATION(let selection): return selection.numberValue
      }
    }
    public var realValue: SDAI.REAL? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.realValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.realValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.realValue
      case ._DATE_ASSIGNMENT(let selection): return selection.realValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.realValue
      case ._PERSON(let selection): return selection.realValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.realValue
      case ._PRODUCT(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.realValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.realValue
      case ._PROPERTY_DEFINITION(let selection): return selection.realValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.realValue
      case ._REPRESENTATION(let selection): return selection.realValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.realValue
      case ._REPRESENTATION_ITEM(let selection): return selection.realValue
      case ._STATE_TYPE(let selection): return selection.realValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.realValue
      case ._VALIDATION(let selection): return selection.realValue
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.realValue
      case ._VERIFICATION(let selection): return selection.realValue
      }
    }
    public var integerValue: SDAI.INTEGER? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.integerValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.integerValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.integerValue
      case ._DATE_ASSIGNMENT(let selection): return selection.integerValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.integerValue
      case ._PERSON(let selection): return selection.integerValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.integerValue
      case ._PRODUCT(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.integerValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.integerValue
      case ._PROPERTY_DEFINITION(let selection): return selection.integerValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.integerValue
      case ._REPRESENTATION(let selection): return selection.integerValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.integerValue
      case ._REPRESENTATION_ITEM(let selection): return selection.integerValue
      case ._STATE_TYPE(let selection): return selection.integerValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.integerValue
      case ._VALIDATION(let selection): return selection.integerValue
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.integerValue
      case ._VERIFICATION(let selection): return selection.integerValue
      }
    }
    public var genericEnumValue: SDAI.GenericEnumValue? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.genericEnumValue
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.genericEnumValue
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._DATE_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.genericEnumValue
      case ._PERSON(let selection): return selection.genericEnumValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.genericEnumValue
      case ._PRODUCT(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._PROPERTY_DEFINITION(let selection): return selection.genericEnumValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.genericEnumValue
      case ._REPRESENTATION(let selection): return selection.genericEnumValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.genericEnumValue
      case ._REPRESENTATION_ITEM(let selection): return selection.genericEnumValue
      case ._STATE_TYPE(let selection): return selection.genericEnumValue
      case ._STRUCTURED_MESSAGE(let selection): return selection.genericEnumValue
      case ._VALIDATION(let selection): return selection.genericEnumValue
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.genericEnumValue
      case ._VERIFICATION(let selection): return selection.genericEnumValue
      }
    }
    public func arrayOptionalValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY_OPTIONAL<ELEM>? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PERSON(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REPRESENTATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REPRESENTATION_ITEM(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._STATE_TYPE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._VALIDATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._VERIFICATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      }
    }
    public func arrayValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY<ELEM>? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.arrayValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.arrayValue(elementType:elementType)
      case ._PERSON(let selection): return selection.arrayValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._REPRESENTATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.arrayValue(elementType:elementType)
      case ._REPRESENTATION_ITEM(let selection): return selection.arrayValue(elementType:elementType)
      case ._STATE_TYPE(let selection): return selection.arrayValue(elementType:elementType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.arrayValue(elementType:elementType)
      case ._VALIDATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.arrayValue(elementType:elementType)
      case ._VERIFICATION(let selection): return selection.arrayValue(elementType:elementType)
      }
    }
    public func listValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.LIST<ELEM>? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.listValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.listValue(elementType:elementType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.listValue(elementType:elementType)
      case ._PERSON(let selection): return selection.listValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.listValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.listValue(elementType:elementType)
      case ._REPRESENTATION(let selection): return selection.listValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.listValue(elementType:elementType)
      case ._REPRESENTATION_ITEM(let selection): return selection.listValue(elementType:elementType)
      case ._STATE_TYPE(let selection): return selection.listValue(elementType:elementType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.listValue(elementType:elementType)
      case ._VALIDATION(let selection): return selection.listValue(elementType:elementType)
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.listValue(elementType:elementType)
      case ._VERIFICATION(let selection): return selection.listValue(elementType:elementType)
      }
    }
    public func bagValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.BAG<ELEM>? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.bagValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.bagValue(elementType:elementType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.bagValue(elementType:elementType)
      case ._PERSON(let selection): return selection.bagValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.bagValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.bagValue(elementType:elementType)
      case ._REPRESENTATION(let selection): return selection.bagValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.bagValue(elementType:elementType)
      case ._REPRESENTATION_ITEM(let selection): return selection.bagValue(elementType:elementType)
      case ._STATE_TYPE(let selection): return selection.bagValue(elementType:elementType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.bagValue(elementType:elementType)
      case ._VALIDATION(let selection): return selection.bagValue(elementType:elementType)
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.bagValue(elementType:elementType)
      case ._VERIFICATION(let selection): return selection.bagValue(elementType:elementType)
      }
    }
    public func setValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.SET<ELEM>? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.setValue(elementType:elementType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.setValue(elementType:elementType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._DATE_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.setValue(elementType:elementType)
      case ._PERSON(let selection): return selection.setValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PROPERTY_DEFINITION(let selection): return selection.setValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.setValue(elementType:elementType)
      case ._REPRESENTATION(let selection): return selection.setValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.setValue(elementType:elementType)
      case ._REPRESENTATION_ITEM(let selection): return selection.setValue(elementType:elementType)
      case ._STATE_TYPE(let selection): return selection.setValue(elementType:elementType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.setValue(elementType:elementType)
      case ._VALIDATION(let selection): return selection.setValue(elementType:elementType)
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.setValue(elementType:elementType)
      case ._VERIFICATION(let selection): return selection.setValue(elementType:elementType)
      }
    }
    public func enumValue<ENUM:SDAIEnumerationType>(enumType:ENUM.Type) -> ENUM? {
      switch self {
      case ._ACTION_PROPERTY(let selection): return selection.enumValue(enumType:enumType)
      case ._ACTION_PROPERTY_REPRESENTATION(let selection): return selection.enumValue(enumType:enumType)
      case ._ANALYSIS_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._DATE_AND_TIME_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._DATE_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._MEASURE_REPRESENTATION_ITEM(let selection): return selection.enumValue(enumType:enumType)
      case ._PERSON(let selection): return selection.enumValue(enumType:enumType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_FORMATION(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PROPERTY_DEFINITION(let selection): return selection.enumValue(enumType:enumType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.enumValue(enumType:enumType)
      case ._REPRESENTATION(let selection): return selection.enumValue(enumType:enumType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.enumValue(enumType:enumType)
      case ._REPRESENTATION_ITEM(let selection): return selection.enumValue(enumType:enumType)
      case ._STATE_TYPE(let selection): return selection.enumValue(enumType:enumType)
      case ._STRUCTURED_MESSAGE(let selection): return selection.enumValue(enumType:enumType)
      case ._VALIDATION(let selection): return selection.enumValue(enumType:enumType)
      case ._VALUE_REPRESENTATION_ITEM(let selection): return selection.enumValue(enumType:enumType)
      case ._VERIFICATION(let selection): return selection.enumValue(enumType:enumType)
      }
    }

    //MARK: SDAIUnderlyingType
    public typealias FundamentalType = Self
    public static var typeName: String = "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.EVIDENCE_ITEM"
    public var asFundamentalType: FundamentalType { return self }

    //MARK: SDAIObservableAggregateElement
    public var entityReferences: AnySequence<SDAI.EntityReference> {
      switch self {
      case ._ACTION_PROPERTY(let entity): return entity.entityReferences
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): return entity.entityReferences
      case ._ANALYSIS_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): return entity.entityReferences
      case ._DATE_ASSIGNMENT(let entity): return entity.entityReferences
      case ._MEASURE_REPRESENTATION_ITEM(let entity): return entity.entityReferences
      case ._PERSON(let entity): return entity.entityReferences
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.entityReferences
      case ._PRODUCT(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_FORMATION(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): return entity.entityReferences
      case ._PRODUCT_RELATIONSHIP(let entity): return entity.entityReferences
      case ._PROPERTY_DEFINITION(let entity): return entity.entityReferences
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.entityReferences
      case ._REPRESENTATION(let entity): return entity.entityReferences
      case ._REPRESENTATION_CONTEXT(let entity): return entity.entityReferences
      case ._REPRESENTATION_ITEM(let entity): return entity.entityReferences
      case ._STATE_TYPE(let entity): return entity.entityReferences
      case ._STRUCTURED_MESSAGE(let entity): return entity.entityReferences
      case ._VALIDATION(let entity): return entity.entityReferences
      case ._VALUE_REPRESENTATION_ITEM(let entity): return entity.entityReferences
      case ._VERIFICATION(let entity): return entity.entityReferences
      }
    }

    public mutating func configure(with observer: SDAI.EntityReferenceObserver) {
      switch self {
      case ._ACTION_PROPERTY(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_PROPERTY(entity)
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_PROPERTY_REPRESENTATION(entity)
      case ._ANALYSIS_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._ANALYSIS_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ACTION_ASSIGNMENT(entity)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_APPROVAL_ASSIGNMENT(entity)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_CERTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_CLASSIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_CONTRACT_ASSIGNMENT(entity)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(entity)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(entity)
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._DATE_AND_TIME_ASSIGNMENT(entity)
      case ._DATE_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._DATE_ASSIGNMENT(entity)
      case ._MEASURE_REPRESENTATION_ITEM(let entity): 
        entity.configure(with: observer)
        self = ._MEASURE_REPRESENTATION_ITEM(entity)
      case ._PERSON(let entity): 
        entity.configure(with: observer)
        self = ._PERSON(entity)
      case ._PERSON_AND_ORGANIZATION(let entity): 
        entity.configure(with: observer)
        self = ._PERSON_AND_ORGANIZATION(entity)
      case ._PRODUCT(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT(entity)
      case ._PRODUCT_DEFINITION(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION(entity)
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_CONTEXT(entity)
      case ._PRODUCT_DEFINITION_FORMATION(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_FORMATION(entity)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(entity)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_RELATIONSHIP(entity)
      case ._PRODUCT_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_RELATIONSHIP(entity)
      case ._PROPERTY_DEFINITION(let entity): 
        entity.configure(with: observer)
        self = ._PROPERTY_DEFINITION(entity)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): 
        entity.configure(with: observer)
        self = ._PROPERTY_DEFINITION_REPRESENTATION(entity)
      case ._REPRESENTATION(let entity): 
        entity.configure(with: observer)
        self = ._REPRESENTATION(entity)
      case ._REPRESENTATION_CONTEXT(let entity): 
        entity.configure(with: observer)
        self = ._REPRESENTATION_CONTEXT(entity)
      case ._REPRESENTATION_ITEM(let entity): 
        entity.configure(with: observer)
        self = ._REPRESENTATION_ITEM(entity)
      case ._STATE_TYPE(let entity): 
        entity.configure(with: observer)
        self = ._STATE_TYPE(entity)
      case ._STRUCTURED_MESSAGE(let entity): 
        entity.configure(with: observer)
        self = ._STRUCTURED_MESSAGE(entity)
      case ._VALIDATION(let entity): 
        entity.configure(with: observer)
        self = ._VALIDATION(entity)
      case ._VALUE_REPRESENTATION_ITEM(let entity): 
        entity.configure(with: observer)
        self = ._VALUE_REPRESENTATION_ITEM(entity)
      case ._VERIFICATION(let entity): 
        entity.configure(with: observer)
        self = ._VERIFICATION(entity)
      }
    }

    public mutating func teardownObserver() {
      switch self {
      case ._ACTION_PROPERTY(let entity): 
        entity.teardownObserver()
        self = ._ACTION_PROPERTY(entity)
      case ._ACTION_PROPERTY_REPRESENTATION(let entity): 
        entity.teardownObserver()
        self = ._ACTION_PROPERTY_REPRESENTATION(entity)
      case ._ANALYSIS_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._ANALYSIS_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ACTION_ASSIGNMENT(entity)
      case ._APPLIED_APPROVAL_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_APPROVAL_ASSIGNMENT(entity)
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_CERTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_CLASSIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_CONTRACT_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_CONTRACT_ASSIGNMENT(entity)
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_EFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(entity)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(entity)
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_INEFFECTIVITY_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(entity)
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(entity)
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(entity)
      case ._DATE_AND_TIME_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._DATE_AND_TIME_ASSIGNMENT(entity)
      case ._DATE_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._DATE_ASSIGNMENT(entity)
      case ._MEASURE_REPRESENTATION_ITEM(let entity): 
        entity.teardownObserver()
        self = ._MEASURE_REPRESENTATION_ITEM(entity)
      case ._PERSON(let entity): 
        entity.teardownObserver()
        self = ._PERSON(entity)
      case ._PERSON_AND_ORGANIZATION(let entity): 
        entity.teardownObserver()
        self = ._PERSON_AND_ORGANIZATION(entity)
      case ._PRODUCT(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT(entity)
      case ._PRODUCT_DEFINITION(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION(entity)
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_CONTEXT(entity)
      case ._PRODUCT_DEFINITION_FORMATION(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_FORMATION(entity)
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(entity)
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_RELATIONSHIP(entity)
      case ._PRODUCT_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_RELATIONSHIP(entity)
      case ._PROPERTY_DEFINITION(let entity): 
        entity.teardownObserver()
        self = ._PROPERTY_DEFINITION(entity)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): 
        entity.teardownObserver()
        self = ._PROPERTY_DEFINITION_REPRESENTATION(entity)
      case ._REPRESENTATION(let entity): 
        entity.teardownObserver()
        self = ._REPRESENTATION(entity)
      case ._REPRESENTATION_CONTEXT(let entity): 
        entity.teardownObserver()
        self = ._REPRESENTATION_CONTEXT(entity)
      case ._REPRESENTATION_ITEM(let entity): 
        entity.teardownObserver()
        self = ._REPRESENTATION_ITEM(entity)
      case ._STATE_TYPE(let entity): 
        entity.teardownObserver()
        self = ._STATE_TYPE(entity)
      case ._STRUCTURED_MESSAGE(let entity): 
        entity.teardownObserver()
        self = ._STRUCTURED_MESSAGE(entity)
      case ._VALIDATION(let entity): 
        entity.teardownObserver()
        self = ._VALIDATION(entity)
      case ._VALUE_REPRESENTATION_ITEM(let entity): 
        entity.teardownObserver()
        self = ._VALUE_REPRESENTATION_ITEM(entity)
      case ._VERIFICATION(let entity): 
        entity.teardownObserver()
        self = ._VERIFICATION(entity)
      }
    }

    //MARK: SDAIAggregationBehavior
    public var aggregationHiBound: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationHiIndex: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationLoBound: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationLoIndex: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationSize: Int? {
      switch self {
      default: return nil
      }
    }

    //MARK: WHERE RULE VALIDATION (SELECT TYPE)
    public static func validateWhereRules(instance:Self?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      var result: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]
      switch instance {
      case ._ACTION_PROPERTY(let selectValue): 
        result = eACTION_PROPERTY.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_PROPERTY")
      case ._ACTION_PROPERTY_REPRESENTATION(let selectValue): 
        result = eACTION_PROPERTY_REPRESENTATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_PROPERTY_REPRESENTATION")
      case ._ANALYSIS_ASSIGNMENT(let selectValue): 
        result = eANALYSIS_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ANALYSIS_ASSIGNMENT")
      case ._APPLIED_ACTION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ACTION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ACTION_ASSIGNMENT")
      case ._APPLIED_APPROVAL_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_APPROVAL_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_APPROVAL_ASSIGNMENT")
      case ._APPLIED_CERTIFICATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_CERTIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_CERTIFICATION_ASSIGNMENT")
      case ._APPLIED_CLASSIFICATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_CLASSIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_CLASSIFICATION_ASSIGNMENT")
      case ._APPLIED_CONTRACT_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_CONTRACT_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_CONTRACT_ASSIGNMENT")
      case ._APPLIED_EFFECTIVITY_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_EFFECTIVITY_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_EFFECTIVITY_ASSIGNMENT")
      case ._APPLIED_EVENT_OCCURRENCE_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_EVENT_OCCURRENCE_ASSIGNMENT")
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT")
      case ._APPLIED_INEFFECTIVITY_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_INEFFECTIVITY_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_INEFFECTIVITY_ASSIGNMENT")
      case ._APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT")
      case ._APPLIED_ORGANIZATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ORGANIZATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ORGANIZATION_ASSIGNMENT")
      case ._APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT")
      case ._APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT")
      case ._DATE_AND_TIME_ASSIGNMENT(let selectValue): 
        result = eDATE_AND_TIME_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DATE_AND_TIME_ASSIGNMENT")
      case ._DATE_ASSIGNMENT(let selectValue): 
        result = eDATE_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DATE_ASSIGNMENT")
      case ._MEASURE_REPRESENTATION_ITEM(let selectValue): 
        result = eMEASURE_REPRESENTATION_ITEM.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\MEASURE_REPRESENTATION_ITEM")
      case ._PERSON(let selectValue): result = ePERSON.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PERSON")
      case ._PERSON_AND_ORGANIZATION(let selectValue): 
        result = ePERSON_AND_ORGANIZATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PERSON_AND_ORGANIZATION")
      case ._PRODUCT(let selectValue): result = ePRODUCT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT")
      case ._PRODUCT_DEFINITION(let selectValue): 
        result = ePRODUCT_DEFINITION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION")
      case ._PRODUCT_DEFINITION_CONTEXT(let selectValue): 
        result = ePRODUCT_DEFINITION_CONTEXT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_CONTEXT")
      case ._PRODUCT_DEFINITION_FORMATION(let selectValue): 
        result = ePRODUCT_DEFINITION_FORMATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_FORMATION")
      case ._PRODUCT_DEFINITION_FORMATION_RELATIONSHIP(let selectValue): 
        result = ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_FORMATION_RELATIONSHIP")
      case ._PRODUCT_DEFINITION_RELATIONSHIP(let selectValue): 
        result = ePRODUCT_DEFINITION_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_RELATIONSHIP")
      case ._PRODUCT_RELATIONSHIP(let selectValue): 
        result = ePRODUCT_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_RELATIONSHIP")
      case ._PROPERTY_DEFINITION(let selectValue): 
        result = ePROPERTY_DEFINITION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PROPERTY_DEFINITION")
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selectValue): 
        result = ePROPERTY_DEFINITION_REPRESENTATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PROPERTY_DEFINITION_REPRESENTATION")
      case ._REPRESENTATION(let selectValue): 
        result = eREPRESENTATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REPRESENTATION")
      case ._REPRESENTATION_CONTEXT(let selectValue): 
        result = eREPRESENTATION_CONTEXT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REPRESENTATION_CONTEXT")
      case ._REPRESENTATION_ITEM(let selectValue): 
        result = eREPRESENTATION_ITEM.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REPRESENTATION_ITEM")
      case ._STATE_TYPE(let selectValue): result = eSTATE_TYPE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\STATE_TYPE")
      case ._STRUCTURED_MESSAGE(let selectValue): 
        result = eSTRUCTURED_MESSAGE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\STRUCTURED_MESSAGE")
      case ._VALIDATION(let selectValue): result = eVALIDATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\VALIDATION")
      case ._VALUE_REPRESENTATION_ITEM(let selectValue): 
        result = eVALUE_REPRESENTATION_ITEM.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\VALUE_REPRESENTATION_ITEM")
      case ._VERIFICATION(let selectValue): result = eVERIFICATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\VERIFICATION")
      case nil: break
      }

      return result
    }

  }

}


//MARK: - SELECT TYPE HIERARCHY
public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sEVIDENCE_ITEM__type: SDAISelectType {

  //MARK: GROUP REFERENCES
  var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT? { get }
  var super_eORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION_ASSIGNMENT? { get }
  var super_eREPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION? { get }
  var super_eEFFECTIVITY_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY_ASSIGNMENT? { get }
  var super_eAPPLIED_CERTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CERTIFICATION_ASSIGNMENT? { get }
  var super_ePROPERTY_DEFINITION_REPRESENTATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION_REPRESENTATION? { get }
  var super_ePERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON? { get }
  var super_eSTATE_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE? { get }
  var super_eMEASURE_REPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_REPRESENTATION_ITEM? { get }
  var super_eIDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT? { get }
  var super_ePROPERTY_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION? { get }
  var super_eSTRUCTURED_MESSAGE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE? { get }
  var super_eVALIDATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVALIDATION? { get }
  var super_eVALUE_REPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVALUE_REPRESENTATION_ITEM? { get }
  var super_eGROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP? { get }
  var super_eAPPLICATION_CONTEXT_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLICATION_CONTEXT_ELEMENT? { get }
  var super_eREPRESENTATION_CONTEXT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_CONTEXT? { get }
  var super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT? { get }
  var super_eANALYSIS_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANALYSIS_ASSIGNMENT? { get }
  var super_eAPPLIED_EFFECTIVITY_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EFFECTIVITY_ASSIGNMENT? { get }
  var super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP? { get }
  var super_eCONTRACT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT_ASSIGNMENT? { get }
  var super_eDATE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_ASSIGNMENT? { get }
  var super_ePERSON_AND_ORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION_ASSIGNMENT? { get }
  var super_eACTION_PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY? { get }
  var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_IDENTIFICATION_ASSIGNMENT? { get }
  var super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_INEFFECTIVITY_ASSIGNMENT? { get }
  var super_eORGANIZATIONAL_PROJECT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT_ASSIGNMENT? { get }
  var super_ePRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION? { get }
  var super_eSECURITY_CLASSIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_ASSIGNMENT? { get }
  var super_eREPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM? { get }
  var super_eAPPLIED_CLASSIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CLASSIFICATION_ASSIGNMENT? { get }
  var super_eDATE_AND_TIME_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME_ASSIGNMENT? { get }
  var super_ePRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT? { get }
  var super_eAPPLIED_CONTRACT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CONTRACT_ASSIGNMENT? { get }
  var super_eMEASURE_WITH_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT? { get }
  var super_eVERIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERIFICATION? { get }
  var super_ePRODUCT_DEFINITION_FORMATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION? { get }
  var super_eACTION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_ASSIGNMENT? { get }
  var super_eAPPROVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_ASSIGNMENT? { get }
  var super_eCERTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION_ASSIGNMENT? { get }
  var super_eACTION_PROPERTY_REPRESENTATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY_REPRESENTATION? { get }
  var super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT? { get }
  var super_eAPPLIED_ORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATION_ASSIGNMENT? { get }
  var super_eCLASSIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLASSIFICATION_ASSIGNMENT? { get }
  var super_eAPPLIED_APPROVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_APPROVAL_ASSIGNMENT? { get }
  var super_ePERSON_AND_ORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION? { get }
  var super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT? { get }
  var super_ePRODUCT_DEFINITION_CONTEXT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_CONTEXT? { get }
  var super_ePRODUCT_DEFINITION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP? { get }
  var super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT? { get }
  var super_eAPPLIED_ACTION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_ASSIGNMENT? { get }
  var super_ePRODUCT_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_RELATIONSHIP? { get }
  var super_eEVENT_OCCURRENCE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE_ASSIGNMENT? { get }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var RANGE_ON_SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { get }
  var STYLE_CONTEXT: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSTYLE_CONTEXT_SELECT>/*[1:
    nil]*/ )?  { get }
  var RANGE_ON_SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { get }
  var SLOT_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var END_EXIT_FACES: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[0:
    nil]*/ >/*[2:2]*/ )?  { get }
  var CONCENTRATION_EXPONENT: SDAI.REAL?  { get }
  var INDIRECTLY_PICKED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { get }
  var RANGE_ON_PAIR_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { get }
  var REPLICATE_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { get }
  var ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var ASSIGNED_SECURITY_CLASSIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION?  { get }
  var CFS_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE>/*[1:nil]*/ )?  { get }
  var CONTAINER: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_VIEW>/*[1:nil]*/ )?  { get }
  var REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { get }
  var CTRIANGLES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[10:10]*/ >/*[1:nil]*/ )?  { get }
  var RADIUS_LIST: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[2:
    nil]*/ )?  { get }
  var CLOSED_INTERPOLATION: SDAI.LOGICAL { get }
  var DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var ASSIGNED_EVENT_OCCURRENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { get }
  var ACCURACY_TYPES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ACCURACY_TYPE_NAME>/*[0:
    nil]*/ )?  { get }
  var ANGULAR_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var OFFSET1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var ACTUAL_POINT_ON_CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_CURVE?  { get }
  var FLOOR_BLEND_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var GENERALISED_MAJOR_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var LEAF: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { get }
  var OFFSET2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var NO_OF_BYTES: SDAI.INTEGER?  { get }
  var MIDDLE_NAMES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { get }
  var CURVE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var MAJOR_ORIENTATION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var BASE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sGENERALIZED_SURFACE_SELECT?  { get }
  var CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var CONTEXT_IDENTIFIER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var CONTENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDRAUGHTING_CALLOUT_ELEMENT>/*[1:
    nil]*/ )?  { get }
  var VSENSE: SDAI.BOOLEAN?  { get }
  var START_OF_NEXT_HATCH_LINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eONE_DIRECTION_REPEAT_FACTOR?  { get }
  var CURVE_FORM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nB_SPLINE_CURVE_FORM?  { get }
  var OVER_RIDDEN_STYLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTYLED_ITEM?  { get }
  var MEASURED_VALUE_FOR_INSPECTED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sEQUIVALENCE_MEASURED_VALUE_SELECT?  { get }
  var TRANSFORMATION_OPERATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PAIR?  { get }
  var ASSIGNED_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE?  { get }
  var RADIAL_ALIGNMENT: SDAI.BOOLEAN?  { get }
  var HATCH_LINE_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var SUFFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { get }
  var CONSTRAINED_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { get }
  var TANGENT_CONTACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTANGENT_CONTACT_TYPE?  { get }
  var SEGMENT_RADII: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[1:
    SEGMENTS]*/ )?  { get }
  var REALIZED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var DEPENDENT_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_ENVIRONMENT?  { get }
  var LEFT_OFFSET: SDAI.BOOLEAN?  { get }
  var PATCHES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE_PATCH>/*[1:nil]*/ )?  { get }
  var REPEAT_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { get }
  var ROW_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var TIP_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var DETECTED_DIFFERENCE_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_DETECTED_DIFFERENCE_TYPE_NAME>/*[0:nil]*/ )?  { get }
  var HATCH_LINE_APPEARANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE_STYLE?  { get }
  var SWEPT_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var NEXT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNEXT_ASSEMBLY_USAGE_OCCURRENCE?  { get }
  var ARC_LENGTH_DISTANCE_FACTOR: SDAI.REAL?  { get }
  var ROLE: SDAI.GENERIC_ENTITY?  { get }
  var PARENT_PT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { get }
  var OFFSET_DIRECTION_CONSTRAINED: SDAI.BOOLEAN?  { get }
  var THICKNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var N_U: SDAI.INTEGER?  { get }
  var DIRECTION_OF_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var TEE_SECTION_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var FILLET_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var SCANNER_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var N_V: SDAI.INTEGER?  { get }
  var FIRST_TRIM_INTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRIM_INTENT?  { get }
  var OPERATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nBOOLEAN_OPERATOR?  { get }
  var SUBSKETCH_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_ELEMENT_SELECT>
    /*[1:nil]*/ )?  { get }
  var X_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { get }
  var SCANNED_POINTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSCANNED_DATA_ITEM>/*[1:nil]*/ )?  { get }
  var ENCLOSURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBOX_DOMAIN?  { get }
  var REFERENCE_DESIGNATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var FIXED_ATTRIBUTES: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINSTANCE_ATTRIBUTE_REFERENCE>/*[1:nil]*/ )?  { get }
  var PARAMETER_DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var COMPARING_SPECIFIED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { get }
  var SECOND_TRIM_INTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRIM_INTENT?  { get }
  var SHAPE_CRITERIA: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eA3MA_ASSEMBLY_AND_SHAPE_CRITERIA_RELATIONSHIP>/*[1:nil]*/ )?  { get }
  var SECOND_OPERAND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBOOLEAN_OPERAND?  { get }
  var TRIM_1: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTRIMMING_SELECT>/*[1:2]*/ )?  { get }
  var RANGE_ON_CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { get }
  var STATUS: SDAI.STRING?  { get }
  var RELATED_PRODUCT_DEFINITION_FORMATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var CHARACTER_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANAR_EXTENT?  { get }
  var INNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var PROTRUSION_HEIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var TURN_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var REGION_COLOUR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLOUR?  { get }
  var TRIM_2: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTRIMMING_SELECT>/*[1:2]*/ )?  { get }
  var RANGE_ON_CURVE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { get }
  var CONSTITUENT_AMOUNT: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_PRODUCT_COMPOSITION_VALUE>/*[1:nil]*/ )?  { get }
  var PATH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTEXT_PATH?  { get }
  var TILES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sFILL_AREA_STYLE_TILE_SHAPE_SELECT>/*[
    1:nil]*/ )?  { get }
  var INSPECTED_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_ELEMENT_SELECT>
    /*[1:nil]*/ )?  { get }
  var ASSIGNED_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { get }
  var UPPER_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE?  { get }
  var ROW_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { get }
  var POCKET_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSYMBOL_TARGET?  { get }
  var EXTERNAL_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { get }
  var GEAR_RATIO: SDAI.REAL?  { get }
  var EXTERNAL_GROOVE: SDAI.BOOLEAN?  { get }
  var RANKING_RATIONALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var REPLICATED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMODIFIED_SOLID_WITH_PLACED_CONFIGURATION?  { get }
  var A: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var PARENT_VOLUME_SET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_VOLUME_SET?  { get }
  var SELECT_OUTER: SDAI.BOOLEAN?  { get }
  var B: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var PNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var C: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var V_SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { get }
  var CLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var SCANNER_INFO: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSCANNER_PROPERTY>/*[1:nil]*/ )?  { get }
  var SILHOUETTED_MODEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSURFACE_OR_SOLID_MODEL?  { get }
  var SOURCES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLIGHT_SOURCE>/*[1:nil]*/ )?  { get }
  var SENSE_AGREEMENT: SDAI.BOOLEAN?  { get }
  var EDGE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE?  { get }
  var BASIS_VOLUME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME?  { get }
  var SWEPT_FACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE?  { get }
  var LINK_REPRESENTATION_ASSOCIATIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePAIR_REPRESENTATION_RELATIONSHIP>/*[1:nil]*/ )?  { get }
  var UPPER_LIMIT_ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var CM_LINK: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVARIATIONAL_CURRENT_REPRESENTATION_RELATIONSHIP?  { get }
  var ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var LOWER_LIMIT_RACK_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var LOOP_VERTEX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { get }
  var LAST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var T_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var PTS_PER_SUBLIST: SDAI.INTEGER?  { get }
  var END_CONDITIONS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBLEND_END_CONDITION_SELECT>
    /*[2:2]*/ )?  { get }
  var DEFINED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var RELATED_MESSAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE?  { get }
  var AXIS_POSITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS1_PLACEMENT?  { get }
  var OF_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { get }
  var SBWM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSHELL>/*[1:nil]*/ )?  { get }
  var KNOT_VALUES: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tSPLINE_KNOT_VALUES?  { get }
  var PITCH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var PERMANENT_AGGREGATE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var TILING_PATTERN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTWO_DIRECTION_REPEAT_FACTOR?  { get }
  var PCURVE_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePCURVE?  { get }
  var OUTLINES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_FILL_AREA>/*[1:nil]*/ )?  { get }
  var REPRESENTATIONS_IN_CONTEXT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION>
    /*[1:nil]*/ )?  { get }
  var COMPARED_SPECIFIED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { get }
  var APPLIES_TO_PAIR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PAIR?  { get }
  var UPPER_LIMIT_ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var PRODUCT_DESIGN_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var CONICAL_TRANSITIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONICAL_STEPPED_HOLE_TRANSITION>/*[1:nil]*/ )?  { get }
  var OF_SHAPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATED_PART_RELATIONSHIP?  { get }
  var RANKING: SDAI.INTEGER?  { get }
  var REQUIRED_GENERAL_ACCURACY: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  { get }
  var REPORT_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { get }
  var SYMBOL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_SYMBOL_OCCURRENCE?  { get }
  var U1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var BEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var INNER_BOUNDARY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCOMPOUND_INNER_AREA_BOUNDARY?  { get }
  var CLOSED_PATH: SDAI.LOGICAL { get }
  var MAKE_OR_BUY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nSOURCE?  { get }
  var U2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var MEASURED_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMEASURED_VALUE_SELECT?  { get }
  var POINT_COORDINATES: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  { get }
  var SKEWNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var TILING_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { get }
  var VOLUME_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME?  { get }
  var PROTRUSION_DRAFT_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var USED_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { get }
  var LOCAL_ORIGIN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var REFERENCE_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[0:
    nil]*/ )?  { get }
  var SCL: SDAI.REAL?  { get }
  var UNITS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT>/*[1:nil]*/ )?  { get }
  var QUALIFIERS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sVALUE_QUALIFIER>/*[1:nil]*/ )?  { get }
  var PATH_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePATH?  { get }
  var PLANE_OF_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANE?  { get }
  var PATTERN_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var TRANSFORM_ITEM_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sRIGID_PLACEMENT?  { get }
  var TEST_POINT_DISTANCE_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var PROTRUSION_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ASSOCIATED_SHAPE_REPRESENTATION: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION_ASSOCIATION>/*[0:1]*/ )?  { get }
  var CONSTRAINING_EXPRESSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXPRESSION?  { get }
  var SECOND_ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var COLOUR_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nCOLOUR_TYPE_ENUM?  { get }
  var POINT_OF_REFERENCE_HATCH_LINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var COMPARING_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { get }
  var TRANSFORM_ITEM_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sRIGID_PLACEMENT?  { get }
  var LOWER_LIMIT_SECOND_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var POCKET_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ASSIGNED_DATE_AND_TIME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME?  { get }
  var EDGE_LIST: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORIENTED_EDGE>/*[1:nil]*/ )?  { get }
  var SIZE_IN_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var RADIUS_SECOND_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var THICKENED_FACE_LIST: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>
    /*[1:nil]*/ >/*[1:nil]*/ )?  { get }
  var UPPER_LIMIT_FIRST_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var CRITERION_REPORT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_EQUIVALENCE_INSPECTION_CRITERION_REPORT?  { get }
  var SIZE_IN_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var CORNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var RELATING_PRODUCT_DEFINITION_FORMATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var ACTUAL_POINT_ON_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_CURVE?  { get }
  var RELATING_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var INTENSITIES: (SDAI.LIST<SDAI.REAL>/*[1:nil]*/ )?  { get }
  var LOWER_LIMIT_ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var PARENT_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var RELATED_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { get }
  var Y_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { get }
  var CONFIGURED_MECHANISM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMECHANISM_REPRESENTATION?  { get }
  var ACTUAL_PLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var LOWER_LIMIT_ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var USENSE: SDAI.BOOLEAN?  { get }
  var ASSIGNED_CLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { get }
  var DISTANCE_FROM_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var SURFACE_FORM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nB_SPLINE_SURFACE_FORM?  { get }
  var FIRST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var COMPOSITION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ANNOTATED_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_CURVE_OCCURRENCE?  { get }
  var SEMI_IMAG_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var EQUIVALENT_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var PHI: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var THE_CALLOUT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDRAUGHTING_CALLOUT?  { get }
  var DOCUMENTATION_IDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT>/*[1:nil]*/ )?  { get }
  var SCANNER_IDENTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var SLOT_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var KNOT_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var PARENT_FACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE?  { get }
  var RIGHT_OFFSET_DISTANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var RELATION_TYPE: SDAI.STRING?  { get }
  var BASELINE_RATIO: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tRATIO_MEASURE?  { get }
  var ASSIGNED_CERTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION?  { get }
  var GENERALISED_MINOR_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ASSIGNED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { get }
  var V2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var GROOVE_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var LINE_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var TREE_ROOT_EXPRESSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCSG_SELECT?  { get }
  var POINT_PARAMETER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var BASIS_EDGE_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE?  { get }
  var POCKET_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY?  { get }
  var MINOR_ORIENTATION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var BASE_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var FIXED_CONSTITUENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATIVE_SHAPE_REPRESENTATION?  { get }
  var V1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var COLOUR_INDICES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[3:3]*/ >/*[1:nil]*/ )?  { get }
  var HELICAL_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var LITERAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPRESENTABLE_TEXT?  { get }
  var CLOTHOID_CONSTANT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var PAIR_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var THE_PERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON?  { get }
  var BINARY_VALUE: SDAI.BINARY?  { get }
  var PARENT_FACE_SET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_FACE_SET?  { get }
  var SPECIFICATION: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION>/*[1:nil]*/ )?  { get }
  var FILL_STYLE_TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { get }
  var POSITIVE_SIDE: SDAI.BOOLEAN?  { get }
  var PLANNED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var STYLED_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_CURVE_OCCURRENCE?  { get }
  var AXIS3: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var PICKED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[1:nil]*/ )?  { get }
  var COLOURED_COORDINATE_VALUES: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOORDINATES_LIST?  { get }
  var AXIS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var AXIS1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var ASSIGNED_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var ARC_LENGTH_SEPARATION_FACTOR: SDAI.REAL?  { get }
  var OPEN_SHELL_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eOPEN_SHELL?  { get }
  var AUXILIARY_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAUXILIARY_GEOMETRIC_REPRESENTATION_ITEM>/*[0:nil]*/ )?  { get }
  var REVISION_IDENTIFIER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var SIZE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_SIZE?  { get }
  var BASE_SOLID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBASE_SOLID_SELECT?  { get }
  var DELETED_FACE_SET: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[1:nil]*/ )?  { get }
  var DRAFTED_EDGES: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE>/*[1:nil]*/ >
    /*[2:nil]*/ )?  { get }
  var SUCCESSOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var UPPER_INDEX_ON_CONTROL_POINTS: SDAI.INTEGER?  { get }
  var VERTEX_SHELL_EXTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX_LOOP?  { get }
  var ASSESSMENT_THRESHOLD_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eA3MA_EQUIVALENCE_CRITERION_ASSESSMENT_THRESHOLD_RELATIONSHIP?  { get }
  var COMPARED_ELEMENT_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  { get }
  var UPPER_INDEX_ON_KNOTS: SDAI.INTEGER?  { get }
  var OFFSET_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { get }
  var TESSELLATION_ACCURACY_PARAMETERS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTESSELLATION_ACCURACY_PARAMETER_ITEM>/*[1:nil]*/ )?  { get }
  var LEFT_OFFSET_DISTANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var SEGMENT_DEPTHS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[
    1:SEGMENTS]*/ )?  { get }
  var INPUT_SKEW_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var SKEW_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var RADIUS_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var COLLAR_DEPTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var UNIT_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { get }
  var ASSOCIATED_GEOMETRY: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPCURVE_OR_SURFACE>/*[1:
    2]*/ )?  { get }
  var REPRESENTED_JOINTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_JOINT>/*[1:nil]*/ )?  { get }
  var CLOSED_SHELL_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLOSED_SHELL?  { get }
  var ANGLE_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var INDIVIDUAL_PRODUCT: SDAI.GENERIC_ENTITY?  { get }
  var BOUND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOOP?  { get }
  var DIRECTION_RATIOS: (SDAI.LIST<SDAI.REAL>/*[2:3]*/ )?  { get }
  var CLOSED_ENDS: (SDAI.LIST<SDAI.LOGICAL>/*[2:2]*/ )?  { get }
  var FBSM_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_FACE_SET>/*[1:nil]*/ )?  { get }
  var THE_DRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDERS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDER>/*[0:
    1]*/ )?  { get }
  var BASE_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var PARENT_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var RELATED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { get }
  var COMPARED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { get }
  var EDGE_END: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { get }
  var BOX_HEIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var VIEW_WINDOW: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANAR_BOX?  { get }
  var UPPER_LIMIT_ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var UPPER_LIMIT_ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var LIFE_CYCLE_STAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var UPPER_LIMIT_ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var LINE_STRIP: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var GROOVE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ITEM_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCOMPOUND_ITEM_DEFINITION?  { get }
  var EXTERNAL_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var CVS_VOLUMES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME_WITH_FACES>/*[1:nil]*/ )?  { get }
  var SPHERE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var FIRST_ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var PARAMETER_CURRENT_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMATHS_VALUE?  { get }
  var RANGE_ON_PAIR_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { get }
  var JOINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_JOINT?  { get }
  var ACTUAL_ROTATION_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var MEASURED_DATA_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_MEASURED_DATA_TYPE_NAME?  { get }
  var GAMMA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var FIRST_OFFSET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var COORDINATE_SPACE_DIMENSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDIMENSION_COUNT?  { get }
  var OWNING_SKETCH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_TYPE_SELECT?  { get }
  var VIEW_WINDOW_CLIPPING: SDAI.BOOLEAN?  { get }
  var W_UPPER: SDAI.INTEGER?  { get }
  var ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var CURVE_3D: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var DRAFT_ANGLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE>/*[2:nil]*/ )?  { get }
  var DETERMINATION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var LINE_STRIP_FACE2: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var UPPER_LIMIT_RACK_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var MAP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_MAP?  { get }
  var GEOMETRIC_MODEL_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPATH_OR_COMPOSITE_CURVE?  { get }
  var LINE_STRIP_FACE1: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var FACE_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var FACE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE?  { get }
  var BASE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var LOWER_LIMIT_ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var RELATING_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { get }
  var VERTEX_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { get }
  var LOWER_LIMIT_ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var COLUMN_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { get }
  var EDGE_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var LOWER_LIMIT_ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var THICKNESS_LIST: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE>/*[1:nil]*/ )?  { get }
  var COLUMN_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var PROTRUSION_CORNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var WIRE_SHELL_EXTENT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOOP>/*[1:nil]*/ )?  { get }
  var MAGNITUDE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var CURVE_PLANE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANE?  { get }
  var SPREAD_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { get }
  var SWEPT_AREA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE_BOUNDED_SURFACE?  { get }
  var SCULPTURING_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sGENERALIZED_SURFACE_SELECT?  { get }
  var LOWER_LIMIT_FIRST_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var ROOT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION?  { get }
  var STYLES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_STYLE_ASSIGNMENT>/*[0:
    nil]*/ )?  { get }
  var CONE_ANGLE1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var PLACEMENT_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLACEMENT?  { get }
  var B_SPLINES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_B_SPLINE>/*[2:nil]*/ )?  { get }
  var NOTABLE_INSTANCES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEQUIVALENCE_NOTABLE_INSTANCE>/*[1:nil]*/ )?  { get }
  var ASSIGNED_CONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT?  { get }
  var THE_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { get }
  var COLOUR_VALUES: (SDAI.LIST<SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tUNSIGNED_8_BIT_INTEGER>/*[3:4]*/ >/*[1:nil]*/ )?  { get }
  var CONE_ANGLE2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var THICKNESS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var SCANNER_UNCERTAINTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var EBWM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_EDGE_SET>/*[1:nil]*/ )?  { get }
  var W_B_SPLINES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_B_SPLINE>/*[8:nil]*/ )?  { get }
  var SEMI_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ASSIGNED_PERSON_AND_ORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION?  { get }
  var FIXED_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var RELATING_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { get }
  var STROKES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE>/*[1:nil]*/ )?  { get }
  var SECOND_OFFSET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { get }
  var EDGE_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { get }
  var NPOINTS: SDAI.INTEGER?  { get }
  var W_DEGREE: SDAI.INTEGER?  { get }
  var HIDDEN_LINE_SURFACE_REMOVAL: SDAI.BOOLEAN?  { get }
  var MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var RELATED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var ALPHA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var BETA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var SUBLISTS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_CLOUD_DATASET>/*[2:nil]*/ )?  { get }
  var OFFSET_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nPARALLEL_OFFSET_TYPE?  { get }
  var MIRROR_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sLINEAR_GEOMETRY_CONSTRAINT_ELEMENT?  { get }
  var SOURCE: SDAI.GENERIC_ENTITY?  { get }
  var LIGHT_COLOUR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLOUR?  { get }
  var EDGE_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { get }
  var LENGTH_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var PROTRUSION_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var APPLIED_GENERAL_ACCURACY: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  { get }
  var CONTEXT_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var TRANSITION_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { get }
  var PROTRUSION_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var RELATING_MESSAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE?  { get }
  var SECOND_REPEAT_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { get }
  var SLOT_CENTRELINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBOUNDED_CURVE?  { get }
  var RADIUS_FIRST_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var SEMI_APEX_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { get }
  var CONTEXT_OF_ITEMS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_CONTEXT?  { get }
  var BLENDED_EDGES: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE>/*[1:nil]*/ )?  { get }
  var SUPPRESSED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[0:
    nil]*/ )?  { get }
  var REP_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION?  { get }
  var PARAMETER_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { get }
  var REP_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION?  { get }
  var SKETCH_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_BASIS_SELECT?  { get }
  var SBSM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSHELL>/*[1:nil]*/ )?  { get }
  var POINT_PARAMETER_W: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { get }
  var OUTER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLOSED_SHELL?  { get }
  var POSITION_COORDS: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  { get }
  var SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var EDGE_FUNCTION_LIST: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nBLEND_RADIUS_VARIATION_TYPE>/*[1:nil]*/ )?  { get }
  var CES_EDGES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE>/*[1:nil]*/ )?  { get }
  var ASSOCIATED_LINK_REPRESENTATIONS_1: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  { get }
  var SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { get }
  var CONSTRAINT_GROUP: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCONSTRAINT_GROUP_MEMBER>
    /*[2:nil]*/ )?  { get }
  var VIEW_REFERENCE_SYSTEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var OF_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { get }
  var REPRESENTATION_RELATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PROPERTY_DEFINITION_REPRESENTATION?  { get }
  var RELATED_REPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sANGLE_DIRECTION_REFERENCE_SELECT?  { get }
  var PRODUCT_DEFINITION_OCCURRENCE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var ASSOCIATED_LINK_REPRESENTATIONS_2: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  { get }
  var ASSIGNED_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY?  { get }
  var INTERSECTED_MODEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSURFACE_OR_SOLID_MODEL?  { get }
  var IMPLICIT_OUTER: SDAI.BOOLEAN?  { get }
  var UPPER_LIMIT_SECOND_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var NEUTRAL_SKETCH_SEMANTICS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nCURVES_OR_AREA?  { get }
  var W_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { get }
  var SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { get }
  var INSPECTED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_EQUIVALENCE_INSPECTED_ELEMENT_PAIR?  { get }
  var EXTREME_INSTANCES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTREME_INSTANCE>/*[1:
    nil]*/ )?  { get }
  var EXIT_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[1:nil]*/ )?  { get }
  var OFFSET_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var REPRESENTED_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK?  { get }
  var REPRESENTED_TOPOLOGY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sKINEMATIC_TOPOLOGY_REPRESENTATION_SELECT?  { get }
  var POINT_INDEX: SDAI.INTEGER?  { get }
  var UNCERTAINTY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUNCERTAINTY_MEASURE_WITH_UNIT>
    /*[1:nil]*/ )?  { get }
  var CONE_BASE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var VALUE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMEASURE_VALUE?  { get }
  var ASSIGNED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATED_PART_RELATIONSHIP?  { get }
  var PERMANENT_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var LOCATION: (SDAI.LIST_UNIQUE<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNEXT_ASSEMBLY_USAGE_OCCURRENCE>/*[1:nil]*/ )?  { get }
  var DIR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { get }
  var ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var COLLECTED_TEXT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTEXT_OR_CHARACTER>/*[2:nil]*/ )?  { get }
  var ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var PLACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { get }
  var ACTUAL_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var BASIS_FACE_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE?  { get }
  var MAPPING_SOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_MAP?  { get }
  var FOCAL_DIST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var RELATING_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { get }
  var RADIUS1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var PERSPECTIVE_OF_VOLUME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVIEW_VOLUME?  { get }
  var RADIUS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { get }
  var MAPPING_TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM?  { get }
  var POINT_3: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var RELATED_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { get }
  var POINT_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var POINT_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var KNOT_W_UPPER: SDAI.INTEGER?  { get }
  var CHILDREN: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTESSELLATED_ITEM>/*[1:nil]*/ )?  { get }
  var RELATING_REPRESENTATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sORIENTATION_BASIS_SELECT?  { get }
  var ASSIGNED_ORGANIZATIONAL_PROJECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT?  { get }
  var VIEW_DIRECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { get }
  var PREFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { get }
  var PARENT_SOLID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSOLID_MODEL?  { get }
  var POINT_4: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { get }
  var REPRESENTED_MECHANISM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMECHANISM_REPRESENTATION?  { get }
  var ACTUAL_POINT_ON_SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_SURFACE?  { get }
  var NEGATIVE_DIRECTION: SDAI.BOOLEAN?  { get }
  var PREDECESSOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var FIRST_OPERAND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBOOLEAN_OPERAND?  { get }
  var ACTUAL_POINT_ON_SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_SURFACE?  { get }
  var EXTRUSION_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { get }
  var COMPARING_ELEMENT_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  { get }
  var VOIDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORIENTED_CLOSED_SHELL>/*[1:nil]*/ )?  { get }
  var CONE_APEX_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { get }
  var POLYGON: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT>/*[3:nil]*/ )?  { get }
  var U_SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { get }
  var PRODUCT_DESIGN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { get }
  var DIM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDIMENSION_COUNT?  { get }
  var LINE_STRIPS: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ >/*[1:nil]*/ )?  { get }
  var SMALL_VECTOR_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { get }
  var APPLIED_VALUES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_REPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { get }
  var ASSIGNED_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { get }
  var FORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
  var FONT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sFONT_SELECT?  { get }
}

public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sEVIDENCE_ITEM__subtype: 
  AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sEVIDENCE_ITEM__type, SDAIDefinedType
where Supertype: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sEVIDENCE_ITEM__type
{}

public extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sEVIDENCE_ITEM__subtype {
  //MARK: CONSTRUCTORS
  init?(possiblyFrom complex: SDAI.ComplexEntity?) {
    self.init(fundamental: FundamentalType(possiblyFrom: complex))
  }

  init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?) {
    self.init(fundamental: FundamentalType(possiblyFrom: underlyingType))
  }

  init?<G: SDAIGenericType>(fromGeneric generic: G?) {
    self.init(fundamental: FundamentalType.convert(fromGeneric: generic))
  }

  //MARK: GROUP REFERENCES
  var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT? { rep.super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT }
  var super_eORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION_ASSIGNMENT? { rep.super_eORGANIZATION_ASSIGNMENT }
  var super_eREPRESENTATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION? { rep.super_eREPRESENTATION }
  var super_eEFFECTIVITY_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY_ASSIGNMENT? { rep.super_eEFFECTIVITY_ASSIGNMENT }
  var super_eAPPLIED_CERTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CERTIFICATION_ASSIGNMENT? { rep.super_eAPPLIED_CERTIFICATION_ASSIGNMENT }
  var super_ePROPERTY_DEFINITION_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION_REPRESENTATION? { rep.super_ePROPERTY_DEFINITION_REPRESENTATION }
  var super_ePERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON? { rep.super_ePERSON }
  var super_eSTATE_TYPE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTATE_TYPE? { rep.super_eSTATE_TYPE }
  var super_eMEASURE_REPRESENTATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_REPRESENTATION_ITEM? { rep.super_eMEASURE_REPRESENTATION_ITEM }
  var super_eIDENTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT? { rep.super_eIDENTIFICATION_ASSIGNMENT }
  var super_ePROPERTY_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION? { rep.super_ePROPERTY_DEFINITION }
  var super_eSTRUCTURED_MESSAGE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE? { rep.super_eSTRUCTURED_MESSAGE }
  var super_eVALIDATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVALIDATION? { rep.super_eVALIDATION }
  var super_eVALUE_REPRESENTATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVALUE_REPRESENTATION_ITEM? { rep.super_eVALUE_REPRESENTATION_ITEM }
  var super_eGROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP? { rep.super_eGROUP }
  var super_eAPPLICATION_CONTEXT_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLICATION_CONTEXT_ELEMENT? { rep.super_eAPPLICATION_CONTEXT_ELEMENT }
  var super_eREPRESENTATION_CONTEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_CONTEXT? { rep.super_eREPRESENTATION_CONTEXT }
  var super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT? { rep.super_eAPPLIED_SECURITY_CLASSIFICATION_ASSIGNMENT }
  var super_eANALYSIS_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANALYSIS_ASSIGNMENT? { rep.super_eANALYSIS_ASSIGNMENT }
  var super_eAPPLIED_EFFECTIVITY_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EFFECTIVITY_ASSIGNMENT? { rep.super_eAPPLIED_EFFECTIVITY_ASSIGNMENT }
  var super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP? { rep.super_ePRODUCT_DEFINITION_FORMATION_RELATIONSHIP }
  var super_eCONTRACT_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT_ASSIGNMENT? { rep.super_eCONTRACT_ASSIGNMENT }
  var super_eDATE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_ASSIGNMENT? { rep.super_eDATE_ASSIGNMENT }
  var super_ePERSON_AND_ORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION_ASSIGNMENT? { rep.super_ePERSON_AND_ORGANIZATION_ASSIGNMENT }
  var super_eACTION_PROPERTY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY? { rep.super_eACTION_PROPERTY }
  var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_IDENTIFICATION_ASSIGNMENT? { rep.super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT }
  var super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_INEFFECTIVITY_ASSIGNMENT? { rep.super_eAPPLIED_INEFFECTIVITY_ASSIGNMENT }
  var super_eORGANIZATIONAL_PROJECT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT_ASSIGNMENT? { rep.super_eORGANIZATIONAL_PROJECT_ASSIGNMENT }
  var super_ePRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION? { rep.super_ePRODUCT_DEFINITION }
  var super_eSECURITY_CLASSIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_ASSIGNMENT? { rep.super_eSECURITY_CLASSIFICATION_ASSIGNMENT }
  var super_eREPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM? { rep.super_eREPRESENTATION_ITEM }
  var super_eAPPLIED_CLASSIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CLASSIFICATION_ASSIGNMENT? { rep.super_eAPPLIED_CLASSIFICATION_ASSIGNMENT }
  var super_eDATE_AND_TIME_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME_ASSIGNMENT? { rep.super_eDATE_AND_TIME_ASSIGNMENT }
  var super_ePRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT? { rep.super_ePRODUCT }
  var super_eAPPLIED_CONTRACT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_CONTRACT_ASSIGNMENT? { rep.super_eAPPLIED_CONTRACT_ASSIGNMENT }
  var super_eMEASURE_WITH_UNIT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT? { rep.super_eMEASURE_WITH_UNIT }
  var super_eVERIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERIFICATION? { rep.super_eVERIFICATION }
  var super_ePRODUCT_DEFINITION_FORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION? { rep.super_ePRODUCT_DEFINITION_FORMATION }
  var super_eACTION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_ASSIGNMENT? { rep.super_eACTION_ASSIGNMENT }
  var super_eAPPROVAL_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_ASSIGNMENT? { rep.super_eAPPROVAL_ASSIGNMENT }
  var super_eCERTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION_ASSIGNMENT? { rep.super_eCERTIFICATION_ASSIGNMENT }
  var super_eACTION_PROPERTY_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY_REPRESENTATION? { rep.super_eACTION_PROPERTY_REPRESENTATION }
  var super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT? { rep.super_eAPPLIED_ORGANIZATIONAL_PROJECT_ASSIGNMENT }
  var super_eAPPLIED_ORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ORGANIZATION_ASSIGNMENT? { rep.super_eAPPLIED_ORGANIZATION_ASSIGNMENT }
  var super_eCLASSIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLASSIFICATION_ASSIGNMENT? { rep.super_eCLASSIFICATION_ASSIGNMENT }
  var super_eAPPLIED_APPROVAL_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_APPROVAL_ASSIGNMENT? { rep.super_eAPPLIED_APPROVAL_ASSIGNMENT }
  var super_ePERSON_AND_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION? { rep.super_ePERSON_AND_ORGANIZATION }
  var super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT? { rep.super_eAPPLIED_EVENT_OCCURRENCE_ASSIGNMENT }
  var super_ePRODUCT_DEFINITION_CONTEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_CONTEXT? { rep.super_ePRODUCT_DEFINITION_CONTEXT }
  var super_ePRODUCT_DEFINITION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP? { rep.super_ePRODUCT_DEFINITION_RELATIONSHIP }
  var super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT? { rep.super_eAPPLIED_PERSON_AND_ORGANIZATION_ASSIGNMENT }
  var super_eAPPLIED_ACTION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_ASSIGNMENT? { rep.super_eAPPLIED_ACTION_ASSIGNMENT }
  var super_ePRODUCT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_RELATIONSHIP? { rep.super_ePRODUCT_RELATIONSHIP }
  var super_eEVENT_OCCURRENCE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE_ASSIGNMENT? { rep.super_eEVENT_OCCURRENCE_ASSIGNMENT }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var RANGE_ON_SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { rep.RANGE_ON_SURFACE_1 }
  var STYLE_CONTEXT: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSTYLE_CONTEXT_SELECT>/*[1:
    nil]*/ )?  { rep.STYLE_CONTEXT }
  var RANGE_ON_SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { rep.RANGE_ON_SURFACE_2 }
  var SLOT_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SLOT_WIDTH }
  var END_EXIT_FACES: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[0:
    nil]*/ >/*[2:2]*/ )?  { rep.END_EXIT_FACES }
  var CONCENTRATION_EXPONENT: SDAI.REAL?  { rep.CONCENTRATION_EXPONENT }
  var INDIRECTLY_PICKED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { rep.INDIRECTLY_PICKED_ITEMS }
  var RANGE_ON_PAIR_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { rep.RANGE_ON_PAIR_CURVE }
  var REPLICATE_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { rep.REPLICATE_COUNT }
  var ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ROTATION_ANGLE }
  var ASSIGNED_SECURITY_CLASSIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION?  { rep.ASSIGNED_SECURITY_CLASSIFICATION }
  var CFS_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE>/*[1:nil]*/ )?  { rep.CFS_FACES }
  var CONTAINER: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_VIEW>/*[1:nil]*/ )?  { rep.CONTAINER }
  var REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { rep.REPRESENTATION }
  var CTRIANGLES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[10:10]*/ >/*[1:nil]*/ )?  { rep.CTRIANGLES }
  var RADIUS_LIST: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[2:
    nil]*/ )?  { rep.RADIUS_LIST }
  var CLOSED_INTERPOLATION: SDAI.LOGICAL { rep.CLOSED_INTERPOLATION }
  var DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.DESCRIPTION }
  var ASSIGNED_EVENT_OCCURRENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { rep.ASSIGNED_EVENT_OCCURRENCE }
  var ACCURACY_TYPES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ACCURACY_TYPE_NAME>/*[0:
    nil]*/ )?  { rep.ACCURACY_TYPES }
  var ANGULAR_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ANGULAR_SPACING }
  var OFFSET1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.OFFSET1 }
  var ACTUAL_POINT_ON_CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_CURVE?  { rep.ACTUAL_POINT_ON_CURVE_2 }
  var FLOOR_BLEND_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.FLOOR_BLEND_RADIUS }
  var GENERALISED_MAJOR_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.GENERALISED_MAJOR_RADIUS }
  var LEAF: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { rep.LEAF }
  var OFFSET2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.OFFSET2 }
  var NO_OF_BYTES: SDAI.INTEGER?  { rep.NO_OF_BYTES }
  var MIDDLE_NAMES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { rep.MIDDLE_NAMES }
  var CURVE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.CURVE_1 }
  var MAJOR_ORIENTATION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.MAJOR_ORIENTATION_BASIS }
  var BASE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sGENERALIZED_SURFACE_SELECT?  { rep.BASE_ELEMENT }
  var CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.CURVE_2 }
  var CONTEXT_IDENTIFIER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.CONTEXT_IDENTIFIER }
  var CONTENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDRAUGHTING_CALLOUT_ELEMENT>/*[1:
    nil]*/ )?  { rep.CONTENTS }
  var VSENSE: SDAI.BOOLEAN?  { rep.VSENSE }
  var START_OF_NEXT_HATCH_LINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eONE_DIRECTION_REPEAT_FACTOR?  { rep.START_OF_NEXT_HATCH_LINE }
  var CURVE_FORM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nB_SPLINE_CURVE_FORM?  { rep.CURVE_FORM }
  var OVER_RIDDEN_STYLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTYLED_ITEM?  { rep.OVER_RIDDEN_STYLE }
  var MEASURED_VALUE_FOR_INSPECTED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sEQUIVALENCE_MEASURED_VALUE_SELECT?  { rep.MEASURED_VALUE_FOR_INSPECTED_ELEMENT }
  var TRANSFORMATION_OPERATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PAIR?  { rep.TRANSFORMATION_OPERATOR }
  var ASSIGNED_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE?  { rep.ASSIGNED_DATE }
  var RADIAL_ALIGNMENT: SDAI.BOOLEAN?  { rep.RADIAL_ALIGNMENT }
  var HATCH_LINE_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.HATCH_LINE_ANGLE }
  var SUFFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { rep.SUFFIX_TITLES }
  var CONSTRAINED_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { rep.CONSTRAINED_ELEMENTS }
  var TANGENT_CONTACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTANGENT_CONTACT_TYPE?  { rep.TANGENT_CONTACT }
  var SEGMENT_RADII: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[1:
    SEGMENTS]*/ )?  { rep.SEGMENT_RADII }
  var REALIZED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.REALIZED_PRODUCT }
  var DEPENDENT_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_ENVIRONMENT?  { rep.DEPENDENT_ENVIRONMENT }
  var LEFT_OFFSET: SDAI.BOOLEAN?  { rep.LEFT_OFFSET }
  var PATCHES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE_PATCH>/*[1:nil]*/ )?  { rep.PATCHES }
  var REPEAT_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { rep.REPEAT_FACTOR }
  var ROW_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.ROW_SPACING }
  var TIP_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.TIP_RADIUS }
  var DETECTED_DIFFERENCE_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_DETECTED_DIFFERENCE_TYPE_NAME>/*[0:nil]*/ )?  { rep.DETECTED_DIFFERENCE_TYPES }
  var HATCH_LINE_APPEARANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE_STYLE?  { rep.HATCH_LINE_APPEARANCE }
  var SWEPT_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.SWEPT_CURVE }
  var NEXT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNEXT_ASSEMBLY_USAGE_OCCURRENCE?  { rep.NEXT_USAGE }
  var ARC_LENGTH_DISTANCE_FACTOR: SDAI.REAL?  { rep.ARC_LENGTH_DISTANCE_FACTOR }
  var ROLE: SDAI.GENERIC_ENTITY?  { rep.ROLE }
  var PARENT_PT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { rep.PARENT_PT }
  var OFFSET_DIRECTION_CONSTRAINED: SDAI.BOOLEAN?  { rep.OFFSET_DIRECTION_CONSTRAINED }
  var THICKNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.THICKNESS }
  var N_U: SDAI.INTEGER?  { rep.N_U }
  var DIRECTION_OF_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.DIRECTION_OF_AXIS }
  var TEE_SECTION_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.TEE_SECTION_WIDTH }
  var FILLET_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.FILLET_RADIUS }
  var SCANNER_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.SCANNER_LOCATION }
  var N_V: SDAI.INTEGER?  { rep.N_V }
  var FIRST_TRIM_INTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRIM_INTENT?  { rep.FIRST_TRIM_INTENT }
  var OPERATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nBOOLEAN_OPERATOR?  { rep.OPERATOR }
  var SUBSKETCH_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_ELEMENT_SELECT>
    /*[1:nil]*/ )?  { rep.SUBSKETCH_ELEMENTS }
  var X_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { rep.X_SCALE }
  var SCANNED_POINTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSCANNED_DATA_ITEM>/*[1:nil]*/ )?  { rep.SCANNED_POINTS }
  var ENCLOSURE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBOX_DOMAIN?  { rep.ENCLOSURE }
  var REFERENCE_DESIGNATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.REFERENCE_DESIGNATOR }
  var FIXED_ATTRIBUTES: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINSTANCE_ATTRIBUTE_REFERENCE>/*[1:nil]*/ )?  { rep.FIXED_ATTRIBUTES }
  var PARAMETER_DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.PARAMETER_DESCRIPTION }
  var COMPARING_SPECIFIED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { rep.COMPARING_SPECIFIED_ELEMENTS }
  var SECOND_TRIM_INTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRIM_INTENT?  { rep.SECOND_TRIM_INTENT }
  var SHAPE_CRITERIA: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eA3MA_ASSEMBLY_AND_SHAPE_CRITERIA_RELATIONSHIP>/*[1:nil]*/ )?  { rep.SHAPE_CRITERIA }
  var SECOND_OPERAND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBOOLEAN_OPERAND?  { rep.SECOND_OPERAND }
  var TRIM_1: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTRIMMING_SELECT>/*[1:2]*/ )?  { rep.TRIM_1 }
  var RANGE_ON_CURVE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { rep.RANGE_ON_CURVE_2 }
  var STATUS: SDAI.STRING?  { rep.STATUS }
  var RELATED_PRODUCT_DEFINITION_FORMATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.RELATED_PRODUCT_DEFINITION_FORMATION }
  var CHARACTER_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANAR_EXTENT?  { rep.CHARACTER_BOX }
  var INNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.INNER_RADIUS }
  var PROTRUSION_HEIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.PROTRUSION_HEIGHT }
  var TURN_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.TURN_ANGLE }
  var REGION_COLOUR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLOUR?  { rep.REGION_COLOUR }
  var TRIM_2: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTRIMMING_SELECT>/*[1:2]*/ )?  { rep.TRIM_2 }
  var RANGE_ON_CURVE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTRIMMED_CURVE?  { rep.RANGE_ON_CURVE_1 }
  var CONSTITUENT_AMOUNT: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_PRODUCT_COMPOSITION_VALUE>/*[1:nil]*/ )?  { rep.CONSTITUENT_AMOUNT }
  var PATH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTEXT_PATH?  { rep.PATH }
  var TILES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sFILL_AREA_STYLE_TILE_SHAPE_SELECT>/*[
    1:nil]*/ )?  { rep.TILES }
  var INSPECTED_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_ELEMENT_SELECT>
    /*[1:nil]*/ )?  { rep.INSPECTED_ELEMENTS }
  var ASSIGNED_APPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL?  { rep.ASSIGNED_APPROVAL }
  var UPPER_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE?  { rep.UPPER_USAGE }
  var ROW_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { rep.ROW_COUNT }
  var POCKET_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.POCKET_LENGTH }
  var TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSYMBOL_TARGET?  { rep.TARGET }
  var EXTERNAL_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { rep.EXTERNAL_POINT }
  var GEAR_RATIO: SDAI.REAL?  { rep.GEAR_RATIO }
  var EXTERNAL_GROOVE: SDAI.BOOLEAN?  { rep.EXTERNAL_GROOVE }
  var RANKING_RATIONALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.RANKING_RATIONALE }
  var REPLICATED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMODIFIED_SOLID_WITH_PLACED_CONFIGURATION?  { rep.REPLICATED_ELEMENT }
  var A: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.A }
  var PARENT_VOLUME_SET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_VOLUME_SET?  { rep.PARENT_VOLUME_SET }
  var SELECT_OUTER: SDAI.BOOLEAN?  { rep.SELECT_OUTER }
  var B: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.B }
  var PNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.PNT }
  var C: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.C }
  var V_SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { rep.V_SMOOTHNESS }
  var CLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.CLASS }
  var SCANNER_INFO: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSCANNER_PROPERTY>/*[1:nil]*/ )?  { rep.SCANNER_INFO }
  var SILHOUETTED_MODEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSURFACE_OR_SOLID_MODEL?  { rep.SILHOUETTED_MODEL }
  var SOURCES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLIGHT_SOURCE>/*[1:nil]*/ )?  { rep.SOURCES }
  var SENSE_AGREEMENT: SDAI.BOOLEAN?  { rep.SENSE_AGREEMENT }
  var EDGE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE?  { rep.EDGE_ELEMENT }
  var BASIS_VOLUME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME?  { rep.BASIS_VOLUME }
  var SWEPT_FACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE?  { rep.SWEPT_FACE }
  var LINK_REPRESENTATION_ASSOCIATIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePAIR_REPRESENTATION_RELATIONSHIP>/*[1:nil]*/ )?  { rep.LINK_REPRESENTATION_ASSOCIATIONS }
  var UPPER_LIMIT_ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.UPPER_LIMIT_ACTUAL_TRANSLATION_Z }
  var CM_LINK: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVARIATIONAL_CURRENT_REPRESENTATION_RELATIONSHIP?  { rep.CM_LINK }
  var ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.ACTUAL_TRANSLATION_Z }
  var LOWER_LIMIT_RACK_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.LOWER_LIMIT_RACK_DISPLACEMENT }
  var LOOP_VERTEX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { rep.LOOP_VERTEX }
  var LAST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.LAST_NAME }
  var T_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.T_START }
  var PTS_PER_SUBLIST: SDAI.INTEGER?  { rep.PTS_PER_SUBLIST }
  var END_CONDITIONS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBLEND_END_CONDITION_SELECT>
    /*[2:2]*/ )?  { rep.END_CONDITIONS }
  var DEFINED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.DEFINED_VERSION }
  var RELATED_MESSAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE?  { rep.RELATED_MESSAGE }
  var AXIS_POSITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS1_PLACEMENT?  { rep.AXIS_POSITION }
  var OF_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { rep.OF_COLLECTION }
  var SBWM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSHELL>/*[1:nil]*/ )?  { rep.SBWM_BOUNDARY }
  var KNOT_VALUES: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tSPLINE_KNOT_VALUES?  { rep.KNOT_VALUES }
  var PITCH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.PITCH }
  var PERMANENT_AGGREGATE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.PERMANENT_AGGREGATE_ID }
  var TILING_PATTERN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTWO_DIRECTION_REPEAT_FACTOR?  { rep.TILING_PATTERN }
  var PCURVE_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePCURVE?  { rep.PCURVE_REFERENCE }
  var OUTLINES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_FILL_AREA>/*[1:nil]*/ )?  { rep.OUTLINES }
  var REPRESENTATIONS_IN_CONTEXT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION>
    /*[1:nil]*/ )?  { rep.REPRESENTATIONS_IN_CONTEXT }
  var COMPARED_SPECIFIED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { rep.COMPARED_SPECIFIED_ELEMENTS }
  var APPLIES_TO_PAIR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PAIR?  { rep.APPLIES_TO_PAIR }
  var UPPER_LIMIT_ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_ACTUAL_ROTATION_1 }
  var PRODUCT_DESIGN_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.PRODUCT_DESIGN_VERSION }
  var CONICAL_TRANSITIONS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONICAL_STEPPED_HOLE_TRANSITION>/*[1:nil]*/ )?  { rep.CONICAL_TRANSITIONS }
  var OF_SHAPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATED_PART_RELATIONSHIP?  { rep.OF_SHAPE }
  var RANKING: SDAI.INTEGER?  { rep.RANKING }
  var REQUIRED_GENERAL_ACCURACY: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  { rep.REQUIRED_GENERAL_ACCURACY }
  var REPORT_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { rep.REPORT_VALUE }
  var SYMBOL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_SYMBOL_OCCURRENCE?  { rep.SYMBOL }
  var U1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.U1 }
  var BEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.BEVEL }
  var INNER_BOUNDARY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCOMPOUND_INNER_AREA_BOUNDARY?  { rep.INNER_BOUNDARY }
  var CLOSED_PATH: SDAI.LOGICAL { rep.CLOSED_PATH }
  var MAKE_OR_BUY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nSOURCE?  { rep.MAKE_OR_BUY }
  var U2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.U2 }
  var MEASURED_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMEASURED_VALUE_SELECT?  { rep.MEASURED_VALUE }
  var POINT_COORDINATES: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  { rep.POINT_COORDINATES }
  var SKEWNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.SKEWNESS }
  var TILING_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { rep.TILING_SCALE }
  var VOLUME_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME?  { rep.VOLUME_GEOMETRY }
  var PROTRUSION_DRAFT_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.PROTRUSION_DRAFT_ANGLE }
  var USED_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { rep.USED_REPRESENTATION }
  var LOCAL_ORIGIN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.LOCAL_ORIGIN }
  var REFERENCE_ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[0:
    nil]*/ )?  { rep.REFERENCE_ELEMENTS }
  var SCL: SDAI.REAL?  { rep.SCL }
  var UNITS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT>/*[1:nil]*/ )?  { rep.UNITS }
  var QUALIFIERS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sVALUE_QUALIFIER>/*[1:nil]*/ )?  { rep.QUALIFIERS }
  var PATH_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePATH?  { rep.PATH_ELEMENT }
  var PLANE_OF_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANE?  { rep.PLANE_OF_POINT }
  var PATTERN_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.PATTERN_START }
  var TRANSFORM_ITEM_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sRIGID_PLACEMENT?  { rep.TRANSFORM_ITEM_1 }
  var TEST_POINT_DISTANCE_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.TEST_POINT_DISTANCE_TOLERANCE }
  var PROTRUSION_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.PROTRUSION_LENGTH }
  var ASSOCIATED_SHAPE_REPRESENTATION: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION_ASSOCIATION>/*[0:1]*/ )?  { rep.ASSOCIATED_SHAPE_REPRESENTATION }
  var CONSTRAINING_EXPRESSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXPRESSION?  { rep.CONSTRAINING_EXPRESSION }
  var SECOND_ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.SECOND_ROTATION_ANGLE }
  var COLOUR_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nCOLOUR_TYPE_ENUM?  { rep.COLOUR_TYPE }
  var POINT_OF_REFERENCE_HATCH_LINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.POINT_OF_REFERENCE_HATCH_LINE }
  var COMPARING_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { rep.COMPARING_ELEMENTS }
  var TRANSFORM_ITEM_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sRIGID_PLACEMENT?  { rep.TRANSFORM_ITEM_2 }
  var LOWER_LIMIT_SECOND_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_SECOND_ROTATION }
  var POCKET_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.POCKET_RADIUS }
  var ASSIGNED_DATE_AND_TIME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME?  { rep.ASSIGNED_DATE_AND_TIME }
  var EDGE_LIST: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORIENTED_EDGE>/*[1:nil]*/ )?  { rep.EDGE_LIST }
  var SIZE_IN_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.SIZE_IN_X }
  var RADIUS_SECOND_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.RADIUS_SECOND_LINK }
  var THICKENED_FACE_LIST: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>
    /*[1:nil]*/ >/*[1:nil]*/ )?  { rep.THICKENED_FACE_LIST }
  var UPPER_LIMIT_FIRST_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_FIRST_ROTATION }
  var CRITERION_REPORT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_EQUIVALENCE_INSPECTION_CRITERION_REPORT?  { rep.CRITERION_REPORT }
  var SIZE_IN_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.SIZE_IN_Y }
  var CORNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.CORNER_RADIUS }
  var RELATING_PRODUCT_DEFINITION_FORMATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.RELATING_PRODUCT_DEFINITION_FORMATION }
  var ACTUAL_POINT_ON_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_CURVE?  { rep.ACTUAL_POINT_ON_CURVE }
  var RELATING_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.RELATING_VERSION }
  var INTENSITIES: (SDAI.LIST<SDAI.REAL>/*[1:nil]*/ )?  { rep.INTENSITIES }
  var LOWER_LIMIT_ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_ACTUAL_ROTATION_1 }
  var PARENT_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.PARENT_SURFACE }
  var RELATED_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { rep.RELATED_COLLECTION }
  var Y_SCALE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_RATIO_MEASURE?  { rep.Y_SCALE }
  var CONFIGURED_MECHANISM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMECHANISM_REPRESENTATION?  { rep.CONFIGURED_MECHANISM }
  var ACTUAL_PLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.ACTUAL_PLACEMENT }
  var LOWER_LIMIT_ACTUAL_TRANSLATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.LOWER_LIMIT_ACTUAL_TRANSLATION_Z }
  var USENSE: SDAI.BOOLEAN?  { rep.USENSE }
  var ASSIGNED_CLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { rep.ASSIGNED_CLASS }
  var DISTANCE_FROM_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.DISTANCE_FROM_START }
  var SURFACE_FORM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nB_SPLINE_SURFACE_FORM?  { rep.SURFACE_FORM }
  var FIRST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.FIRST_NAME }
  var COMPOSITION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.COMPOSITION_BASIS }
  var ANNOTATED_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_CURVE_OCCURRENCE?  { rep.ANNOTATED_CURVE }
  var SEMI_IMAG_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SEMI_IMAG_AXIS }
  var EQUIVALENT_POINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.EQUIVALENT_POINT }
  var PHI: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.PHI }
  var THE_CALLOUT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDRAUGHTING_CALLOUT?  { rep.THE_CALLOUT }
  var DOCUMENTATION_IDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT>/*[1:nil]*/ )?  { rep.DOCUMENTATION_IDS }
  var SCANNER_IDENTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.SCANNER_IDENTIFICATION }
  var SLOT_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SLOT_LENGTH }
  var KNOT_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.KNOT_MULTIPLICITIES }
  var PARENT_FACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE?  { rep.PARENT_FACE }
  var RIGHT_OFFSET_DISTANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.RIGHT_OFFSET_DISTANCE }
  var RELATION_TYPE: SDAI.STRING?  { rep.RELATION_TYPE }
  var BASELINE_RATIO: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tRATIO_MEASURE?  { rep.BASELINE_RATIO }
  var ASSIGNED_CERTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION?  { rep.ASSIGNED_CERTIFICATION }
  var GENERALISED_MINOR_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.GENERALISED_MINOR_RADIUS }
  var ASSIGNED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { rep.ASSIGNED_ACTION }
  var V2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.V2 }
  var GROOVE_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.GROOVE_WIDTH }
  var LINE_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.LINE_SPACING }
  var TREE_ROOT_EXPRESSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCSG_SELECT?  { rep.TREE_ROOT_EXPRESSION }
  var POINT_PARAMETER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.POINT_PARAMETER }
  var BASIS_EDGE_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE?  { rep.BASIS_EDGE_CURVE }
  var POCKET_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.POCKET_WIDTH }
  var PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_PROPERTY?  { rep.PROPERTY }
  var MINOR_ORIENTATION_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.MINOR_ORIENTATION_BASIS }
  var BASE_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.BASE_CURVE }
  var FIXED_CONSTITUENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATIVE_SHAPE_REPRESENTATION?  { rep.FIXED_CONSTITUENT }
  var V1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.V1 }
  var COLOUR_INDICES: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[3:3]*/ >/*[1:nil]*/ )?  { rep.COLOUR_INDICES }
  var HELICAL_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.HELICAL_ANGLE }
  var LITERAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPRESENTABLE_TEXT?  { rep.LITERAL }
  var CLOTHOID_CONSTANT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.CLOTHOID_CONSTANT }
  var PAIR_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.PAIR_SURFACE }
  var THE_PERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON?  { rep.THE_PERSON }
  var BINARY_VALUE: SDAI.BINARY?  { rep.BINARY_VALUE }
  var PARENT_FACE_SET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_FACE_SET?  { rep.PARENT_FACE_SET }
  var SPECIFICATION: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION>/*[1:nil]*/ )?  { rep.SPECIFICATION }
  var FILL_STYLE_TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { rep.FILL_STYLE_TARGET }
  var POSITIVE_SIDE: SDAI.BOOLEAN?  { rep.POSITIVE_SIDE }
  var PLANNED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.PLANNED_PRODUCT }
  var STYLED_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eANNOTATION_CURVE_OCCURRENCE?  { rep.STYLED_CURVE }
  var AXIS3: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.AXIS3 }
  var PICKED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[1:nil]*/ )?  { rep.PICKED_ITEMS }
  var COLOURED_COORDINATE_VALUES: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOORDINATES_LIST?  { rep.COLOURED_COORDINATE_VALUES }
  var AXIS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.AXIS2 }
  var AXIS1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.AXIS1 }
  var ASSIGNED_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.ASSIGNED_ID }
  var ARC_LENGTH_SEPARATION_FACTOR: SDAI.REAL?  { rep.ARC_LENGTH_SEPARATION_FACTOR }
  var OPEN_SHELL_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eOPEN_SHELL?  { rep.OPEN_SHELL_ELEMENT }
  var AUXILIARY_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAUXILIARY_GEOMETRIC_REPRESENTATION_ITEM>/*[0:nil]*/ )?  { rep.AUXILIARY_ELEMENTS }
  var REVISION_IDENTIFIER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.REVISION_IDENTIFIER }
  var SIZE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_SIZE?  { rep.SIZE }
  var BASE_SOLID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBASE_SOLID_SELECT?  { rep.BASE_SOLID }
  var DELETED_FACE_SET: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[1:nil]*/ )?  { rep.DELETED_FACE_SET }
  var DRAFTED_EDGES: (SDAI.LIST<SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE>/*[1:nil]*/ >
    /*[2:nil]*/ )?  { rep.DRAFTED_EDGES }
  var SUCCESSOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.SUCCESSOR }
  var UPPER_INDEX_ON_CONTROL_POINTS: SDAI.INTEGER?  { rep.UPPER_INDEX_ON_CONTROL_POINTS }
  var VERTEX_SHELL_EXTENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX_LOOP?  { rep.VERTEX_SHELL_EXTENT }
  var ASSESSMENT_THRESHOLD_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eA3MA_EQUIVALENCE_CRITERION_ASSESSMENT_THRESHOLD_RELATIONSHIP?  { rep.ASSESSMENT_THRESHOLD_2 }
  var COMPARED_ELEMENT_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  { rep.COMPARED_ELEMENT_TYPES }
  var UPPER_INDEX_ON_KNOTS: SDAI.INTEGER?  { rep.UPPER_INDEX_ON_KNOTS }
  var OFFSET_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { rep.OFFSET_ANGLE }
  var TESSELLATION_ACCURACY_PARAMETERS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTESSELLATION_ACCURACY_PARAMETER_ITEM>/*[1:nil]*/ )?  { rep.TESSELLATION_ACCURACY_PARAMETERS }
  var LEFT_OFFSET_DISTANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.LEFT_OFFSET_DISTANCE }
  var SEGMENT_DEPTHS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE>/*[
    1:SEGMENTS]*/ )?  { rep.SEGMENT_DEPTHS }
  var INPUT_SKEW_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.INPUT_SKEW_ANGLE }
  var SKEW_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.SKEW_ANGLE }
  var RADIUS_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.RADIUS_VALUE }
  var COLLAR_DEPTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.COLLAR_DEPTH }
  var UNIT_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { rep.UNIT_COMPONENT }
  var ASSOCIATED_GEOMETRY: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPCURVE_OR_SURFACE>/*[1:
    2]*/ )?  { rep.ASSOCIATED_GEOMETRY }
  var REPRESENTED_JOINTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_JOINT>/*[1:nil]*/ )?  { rep.REPRESENTED_JOINTS }
  var CLOSED_SHELL_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLOSED_SHELL?  { rep.CLOSED_SHELL_ELEMENT }
  var ANGLE_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ANGLE_VALUE }
  var INDIVIDUAL_PRODUCT: SDAI.GENERIC_ENTITY?  { rep.INDIVIDUAL_PRODUCT }
  var BOUND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOOP?  { rep.BOUND }
  var DIRECTION_RATIOS: (SDAI.LIST<SDAI.REAL>/*[2:3]*/ )?  { rep.DIRECTION_RATIOS }
  var CLOSED_ENDS: (SDAI.LIST<SDAI.LOGICAL>/*[2:2]*/ )?  { rep.CLOSED_ENDS }
  var FBSM_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_FACE_SET>/*[1:nil]*/ )?  { rep.FBSM_FACES }
  var THE_DRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDERS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDER>/*[0:
    1]*/ )?  { rep.THE_DRAUGHTING_MODEL_ITEM_ASSOCIATION_WITH_PLACEHOLDERS }
  var BASE_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.BASE_SURFACE }
  var PARENT_CURVE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.PARENT_CURVE }
  var RELATED_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { rep.RELATED_PRODUCT }
  var COMPARED_ELEMENTS: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sINSPECTED_EQUIVALENCE_ELEMENT_SELECT>/*[1:nil]*/ )?  { rep.COMPARED_ELEMENTS }
  var EDGE_END: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { rep.EDGE_END }
  var BOX_HEIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.BOX_HEIGHT }
  var VIEW_WINDOW: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANAR_BOX?  { rep.VIEW_WINDOW }
  var UPPER_LIMIT_ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_ACTUAL_ROTATION_Y }
  var UPPER_LIMIT_ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_ACTUAL_ROTATION_X }
  var LIFE_CYCLE_STAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.LIFE_CYCLE_STAGE }
  var UPPER_LIMIT_ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_ACTUAL_ROTATION_Z }
  var LINE_STRIP: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.LINE_STRIP }
  var GROOVE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.GROOVE_RADIUS }
  var ITEM_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCOMPOUND_ITEM_DEFINITION?  { rep.ITEM_ELEMENT }
  var EXTERNAL_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.EXTERNAL_SURFACE }
  var CVS_VOLUMES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVOLUME_WITH_FACES>/*[1:nil]*/ )?  { rep.CVS_VOLUMES }
  var SPHERE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SPHERE_RADIUS }
  var FIRST_ROTATION_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.FIRST_ROTATION_ANGLE }
  var PARAMETER_CURRENT_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMATHS_VALUE?  { rep.PARAMETER_CURRENT_VALUE }
  var RANGE_ON_PAIR_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eRECTANGULAR_TRIMMED_SURFACE?  { rep.RANGE_ON_PAIR_SURFACE }
  var JOINT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_JOINT?  { rep.JOINT }
  var ACTUAL_ROTATION_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ACTUAL_ROTATION_2 }
  var MEASURED_DATA_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_MEASURED_DATA_TYPE_NAME?  { rep.MEASURED_DATA_TYPE }
  var GAMMA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.GAMMA }
  var FIRST_OFFSET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.FIRST_OFFSET }
  var COORDINATE_SPACE_DIMENSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDIMENSION_COUNT?  { rep.COORDINATE_SPACE_DIMENSION }
  var OWNING_SKETCH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_TYPE_SELECT?  { rep.OWNING_SKETCH }
  var VIEW_WINDOW_CLIPPING: SDAI.BOOLEAN?  { rep.VIEW_WINDOW_CLIPPING }
  var W_UPPER: SDAI.INTEGER?  { rep.W_UPPER }
  var ACTUAL_ROTATION_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ACTUAL_ROTATION_1 }
  var CURVE_3D: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.CURVE_3D }
  var DRAFT_ANGLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE>/*[2:nil]*/ )?  { rep.DRAFT_ANGLES }
  var DETERMINATION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.DETERMINATION_METHOD }
  var LINE_STRIP_FACE2: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.LINE_STRIP_FACE2 }
  var UPPER_LIMIT_RACK_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.UPPER_LIMIT_RACK_DISPLACEMENT }
  var MAP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_MAP?  { rep.MAP }
  var GEOMETRIC_MODEL_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPATH_OR_COMPOSITE_CURVE?  { rep.GEOMETRIC_MODEL_LINK }
  var LINE_STRIP_FACE1: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.LINE_STRIP_FACE1 }
  var FACE_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.FACE_GEOMETRY }
  var FACE_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE?  { rep.FACE_ELEMENT }
  var BASE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.BASE_RADIUS }
  var LOWER_LIMIT_ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_ACTUAL_ROTATION_X }
  var RELATING_COLLECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION?  { rep.RELATING_COLLECTION }
  var VERTEX_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT?  { rep.VERTEX_GEOMETRY }
  var LOWER_LIMIT_ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_ACTUAL_ROTATION_Y }
  var COLUMN_COUNT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { rep.COLUMN_COUNT }
  var EDGE_LENGTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.EDGE_LENGTH }
  var LOWER_LIMIT_ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_ACTUAL_ROTATION_Z }
  var THICKNESS_LIST: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE>/*[1:nil]*/ )?  { rep.THICKNESS_LIST }
  var COLUMN_SPACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.COLUMN_SPACING }
  var PROTRUSION_CORNER_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.PROTRUSION_CORNER_RADIUS }
  var WIRE_SHELL_EXTENT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOOP>/*[1:nil]*/ )?  { rep.WIRE_SHELL_EXTENT }
  var MAGNITUDE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.MAGNITUDE }
  var CURVE_PLANE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLANE?  { rep.CURVE_PLANE }
  var SPREAD_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { rep.SPREAD_ANGLE }
  var SWEPT_AREA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE_BOUNDED_SURFACE?  { rep.SWEPT_AREA }
  var SCULPTURING_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sGENERALIZED_SURFACE_SELECT?  { rep.SCULPTURING_ELEMENT }
  var LOWER_LIMIT_FIRST_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.LOWER_LIMIT_FIRST_ROTATION }
  var ROOT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION?  { rep.ROOT }
  var STYLES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRESENTATION_STYLE_ASSIGNMENT>/*[0:
    nil]*/ )?  { rep.STYLES }
  var CONE_ANGLE1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.CONE_ANGLE1 }
  var PLACEMENT_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePLACEMENT?  { rep.PLACEMENT_START }
  var B_SPLINES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_B_SPLINE>/*[2:nil]*/ )?  { rep.B_SPLINES }
  var NOTABLE_INSTANCES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEQUIVALENCE_NOTABLE_INSTANCE>/*[1:nil]*/ )?  { rep.NOTABLE_INSTANCES }
  var ASSIGNED_CONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT?  { rep.ASSIGNED_CONTRACT }
  var THE_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { rep.THE_ORGANIZATION }
  var COLOUR_VALUES: (SDAI.LIST<SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tUNSIGNED_8_BIT_INTEGER>/*[3:4]*/ >/*[1:nil]*/ )?  { rep.COLOUR_VALUES }
  var CONE_ANGLE2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.CONE_ANGLE2 }
  var THICKNESS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.THICKNESS2 }
  var SCANNER_UNCERTAINTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SCANNER_UNCERTAINTY }
  var EBWM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONNECTED_EDGE_SET>/*[1:nil]*/ )?  { rep.EBWM_BOUNDARY }
  var W_B_SPLINES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_B_SPLINE>/*[8:nil]*/ )?  { rep.W_B_SPLINES }
  var SEMI_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.SEMI_AXIS }
  var ASSIGNED_PERSON_AND_ORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION?  { rep.ASSIGNED_PERSON_AND_ORGANIZATION }
  var FIXED_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.FIXED_REFERENCE }
  var RELATING_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { rep.RELATING_PRODUCT_DEFINITION }
  var STROKES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE>/*[1:nil]*/ )?  { rep.STROKES }
  var SECOND_OFFSET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tNON_NEGATIVE_LENGTH_MEASURE?  { rep.SECOND_OFFSET }
  var EDGE_START: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERTEX?  { rep.EDGE_START }
  var NPOINTS: SDAI.INTEGER?  { rep.NPOINTS }
  var W_DEGREE: SDAI.INTEGER?  { rep.W_DEGREE }
  var HIDDEN_LINE_SURFACE_REMOVAL: SDAI.BOOLEAN?  { rep.HIDDEN_LINE_SURFACE_REMOVAL }
  var MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.MULTIPLICITIES }
  var RELATED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.RELATED_VERSION }
  var ALPHA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ALPHA }
  var BETA: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.BETA }
  var SUBLISTS: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_CLOUD_DATASET>/*[2:nil]*/ )?  { rep.SUBLISTS }
  var OFFSET_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nPARALLEL_OFFSET_TYPE?  { rep.OFFSET_TYPE }
  var MIRROR_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sLINEAR_GEOMETRY_CONSTRAINT_ELEMENT?  { rep.MIRROR_ELEMENT }
  var SOURCE: SDAI.GENERIC_ENTITY?  { rep.SOURCE }
  var LIGHT_COLOUR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLOUR?  { rep.LIGHT_COLOUR }
  var EDGE_GEOMETRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCURVE?  { rep.EDGE_GEOMETRY }
  var LENGTH_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.LENGTH_VALUE }
  var PROTRUSION_WIDTH: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.PROTRUSION_WIDTH }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.ID }
  var APPLIED_GENERAL_ACCURACY: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_MEASUREMENT_ACCURACY>/*[1:nil]*/ )?  { rep.APPLIED_GENERAL_ACCURACY }
  var CONTEXT_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.CONTEXT_TYPE }
  var TRANSITION_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_INTEGER?  { rep.TRANSITION_NUMBER }
  var PROTRUSION_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.PROTRUSION_RADIUS }
  var RELATING_MESSAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSTRUCTURED_MESSAGE?  { rep.RELATING_MESSAGE }
  var SECOND_REPEAT_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { rep.SECOND_REPEAT_FACTOR }
  var SLOT_CENTRELINE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eBOUNDED_CURVE?  { rep.SLOT_CENTRELINE }
  var RADIUS_FIRST_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.RADIUS_FIRST_LINK }
  var SEMI_APEX_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_PLANE_ANGLE_MEASURE?  { rep.SEMI_APEX_ANGLE }
  var CONTEXT_OF_ITEMS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_CONTEXT?  { rep.CONTEXT_OF_ITEMS }
  var BLENDED_EDGES: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE_CURVE>/*[1:nil]*/ )?  { rep.BLENDED_EDGES }
  var SUPPRESSED_ITEMS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM>/*[0:
    nil]*/ )?  { rep.SUPPRESSED_ITEMS }
  var REP_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION?  { rep.REP_1 }
  var PARAMETER_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { rep.PARAMETER_UNIT }
  var REP_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION?  { rep.REP_2 }
  var SKETCH_BASIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSKETCH_BASIS_SELECT?  { rep.SKETCH_BASIS }
  var SBSM_BOUNDARY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSHELL>/*[1:nil]*/ )?  { rep.SBSM_BOUNDARY }
  var POINT_PARAMETER_W: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPARAMETER_VALUE?  { rep.POINT_PARAMETER_W }
  var OUTER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCLOSED_SHELL?  { rep.OUTER }
  var POSITION_COORDS: (SDAI.LIST<SDAI.LIST<SDAI.REAL>/*[3:3]*/ >/*[1:nil]*/ )?  { rep.POSITION_COORDS }
  var SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.SURFACE_2 }
  var EDGE_FUNCTION_LIST: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nBLEND_RADIUS_VARIATION_TYPE>/*[1:nil]*/ )?  { rep.EDGE_FUNCTION_LIST }
  var CES_EDGES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEDGE>/*[1:nil]*/ )?  { rep.CES_EDGES }
  var ASSOCIATED_LINK_REPRESENTATIONS_1: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  { rep.ASSOCIATED_LINK_REPRESENTATIONS_1 }
  var SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSURFACE?  { rep.SURFACE_1 }
  var CONSTRAINT_GROUP: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCONSTRAINT_GROUP_MEMBER>
    /*[2:nil]*/ )?  { rep.CONSTRAINT_GROUP }
  var VIEW_REFERENCE_SYSTEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.VIEW_REFERENCE_SYSTEM }
  var OF_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { rep.OF_PRODUCT }
  var REPRESENTATION_RELATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_PROPERTY_DEFINITION_REPRESENTATION?  { rep.REPRESENTATION_RELATION }
  var RELATED_REPRESENTATION_ITEM: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sANGLE_DIRECTION_REFERENCE_SELECT?  { rep.RELATED_REPRESENTATION_ITEM }
  var PRODUCT_DEFINITION_OCCURRENCE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.PRODUCT_DEFINITION_OCCURRENCE_ID }
  var ASSOCIATED_LINK_REPRESENTATIONS_2: (SDAI.SET<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK_REPRESENTATION>/*[1:nil]*/ )?  { rep.ASSOCIATED_LINK_REPRESENTATIONS_2 }
  var ASSIGNED_EFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY?  { rep.ASSIGNED_EFFECTIVITY }
  var INTERSECTED_MODEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSURFACE_OR_SOLID_MODEL?  { rep.INTERSECTED_MODEL }
  var IMPLICIT_OUTER: SDAI.BOOLEAN?  { rep.IMPLICIT_OUTER }
  var UPPER_LIMIT_SECOND_ROTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.UPPER_LIMIT_SECOND_ROTATION }
  var NEUTRAL_SKETCH_SEMANTICS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nCURVES_OR_AREA?  { rep.NEUTRAL_SKETCH_SEMANTICS }
  var W_MULTIPLICITIES: (SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ )?  { rep.W_MULTIPLICITIES }
  var SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { rep.SMOOTHNESS }
  var INSPECTED_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_EQUIVALENCE_INSPECTED_ELEMENT_PAIR?  { rep.INSPECTED_ELEMENT }
  var EXTREME_INSTANCES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTREME_INSTANCE>/*[1:
    nil]*/ )?  { rep.EXTREME_INSTANCES }
  var EXIT_FACES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE>/*[1:nil]*/ )?  { rep.EXIT_FACES }
  var OFFSET_VALUE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.OFFSET_VALUE }
  var REPRESENTED_LINK: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eKINEMATIC_LINK?  { rep.REPRESENTED_LINK }
  var REPRESENTED_TOPOLOGY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sKINEMATIC_TOPOLOGY_REPRESENTATION_SELECT?  { rep.REPRESENTED_TOPOLOGY }
  var POINT_INDEX: SDAI.INTEGER?  { rep.POINT_INDEX }
  var UNCERTAINTY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUNCERTAINTY_MEASURE_WITH_UNIT>
    /*[1:nil]*/ )?  { rep.UNCERTAINTY }
  var CONE_BASE_RADIUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.CONE_BASE_RADIUS }
  var ACTUAL_ROTATION_Z: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ACTUAL_ROTATION_Z }
  var VALUE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMEASURE_VALUE?  { rep.VALUE_COMPONENT }
  var ASSIGNED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATED_PART_RELATIONSHIP?  { rep.ASSIGNED_GROUP }
  var PERMANENT_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.PERMANENT_ID }
  var LOCATION: (SDAI.LIST_UNIQUE<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNEXT_ASSEMBLY_USAGE_OCCURRENCE>/*[1:nil]*/ )?  { rep.LOCATION }
  var DIR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { rep.DIR }
  var ACTUAL_ROTATION_X: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ACTUAL_ROTATION_X }
  var COLLECTED_TEXT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sTEXT_OR_CHARACTER>/*[2:nil]*/ )?  { rep.COLLECTED_TEXT }
  var ACTUAL_ROTATION_Y: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.ACTUAL_ROTATION_Y }
  var PLACING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAXIS2_PLACEMENT_3D?  { rep.PLACING }
  var ACTUAL_DISPLACEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.ACTUAL_DISPLACEMENT }
  var BASIS_FACE_SURFACE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eFACE_SURFACE?  { rep.BASIS_FACE_SURFACE }
  var MAPPING_SOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_MAP?  { rep.MAPPING_SOURCE }
  var FOCAL_DIST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.FOCAL_DIST }
  var RELATING_PRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { rep.RELATING_PRODUCT }
  var RADIUS1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.RADIUS1 }
  var PERSPECTIVE_OF_VOLUME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVIEW_VOLUME?  { rep.PERSPECTIVE_OF_VOLUME }
  var RADIUS2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPOSITIVE_LENGTH_MEASURE?  { rep.RADIUS2 }
  var MAPPING_TARGET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_ITEM?  { rep.MAPPING_TARGET }
  var POINT_3: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.POINT_3 }
  var RELATED_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { rep.RELATED_PRODUCT_DEFINITION }
  var POINT_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.POINT_2 }
  var POINT_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.POINT_1 }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.NAME }
  var KNOT_W_UPPER: SDAI.INTEGER?  { rep.KNOT_W_UPPER }
  var CHILDREN: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTESSELLATED_ITEM>/*[1:nil]*/ )?  { rep.CHILDREN }
  var RELATING_REPRESENTATION_ITEM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sORIENTATION_BASIS_SELECT?  { rep.RELATING_REPRESENTATION_ITEM }
  var ASSIGNED_ORGANIZATIONAL_PROJECT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATIONAL_PROJECT?  { rep.ASSIGNED_ORGANIZATIONAL_PROJECT }
  var VIEW_DIRECTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIRECTION?  { rep.VIEW_DIRECTION }
  var PREFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { rep.PREFIX_TITLES }
  var PARENT_SOLID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSOLID_MODEL?  { rep.PARENT_SOLID }
  var POINT_4: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT?  { rep.POINT_4 }
  var REPRESENTED_MECHANISM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMECHANISM_REPRESENTATION?  { rep.REPRESENTED_MECHANISM }
  var ACTUAL_POINT_ON_SURFACE_2: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_SURFACE?  { rep.ACTUAL_POINT_ON_SURFACE_2 }
  var NEGATIVE_DIRECTION: SDAI.BOOLEAN?  { rep.NEGATIVE_DIRECTION }
  var PREDECESSOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.PREDECESSOR }
  var FIRST_OPERAND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sBOOLEAN_OPERAND?  { rep.FIRST_OPERAND }
  var ACTUAL_POINT_ON_SURFACE_1: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePOINT_ON_SURFACE?  { rep.ACTUAL_POINT_ON_SURFACE_1 }
  var EXTRUSION_AXIS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVECTOR?  { rep.EXTRUSION_AXIS }
  var COMPARING_ELEMENT_TYPES: (SDAI.LIST<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nA3M_ELEMENT_TYPE_NAME>/*[1:nil]*/ )?  { rep.COMPARING_ELEMENT_TYPES }
  var VOIDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORIENTED_CLOSED_SHELL>/*[1:nil]*/ )?  { rep.VOIDS }
  var CONE_APEX_ANGLE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tPLANE_ANGLE_MEASURE?  { rep.CONE_APEX_ANGLE }
  var POLYGON: (SDAI.LIST_UNIQUE<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCARTESIAN_POINT>/*[3:nil]*/ )?  { rep.POLYGON }
  var U_SMOOTHNESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nTRANSITION_CODE?  { rep.U_SMOOTHNESS }
  var PRODUCT_DESIGN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT?  { rep.PRODUCT_DESIGN }
  var DIM: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDIMENSION_COUNT?  { rep.DIM }
  var LINE_STRIPS: (SDAI.LIST<SDAI.LIST<SDAI.INTEGER>/*[2:nil]*/ >/*[1:nil]*/ )?  { rep.LINE_STRIPS }
  var SMALL_VECTOR_TOLERANCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLENGTH_MEASURE?  { rep.SMALL_VECTOR_TOLERANCE }
  var APPLIED_VALUES: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_REPRESENTATION_ITEM>
    /*[1:nil]*/ )?  { rep.APPLIED_VALUES }
  var ASSIGNED_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { rep.ASSIGNED_ORGANIZATION }
  var FORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.FORMATION }
  var FONT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sFONT_SELECT?  { rep.FONT }
}

