/* file: same_as_item.swift 	 generated: Mon Jan  3 16:32:52 2022 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.1, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -TYPE DEFINITION in EXPRESS
/*
  TYPE same_as_item = SELECT
    ( address (*ENTITY*),
     applied_external_identification_assignment (*ENTITY*),
     approval (*ENTITY*),
     approval_status (*ENTITY*),
     attribute_language_assignment (*ENTITY*),
     calendar_date (*ENTITY*),
     certification (*ENTITY*),
     contract (*ENTITY*),
     coordinated_universal_time_offset (*ENTITY*),
     date_and_time (*ENTITY*),
     derived_unit (*ENTITY*),
     derived_unit_element (*ENTITY*),
     event_occurrence (*ENTITY*),
     external_source (*ENTITY*),
     general_property (*ENTITY*),
     information_right (*ENTITY*),
     information_usage_right (*ENTITY*),
     language (*ENTITY*),
     local_time (*ENTITY*),
     measure_with_unit (*ENTITY*),
     named_unit (*ENTITY*),
     organization (*ENTITY*),
     person (*ENTITY*),
     product_definition_context (*ENTITY*),
     representation_context (*ENTITY*),
     requirement_source (*ENTITY*),
     security_classification (*ENTITY*),
     time_interval (*ENTITY*),
     usage_association (*ENTITY*) );
  END_TYPE; -- same_as_item (line:5187 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES FOR SELECT
/*
  address (*ENTITY*):
  ATTR:  people: SET [1 : ?] OF person
  ATTR:  street: label
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  organizations: SET [1 : ?] OF organization
  ATTR:  telex_number: label
  ATTR:  facsimile_number: label
  ATTR:  region: label
  ATTR:  electronic_mail_address: label
  ATTR:  street_number: label
  ATTR:  internal_location: label
  ATTR:  postal_code: label
  ATTR:  postal_box: label
  ATTR:  url: identifier
  ATTR:  town: label
  ATTR:  country: label
  ATTR:  telephone_number: label
  ATTR:  name: label *** Multiple Select Case Sources ***

  applied_external_identification_assignment (*ENTITY*):
  ATTR:  role: identification_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF external_identification_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_id: identifier
  ATTR:  source: external_source

  approval (*ENTITY*):
  ATTR:  status: approval_status
  ATTR:  level: label

  approval_status (*ENTITY*):
  ATTR:  name: label *** Multiple Select Case Sources ***

  attribute_language_assignment (*ENTITY*):
  ATTR:  role: classification_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF attribute_language_item (AMBIGUOUS (SELECT LEVEL))
  ATTR:  attribute_name: label
  ATTR:  assigned_class: language

  calendar_date (*ENTITY*):
  ATTR:  month_component: month_in_year_number
  ATTR:  day_component: day_in_month_number
  ATTR:  year_component: year_number

  certification (*ENTITY*):
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  kind: certification_type *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  contract (*ENTITY*):
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  kind: contract_type *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  coordinated_universal_time_offset (*ENTITY*):
  ATTR:  hour_offset: INTEGER
  ATTR:  actual_minute_offset: INTEGER
  ATTR:  minute_offset: INTEGER
  ATTR:  sense: ahead_or_behind

  date_and_time (*ENTITY*):
  ATTR:  date_component: date
  ATTR:  time_component: local_time

  derived_unit (*ENTITY*):
  ATTR:  elements: SET [1 : ?] OF derived_unit_element
  ATTR:  name: label *** Multiple Select Case Sources ***

  derived_unit_element (*ENTITY*):
  ATTR:  exponent: REAL
  ATTR:  unit: named_unit

  event_occurrence (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  base_event: event_occurrence
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  offset: time_measure_with_unit

  external_source (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  source_id: source_item

  general_property (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  information_right (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  consequence: text
  ATTR:  name: label *** Multiple Select Case Sources ***

  information_usage_right (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  consequence: text
  ATTR:  name: label *** Multiple Select Case Sources ***

  language (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  local_time (*ENTITY*):
  ATTR:  second_component: second_in_minute
  ATTR:  zone: coordinated_universal_time_offset
  ATTR:  minute_component: minute_in_hour
  ATTR:  hour_component: hour_in_day

  measure_with_unit (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  unit_component: unit
  ATTR:  value_component: measure_value
  ATTR:  name: label *** Multiple Select Case Sources ***

  named_unit (*ENTITY*):
  ATTR:  dimensions: dimensional_exponents
  ATTR:  conversion_factor: measure_with_unit
  ATTR:  prefix: si_prefix
  ATTR:  associated_variable_environment: environment
  ATTR:  name: (AMBIGUOUS (CASE LEVEL))

  organization (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  person (*ENTITY*):
  ATTR:  middle_names: LIST [1 : ?] OF label
  ATTR:  suffix_titles: LIST [1 : ?] OF label
  ATTR:  last_name: label
  ATTR:  first_name: label
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  prefix_titles: LIST [1 : ?] OF label

  product_definition_context (*ENTITY*):
  ATTR:  items: SET [1 : ?] OF instance_usage_context_select (AMBIGUOUS (SELECT LEVEL))
  ATTR:  life_cycle_stage: label
  ATTR:  frame_of_reference: application_context
  ATTR:  name: label *** Multiple Select Case Sources ***

  representation_context (*ENTITY*):
  ATTR:  context_identifier: identifier
  ATTR:  representations_in_context: SET [1 : ?] OF representation
  ATTR:  units: SET [1 : ?] OF unit
  ATTR:  coordinate_space_dimension: dimension_count
  ATTR:  context_type: text
  ATTR:  parameter_unit: unit
  ATTR:  uncertainty: SET [1 : ?] OF uncertainty_measure_with_unit

  requirement_source (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  security_classification (*ENTITY*):
  ATTR:  security_level: security_classification_level
  ATTR:  purpose: text *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  time_interval (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  primary_bound: date_time_or_event_occurrence
  ATTR:  secondary_bound: date_time_or_event_occurrence
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  duration: time_measure_with_unit
  ATTR:  name: label *** Multiple Select Case Sources ***

  usage_association (*ENTITY*):
  ATTR:  related_method: information_usage_right
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  relating: information_usage_right
  ATTR:  related: information_usage_right
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  relating_method: information_usage_right

*/

/** SELECT type
- EXPRESS:
```express
  TYPE same_as_item = SELECT
    ( address (*ENTITY*),
     applied_external_identification_assignment (*ENTITY*),
     approval (*ENTITY*),
     approval_status (*ENTITY*),
     attribute_language_assignment (*ENTITY*),
     calendar_date (*ENTITY*),
     certification (*ENTITY*),
     contract (*ENTITY*),
     coordinated_universal_time_offset (*ENTITY*),
     date_and_time (*ENTITY*),
     derived_unit (*ENTITY*),
     derived_unit_element (*ENTITY*),
     event_occurrence (*ENTITY*),
     external_source (*ENTITY*),
     general_property (*ENTITY*),
     information_right (*ENTITY*),
     information_usage_right (*ENTITY*),
     language (*ENTITY*),
     local_time (*ENTITY*),
     measure_with_unit (*ENTITY*),
     named_unit (*ENTITY*),
     organization (*ENTITY*),
     person (*ENTITY*),
     product_definition_context (*ENTITY*),
     representation_context (*ENTITY*),
     requirement_source (*ENTITY*),
     security_classification (*ENTITY*),
     time_interval (*ENTITY*),
     usage_association (*ENTITY*) );
  END_TYPE; -- same_as_item (line:5187 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public enum sSAME_AS_ITEM : SDAIValue, AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sSAME_AS_ITEM__type {

    /// SELECT case ``eADDRESS`` (ENTITY) in ``sSAME_AS_ITEM``
    case _ADDRESS(eADDRESS)	// (ENTITY)

    /// SELECT case ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT`` (ENTITY) in ``sSAME_AS_ITEM``
    case _APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(
      eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPROVAL`` (ENTITY) in ``sSAME_AS_ITEM``
    case _APPROVAL(eAPPROVAL)	// (ENTITY)

    /// SELECT case ``eAPPROVAL_STATUS`` (ENTITY) in ``sSAME_AS_ITEM``
    case _APPROVAL_STATUS(eAPPROVAL_STATUS)	// (ENTITY)

    /// SELECT case ``eATTRIBUTE_LANGUAGE_ASSIGNMENT`` (ENTITY) in ``sSAME_AS_ITEM``
    case _ATTRIBUTE_LANGUAGE_ASSIGNMENT(eATTRIBUTE_LANGUAGE_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eCALENDAR_DATE`` (ENTITY) in ``sSAME_AS_ITEM``
    case _CALENDAR_DATE(eCALENDAR_DATE)	// (ENTITY)

    /// SELECT case ``eCERTIFICATION`` (ENTITY) in ``sSAME_AS_ITEM``
    case _CERTIFICATION(eCERTIFICATION)	// (ENTITY)

    /// SELECT case ``eCONTRACT`` (ENTITY) in ``sSAME_AS_ITEM``
    case _CONTRACT(eCONTRACT)	// (ENTITY)

    /// SELECT case ``eCOORDINATED_UNIVERSAL_TIME_OFFSET`` (ENTITY) in ``sSAME_AS_ITEM``
    case _COORDINATED_UNIVERSAL_TIME_OFFSET(eCOORDINATED_UNIVERSAL_TIME_OFFSET)	// (ENTITY)

    /// SELECT case ``eDATE_AND_TIME`` (ENTITY) in ``sSAME_AS_ITEM``
    case _DATE_AND_TIME(eDATE_AND_TIME)	// (ENTITY)

    /// SELECT case ``eDERIVED_UNIT`` (ENTITY) in ``sSAME_AS_ITEM``
    case _DERIVED_UNIT(eDERIVED_UNIT)	// (ENTITY)

    /// SELECT case ``eDERIVED_UNIT_ELEMENT`` (ENTITY) in ``sSAME_AS_ITEM``
    case _DERIVED_UNIT_ELEMENT(eDERIVED_UNIT_ELEMENT)	// (ENTITY)

    /// SELECT case ``eEVENT_OCCURRENCE`` (ENTITY) in ``sSAME_AS_ITEM``
    case _EVENT_OCCURRENCE(eEVENT_OCCURRENCE)	// (ENTITY)

    /// SELECT case ``eEXTERNAL_SOURCE`` (ENTITY) in ``sSAME_AS_ITEM``
    case _EXTERNAL_SOURCE(eEXTERNAL_SOURCE)	// (ENTITY)

    /// SELECT case ``eGENERAL_PROPERTY`` (ENTITY) in ``sSAME_AS_ITEM``
    case _GENERAL_PROPERTY(eGENERAL_PROPERTY)	// (ENTITY)

    /// SELECT case ``eINFORMATION_RIGHT`` (ENTITY) in ``sSAME_AS_ITEM``
    case _INFORMATION_RIGHT(eINFORMATION_RIGHT)	// (ENTITY)

    /// SELECT case ``eINFORMATION_USAGE_RIGHT`` (ENTITY) in ``sSAME_AS_ITEM``
    case _INFORMATION_USAGE_RIGHT(eINFORMATION_USAGE_RIGHT)	// (ENTITY)

    /// SELECT case ``eLANGUAGE`` (ENTITY) in ``sSAME_AS_ITEM``
    case _LANGUAGE(eLANGUAGE)	// (ENTITY)

    /// SELECT case ``eLOCAL_TIME`` (ENTITY) in ``sSAME_AS_ITEM``
    case _LOCAL_TIME(eLOCAL_TIME)	// (ENTITY)

    /// SELECT case ``eMEASURE_WITH_UNIT`` (ENTITY) in ``sSAME_AS_ITEM``
    case _MEASURE_WITH_UNIT(eMEASURE_WITH_UNIT)	// (ENTITY)

    /// SELECT case ``eNAMED_UNIT`` (ENTITY) in ``sSAME_AS_ITEM``
    case _NAMED_UNIT(eNAMED_UNIT)	// (ENTITY)

    /// SELECT case ``eORGANIZATION`` (ENTITY) in ``sSAME_AS_ITEM``
    case _ORGANIZATION(eORGANIZATION)	// (ENTITY)

    /// SELECT case ``ePERSON`` (ENTITY) in ``sSAME_AS_ITEM``
    case _PERSON(ePERSON)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_CONTEXT`` (ENTITY) in ``sSAME_AS_ITEM``
    case _PRODUCT_DEFINITION_CONTEXT(ePRODUCT_DEFINITION_CONTEXT)	// (ENTITY)

    /// SELECT case ``eREPRESENTATION_CONTEXT`` (ENTITY) in ``sSAME_AS_ITEM``
    case _REPRESENTATION_CONTEXT(eREPRESENTATION_CONTEXT)	// (ENTITY)

    /// SELECT case ``eREQUIREMENT_SOURCE`` (ENTITY) in ``sSAME_AS_ITEM``
    case _REQUIREMENT_SOURCE(eREQUIREMENT_SOURCE)	// (ENTITY)

    /// SELECT case ``eSECURITY_CLASSIFICATION`` (ENTITY) in ``sSAME_AS_ITEM``
    case _SECURITY_CLASSIFICATION(eSECURITY_CLASSIFICATION)	// (ENTITY)

    /// SELECT case ``eTIME_INTERVAL`` (ENTITY) in ``sSAME_AS_ITEM``
    case _TIME_INTERVAL(eTIME_INTERVAL)	// (ENTITY)

    /// SELECT case ``eUSAGE_ASSOCIATION`` (ENTITY) in ``sSAME_AS_ITEM``
    case _USAGE_ASSOCIATION(eUSAGE_ASSOCIATION)	// (ENTITY)

    //MARK: - CONSTRUCTORS
    public init(fundamental: FundamentalType) { self = fundamental }

    public init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?){
      return nil
    }

    public init?(possiblyFrom complex: SDAI.ComplexEntity?) {
      guard let complex = complex else { return nil }

      if let base = complex.entityReference(eADDRESS.self) {self = ._ADDRESS(base) }
      else if let base = complex.entityReference(eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT.self) {self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPROVAL.self) {self = ._APPROVAL(base) }
      else if let base = complex.entityReference(eAPPROVAL_STATUS.self) {self = ._APPROVAL_STATUS(base) }
      else if let base = complex.entityReference(eATTRIBUTE_LANGUAGE_ASSIGNMENT.self) {self = ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eCALENDAR_DATE.self) {self = ._CALENDAR_DATE(base) }
      else if let base = complex.entityReference(eCERTIFICATION.self) {self = ._CERTIFICATION(base) }
      else if let base = complex.entityReference(eCONTRACT.self) {self = ._CONTRACT(base) }
      else if let base = complex.entityReference(eCOORDINATED_UNIVERSAL_TIME_OFFSET.self) {self = ._COORDINATED_UNIVERSAL_TIME_OFFSET(base) }
      else if let base = complex.entityReference(eDATE_AND_TIME.self) {self = ._DATE_AND_TIME(base) }
      else if let base = complex.entityReference(eDERIVED_UNIT.self) {self = ._DERIVED_UNIT(base) }
      else if let base = complex.entityReference(eDERIVED_UNIT_ELEMENT.self) {self = ._DERIVED_UNIT_ELEMENT(base) }
      else if let base = complex.entityReference(eEVENT_OCCURRENCE.self) {self = ._EVENT_OCCURRENCE(base) }
      else if let base = complex.entityReference(eEXTERNAL_SOURCE.self) {self = ._EXTERNAL_SOURCE(base) }
      else if let base = complex.entityReference(eGENERAL_PROPERTY.self) {self = ._GENERAL_PROPERTY(base) }
      else if let base = complex.entityReference(eINFORMATION_RIGHT.self) {self = ._INFORMATION_RIGHT(base) }
      else if let base = complex.entityReference(eINFORMATION_USAGE_RIGHT.self) {self = ._INFORMATION_USAGE_RIGHT(base) }
      else if let base = complex.entityReference(eLANGUAGE.self) {self = ._LANGUAGE(base) }
      else if let base = complex.entityReference(eLOCAL_TIME.self) {self = ._LOCAL_TIME(base) }
      else if let base = complex.entityReference(eMEASURE_WITH_UNIT.self) {self = ._MEASURE_WITH_UNIT(base) }
      else if let base = complex.entityReference(eNAMED_UNIT.self) {self = ._NAMED_UNIT(base) }
      else if let base = complex.entityReference(eORGANIZATION.self) {self = ._ORGANIZATION(base) }
      else if let base = complex.entityReference(ePERSON.self) {self = ._PERSON(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_CONTEXT.self) {self = ._PRODUCT_DEFINITION_CONTEXT(base) }
      else if let base = complex.entityReference(eREPRESENTATION_CONTEXT.self) {self = ._REPRESENTATION_CONTEXT(base) }
      else if let base = complex.entityReference(eREQUIREMENT_SOURCE.self) {self = ._REQUIREMENT_SOURCE(base) }
      else if let base = complex.entityReference(eSECURITY_CLASSIFICATION.self) {self = ._SECURITY_CLASSIFICATION(base) }
      else if let base = complex.entityReference(eTIME_INTERVAL.self) {self = ._TIME_INTERVAL(base) }
      else if let base = complex.entityReference(eUSAGE_ASSOCIATION.self) {self = ._USAGE_ASSOCIATION(base) }
      else { return nil }
    }

    public init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let select = generic else { return nil }

      if let fundamental = select as? Self {
        self.init(fundamental: fundamental)
      }
      else if let base = eADDRESS.convert(fromGeneric: select) {
        self = ._ADDRESS(base)
      }
      else if let base = eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(base)
      }
      else if let base = eAPPROVAL.convert(fromGeneric: select) {
        self = ._APPROVAL(base)
      }
      else if let base = eAPPROVAL_STATUS.convert(fromGeneric: select) {
        self = ._APPROVAL_STATUS(base)
      }
      else if let base = eATTRIBUTE_LANGUAGE_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(base)
      }
      else if let base = eCALENDAR_DATE.convert(fromGeneric: select) {
        self = ._CALENDAR_DATE(base)
      }
      else if let base = eCERTIFICATION.convert(fromGeneric: select) {
        self = ._CERTIFICATION(base)
      }
      else if let base = eCONTRACT.convert(fromGeneric: select) {
        self = ._CONTRACT(base)
      }
      else if let base = eCOORDINATED_UNIVERSAL_TIME_OFFSET.convert(fromGeneric: select) {
        self = ._COORDINATED_UNIVERSAL_TIME_OFFSET(base)
      }
      else if let base = eDATE_AND_TIME.convert(fromGeneric: select) {
        self = ._DATE_AND_TIME(base)
      }
      else if let base = eDERIVED_UNIT.convert(fromGeneric: select) {
        self = ._DERIVED_UNIT(base)
      }
      else if let base = eDERIVED_UNIT_ELEMENT.convert(fromGeneric: select) {
        self = ._DERIVED_UNIT_ELEMENT(base)
      }
      else if let base = eEVENT_OCCURRENCE.convert(fromGeneric: select) {
        self = ._EVENT_OCCURRENCE(base)
      }
      else if let base = eEXTERNAL_SOURCE.convert(fromGeneric: select) {
        self = ._EXTERNAL_SOURCE(base)
      }
      else if let base = eGENERAL_PROPERTY.convert(fromGeneric: select) {
        self = ._GENERAL_PROPERTY(base)
      }
      else if let base = eINFORMATION_RIGHT.convert(fromGeneric: select) {
        self = ._INFORMATION_RIGHT(base)
      }
      else if let base = eINFORMATION_USAGE_RIGHT.convert(fromGeneric: select) {
        self = ._INFORMATION_USAGE_RIGHT(base)
      }
      else if let base = eLANGUAGE.convert(fromGeneric: select) {
        self = ._LANGUAGE(base)
      }
      else if let base = eLOCAL_TIME.convert(fromGeneric: select) {
        self = ._LOCAL_TIME(base)
      }
      else if let base = eMEASURE_WITH_UNIT.convert(fromGeneric: select) {
        self = ._MEASURE_WITH_UNIT(base)
      }
      else if let base = eNAMED_UNIT.convert(fromGeneric: select) {
        self = ._NAMED_UNIT(base)
      }
      else if let base = eORGANIZATION.convert(fromGeneric: select) {
        self = ._ORGANIZATION(base)
      }
      else if let base = ePERSON.convert(fromGeneric: select) {
        self = ._PERSON(base)
      }
      else if let base = ePRODUCT_DEFINITION_CONTEXT.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_CONTEXT(base)
      }
      else if let base = eREPRESENTATION_CONTEXT.convert(fromGeneric: select) {
        self = ._REPRESENTATION_CONTEXT(base)
      }
      else if let base = eREQUIREMENT_SOURCE.convert(fromGeneric: select) {
        self = ._REQUIREMENT_SOURCE(base)
      }
      else if let base = eSECURITY_CLASSIFICATION.convert(fromGeneric: select) {
        self = ._SECURITY_CLASSIFICATION(base)
      }
      else if let base = eTIME_INTERVAL.convert(fromGeneric: select) {
        self = ._TIME_INTERVAL(base)
      }
      else if let base = eUSAGE_ASSOCIATION.convert(fromGeneric: select) {
        self = ._USAGE_ASSOCIATION(base)
      }
      else { return nil }
    }

    // InitializableByP21Parameter
    public static var bareTypeName: String = "SAME_AS_ITEM"

    public init?(p21typedParam: P21Decode.ExchangeStructure.TypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      guard let keyword = p21typedParam.keyword.asStandardKeyword else { exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"; return nil }

      switch(keyword) {
      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"
        return nil
      }
    }

    public init?(p21untypedParam: P21Decode.ExchangeStructure.UntypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      switch p21untypedParam {
      case .rhsOccurenceName(let rhsname):
        switch rhsname {
        case .constantEntityName(let name):
          guard let entity = exchangeStructure.resolve(constantEntityName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: entity.complexEntity)

        case .entityInstanceName(let name):
          guard let complex = exchangeStructure.resolve(entityInstanceName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: complex)

        default:
          exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
          return nil
        }

      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
        return nil
      }
    }

    public init?(p21omittedParamfrom exchangeStructure: P21Decode.ExchangeStructure) {
      return nil
    }


    //MARK: - ENTITY UNDERLYING TYPE REFERENCES
    public var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT: 
      eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eDATE_AND_TIME: eDATE_AND_TIME? {
      switch self {
      case ._DATE_AND_TIME(let entity): return entity
      default: return nil
      }
    }

    public var super_eREQUIREMENT_SOURCE: eREQUIREMENT_SOURCE? {
      switch self {
      case ._REQUIREMENT_SOURCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eINFORMATION_USAGE_RIGHT: eINFORMATION_USAGE_RIGHT? {
      switch self {
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity
      default: return nil
      }
    }

    public var super_eINFORMATION_RIGHT: eINFORMATION_RIGHT? {
      switch self {
      case ._INFORMATION_RIGHT(let entity): return entity
      default: return nil
      }
    }

    public var super_eEVENT_OCCURRENCE: eEVENT_OCCURRENCE? {
      switch self {
      case ._EVENT_OCCURRENCE(let entity): return entity
      default: return nil
      }
    }

    public var super_ePERSON: ePERSON? {
      switch self {
      case ._PERSON(let entity): return entity
      default: return nil
      }
    }

    public var super_eCERTIFICATION: eCERTIFICATION? {
      switch self {
      case ._CERTIFICATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eIDENTIFICATION_ASSIGNMENT: eIDENTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity
        .super_eIDENTIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eAPPROVAL: eAPPROVAL? {
      switch self {
      case ._APPROVAL(let entity): return entity
      default: return nil
      }
    }

    public var super_eGROUP: eGROUP? {
      switch self {
      case ._LANGUAGE(let entity): return entity.super_eGROUP
      case ._REQUIREMENT_SOURCE(let entity): return entity.super_eGROUP
      default: return nil
      }
    }

    public var super_eAPPLICATION_CONTEXT_ELEMENT: eAPPLICATION_CONTEXT_ELEMENT? {
      switch self {
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.super_eAPPLICATION_CONTEXT_ELEMENT
      default: return nil
      }
    }

    public var super_eREPRESENTATION_CONTEXT: eREPRESENTATION_CONTEXT? {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_METHOD: eACTION_METHOD? {
      switch self {
      case ._INFORMATION_RIGHT(let entity): return entity.super_eACTION_METHOD
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity.super_eACTION_METHOD
      default: return nil
      }
    }

    public var super_eDERIVED_UNIT_ELEMENT: eDERIVED_UNIT_ELEMENT? {
      switch self {
      case ._DERIVED_UNIT_ELEMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT: eEXTERNAL_IDENTIFICATION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity
        .super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eORGANIZATION: eORGANIZATION? {
      switch self {
      case ._ORGANIZATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eDERIVED_UNIT: eDERIVED_UNIT? {
      switch self {
      case ._DERIVED_UNIT(let entity): return entity
      default: return nil
      }
    }

    public var super_eATTRIBUTE_CLASSIFICATION_ASSIGNMENT: eATTRIBUTE_CLASSIFICATION_ASSIGNMENT? {
      switch self {
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity
        .super_eATTRIBUTE_CLASSIFICATION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_eGENERAL_PROPERTY: eGENERAL_PROPERTY? {
      switch self {
      case ._GENERAL_PROPERTY(let entity): return entity
      default: return nil
      }
    }

    public var super_eCALENDAR_DATE: eCALENDAR_DATE? {
      switch self {
      case ._CALENDAR_DATE(let entity): return entity
      default: return nil
      }
    }

    public var super_eTIME_INTERVAL: eTIME_INTERVAL? {
      switch self {
      case ._TIME_INTERVAL(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_METHOD_RELATIONSHIP: eACTION_METHOD_RELATIONSHIP? {
      switch self {
      case ._USAGE_ASSOCIATION(let entity): return entity.super_eACTION_METHOD_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eUSAGE_ASSOCIATION: eUSAGE_ASSOCIATION? {
      switch self {
      case ._USAGE_ASSOCIATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eCONTRACT: eCONTRACT? {
      switch self {
      case ._CONTRACT(let entity): return entity
      default: return nil
      }
    }

    public var super_eMEASURE_WITH_UNIT: eMEASURE_WITH_UNIT? {
      switch self {
      case ._MEASURE_WITH_UNIT(let entity): return entity
      default: return nil
      }
    }

    public var super_eDATE: eDATE? {
      switch self {
      case ._CALENDAR_DATE(let entity): return entity.super_eDATE
      default: return nil
      }
    }

    public var super_eATTRIBUTE_LANGUAGE_ASSIGNMENT: eATTRIBUTE_LANGUAGE_ASSIGNMENT? {
      switch self {
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_eLOCAL_TIME: eLOCAL_TIME? {
      switch self {
      case ._LOCAL_TIME(let entity): return entity
      default: return nil
      }
    }

    public var super_eEXTERNAL_SOURCE: eEXTERNAL_SOURCE? {
      switch self {
      case ._EXTERNAL_SOURCE(let entity): return entity
      default: return nil
      }
    }

    public var super_eLANGUAGE: eLANGUAGE? {
      switch self {
      case ._LANGUAGE(let entity): return entity
      default: return nil
      }
    }

    public var super_eCOORDINATED_UNIVERSAL_TIME_OFFSET: eCOORDINATED_UNIVERSAL_TIME_OFFSET? {
      switch self {
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let entity): return entity
      default: return nil
      }
    }

    public var super_eAPPROVAL_STATUS: eAPPROVAL_STATUS? {
      switch self {
      case ._APPROVAL_STATUS(let entity): return entity
      default: return nil
      }
    }

    public var super_eSECURITY_CLASSIFICATION: eSECURITY_CLASSIFICATION? {
      switch self {
      case ._SECURITY_CLASSIFICATION(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_CONTEXT: ePRODUCT_DEFINITION_CONTEXT? {
      switch self {
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity
      default: return nil
      }
    }

    public var super_eADDRESS: eADDRESS? {
      switch self {
      case ._ADDRESS(let entity): return entity
      default: return nil
      }
    }

    public var super_eNAMED_UNIT: eNAMED_UNIT? {
      switch self {
      case ._NAMED_UNIT(let entity): return entity
      default: return nil
      }
    }


    //MARK: - ENTITY ATTRIBUTE REFERENCES
    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eLOCAL_TIME`` )
    public var SECOND_COMPONENT: tSECOND_IN_MINUTE?  {
      switch self {
      case ._LOCAL_TIME(let entity): return entity.SECOND_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eUSAGE_ASSOCIATION`` )
    public var RELATED_METHOD: eINFORMATION_USAGE_RIGHT?  {
      switch self {
      case ._USAGE_ASSOCIATION(let entity): return entity.RELATED_METHOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var PEOPLE: (SDAI.SET<ePERSON>/*[1:nil]*/ )?  {
      switch self {
      case ._ADDRESS(let entity): return entity.PEOPLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eDERIVED_UNIT`` )
    public var ELEMENTS: (SDAI.SET<eDERIVED_UNIT_ELEMENT>/*[1:nil]*/ )?  {
      switch self {
      case ._DERIVED_UNIT(let entity): return entity.ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var STREET: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.STREET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE`` )
    /// - origin: ENTITY( ``eEXTERNAL_SOURCE`` )
    /// - origin: ENTITY( ``eGENERAL_PROPERTY`` )
    /// - origin: ENTITY( ``eINFORMATION_RIGHT`` )
    /// - origin: ENTITY( ``eINFORMATION_USAGE_RIGHT`` )
    /// - origin: ENTITY( ``eLANGUAGE`` )
    /// - origin: ENTITY( ``eMEASURE_WITH_UNIT`` )
    /// - origin: ENTITY( ``eORGANIZATION`` )
    /// - origin: ENTITY( ``eREQUIREMENT_SOURCE`` )
    /// - origin: ENTITY( ``eTIME_INTERVAL`` )
    /// - origin: ENTITY( ``eUSAGE_ASSOCIATION`` )
    public var DESCRIPTION: tTEXT?  {
      switch self {
      case ._ADDRESS/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eADDRESS
      case ._EVENT_OCCURRENCE(let entity): return entity.DESCRIPTION
      case ._EXTERNAL_SOURCE(let entity): return entity.DESCRIPTION
      case ._GENERAL_PROPERTY(let entity): return entity.DESCRIPTION
      case ._INFORMATION_RIGHT(let entity): return entity.DESCRIPTION
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity.DESCRIPTION
      case ._LANGUAGE(let entity): return entity.DESCRIPTION
      case ._MEASURE_WITH_UNIT(let entity): return entity.DESCRIPTION
      case ._ORGANIZATION(let entity): return entity.DESCRIPTION
      case ._REQUIREMENT_SOURCE(let entity): return entity.DESCRIPTION
      case ._TIME_INTERVAL(let entity): return entity.DESCRIPTION
      case ._USAGE_ASSOCIATION(let entity): return entity.DESCRIPTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eDERIVED_UNIT_ELEMENT`` )
    public var EXPONENT: SDAI.REAL?  {
      switch self {
      case ._DERIVED_UNIT_ELEMENT(let entity): return entity.EXPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var ORGANIZATIONS: (SDAI.SET<eORGANIZATION>/*[1:nil]*/ )?  {
      switch self {
      case ._ADDRESS(let entity): return entity.ORGANIZATIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var MIDDLE_NAMES: (SDAI.LIST<tLABEL>/*[1:nil]*/ )?  {
      switch self {
      case ._PERSON(let entity): return entity.MIDDLE_NAMES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var CONTEXT_IDENTIFIER: tIDENTIFIER?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.CONTEXT_IDENTIFIER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var SUFFIX_TITLES: (SDAI.LIST<tLABEL>/*[1:nil]*/ )?  {
      switch self {
      case ._PERSON(let entity): return entity.SUFFIX_TITLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eATTRIBUTE_LANGUAGE_ASSIGNMENT`` )
    public var ROLE: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity.ROLE
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity.ROLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eLOCAL_TIME`` )
    public var ZONE: eCOORDINATED_UNIVERSAL_TIME_OFFSET?  {
      switch self {
      case ._LOCAL_TIME(let entity): return entity.ZONE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eAPPROVAL`` )
    public var STATUS: eAPPROVAL_STATUS?  {
      switch self {
      case ._APPROVAL(let entity): return entity.STATUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eDATE_AND_TIME`` )
    public var DATE_COMPONENT: eDATE?  {
      switch self {
      case ._DATE_AND_TIME(let entity): return entity.DATE_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eCOORDINATED_UNIVERSAL_TIME_OFFSET`` )
    public var HOUR_OFFSET: SDAI.INTEGER?  {
      switch self {
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let entity): return entity.HOUR_OFFSET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eSECURITY_CLASSIFICATION`` )
    public var SECURITY_LEVEL: eSECURITY_CLASSIFICATION_LEVEL?  {
      switch self {
      case ._SECURITY_CLASSIFICATION(let entity): return entity.SECURITY_LEVEL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var TELEX_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.TELEX_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var LAST_NAME: tLABEL?  {
      switch self {
      case ._PERSON(let entity): return entity.LAST_NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var FACSIMILE_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.FACSIMILE_NUMBER
      default: return nil
      }
    }

    //MARK: var ITEMS: (AMBIGUOUS)

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eNAMED_UNIT`` )
    public var DIMENSIONS: eDIMENSIONAL_EXPONENTS?  {
      switch self {
      case ._NAMED_UNIT(let entity): return entity.DIMENSIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var REGION: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.REGION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var REPRESENTATIONS_IN_CONTEXT: (SDAI.SET<eREPRESENTATION>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.REPRESENTATIONS_IN_CONTEXT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eCOORDINATED_UNIVERSAL_TIME_OFFSET`` )
    public var ACTUAL_MINUTE_OFFSET: SDAI.INTEGER?  {
      switch self {
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let entity): return entity.ACTUAL_MINUTE_OFFSET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var ELECTRONIC_MAIL_ADDRESS: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.ELECTRONIC_MAIL_ADDRESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var STREET_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.STREET_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eAPPROVAL`` )
    public var LEVEL: tLABEL?  {
      switch self {
      case ._APPROVAL(let entity): return entity.LEVEL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eCALENDAR_DATE`` )
    public var MONTH_COMPONENT: tMONTH_IN_YEAR_NUMBER?  {
      switch self {
      case ._CALENDAR_DATE(let entity): return entity.MONTH_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eATTRIBUTE_LANGUAGE_ASSIGNMENT`` )
    public var ATTRIBUTE_NAME: tLABEL?  {
      switch self {
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity.ATTRIBUTE_NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eCERTIFICATION`` )
    /// - origin: ENTITY( ``eCONTRACT`` )
    /// - origin: ENTITY( ``eINFORMATION_RIGHT`` )
    /// - origin: ENTITY( ``eINFORMATION_USAGE_RIGHT`` )
    /// - origin: ENTITY( ``eSECURITY_CLASSIFICATION`` )
    public var PURPOSE: tTEXT?  {
      switch self {
      case ._CERTIFICATION(let entity): return entity.PURPOSE
      case ._CONTRACT(let entity): return entity.PURPOSE
      case ._INFORMATION_RIGHT(let entity): return entity.PURPOSE
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity.PURPOSE
      case ._SECURITY_CLASSIFICATION(let entity): return entity.PURPOSE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var UNITS: (SDAI.SET<sUNIT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.UNITS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eATTRIBUTE_LANGUAGE_ASSIGNMENT`` )
    public var ASSIGNED_CLASS: eLANGUAGE?  {
      switch self {
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity.ASSIGNED_CLASS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var FIRST_NAME: tLABEL?  {
      switch self {
      case ._PERSON(let entity): return entity.FIRST_NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eUSAGE_ASSOCIATION`` )
    public var RELATING: eINFORMATION_USAGE_RIGHT?  {
      switch self {
      case ._USAGE_ASSOCIATION(let entity): return entity.RELATING
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eNAMED_UNIT`` )
    public var CONVERSION_FACTOR: eMEASURE_WITH_UNIT?  {
      switch self {
      case ._NAMED_UNIT(let entity): return entity.CONVERSION_FACTOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eNAMED_UNIT`` )
    public var PREFIX: nSI_PREFIX?  {
      switch self {
      case ._NAMED_UNIT(let entity): return entity.PREFIX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE`` )
    public var BASE_EVENT: eEVENT_OCCURRENCE?  {
      switch self {
      case ._EVENT_OCCURRENCE(let entity): return entity.BASE_EVENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var INTERNAL_LOCATION: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.INTERNAL_LOCATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT`` )
    public var ASSIGNED_ID: tIDENTIFIER?  {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity.ASSIGNED_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eCALENDAR_DATE`` )
    public var DAY_COMPONENT: tDAY_IN_MONTH_NUMBER?  {
      switch self {
      case ._CALENDAR_DATE(let entity): return entity.DAY_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eMEASURE_WITH_UNIT`` )
    public var UNIT_COMPONENT: sUNIT?  {
      switch self {
      case ._MEASURE_WITH_UNIT(let entity): return entity.UNIT_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eUSAGE_ASSOCIATION`` )
    public var RELATED: eINFORMATION_USAGE_RIGHT?  {
      switch self {
      case ._USAGE_ASSOCIATION(let entity): return entity.RELATED
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var POSTAL_CODE: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.POSTAL_CODE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var POSTAL_BOX: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.POSTAL_BOX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_CONTEXT`` )
    public var LIFE_CYCLE_STAGE: tLABEL?  {
      switch self {
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.LIFE_CYCLE_STAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eCOORDINATED_UNIVERSAL_TIME_OFFSET`` )
    public var MINUTE_OFFSET: SDAI.INTEGER?  {
      switch self {
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let entity): return entity.MINUTE_OFFSET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eDATE_AND_TIME`` )
    public var TIME_COMPONENT: eLOCAL_TIME?  {
      switch self {
      case ._DATE_AND_TIME(let entity): return entity.TIME_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eCERTIFICATION`` )
    /// - origin: ENTITY( ``eCONTRACT`` )
    public var KIND: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._CERTIFICATION(let entity): return entity.KIND
      case ._CONTRACT(let entity): return entity.KIND
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var URL: tIDENTIFIER?  {
      switch self {
      case ._ADDRESS(let entity): return entity.URL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var COORDINATE_SPACE_DIMENSION: tDIMENSION_COUNT?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.COORDINATE_SPACE_DIMENSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eTIME_INTERVAL`` )
    public var PRIMARY_BOUND: sDATE_TIME_OR_EVENT_OCCURRENCE?  {
      switch self {
      case ._TIME_INTERVAL(let entity): return entity.PRIMARY_BOUND
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eINFORMATION_RIGHT`` )
    /// - origin: ENTITY( ``eINFORMATION_USAGE_RIGHT`` )
    public var CONSEQUENCE: tTEXT?  {
      switch self {
      case ._INFORMATION_RIGHT(let entity): return entity.CONSEQUENCE
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity.CONSEQUENCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eTIME_INTERVAL`` )
    public var SECONDARY_BOUND: sDATE_TIME_OR_EVENT_OCCURRENCE?  {
      switch self {
      case ._TIME_INTERVAL(let entity): return entity.SECONDARY_BOUND
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eLOCAL_TIME`` )
    public var MINUTE_COMPONENT: tMINUTE_IN_HOUR?  {
      switch self {
      case ._LOCAL_TIME(let entity): return entity.MINUTE_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eLOCAL_TIME`` )
    public var HOUR_COMPONENT: tHOUR_IN_DAY?  {
      switch self {
      case ._LOCAL_TIME(let entity): return entity.HOUR_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT`` )
    public var SOURCE: eEXTERNAL_SOURCE?  {
      switch self {
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity.SOURCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE`` )
    /// - origin: ENTITY( ``eGENERAL_PROPERTY`` )
    /// - origin: ENTITY( ``eLANGUAGE`` )
    /// - origin: ENTITY( ``eORGANIZATION`` )
    /// - origin: ENTITY( ``ePERSON`` )
    /// - origin: ENTITY( ``eREQUIREMENT_SOURCE`` )
    /// - origin: ENTITY( ``eTIME_INTERVAL`` )
    public var ID: tIDENTIFIER?  {
      switch self {
      case ._EVENT_OCCURRENCE(let entity): return entity.ID
      case ._GENERAL_PROPERTY(let entity): return entity.ID
      case ._LANGUAGE(let entity): return entity.ID
      case ._ORGANIZATION(let entity): return entity.ID
      case ._PERSON(let entity): return entity.ID
      case ._REQUIREMENT_SOURCE(let entity): return entity.ID
      case ._TIME_INTERVAL(let entity): return entity.ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var CONTEXT_TYPE: tTEXT?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.CONTEXT_TYPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eDERIVED_UNIT_ELEMENT`` )
    public var UNIT: eNAMED_UNIT?  {
      switch self {
      case ._DERIVED_UNIT_ELEMENT(let entity): return entity.UNIT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var PARAMETER_UNIT: sUNIT?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.PARAMETER_UNIT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var TOWN: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.TOWN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eNAMED_UNIT`` )
    public var ASSOCIATED_VARIABLE_ENVIRONMENT: eENVIRONMENT?  {
      switch self {
      case ._NAMED_UNIT(let entity): return entity.ASSOCIATED_VARIABLE_ENVIRONMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var COUNTRY: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.COUNTRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eEXTERNAL_SOURCE`` )
    public var SOURCE_ID: sSOURCE_ITEM?  {
      switch self {
      case ._EXTERNAL_SOURCE(let entity): return entity.SOURCE_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eTIME_INTERVAL`` )
    public var DURATION: eTIME_MEASURE_WITH_UNIT?  {
      switch self {
      case ._TIME_INTERVAL(let entity): return entity.DURATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var TELEPHONE_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.TELEPHONE_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eCALENDAR_DATE`` )
    public var YEAR_COMPONENT: tYEAR_NUMBER?  {
      switch self {
      case ._CALENDAR_DATE(let entity): return entity.YEAR_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eREPRESENTATION_CONTEXT`` )
    public var UNCERTAINTY: (SDAI.SET<eUNCERTAINTY_MEASURE_WITH_UNIT>/*[1:nil]*/ )?  {
      switch self {
      case ._REPRESENTATION_CONTEXT(let entity): return entity.UNCERTAINTY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eMEASURE_WITH_UNIT`` )
    public var VALUE_COMPONENT: sMEASURE_VALUE?  {
      switch self {
      case ._MEASURE_WITH_UNIT(let entity): return entity.VALUE_COMPONENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_CONTEXT`` )
    public var FRAME_OF_REFERENCE: eAPPLICATION_CONTEXT?  {
      switch self {
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.FRAME_OF_REFERENCE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eAPPROVAL_STATUS`` )
    /// - origin: ENTITY( ``eCERTIFICATION`` )
    /// - origin: ENTITY( ``eCONTRACT`` )
    /// - origin: ENTITY( ``eDERIVED_UNIT`` )
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE`` )
    /// - origin: ENTITY( ``eGENERAL_PROPERTY`` )
    /// - origin: ENTITY( ``eINFORMATION_RIGHT`` )
    /// - origin: ENTITY( ``eINFORMATION_USAGE_RIGHT`` )
    /// - origin: ENTITY( ``eLANGUAGE`` )
    /// - origin: ENTITY( ``eMEASURE_WITH_UNIT`` )
    /// - origin: ENTITY( ``eORGANIZATION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_CONTEXT`` )
    /// - origin: ENTITY( ``eREQUIREMENT_SOURCE`` )
    /// - origin: ENTITY( ``eSECURITY_CLASSIFICATION`` )
    /// - origin: ENTITY( ``eTIME_INTERVAL`` )
    /// - origin: ENTITY( ``eUSAGE_ASSOCIATION`` )
    public var NAME: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.NAME
      case ._APPROVAL_STATUS(let entity): return entity.NAME
      case ._CERTIFICATION(let entity): return entity.NAME
      case ._CONTRACT(let entity): return entity.NAME
      case ._DERIVED_UNIT(let entity): return entity.NAME
      case ._EVENT_OCCURRENCE(let entity): return entity.NAME
      case ._GENERAL_PROPERTY(let entity): return entity.NAME
      case ._INFORMATION_RIGHT(let entity): return entity.NAME
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity.NAME
      case ._LANGUAGE(let entity): return entity.NAME
      case ._MEASURE_WITH_UNIT(let entity): return entity.NAME
      case ._NAMED_UNIT/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eNAMED_UNIT
      case ._ORGANIZATION(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.NAME
      case ._REQUIREMENT_SOURCE(let entity): return entity.NAME
      case ._SECURITY_CLASSIFICATION(let entity): return entity.NAME
      case ._TIME_INTERVAL(let entity): return entity.NAME
      case ._USAGE_ASSOCIATION(let entity): return entity.NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``ePERSON`` )
    public var PREFIX_TITLES: (SDAI.LIST<tLABEL>/*[1:nil]*/ )?  {
      switch self {
      case ._PERSON(let entity): return entity.PREFIX_TITLES
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eUSAGE_ASSOCIATION`` )
    public var RELATING_METHOD: eINFORMATION_USAGE_RIGHT?  {
      switch self {
      case ._USAGE_ASSOCIATION(let entity): return entity.RELATING_METHOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eEVENT_OCCURRENCE`` )
    public var OFFSET: eTIME_MEASURE_WITH_UNIT?  {
      switch self {
      case ._EVENT_OCCURRENCE(let entity): return entity.OFFSET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sSAME_AS_ITEM``
    /// - origin: ENTITY( ``eCOORDINATED_UNIVERSAL_TIME_OFFSET`` )
    public var SENSE: nAHEAD_OR_BEHIND?  {
      switch self {
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let entity): return entity.SENSE
      default: return nil
      }
    }


    //MARK: - SDAIValue
    public func isValueEqual<T: SDAIValue>(to rhs: T) -> Bool {
      switch self {
      case ._ADDRESS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPROVAL(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPROVAL_STATUS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CALENDAR_DATE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CERTIFICATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CONTRACT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DATE_AND_TIME(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._EVENT_OCCURRENCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._EXTERNAL_SOURCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._GENERAL_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INFORMATION_RIGHT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._LANGUAGE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._LOCAL_TIME(let selection): return selection.value.isValueEqual(to: rhs)
      case ._MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._NAMED_UNIT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PERSON(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._REQUIREMENT_SOURCE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._TIME_INTERVAL(let selection): return selection.value.isValueEqual(to: rhs)
      case ._USAGE_ASSOCIATION(let selection): return selection.value.isValueEqual(to: rhs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?) -> Bool? {
      switch self {
      case ._ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPROVAL(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPROVAL_STATUS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CALENDAR_DATE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CERTIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CONTRACT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DATE_AND_TIME(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._EVENT_OCCURRENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._EXTERNAL_SOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._GENERAL_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INFORMATION_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._LANGUAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._LOCAL_TIME(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._NAMED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PERSON(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._REQUIREMENT_SOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._TIME_INTERVAL(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._USAGE_ASSOCIATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      }
    }

    public func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      switch self {
      case ._ADDRESS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPROVAL(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPROVAL_STATUS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CALENDAR_DATE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CERTIFICATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CONTRACT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DATE_AND_TIME(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DERIVED_UNIT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DERIVED_UNIT_ELEMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._EVENT_OCCURRENCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._EXTERNAL_SOURCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._GENERAL_PROPERTY(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INFORMATION_RIGHT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._INFORMATION_USAGE_RIGHT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._LANGUAGE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._LOCAL_TIME(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._MEASURE_WITH_UNIT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._NAMED_UNIT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ORGANIZATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PERSON(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REPRESENTATION_CONTEXT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._REQUIREMENT_SOURCE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._SECURITY_CLASSIFICATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._TIME_INTERVAL(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._USAGE_ASSOCIATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      }
    }

    public func isValueEqual<T: SDAIValue>(to rhs: T, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      switch self {
      case ._ADDRESS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPROVAL(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPROVAL_STATUS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CALENDAR_DATE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CERTIFICATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CONTRACT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DATE_AND_TIME(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._EVENT_OCCURRENCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._EXTERNAL_SOURCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._GENERAL_PROPERTY(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INFORMATION_RIGHT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._LANGUAGE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._LOCAL_TIME(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._NAMED_UNIT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PERSON(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_SOURCE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._TIME_INTERVAL(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._USAGE_ASSOCIATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      switch self {
      case ._ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPROVAL(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPROVAL_STATUS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CALENDAR_DATE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CERTIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CONTRACT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DATE_AND_TIME(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._EVENT_OCCURRENCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._EXTERNAL_SOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._GENERAL_PROPERTY(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INFORMATION_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._LANGUAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._LOCAL_TIME(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._MEASURE_WITH_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._NAMED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PERSON(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._REQUIREMENT_SOURCE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._TIME_INTERVAL(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._USAGE_ASSOCIATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      }
    }


    //MARK: SDAIGenericTypeBase
    public func copy() -> Self {
      switch self {
      case ._ADDRESS(let selection): return ._ADDRESS(selection.copy())
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(selection.copy())
      case ._APPROVAL(let selection): return ._APPROVAL(selection.copy())
      case ._APPROVAL_STATUS(let selection): return ._APPROVAL_STATUS(selection.copy())
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(selection.copy())
      case ._CALENDAR_DATE(let selection): return ._CALENDAR_DATE(selection.copy())
      case ._CERTIFICATION(let selection): return ._CERTIFICATION(selection.copy())
      case ._CONTRACT(let selection): return ._CONTRACT(selection.copy())
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return ._COORDINATED_UNIVERSAL_TIME_OFFSET(selection.copy())
      case ._DATE_AND_TIME(let selection): return ._DATE_AND_TIME(selection.copy())
      case ._DERIVED_UNIT(let selection): return ._DERIVED_UNIT(selection.copy())
      case ._DERIVED_UNIT_ELEMENT(let selection): return ._DERIVED_UNIT_ELEMENT(selection.copy())
      case ._EVENT_OCCURRENCE(let selection): return ._EVENT_OCCURRENCE(selection.copy())
      case ._EXTERNAL_SOURCE(let selection): return ._EXTERNAL_SOURCE(selection.copy())
      case ._GENERAL_PROPERTY(let selection): return ._GENERAL_PROPERTY(selection.copy())
      case ._INFORMATION_RIGHT(let selection): return ._INFORMATION_RIGHT(selection.copy())
      case ._INFORMATION_USAGE_RIGHT(let selection): return ._INFORMATION_USAGE_RIGHT(selection.copy())
      case ._LANGUAGE(let selection): return ._LANGUAGE(selection.copy())
      case ._LOCAL_TIME(let selection): return ._LOCAL_TIME(selection.copy())
      case ._MEASURE_WITH_UNIT(let selection): return ._MEASURE_WITH_UNIT(selection.copy())
      case ._NAMED_UNIT(let selection): return ._NAMED_UNIT(selection.copy())
      case ._ORGANIZATION(let selection): return ._ORGANIZATION(selection.copy())
      case ._PERSON(let selection): return ._PERSON(selection.copy())
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return ._PRODUCT_DEFINITION_CONTEXT(selection.copy())
      case ._REPRESENTATION_CONTEXT(let selection): return ._REPRESENTATION_CONTEXT(selection.copy())
      case ._REQUIREMENT_SOURCE(let selection): return ._REQUIREMENT_SOURCE(selection.copy())
      case ._SECURITY_CLASSIFICATION(let selection): return ._SECURITY_CLASSIFICATION(selection.copy())
      case ._TIME_INTERVAL(let selection): return ._TIME_INTERVAL(selection.copy())
      case ._USAGE_ASSOCIATION(let selection): return ._USAGE_ASSOCIATION(selection.copy())
      }
    }

    //MARK: SDAIGenericType
    public var typeMembers: Set<SDAI.STRING> {
      var members: Set<SDAI.STRING> = [SDAI.STRING(Self.typeName)]
      switch self {
      case ._ADDRESS(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPROVAL(let selection): members.formUnion(selection.typeMembers)
      case ._APPROVAL_STATUS(let selection): members.formUnion(selection.typeMembers)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._CALENDAR_DATE(let selection): members.formUnion(selection.typeMembers)
      case ._CERTIFICATION(let selection): members.formUnion(selection.typeMembers)
      case ._CONTRACT(let selection): members.formUnion(selection.typeMembers)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): members.formUnion(selection.typeMembers)
      case ._DATE_AND_TIME(let selection): members.formUnion(selection.typeMembers)
      case ._DERIVED_UNIT(let selection): members.formUnion(selection.typeMembers)
      case ._DERIVED_UNIT_ELEMENT(let selection): members.formUnion(selection.typeMembers)
      case ._EVENT_OCCURRENCE(let selection): members.formUnion(selection.typeMembers)
      case ._EXTERNAL_SOURCE(let selection): members.formUnion(selection.typeMembers)
      case ._GENERAL_PROPERTY(let selection): members.formUnion(selection.typeMembers)
      case ._INFORMATION_RIGHT(let selection): members.formUnion(selection.typeMembers)
      case ._INFORMATION_USAGE_RIGHT(let selection): members.formUnion(selection.typeMembers)
      case ._LANGUAGE(let selection): members.formUnion(selection.typeMembers)
      case ._LOCAL_TIME(let selection): members.formUnion(selection.typeMembers)
      case ._MEASURE_WITH_UNIT(let selection): members.formUnion(selection.typeMembers)
      case ._NAMED_UNIT(let selection): members.formUnion(selection.typeMembers)
      case ._ORGANIZATION(let selection): members.formUnion(selection.typeMembers)
      case ._PERSON(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): members.formUnion(selection.typeMembers)
      case ._REPRESENTATION_CONTEXT(let selection): members.formUnion(selection.typeMembers)
      case ._REQUIREMENT_SOURCE(let selection): members.formUnion(selection.typeMembers)
      case ._SECURITY_CLASSIFICATION(let selection): members.formUnion(selection.typeMembers)
      case ._TIME_INTERVAL(let selection): members.formUnion(selection.typeMembers)
      case ._USAGE_ASSOCIATION(let selection): members.formUnion(selection.typeMembers)
      }
      return members
    }

    public var entityReference: SDAI.EntityReference? {
      switch self {
      case ._ADDRESS(let selection): return selection.entityReference
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPROVAL(let selection): return selection.entityReference
      case ._APPROVAL_STATUS(let selection): return selection.entityReference
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.entityReference
      case ._CALENDAR_DATE(let selection): return selection.entityReference
      case ._CERTIFICATION(let selection): return selection.entityReference
      case ._CONTRACT(let selection): return selection.entityReference
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.entityReference
      case ._DATE_AND_TIME(let selection): return selection.entityReference
      case ._DERIVED_UNIT(let selection): return selection.entityReference
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.entityReference
      case ._EVENT_OCCURRENCE(let selection): return selection.entityReference
      case ._EXTERNAL_SOURCE(let selection): return selection.entityReference
      case ._GENERAL_PROPERTY(let selection): return selection.entityReference
      case ._INFORMATION_RIGHT(let selection): return selection.entityReference
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.entityReference
      case ._LANGUAGE(let selection): return selection.entityReference
      case ._LOCAL_TIME(let selection): return selection.entityReference
      case ._MEASURE_WITH_UNIT(let selection): return selection.entityReference
      case ._NAMED_UNIT(let selection): return selection.entityReference
      case ._ORGANIZATION(let selection): return selection.entityReference
      case ._PERSON(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.entityReference
      case ._REPRESENTATION_CONTEXT(let selection): return selection.entityReference
      case ._REQUIREMENT_SOURCE(let selection): return selection.entityReference
      case ._SECURITY_CLASSIFICATION(let selection): return selection.entityReference
      case ._TIME_INTERVAL(let selection): return selection.entityReference
      case ._USAGE_ASSOCIATION(let selection): return selection.entityReference
      }
    }
    public var stringValue: SDAI.STRING? {
      switch self {
      case ._ADDRESS(let selection): return selection.stringValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPROVAL(let selection): return selection.stringValue
      case ._APPROVAL_STATUS(let selection): return selection.stringValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.stringValue
      case ._CALENDAR_DATE(let selection): return selection.stringValue
      case ._CERTIFICATION(let selection): return selection.stringValue
      case ._CONTRACT(let selection): return selection.stringValue
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.stringValue
      case ._DATE_AND_TIME(let selection): return selection.stringValue
      case ._DERIVED_UNIT(let selection): return selection.stringValue
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.stringValue
      case ._EVENT_OCCURRENCE(let selection): return selection.stringValue
      case ._EXTERNAL_SOURCE(let selection): return selection.stringValue
      case ._GENERAL_PROPERTY(let selection): return selection.stringValue
      case ._INFORMATION_RIGHT(let selection): return selection.stringValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.stringValue
      case ._LANGUAGE(let selection): return selection.stringValue
      case ._LOCAL_TIME(let selection): return selection.stringValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.stringValue
      case ._NAMED_UNIT(let selection): return selection.stringValue
      case ._ORGANIZATION(let selection): return selection.stringValue
      case ._PERSON(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.stringValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.stringValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.stringValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.stringValue
      case ._TIME_INTERVAL(let selection): return selection.stringValue
      case ._USAGE_ASSOCIATION(let selection): return selection.stringValue
      }
    }
    public var binaryValue: SDAI.BINARY? {
      switch self {
      case ._ADDRESS(let selection): return selection.binaryValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPROVAL(let selection): return selection.binaryValue
      case ._APPROVAL_STATUS(let selection): return selection.binaryValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.binaryValue
      case ._CALENDAR_DATE(let selection): return selection.binaryValue
      case ._CERTIFICATION(let selection): return selection.binaryValue
      case ._CONTRACT(let selection): return selection.binaryValue
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.binaryValue
      case ._DATE_AND_TIME(let selection): return selection.binaryValue
      case ._DERIVED_UNIT(let selection): return selection.binaryValue
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.binaryValue
      case ._EVENT_OCCURRENCE(let selection): return selection.binaryValue
      case ._EXTERNAL_SOURCE(let selection): return selection.binaryValue
      case ._GENERAL_PROPERTY(let selection): return selection.binaryValue
      case ._INFORMATION_RIGHT(let selection): return selection.binaryValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.binaryValue
      case ._LANGUAGE(let selection): return selection.binaryValue
      case ._LOCAL_TIME(let selection): return selection.binaryValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.binaryValue
      case ._NAMED_UNIT(let selection): return selection.binaryValue
      case ._ORGANIZATION(let selection): return selection.binaryValue
      case ._PERSON(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.binaryValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.binaryValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.binaryValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.binaryValue
      case ._TIME_INTERVAL(let selection): return selection.binaryValue
      case ._USAGE_ASSOCIATION(let selection): return selection.binaryValue
      }
    }
    public var logicalValue: SDAI.LOGICAL? {
      switch self {
      case ._ADDRESS(let selection): return selection.logicalValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPROVAL(let selection): return selection.logicalValue
      case ._APPROVAL_STATUS(let selection): return selection.logicalValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.logicalValue
      case ._CALENDAR_DATE(let selection): return selection.logicalValue
      case ._CERTIFICATION(let selection): return selection.logicalValue
      case ._CONTRACT(let selection): return selection.logicalValue
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.logicalValue
      case ._DATE_AND_TIME(let selection): return selection.logicalValue
      case ._DERIVED_UNIT(let selection): return selection.logicalValue
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.logicalValue
      case ._EVENT_OCCURRENCE(let selection): return selection.logicalValue
      case ._EXTERNAL_SOURCE(let selection): return selection.logicalValue
      case ._GENERAL_PROPERTY(let selection): return selection.logicalValue
      case ._INFORMATION_RIGHT(let selection): return selection.logicalValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.logicalValue
      case ._LANGUAGE(let selection): return selection.logicalValue
      case ._LOCAL_TIME(let selection): return selection.logicalValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.logicalValue
      case ._NAMED_UNIT(let selection): return selection.logicalValue
      case ._ORGANIZATION(let selection): return selection.logicalValue
      case ._PERSON(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.logicalValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.logicalValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.logicalValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.logicalValue
      case ._TIME_INTERVAL(let selection): return selection.logicalValue
      case ._USAGE_ASSOCIATION(let selection): return selection.logicalValue
      }
    }
    public var booleanValue: SDAI.BOOLEAN? {
      switch self {
      case ._ADDRESS(let selection): return selection.booleanValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPROVAL(let selection): return selection.booleanValue
      case ._APPROVAL_STATUS(let selection): return selection.booleanValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.booleanValue
      case ._CALENDAR_DATE(let selection): return selection.booleanValue
      case ._CERTIFICATION(let selection): return selection.booleanValue
      case ._CONTRACT(let selection): return selection.booleanValue
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.booleanValue
      case ._DATE_AND_TIME(let selection): return selection.booleanValue
      case ._DERIVED_UNIT(let selection): return selection.booleanValue
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.booleanValue
      case ._EVENT_OCCURRENCE(let selection): return selection.booleanValue
      case ._EXTERNAL_SOURCE(let selection): return selection.booleanValue
      case ._GENERAL_PROPERTY(let selection): return selection.booleanValue
      case ._INFORMATION_RIGHT(let selection): return selection.booleanValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.booleanValue
      case ._LANGUAGE(let selection): return selection.booleanValue
      case ._LOCAL_TIME(let selection): return selection.booleanValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.booleanValue
      case ._NAMED_UNIT(let selection): return selection.booleanValue
      case ._ORGANIZATION(let selection): return selection.booleanValue
      case ._PERSON(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.booleanValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.booleanValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.booleanValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.booleanValue
      case ._TIME_INTERVAL(let selection): return selection.booleanValue
      case ._USAGE_ASSOCIATION(let selection): return selection.booleanValue
      }
    }
    public var numberValue: SDAI.NUMBER? {
      switch self {
      case ._ADDRESS(let selection): return selection.numberValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPROVAL(let selection): return selection.numberValue
      case ._APPROVAL_STATUS(let selection): return selection.numberValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.numberValue
      case ._CALENDAR_DATE(let selection): return selection.numberValue
      case ._CERTIFICATION(let selection): return selection.numberValue
      case ._CONTRACT(let selection): return selection.numberValue
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.numberValue
      case ._DATE_AND_TIME(let selection): return selection.numberValue
      case ._DERIVED_UNIT(let selection): return selection.numberValue
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.numberValue
      case ._EVENT_OCCURRENCE(let selection): return selection.numberValue
      case ._EXTERNAL_SOURCE(let selection): return selection.numberValue
      case ._GENERAL_PROPERTY(let selection): return selection.numberValue
      case ._INFORMATION_RIGHT(let selection): return selection.numberValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.numberValue
      case ._LANGUAGE(let selection): return selection.numberValue
      case ._LOCAL_TIME(let selection): return selection.numberValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.numberValue
      case ._NAMED_UNIT(let selection): return selection.numberValue
      case ._ORGANIZATION(let selection): return selection.numberValue
      case ._PERSON(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.numberValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.numberValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.numberValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.numberValue
      case ._TIME_INTERVAL(let selection): return selection.numberValue
      case ._USAGE_ASSOCIATION(let selection): return selection.numberValue
      }
    }
    public var realValue: SDAI.REAL? {
      switch self {
      case ._ADDRESS(let selection): return selection.realValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPROVAL(let selection): return selection.realValue
      case ._APPROVAL_STATUS(let selection): return selection.realValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.realValue
      case ._CALENDAR_DATE(let selection): return selection.realValue
      case ._CERTIFICATION(let selection): return selection.realValue
      case ._CONTRACT(let selection): return selection.realValue
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.realValue
      case ._DATE_AND_TIME(let selection): return selection.realValue
      case ._DERIVED_UNIT(let selection): return selection.realValue
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.realValue
      case ._EVENT_OCCURRENCE(let selection): return selection.realValue
      case ._EXTERNAL_SOURCE(let selection): return selection.realValue
      case ._GENERAL_PROPERTY(let selection): return selection.realValue
      case ._INFORMATION_RIGHT(let selection): return selection.realValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.realValue
      case ._LANGUAGE(let selection): return selection.realValue
      case ._LOCAL_TIME(let selection): return selection.realValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.realValue
      case ._NAMED_UNIT(let selection): return selection.realValue
      case ._ORGANIZATION(let selection): return selection.realValue
      case ._PERSON(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.realValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.realValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.realValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.realValue
      case ._TIME_INTERVAL(let selection): return selection.realValue
      case ._USAGE_ASSOCIATION(let selection): return selection.realValue
      }
    }
    public var integerValue: SDAI.INTEGER? {
      switch self {
      case ._ADDRESS(let selection): return selection.integerValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPROVAL(let selection): return selection.integerValue
      case ._APPROVAL_STATUS(let selection): return selection.integerValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.integerValue
      case ._CALENDAR_DATE(let selection): return selection.integerValue
      case ._CERTIFICATION(let selection): return selection.integerValue
      case ._CONTRACT(let selection): return selection.integerValue
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.integerValue
      case ._DATE_AND_TIME(let selection): return selection.integerValue
      case ._DERIVED_UNIT(let selection): return selection.integerValue
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.integerValue
      case ._EVENT_OCCURRENCE(let selection): return selection.integerValue
      case ._EXTERNAL_SOURCE(let selection): return selection.integerValue
      case ._GENERAL_PROPERTY(let selection): return selection.integerValue
      case ._INFORMATION_RIGHT(let selection): return selection.integerValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.integerValue
      case ._LANGUAGE(let selection): return selection.integerValue
      case ._LOCAL_TIME(let selection): return selection.integerValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.integerValue
      case ._NAMED_UNIT(let selection): return selection.integerValue
      case ._ORGANIZATION(let selection): return selection.integerValue
      case ._PERSON(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.integerValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.integerValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.integerValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.integerValue
      case ._TIME_INTERVAL(let selection): return selection.integerValue
      case ._USAGE_ASSOCIATION(let selection): return selection.integerValue
      }
    }
    public var genericEnumValue: SDAI.GenericEnumValue? {
      switch self {
      case ._ADDRESS(let selection): return selection.genericEnumValue
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPROVAL(let selection): return selection.genericEnumValue
      case ._APPROVAL_STATUS(let selection): return selection.genericEnumValue
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._CALENDAR_DATE(let selection): return selection.genericEnumValue
      case ._CERTIFICATION(let selection): return selection.genericEnumValue
      case ._CONTRACT(let selection): return selection.genericEnumValue
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.genericEnumValue
      case ._DATE_AND_TIME(let selection): return selection.genericEnumValue
      case ._DERIVED_UNIT(let selection): return selection.genericEnumValue
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.genericEnumValue
      case ._EVENT_OCCURRENCE(let selection): return selection.genericEnumValue
      case ._EXTERNAL_SOURCE(let selection): return selection.genericEnumValue
      case ._GENERAL_PROPERTY(let selection): return selection.genericEnumValue
      case ._INFORMATION_RIGHT(let selection): return selection.genericEnumValue
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.genericEnumValue
      case ._LANGUAGE(let selection): return selection.genericEnumValue
      case ._LOCAL_TIME(let selection): return selection.genericEnumValue
      case ._MEASURE_WITH_UNIT(let selection): return selection.genericEnumValue
      case ._NAMED_UNIT(let selection): return selection.genericEnumValue
      case ._ORGANIZATION(let selection): return selection.genericEnumValue
      case ._PERSON(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.genericEnumValue
      case ._REPRESENTATION_CONTEXT(let selection): return selection.genericEnumValue
      case ._REQUIREMENT_SOURCE(let selection): return selection.genericEnumValue
      case ._SECURITY_CLASSIFICATION(let selection): return selection.genericEnumValue
      case ._TIME_INTERVAL(let selection): return selection.genericEnumValue
      case ._USAGE_ASSOCIATION(let selection): return selection.genericEnumValue
      }
    }
    public func arrayOptionalValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY_OPTIONAL<ELEM>? {
      switch self {
      case ._ADDRESS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPROVAL(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPROVAL_STATUS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CALENDAR_DATE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CERTIFICATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CONTRACT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DATE_AND_TIME(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._EVENT_OCCURRENCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._EXTERNAL_SOURCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._GENERAL_PROPERTY(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INFORMATION_RIGHT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._LANGUAGE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._LOCAL_TIME(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._NAMED_UNIT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ORGANIZATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PERSON(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._TIME_INTERVAL(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._USAGE_ASSOCIATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      }
    }
    public func arrayValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY<ELEM>? {
      switch self {
      case ._ADDRESS(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPROVAL(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPROVAL_STATUS(let selection): return selection.arrayValue(elementType:elementType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._CALENDAR_DATE(let selection): return selection.arrayValue(elementType:elementType)
      case ._CERTIFICATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._CONTRACT(let selection): return selection.arrayValue(elementType:elementType)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.arrayValue(elementType:elementType)
      case ._DATE_AND_TIME(let selection): return selection.arrayValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.arrayValue(elementType:elementType)
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._EVENT_OCCURRENCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._EXTERNAL_SOURCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._GENERAL_PROPERTY(let selection): return selection.arrayValue(elementType:elementType)
      case ._INFORMATION_RIGHT(let selection): return selection.arrayValue(elementType:elementType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.arrayValue(elementType:elementType)
      case ._LANGUAGE(let selection): return selection.arrayValue(elementType:elementType)
      case ._LOCAL_TIME(let selection): return selection.arrayValue(elementType:elementType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.arrayValue(elementType:elementType)
      case ._NAMED_UNIT(let selection): return selection.arrayValue(elementType:elementType)
      case ._ORGANIZATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PERSON(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.arrayValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.arrayValue(elementType:elementType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.arrayValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._TIME_INTERVAL(let selection): return selection.arrayValue(elementType:elementType)
      case ._USAGE_ASSOCIATION(let selection): return selection.arrayValue(elementType:elementType)
      }
    }
    public func listValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.LIST<ELEM>? {
      switch self {
      case ._ADDRESS(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPROVAL(let selection): return selection.listValue(elementType:elementType)
      case ._APPROVAL_STATUS(let selection): return selection.listValue(elementType:elementType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._CALENDAR_DATE(let selection): return selection.listValue(elementType:elementType)
      case ._CERTIFICATION(let selection): return selection.listValue(elementType:elementType)
      case ._CONTRACT(let selection): return selection.listValue(elementType:elementType)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.listValue(elementType:elementType)
      case ._DATE_AND_TIME(let selection): return selection.listValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.listValue(elementType:elementType)
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.listValue(elementType:elementType)
      case ._EVENT_OCCURRENCE(let selection): return selection.listValue(elementType:elementType)
      case ._EXTERNAL_SOURCE(let selection): return selection.listValue(elementType:elementType)
      case ._GENERAL_PROPERTY(let selection): return selection.listValue(elementType:elementType)
      case ._INFORMATION_RIGHT(let selection): return selection.listValue(elementType:elementType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.listValue(elementType:elementType)
      case ._LANGUAGE(let selection): return selection.listValue(elementType:elementType)
      case ._LOCAL_TIME(let selection): return selection.listValue(elementType:elementType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.listValue(elementType:elementType)
      case ._NAMED_UNIT(let selection): return selection.listValue(elementType:elementType)
      case ._ORGANIZATION(let selection): return selection.listValue(elementType:elementType)
      case ._PERSON(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.listValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.listValue(elementType:elementType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.listValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.listValue(elementType:elementType)
      case ._TIME_INTERVAL(let selection): return selection.listValue(elementType:elementType)
      case ._USAGE_ASSOCIATION(let selection): return selection.listValue(elementType:elementType)
      }
    }
    public func bagValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.BAG<ELEM>? {
      switch self {
      case ._ADDRESS(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPROVAL(let selection): return selection.bagValue(elementType:elementType)
      case ._APPROVAL_STATUS(let selection): return selection.bagValue(elementType:elementType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._CALENDAR_DATE(let selection): return selection.bagValue(elementType:elementType)
      case ._CERTIFICATION(let selection): return selection.bagValue(elementType:elementType)
      case ._CONTRACT(let selection): return selection.bagValue(elementType:elementType)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.bagValue(elementType:elementType)
      case ._DATE_AND_TIME(let selection): return selection.bagValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.bagValue(elementType:elementType)
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._EVENT_OCCURRENCE(let selection): return selection.bagValue(elementType:elementType)
      case ._EXTERNAL_SOURCE(let selection): return selection.bagValue(elementType:elementType)
      case ._GENERAL_PROPERTY(let selection): return selection.bagValue(elementType:elementType)
      case ._INFORMATION_RIGHT(let selection): return selection.bagValue(elementType:elementType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.bagValue(elementType:elementType)
      case ._LANGUAGE(let selection): return selection.bagValue(elementType:elementType)
      case ._LOCAL_TIME(let selection): return selection.bagValue(elementType:elementType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.bagValue(elementType:elementType)
      case ._NAMED_UNIT(let selection): return selection.bagValue(elementType:elementType)
      case ._ORGANIZATION(let selection): return selection.bagValue(elementType:elementType)
      case ._PERSON(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.bagValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.bagValue(elementType:elementType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.bagValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.bagValue(elementType:elementType)
      case ._TIME_INTERVAL(let selection): return selection.bagValue(elementType:elementType)
      case ._USAGE_ASSOCIATION(let selection): return selection.bagValue(elementType:elementType)
      }
    }
    public func setValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.SET<ELEM>? {
      switch self {
      case ._ADDRESS(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPROVAL(let selection): return selection.setValue(elementType:elementType)
      case ._APPROVAL_STATUS(let selection): return selection.setValue(elementType:elementType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._CALENDAR_DATE(let selection): return selection.setValue(elementType:elementType)
      case ._CERTIFICATION(let selection): return selection.setValue(elementType:elementType)
      case ._CONTRACT(let selection): return selection.setValue(elementType:elementType)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.setValue(elementType:elementType)
      case ._DATE_AND_TIME(let selection): return selection.setValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.setValue(elementType:elementType)
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.setValue(elementType:elementType)
      case ._EVENT_OCCURRENCE(let selection): return selection.setValue(elementType:elementType)
      case ._EXTERNAL_SOURCE(let selection): return selection.setValue(elementType:elementType)
      case ._GENERAL_PROPERTY(let selection): return selection.setValue(elementType:elementType)
      case ._INFORMATION_RIGHT(let selection): return selection.setValue(elementType:elementType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.setValue(elementType:elementType)
      case ._LANGUAGE(let selection): return selection.setValue(elementType:elementType)
      case ._LOCAL_TIME(let selection): return selection.setValue(elementType:elementType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.setValue(elementType:elementType)
      case ._NAMED_UNIT(let selection): return selection.setValue(elementType:elementType)
      case ._ORGANIZATION(let selection): return selection.setValue(elementType:elementType)
      case ._PERSON(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.setValue(elementType:elementType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.setValue(elementType:elementType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.setValue(elementType:elementType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.setValue(elementType:elementType)
      case ._TIME_INTERVAL(let selection): return selection.setValue(elementType:elementType)
      case ._USAGE_ASSOCIATION(let selection): return selection.setValue(elementType:elementType)
      }
    }
    public func enumValue<ENUM:SDAIEnumerationType>(enumType:ENUM.Type) -> ENUM? {
      switch self {
      case ._ADDRESS(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPROVAL(let selection): return selection.enumValue(enumType:enumType)
      case ._APPROVAL_STATUS(let selection): return selection.enumValue(enumType:enumType)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._CALENDAR_DATE(let selection): return selection.enumValue(enumType:enumType)
      case ._CERTIFICATION(let selection): return selection.enumValue(enumType:enumType)
      case ._CONTRACT(let selection): return selection.enumValue(enumType:enumType)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selection): return selection.enumValue(enumType:enumType)
      case ._DATE_AND_TIME(let selection): return selection.enumValue(enumType:enumType)
      case ._DERIVED_UNIT(let selection): return selection.enumValue(enumType:enumType)
      case ._DERIVED_UNIT_ELEMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._EVENT_OCCURRENCE(let selection): return selection.enumValue(enumType:enumType)
      case ._EXTERNAL_SOURCE(let selection): return selection.enumValue(enumType:enumType)
      case ._GENERAL_PROPERTY(let selection): return selection.enumValue(enumType:enumType)
      case ._INFORMATION_RIGHT(let selection): return selection.enumValue(enumType:enumType)
      case ._INFORMATION_USAGE_RIGHT(let selection): return selection.enumValue(enumType:enumType)
      case ._LANGUAGE(let selection): return selection.enumValue(enumType:enumType)
      case ._LOCAL_TIME(let selection): return selection.enumValue(enumType:enumType)
      case ._MEASURE_WITH_UNIT(let selection): return selection.enumValue(enumType:enumType)
      case ._NAMED_UNIT(let selection): return selection.enumValue(enumType:enumType)
      case ._ORGANIZATION(let selection): return selection.enumValue(enumType:enumType)
      case ._PERSON(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_CONTEXT(let selection): return selection.enumValue(enumType:enumType)
      case ._REPRESENTATION_CONTEXT(let selection): return selection.enumValue(enumType:enumType)
      case ._REQUIREMENT_SOURCE(let selection): return selection.enumValue(enumType:enumType)
      case ._SECURITY_CLASSIFICATION(let selection): return selection.enumValue(enumType:enumType)
      case ._TIME_INTERVAL(let selection): return selection.enumValue(enumType:enumType)
      case ._USAGE_ASSOCIATION(let selection): return selection.enumValue(enumType:enumType)
      }
    }

    //MARK: SDAIUnderlyingType
    public typealias FundamentalType = Self
    public static var typeName: String = "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.SAME_AS_ITEM"
    public var asFundamentalType: FundamentalType { return self }

    //MARK: SDAIObservableAggregateElement
    public var entityReferences: AnySequence<SDAI.EntityReference> {
      switch self {
      case ._ADDRESS(let entity): return entity.entityReferences
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPROVAL(let entity): return entity.entityReferences
      case ._APPROVAL_STATUS(let entity): return entity.entityReferences
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): return entity.entityReferences
      case ._CALENDAR_DATE(let entity): return entity.entityReferences
      case ._CERTIFICATION(let entity): return entity.entityReferences
      case ._CONTRACT(let entity): return entity.entityReferences
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let entity): return entity.entityReferences
      case ._DATE_AND_TIME(let entity): return entity.entityReferences
      case ._DERIVED_UNIT(let entity): return entity.entityReferences
      case ._DERIVED_UNIT_ELEMENT(let entity): return entity.entityReferences
      case ._EVENT_OCCURRENCE(let entity): return entity.entityReferences
      case ._EXTERNAL_SOURCE(let entity): return entity.entityReferences
      case ._GENERAL_PROPERTY(let entity): return entity.entityReferences
      case ._INFORMATION_RIGHT(let entity): return entity.entityReferences
      case ._INFORMATION_USAGE_RIGHT(let entity): return entity.entityReferences
      case ._LANGUAGE(let entity): return entity.entityReferences
      case ._LOCAL_TIME(let entity): return entity.entityReferences
      case ._MEASURE_WITH_UNIT(let entity): return entity.entityReferences
      case ._NAMED_UNIT(let entity): return entity.entityReferences
      case ._ORGANIZATION(let entity): return entity.entityReferences
      case ._PERSON(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): return entity.entityReferences
      case ._REPRESENTATION_CONTEXT(let entity): return entity.entityReferences
      case ._REQUIREMENT_SOURCE(let entity): return entity.entityReferences
      case ._SECURITY_CLASSIFICATION(let entity): return entity.entityReferences
      case ._TIME_INTERVAL(let entity): return entity.entityReferences
      case ._USAGE_ASSOCIATION(let entity): return entity.entityReferences
      }
    }

    public mutating func configure(with observer: SDAI.EntityReferenceObserver) {
      switch self {
      case ._ADDRESS(let entity): 
        entity.configure(with: observer)
        self = ._ADDRESS(entity)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(entity)
      case ._APPROVAL(let entity): 
        entity.configure(with: observer)
        self = ._APPROVAL(entity)
      case ._APPROVAL_STATUS(let entity): 
        entity.configure(with: observer)
        self = ._APPROVAL_STATUS(entity)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(entity)
      case ._CALENDAR_DATE(let entity): 
        entity.configure(with: observer)
        self = ._CALENDAR_DATE(entity)
      case ._CERTIFICATION(let entity): 
        entity.configure(with: observer)
        self = ._CERTIFICATION(entity)
      case ._CONTRACT(let entity): 
        entity.configure(with: observer)
        self = ._CONTRACT(entity)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let entity): 
        entity.configure(with: observer)
        self = ._COORDINATED_UNIVERSAL_TIME_OFFSET(entity)
      case ._DATE_AND_TIME(let entity): 
        entity.configure(with: observer)
        self = ._DATE_AND_TIME(entity)
      case ._DERIVED_UNIT(let entity): 
        entity.configure(with: observer)
        self = ._DERIVED_UNIT(entity)
      case ._DERIVED_UNIT_ELEMENT(let entity): 
        entity.configure(with: observer)
        self = ._DERIVED_UNIT_ELEMENT(entity)
      case ._EVENT_OCCURRENCE(let entity): 
        entity.configure(with: observer)
        self = ._EVENT_OCCURRENCE(entity)
      case ._EXTERNAL_SOURCE(let entity): 
        entity.configure(with: observer)
        self = ._EXTERNAL_SOURCE(entity)
      case ._GENERAL_PROPERTY(let entity): 
        entity.configure(with: observer)
        self = ._GENERAL_PROPERTY(entity)
      case ._INFORMATION_RIGHT(let entity): 
        entity.configure(with: observer)
        self = ._INFORMATION_RIGHT(entity)
      case ._INFORMATION_USAGE_RIGHT(let entity): 
        entity.configure(with: observer)
        self = ._INFORMATION_USAGE_RIGHT(entity)
      case ._LANGUAGE(let entity): 
        entity.configure(with: observer)
        self = ._LANGUAGE(entity)
      case ._LOCAL_TIME(let entity): 
        entity.configure(with: observer)
        self = ._LOCAL_TIME(entity)
      case ._MEASURE_WITH_UNIT(let entity): 
        entity.configure(with: observer)
        self = ._MEASURE_WITH_UNIT(entity)
      case ._NAMED_UNIT(let entity): 
        entity.configure(with: observer)
        self = ._NAMED_UNIT(entity)
      case ._ORGANIZATION(let entity): 
        entity.configure(with: observer)
        self = ._ORGANIZATION(entity)
      case ._PERSON(let entity): 
        entity.configure(with: observer)
        self = ._PERSON(entity)
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_CONTEXT(entity)
      case ._REPRESENTATION_CONTEXT(let entity): 
        entity.configure(with: observer)
        self = ._REPRESENTATION_CONTEXT(entity)
      case ._REQUIREMENT_SOURCE(let entity): 
        entity.configure(with: observer)
        self = ._REQUIREMENT_SOURCE(entity)
      case ._SECURITY_CLASSIFICATION(let entity): 
        entity.configure(with: observer)
        self = ._SECURITY_CLASSIFICATION(entity)
      case ._TIME_INTERVAL(let entity): 
        entity.configure(with: observer)
        self = ._TIME_INTERVAL(entity)
      case ._USAGE_ASSOCIATION(let entity): 
        entity.configure(with: observer)
        self = ._USAGE_ASSOCIATION(entity)
      }
    }

    public mutating func teardownObserver() {
      switch self {
      case ._ADDRESS(let entity): 
        entity.teardownObserver()
        self = ._ADDRESS(entity)
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(entity)
      case ._APPROVAL(let entity): 
        entity.teardownObserver()
        self = ._APPROVAL(entity)
      case ._APPROVAL_STATUS(let entity): 
        entity.teardownObserver()
        self = ._APPROVAL_STATUS(entity)
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(entity)
      case ._CALENDAR_DATE(let entity): 
        entity.teardownObserver()
        self = ._CALENDAR_DATE(entity)
      case ._CERTIFICATION(let entity): 
        entity.teardownObserver()
        self = ._CERTIFICATION(entity)
      case ._CONTRACT(let entity): 
        entity.teardownObserver()
        self = ._CONTRACT(entity)
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let entity): 
        entity.teardownObserver()
        self = ._COORDINATED_UNIVERSAL_TIME_OFFSET(entity)
      case ._DATE_AND_TIME(let entity): 
        entity.teardownObserver()
        self = ._DATE_AND_TIME(entity)
      case ._DERIVED_UNIT(let entity): 
        entity.teardownObserver()
        self = ._DERIVED_UNIT(entity)
      case ._DERIVED_UNIT_ELEMENT(let entity): 
        entity.teardownObserver()
        self = ._DERIVED_UNIT_ELEMENT(entity)
      case ._EVENT_OCCURRENCE(let entity): 
        entity.teardownObserver()
        self = ._EVENT_OCCURRENCE(entity)
      case ._EXTERNAL_SOURCE(let entity): 
        entity.teardownObserver()
        self = ._EXTERNAL_SOURCE(entity)
      case ._GENERAL_PROPERTY(let entity): 
        entity.teardownObserver()
        self = ._GENERAL_PROPERTY(entity)
      case ._INFORMATION_RIGHT(let entity): 
        entity.teardownObserver()
        self = ._INFORMATION_RIGHT(entity)
      case ._INFORMATION_USAGE_RIGHT(let entity): 
        entity.teardownObserver()
        self = ._INFORMATION_USAGE_RIGHT(entity)
      case ._LANGUAGE(let entity): 
        entity.teardownObserver()
        self = ._LANGUAGE(entity)
      case ._LOCAL_TIME(let entity): 
        entity.teardownObserver()
        self = ._LOCAL_TIME(entity)
      case ._MEASURE_WITH_UNIT(let entity): 
        entity.teardownObserver()
        self = ._MEASURE_WITH_UNIT(entity)
      case ._NAMED_UNIT(let entity): 
        entity.teardownObserver()
        self = ._NAMED_UNIT(entity)
      case ._ORGANIZATION(let entity): 
        entity.teardownObserver()
        self = ._ORGANIZATION(entity)
      case ._PERSON(let entity): 
        entity.teardownObserver()
        self = ._PERSON(entity)
      case ._PRODUCT_DEFINITION_CONTEXT(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_CONTEXT(entity)
      case ._REPRESENTATION_CONTEXT(let entity): 
        entity.teardownObserver()
        self = ._REPRESENTATION_CONTEXT(entity)
      case ._REQUIREMENT_SOURCE(let entity): 
        entity.teardownObserver()
        self = ._REQUIREMENT_SOURCE(entity)
      case ._SECURITY_CLASSIFICATION(let entity): 
        entity.teardownObserver()
        self = ._SECURITY_CLASSIFICATION(entity)
      case ._TIME_INTERVAL(let entity): 
        entity.teardownObserver()
        self = ._TIME_INTERVAL(entity)
      case ._USAGE_ASSOCIATION(let entity): 
        entity.teardownObserver()
        self = ._USAGE_ASSOCIATION(entity)
      }
    }

    //MARK: SDAIAggregationBehavior
    public var aggregationHiBound: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationHiIndex: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationLoBound: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationLoIndex: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationSize: Int? {
      switch self {
      default: return nil
      }
    }

    //MARK: WHERE RULE VALIDATION (SELECT TYPE)
    public static func validateWhereRules(instance:Self?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      var result: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]
      switch instance {
      case ._ADDRESS(let selectValue): result = eADDRESS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ADDRESS")
      case ._APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT")
      case ._APPROVAL(let selectValue): result = eAPPROVAL.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPROVAL")
      case ._APPROVAL_STATUS(let selectValue): 
        result = eAPPROVAL_STATUS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPROVAL_STATUS")
      case ._ATTRIBUTE_LANGUAGE_ASSIGNMENT(let selectValue): 
        result = eATTRIBUTE_LANGUAGE_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ATTRIBUTE_LANGUAGE_ASSIGNMENT")
      case ._CALENDAR_DATE(let selectValue): 
        result = eCALENDAR_DATE.validateWhereRules(instance:selectValue, prefix:prefix + "\\CALENDAR_DATE")
      case ._CERTIFICATION(let selectValue): 
        result = eCERTIFICATION.validateWhereRules(instance:selectValue, prefix:prefix + "\\CERTIFICATION")
      case ._CONTRACT(let selectValue): result = eCONTRACT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CONTRACT")
      case ._COORDINATED_UNIVERSAL_TIME_OFFSET(let selectValue): 
        result = eCOORDINATED_UNIVERSAL_TIME_OFFSET.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\COORDINATED_UNIVERSAL_TIME_OFFSET")
      case ._DATE_AND_TIME(let selectValue): 
        result = eDATE_AND_TIME.validateWhereRules(instance:selectValue, prefix:prefix + "\\DATE_AND_TIME")
      case ._DERIVED_UNIT(let selectValue): result = eDERIVED_UNIT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DERIVED_UNIT")
      case ._DERIVED_UNIT_ELEMENT(let selectValue): 
        result = eDERIVED_UNIT_ELEMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DERIVED_UNIT_ELEMENT")
      case ._EVENT_OCCURRENCE(let selectValue): 
        result = eEVENT_OCCURRENCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\EVENT_OCCURRENCE")
      case ._EXTERNAL_SOURCE(let selectValue): 
        result = eEXTERNAL_SOURCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\EXTERNAL_SOURCE")
      case ._GENERAL_PROPERTY(let selectValue): 
        result = eGENERAL_PROPERTY.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\GENERAL_PROPERTY")
      case ._INFORMATION_RIGHT(let selectValue): 
        result = eINFORMATION_RIGHT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INFORMATION_RIGHT")
      case ._INFORMATION_USAGE_RIGHT(let selectValue): 
        result = eINFORMATION_USAGE_RIGHT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\INFORMATION_USAGE_RIGHT")
      case ._LANGUAGE(let selectValue): result = eLANGUAGE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\LANGUAGE")
      case ._LOCAL_TIME(let selectValue): result = eLOCAL_TIME.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\LOCAL_TIME")
      case ._MEASURE_WITH_UNIT(let selectValue): 
        result = eMEASURE_WITH_UNIT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\MEASURE_WITH_UNIT")
      case ._NAMED_UNIT(let selectValue): result = eNAMED_UNIT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\NAMED_UNIT")
      case ._ORGANIZATION(let selectValue): result = eORGANIZATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ORGANIZATION")
      case ._PERSON(let selectValue): result = ePERSON.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PERSON")
      case ._PRODUCT_DEFINITION_CONTEXT(let selectValue): 
        result = ePRODUCT_DEFINITION_CONTEXT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_CONTEXT")
      case ._REPRESENTATION_CONTEXT(let selectValue): 
        result = eREPRESENTATION_CONTEXT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REPRESENTATION_CONTEXT")
      case ._REQUIREMENT_SOURCE(let selectValue): 
        result = eREQUIREMENT_SOURCE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\REQUIREMENT_SOURCE")
      case ._SECURITY_CLASSIFICATION(let selectValue): 
        result = eSECURITY_CLASSIFICATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\SECURITY_CLASSIFICATION")
      case ._TIME_INTERVAL(let selectValue): 
        result = eTIME_INTERVAL.validateWhereRules(instance:selectValue, prefix:prefix + "\\TIME_INTERVAL")
      case ._USAGE_ASSOCIATION(let selectValue): 
        result = eUSAGE_ASSOCIATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\USAGE_ASSOCIATION")
      case nil: break
      }

      return result
    }

  }

}


//MARK: - SELECT TYPE HIERARCHY
public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sSAME_AS_ITEM__type: SDAISelectType {

  //MARK: GROUP REFERENCES
  var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT? { get }
  var super_eDATE_AND_TIME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME? { get }
  var super_eREQUIREMENT_SOURCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_SOURCE? { get }
  var super_eINFORMATION_USAGE_RIGHT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT? { get }
  var super_eINFORMATION_RIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_RIGHT? { get }
  var super_eEVENT_OCCURRENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE? { get }
  var super_ePERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON? { get }
  var super_eCERTIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION? { get }
  var super_eIDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT? { get }
  var super_eAPPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL? { get }
  var super_eGROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP? { get }
  var super_eAPPLICATION_CONTEXT_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLICATION_CONTEXT_ELEMENT? { get }
  var super_eREPRESENTATION_CONTEXT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_CONTEXT? { get }
  var super_eACTION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD? { get }
  var super_eDERIVED_UNIT_ELEMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT_ELEMENT? { get }
  var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_IDENTIFICATION_ASSIGNMENT? { get }
  var super_eORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION? { get }
  var super_eDERIVED_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT? { get }
  var super_eATTRIBUTE_CLASSIFICATION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_CLASSIFICATION_ASSIGNMENT? { get }
  var super_eGENERAL_PROPERTY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_PROPERTY? { get }
  var super_eCALENDAR_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCALENDAR_DATE? { get }
  var super_eTIME_INTERVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL? { get }
  var super_eACTION_METHOD_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD_RELATIONSHIP? { get }
  var super_eUSAGE_ASSOCIATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUSAGE_ASSOCIATION? { get }
  var super_eCONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT? { get }
  var super_eMEASURE_WITH_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT? { get }
  var super_eDATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE? { get }
  var super_eATTRIBUTE_LANGUAGE_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_LANGUAGE_ASSIGNMENT? { get }
  var super_eLOCAL_TIME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_TIME? { get }
  var super_eEXTERNAL_SOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_SOURCE? { get }
  var super_eLANGUAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLANGUAGE? { get }
  var super_eCOORDINATED_UNIVERSAL_TIME_OFFSET: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOORDINATED_UNIVERSAL_TIME_OFFSET? { get }
  var super_eAPPROVAL_STATUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_STATUS? { get }
  var super_eSECURITY_CLASSIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION? { get }
  var super_ePRODUCT_DEFINITION_CONTEXT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_CONTEXT? { get }
  var super_eADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eADDRESS? { get }
  var super_eNAMED_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNAMED_UNIT? { get }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var SECOND_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tSECOND_IN_MINUTE?  { get }
  var RELATED_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT?  { get }
  var PEOPLE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON>/*[1:nil]*/ )?  { get }
  var ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT_ELEMENT>/*[1:nil]*/ )?  { get }
  var STREET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var EXPONENT: SDAI.REAL?  { get }
  var ORGANIZATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION>/*[1:nil]*/ )?  { get }
  var MIDDLE_NAMES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { get }
  var CONTEXT_IDENTIFIER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var SUFFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { get }
  var ROLE: SDAI.GENERIC_ENTITY?  { get }
  var ZONE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOORDINATED_UNIVERSAL_TIME_OFFSET?  { get }
  var STATUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_STATUS?  { get }
  var DATE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE?  { get }
  var HOUR_OFFSET: SDAI.INTEGER?  { get }
  var SECURITY_LEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_LEVEL?  { get }
  var TELEX_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var LAST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var FACSIMILE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var DIMENSIONS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIMENSIONAL_EXPONENTS?  { get }
  var REGION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var REPRESENTATIONS_IN_CONTEXT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION>
    /*[1:nil]*/ )?  { get }
  var ACTUAL_MINUTE_OFFSET: SDAI.INTEGER?  { get }
  var ELECTRONIC_MAIL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var STREET_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var LEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var MONTH_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tMONTH_IN_YEAR_NUMBER?  { get }
  var ATTRIBUTE_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var PURPOSE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var UNITS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT>/*[1:nil]*/ )?  { get }
  var ASSIGNED_CLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLANGUAGE?  { get }
  var FIRST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var RELATING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT?  { get }
  var CONVERSION_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { get }
  var PREFIX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nSI_PREFIX?  { get }
  var BASE_EVENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { get }
  var INTERNAL_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ASSIGNED_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var DAY_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDAY_IN_MONTH_NUMBER?  { get }
  var UNIT_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { get }
  var RELATED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT?  { get }
  var POSTAL_CODE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var POSTAL_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var LIFE_CYCLE_STAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var MINUTE_OFFSET: SDAI.INTEGER?  { get }
  var TIME_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_TIME?  { get }
  var KIND: SDAI.GENERIC_ENTITY?  { get }
  var URL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var COORDINATE_SPACE_DIMENSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDIMENSION_COUNT?  { get }
  var PRIMARY_BOUND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { get }
  var CONSEQUENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var SECONDARY_BOUND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { get }
  var MINUTE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tMINUTE_IN_HOUR?  { get }
  var HOUR_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tHOUR_IN_DAY?  { get }
  var SOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_SOURCE?  { get }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var CONTEXT_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNAMED_UNIT?  { get }
  var PARAMETER_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { get }
  var TOWN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ASSOCIATED_VARIABLE_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eENVIRONMENT?  { get }
  var COUNTRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var SOURCE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSOURCE_ITEM?  { get }
  var DURATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_MEASURE_WITH_UNIT?  { get }
  var TELEPHONE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var YEAR_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tYEAR_NUMBER?  { get }
  var UNCERTAINTY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUNCERTAINTY_MEASURE_WITH_UNIT>
    /*[1:nil]*/ )?  { get }
  var VALUE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMEASURE_VALUE?  { get }
  var FRAME_OF_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLICATION_CONTEXT?  { get }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var PREFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { get }
  var RELATING_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT?  { get }
  var OFFSET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_MEASURE_WITH_UNIT?  { get }
  var SENSE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nAHEAD_OR_BEHIND?  { get }
}

public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sSAME_AS_ITEM__subtype: 
  AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sSAME_AS_ITEM__type, SDAIDefinedType
where Supertype: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sSAME_AS_ITEM__type
{}

public extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sSAME_AS_ITEM__subtype {
  //MARK: CONSTRUCTORS
  init?(possiblyFrom complex: SDAI.ComplexEntity?) {
    self.init(fundamental: FundamentalType(possiblyFrom: complex))
  }

  init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?) {
    self.init(fundamental: FundamentalType(possiblyFrom: underlyingType))
  }

  init?<G: SDAIGenericType>(fromGeneric generic: G?) {
    self.init(fundamental: FundamentalType.convert(fromGeneric: generic))
  }

  //MARK: GROUP REFERENCES
  var super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT? { rep.super_eAPPLIED_EXTERNAL_IDENTIFICATION_ASSIGNMENT }
  var super_eDATE_AND_TIME: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE_AND_TIME? { rep.super_eDATE_AND_TIME }
  var super_eREQUIREMENT_SOURCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREQUIREMENT_SOURCE? { rep.super_eREQUIREMENT_SOURCE }
  var super_eINFORMATION_USAGE_RIGHT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT? { rep.super_eINFORMATION_USAGE_RIGHT }
  var super_eINFORMATION_RIGHT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_RIGHT? { rep.super_eINFORMATION_RIGHT }
  var super_eEVENT_OCCURRENCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE? { rep.super_eEVENT_OCCURRENCE }
  var super_ePERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON? { rep.super_ePERSON }
  var super_eCERTIFICATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCERTIFICATION? { rep.super_eCERTIFICATION }
  var super_eIDENTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eIDENTIFICATION_ASSIGNMENT? { rep.super_eIDENTIFICATION_ASSIGNMENT }
  var super_eAPPROVAL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL? { rep.super_eAPPROVAL }
  var super_eGROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP? { rep.super_eGROUP }
  var super_eAPPLICATION_CONTEXT_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLICATION_CONTEXT_ELEMENT? { rep.super_eAPPLICATION_CONTEXT_ELEMENT }
  var super_eREPRESENTATION_CONTEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION_CONTEXT? { rep.super_eREPRESENTATION_CONTEXT }
  var super_eACTION_METHOD: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD? { rep.super_eACTION_METHOD }
  var super_eDERIVED_UNIT_ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT_ELEMENT? { rep.super_eDERIVED_UNIT_ELEMENT }
  var super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_IDENTIFICATION_ASSIGNMENT? { rep.super_eEXTERNAL_IDENTIFICATION_ASSIGNMENT }
  var super_eORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION? { rep.super_eORGANIZATION }
  var super_eDERIVED_UNIT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT? { rep.super_eDERIVED_UNIT }
  var super_eATTRIBUTE_CLASSIFICATION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_CLASSIFICATION_ASSIGNMENT? { rep.super_eATTRIBUTE_CLASSIFICATION_ASSIGNMENT }
  var super_eGENERAL_PROPERTY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGENERAL_PROPERTY? { rep.super_eGENERAL_PROPERTY }
  var super_eCALENDAR_DATE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCALENDAR_DATE? { rep.super_eCALENDAR_DATE }
  var super_eTIME_INTERVAL: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL? { rep.super_eTIME_INTERVAL }
  var super_eACTION_METHOD_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD_RELATIONSHIP? { rep.super_eACTION_METHOD_RELATIONSHIP }
  var super_eUSAGE_ASSOCIATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUSAGE_ASSOCIATION? { rep.super_eUSAGE_ASSOCIATION }
  var super_eCONTRACT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTRACT? { rep.super_eCONTRACT }
  var super_eMEASURE_WITH_UNIT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT? { rep.super_eMEASURE_WITH_UNIT }
  var super_eDATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE? { rep.super_eDATE }
  var super_eATTRIBUTE_LANGUAGE_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eATTRIBUTE_LANGUAGE_ASSIGNMENT? { rep.super_eATTRIBUTE_LANGUAGE_ASSIGNMENT }
  var super_eLOCAL_TIME: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_TIME? { rep.super_eLOCAL_TIME }
  var super_eEXTERNAL_SOURCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_SOURCE? { rep.super_eEXTERNAL_SOURCE }
  var super_eLANGUAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLANGUAGE? { rep.super_eLANGUAGE }
  var super_eCOORDINATED_UNIVERSAL_TIME_OFFSET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOORDINATED_UNIVERSAL_TIME_OFFSET? { rep.super_eCOORDINATED_UNIVERSAL_TIME_OFFSET }
  var super_eAPPROVAL_STATUS: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_STATUS? { rep.super_eAPPROVAL_STATUS }
  var super_eSECURITY_CLASSIFICATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION? { rep.super_eSECURITY_CLASSIFICATION }
  var super_ePRODUCT_DEFINITION_CONTEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_CONTEXT? { rep.super_ePRODUCT_DEFINITION_CONTEXT }
  var super_eADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eADDRESS? { rep.super_eADDRESS }
  var super_eNAMED_UNIT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNAMED_UNIT? { rep.super_eNAMED_UNIT }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var SECOND_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tSECOND_IN_MINUTE?  { rep.SECOND_COMPONENT }
  var RELATED_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT?  { rep.RELATED_METHOD }
  var PEOPLE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON>/*[1:nil]*/ )?  { rep.PEOPLE }
  var ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT_ELEMENT>/*[1:nil]*/ )?  { rep.ELEMENTS }
  var STREET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.STREET }
  var DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.DESCRIPTION }
  var EXPONENT: SDAI.REAL?  { rep.EXPONENT }
  var ORGANIZATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION>/*[1:nil]*/ )?  { rep.ORGANIZATIONS }
  var MIDDLE_NAMES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { rep.MIDDLE_NAMES }
  var CONTEXT_IDENTIFIER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.CONTEXT_IDENTIFIER }
  var SUFFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { rep.SUFFIX_TITLES }
  var ROLE: SDAI.GENERIC_ENTITY?  { rep.ROLE }
  var ZONE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOORDINATED_UNIVERSAL_TIME_OFFSET?  { rep.ZONE }
  var STATUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPROVAL_STATUS?  { rep.STATUS }
  var DATE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATE?  { rep.DATE_COMPONENT }
  var HOUR_OFFSET: SDAI.INTEGER?  { rep.HOUR_OFFSET }
  var SECURITY_LEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSECURITY_CLASSIFICATION_LEVEL?  { rep.SECURITY_LEVEL }
  var TELEX_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TELEX_NUMBER }
  var LAST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.LAST_NAME }
  var FACSIMILE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.FACSIMILE_NUMBER }
  var DIMENSIONS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDIMENSIONAL_EXPONENTS?  { rep.DIMENSIONS }
  var REGION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.REGION }
  var REPRESENTATIONS_IN_CONTEXT: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION>
    /*[1:nil]*/ )?  { rep.REPRESENTATIONS_IN_CONTEXT }
  var ACTUAL_MINUTE_OFFSET: SDAI.INTEGER?  { rep.ACTUAL_MINUTE_OFFSET }
  var ELECTRONIC_MAIL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.ELECTRONIC_MAIL_ADDRESS }
  var STREET_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.STREET_NUMBER }
  var LEVEL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.LEVEL }
  var MONTH_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tMONTH_IN_YEAR_NUMBER?  { rep.MONTH_COMPONENT }
  var ATTRIBUTE_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.ATTRIBUTE_NAME }
  var PURPOSE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.PURPOSE }
  var UNITS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT>/*[1:nil]*/ )?  { rep.UNITS }
  var ASSIGNED_CLASS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLANGUAGE?  { rep.ASSIGNED_CLASS }
  var FIRST_NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.FIRST_NAME }
  var RELATING: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT?  { rep.RELATING }
  var CONVERSION_FACTOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { rep.CONVERSION_FACTOR }
  var PREFIX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nSI_PREFIX?  { rep.PREFIX }
  var BASE_EVENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEVENT_OCCURRENCE?  { rep.BASE_EVENT }
  var INTERNAL_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.INTERNAL_LOCATION }
  var ASSIGNED_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.ASSIGNED_ID }
  var DAY_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDAY_IN_MONTH_NUMBER?  { rep.DAY_COMPONENT }
  var UNIT_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { rep.UNIT_COMPONENT }
  var RELATED: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT?  { rep.RELATED }
  var POSTAL_CODE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.POSTAL_CODE }
  var POSTAL_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.POSTAL_BOX }
  var LIFE_CYCLE_STAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.LIFE_CYCLE_STAGE }
  var MINUTE_OFFSET: SDAI.INTEGER?  { rep.MINUTE_OFFSET }
  var TIME_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLOCAL_TIME?  { rep.TIME_COMPONENT }
  var KIND: SDAI.GENERIC_ENTITY?  { rep.KIND }
  var URL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.URL }
  var COORDINATE_SPACE_DIMENSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tDIMENSION_COUNT?  { rep.COORDINATE_SPACE_DIMENSION }
  var PRIMARY_BOUND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { rep.PRIMARY_BOUND }
  var CONSEQUENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.CONSEQUENCE }
  var SECONDARY_BOUND: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { rep.SECONDARY_BOUND }
  var MINUTE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tMINUTE_IN_HOUR?  { rep.MINUTE_COMPONENT }
  var HOUR_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tHOUR_IN_DAY?  { rep.HOUR_COMPONENT }
  var SOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_SOURCE?  { rep.SOURCE }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.ID }
  var CONTEXT_TYPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.CONTEXT_TYPE }
  var UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNAMED_UNIT?  { rep.UNIT }
  var PARAMETER_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sUNIT?  { rep.PARAMETER_UNIT }
  var TOWN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TOWN }
  var ASSOCIATED_VARIABLE_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eENVIRONMENT?  { rep.ASSOCIATED_VARIABLE_ENVIRONMENT }
  var COUNTRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.COUNTRY }
  var SOURCE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSOURCE_ITEM?  { rep.SOURCE_ID }
  var DURATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_MEASURE_WITH_UNIT?  { rep.DURATION }
  var TELEPHONE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TELEPHONE_NUMBER }
  var YEAR_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tYEAR_NUMBER?  { rep.YEAR_COMPONENT }
  var UNCERTAINTY: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eUNCERTAINTY_MEASURE_WITH_UNIT>
    /*[1:nil]*/ )?  { rep.UNCERTAINTY }
  var VALUE_COMPONENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sMEASURE_VALUE?  { rep.VALUE_COMPONENT }
  var FRAME_OF_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLICATION_CONTEXT?  { rep.FRAME_OF_REFERENCE }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.NAME }
  var PREFIX_TITLES: (SDAI.LIST<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL>/*[1:nil]*/ )?  { rep.PREFIX_TITLES }
  var RELATING_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eINFORMATION_USAGE_RIGHT?  { rep.RELATING_METHOD }
  var OFFSET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_MEASURE_WITH_UNIT?  { rep.OFFSET }
  var SENSE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.nAHEAD_OR_BEHIND?  { rep.SENSE }
}

