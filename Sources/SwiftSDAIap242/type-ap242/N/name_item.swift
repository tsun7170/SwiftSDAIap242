/* file: name_item.swift 	 generated: Sun Oct 31 15:32:10 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -TYPE DEFINITION in EXPRESS
/*
  TYPE name_item = SELECT
    ( applied_action_assignment (*ENTITY*),
     applied_action_method_assignment (*ENTITY*),
     assembly_component_usage (*ENTITY*),
     external_class_library (*ENTITY*),
     group (*ENTITY*),
     group_relationship (*ENTITY*),
     product (*ENTITY*),
     product_definition (*ENTITY*) );
  END_TYPE; -- name_item (line:4481 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES FOR SELECT
/*
  applied_action_assignment (*ENTITY*):
  ATTR:  role: object_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF action_items (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_action: action

  applied_action_method_assignment (*ENTITY*):
  ATTR:  role: action_method_role *** Multiple Select Case Sources ***
  ATTR:  items: SET [1 : ?] OF action_method_items (AMBIGUOUS (SELECT LEVEL))
  ATTR:  assigned_action_method: action_method

  assembly_component_usage (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  leaf: product_definition_or_reference
  ATTR:  next_usage: next_assembly_usage_occurrence
  ATTR:  reference_designator: identifier
  ATTR:  upper_usage: assembly_component_usage
  ATTR:  quantity: measure_with_unit
  ATTR:  root: product_definition
  ATTR:  relating_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  product_definition_occurrence_id: identifier
  ATTR:  location: LIST [1 : ?] OF UNIQUE next_assembly_usage_occurrence
  ATTR:  related_product_definition: product_definition_or_reference *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  external_class_library (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  source_id: source_item

  group (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  items: SET [0 : ?] OF product_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  of_shape: mated_part_relationship
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  assigned_group: mated_part_relationship
  ATTR:  definition: product_definition_usage_relationship *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  group_relationship (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  related_group: group
  ATTR:  previous: change_element
  ATTR:  element: change_element
  ATTR:  next: change_element
  ATTR:  relating_group: group
  ATTR:  composition: change_group
  ATTR:  name: label *** Multiple Select Case Sources ***

  product (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  frame_of_reference: SET [1 : ?] OF product_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_definition (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  defined_version: collection_version
  ATTR:  documentation_ids: SET [1 : ?] OF document
  ATTR:  relating_product_definition: linear_array_placement_group_component *** Multiple Select Case Sources ***
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  frame_of_reference: product_definition_context (AMBIGUOUS (SELECT LEVEL))
  ATTR:  definition: assembly_component *** Multiple Select Case Sources ***
  ATTR:  related_product_definition: linear_array_placement_group_component *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  formation: product_definition_formation

*/

/** SELECT type
- EXPRESS:
```express
  TYPE name_item = SELECT
    ( applied_action_assignment (*ENTITY*),
     applied_action_method_assignment (*ENTITY*),
     assembly_component_usage (*ENTITY*),
     external_class_library (*ENTITY*),
     group (*ENTITY*),
     group_relationship (*ENTITY*),
     product (*ENTITY*),
     product_definition (*ENTITY*) );
  END_TYPE; -- name_item (line:4481 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public enum sNAME_ITEM : SDAIValue, AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ITEM__type {

    /// SELECT case ``eAPPLIED_ACTION_ASSIGNMENT`` (ENTITY) in ``sNAME_ITEM``
    case _APPLIED_ACTION_ASSIGNMENT(eAPPLIED_ACTION_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eAPPLIED_ACTION_METHOD_ASSIGNMENT`` (ENTITY) in ``sNAME_ITEM``
    case _APPLIED_ACTION_METHOD_ASSIGNMENT(eAPPLIED_ACTION_METHOD_ASSIGNMENT)	// (ENTITY)

    /// SELECT case ``eASSEMBLY_COMPONENT_USAGE`` (ENTITY) in ``sNAME_ITEM``
    case _ASSEMBLY_COMPONENT_USAGE(eASSEMBLY_COMPONENT_USAGE)	// (ENTITY)

    /// SELECT case ``eEXTERNAL_CLASS_LIBRARY`` (ENTITY) in ``sNAME_ITEM``
    case _EXTERNAL_CLASS_LIBRARY(eEXTERNAL_CLASS_LIBRARY)	// (ENTITY)

    /// SELECT case ``eGROUP`` (ENTITY) in ``sNAME_ITEM``
    case _GROUP(eGROUP)	// (ENTITY)

    /// SELECT case ``eGROUP_RELATIONSHIP`` (ENTITY) in ``sNAME_ITEM``
    case _GROUP_RELATIONSHIP(eGROUP_RELATIONSHIP)	// (ENTITY)

    /// SELECT case ``ePRODUCT`` (ENTITY) in ``sNAME_ITEM``
    case _PRODUCT(ePRODUCT)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION`` (ENTITY) in ``sNAME_ITEM``
    case _PRODUCT_DEFINITION(ePRODUCT_DEFINITION)	// (ENTITY)

    //MARK: - CONSTRUCTORS
    public init(fundamental: FundamentalType) { self = fundamental }

    public init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?){
      return nil
    }

    public init?(possiblyFrom complex: SDAI.ComplexEntity?) {
      guard let complex = complex else { return nil }

      if let base = complex.entityReference(eAPPLIED_ACTION_ASSIGNMENT.self) {self = ._APPLIED_ACTION_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eAPPLIED_ACTION_METHOD_ASSIGNMENT.self) {self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(base) }
      else if let base = complex.entityReference(eASSEMBLY_COMPONENT_USAGE.self) {self = ._ASSEMBLY_COMPONENT_USAGE(base) }
      else if let base = complex.entityReference(eEXTERNAL_CLASS_LIBRARY.self) {self = ._EXTERNAL_CLASS_LIBRARY(base) }
      else if let base = complex.entityReference(eGROUP.self) {self = ._GROUP(base) }
      else if let base = complex.entityReference(eGROUP_RELATIONSHIP.self) {self = ._GROUP_RELATIONSHIP(base) }
      else if let base = complex.entityReference(ePRODUCT.self) {self = ._PRODUCT(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION.self) {self = ._PRODUCT_DEFINITION(base) }
      else { return nil }
    }

    public init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let select = generic else { return nil }

      if let fundamental = select as? Self {
        self.init(fundamental: fundamental)
      }
      else if let base = eAPPLIED_ACTION_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ACTION_ASSIGNMENT(base)
      }
      else if let base = eAPPLIED_ACTION_METHOD_ASSIGNMENT.convert(fromGeneric: select) {
        self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(base)
      }
      else if let base = eASSEMBLY_COMPONENT_USAGE.convert(fromGeneric: select) {
        self = ._ASSEMBLY_COMPONENT_USAGE(base)
      }
      else if let base = eEXTERNAL_CLASS_LIBRARY.convert(fromGeneric: select) {
        self = ._EXTERNAL_CLASS_LIBRARY(base)
      }
      else if let base = eGROUP.convert(fromGeneric: select) {
        self = ._GROUP(base)
      }
      else if let base = eGROUP_RELATIONSHIP.convert(fromGeneric: select) {
        self = ._GROUP_RELATIONSHIP(base)
      }
      else if let base = ePRODUCT.convert(fromGeneric: select) {
        self = ._PRODUCT(base)
      }
      else if let base = ePRODUCT_DEFINITION.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION(base)
      }
      else { return nil }
    }

    // InitializableByP21Parameter
    public static var bareTypeName: String = "NAME_ITEM"

    public init?(p21typedParam: P21Decode.ExchangeStructure.TypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      guard let keyword = p21typedParam.keyword.asStandardKeyword else { exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"; return nil }

      switch(keyword) {
      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"
        return nil
      }
    }

    public init?(p21untypedParam: P21Decode.ExchangeStructure.UntypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      switch p21untypedParam {
      case .rhsOccurenceName(let rhsname):
        switch rhsname {
        case .constantEntityName(let name):
          guard let entity = exchangeStructure.resolve(constantEntityName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: entity.complexEntity)

        case .entityInstanceName(let name):
          guard let complex = exchangeStructure.resolve(entityInstanceName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: complex)

        default:
          exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
          return nil
        }

      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
        return nil
      }
    }

    public init?(p21omittedParamfrom exchangeStructure: P21Decode.ExchangeStructure) {
      return nil
    }


    //MARK: - ENTITY UNDERLYING TYPE REFERENCES
    public var super_eGROUP_RELATIONSHIP: eGROUP_RELATIONSHIP? {
      switch self {
      case ._GROUP_RELATIONSHIP(let entity): return entity
      default: return nil
      }
    }

    public var super_eEXTERNAL_CLASS_LIBRARY: eEXTERNAL_CLASS_LIBRARY? {
      switch self {
      case ._EXTERNAL_CLASS_LIBRARY(let entity): return entity
      default: return nil
      }
    }

    public var super_eGROUP: eGROUP? {
      switch self {
      case ._GROUP(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_USAGE: ePRODUCT_DEFINITION_USAGE? {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.super_ePRODUCT_DEFINITION_USAGE
      default: return nil
      }
    }

    public var super_eAPPLIED_ACTION_METHOD_ASSIGNMENT: eAPPLIED_ACTION_METHOD_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION: ePRODUCT_DEFINITION? {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_METHOD_ASSIGNMENT: eACTION_METHOD_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.super_eACTION_METHOD_ASSIGNMENT
      default: return nil
      }
    }

    public var super_ePRODUCT: ePRODUCT? {
      switch self {
      case ._PRODUCT(let entity): return entity
      default: return nil
      }
    }

    public var super_eEXTERNAL_SOURCE: eEXTERNAL_SOURCE? {
      switch self {
      case ._EXTERNAL_CLASS_LIBRARY(let entity): return entity.super_eEXTERNAL_SOURCE
      default: return nil
      }
    }

    public var super_eASSEMBLY_COMPONENT_USAGE: eASSEMBLY_COMPONENT_USAGE? {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_ASSIGNMENT: eACTION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.super_eACTION_ASSIGNMENT
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_RELATIONSHIP: ePRODUCT_DEFINITION_RELATIONSHIP? {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.super_ePRODUCT_DEFINITION_RELATIONSHIP
      default: return nil
      }
    }

    public var super_eAPPLIED_ACTION_ASSIGNMENT: eAPPLIED_ACTION_ASSIGNMENT? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity
      default: return nil
      }
    }


    //MARK: - ENTITY ATTRIBUTE REFERENCES
    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    /// - origin: ENTITY( ``eEXTERNAL_CLASS_LIBRARY`` )
    /// - origin: ENTITY( ``eGROUP`` )
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var DESCRIPTION: tTEXT?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.DESCRIPTION
      case ._EXTERNAL_CLASS_LIBRARY(let entity): return entity.DESCRIPTION
      case ._GROUP(let entity): return entity.DESCRIPTION
      case ._GROUP_RELATIONSHIP(let entity): return entity.DESCRIPTION
      case ._PRODUCT(let entity): return entity.DESCRIPTION
      case ._PRODUCT_DEFINITION(let entity): return entity.DESCRIPTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    public var LEAF: sPRODUCT_DEFINITION_OR_REFERENCE?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.LEAF
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    public var NEXT_USAGE: eNEXT_ASSEMBLY_USAGE_OCCURRENCE?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.NEXT_USAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_ASSIGNMENT`` )
    /// - origin: ENTITY( ``eAPPLIED_ACTION_METHOD_ASSIGNMENT`` )
    public var ROLE: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.ROLE
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.ROLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    public var REFERENCE_DESIGNATOR: tIDENTIFIER?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.REFERENCE_DESIGNATOR
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    public var RELATED_GROUP: eGROUP?  {
      switch self {
      case ._GROUP_RELATIONSHIP(let entity): return entity.RELATED_GROUP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    public var UPPER_USAGE: eASSEMBLY_COMPONENT_USAGE?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.UPPER_USAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    public var QUANTITY: eMEASURE_WITH_UNIT?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.QUANTITY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var DEFINED_VERSION: eCOLLECTION_VERSION?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.DEFINED_VERSION
      default: return nil
      }
    }

    //MARK: var ITEMS: (AMBIGUOUS)

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eGROUP`` )
    public var OF_SHAPE: eMATED_PART_RELATIONSHIP?  {
      switch self {
      case ._GROUP(let entity): return entity.OF_SHAPE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    public var PREVIOUS: eCHANGE_ELEMENT?  {
      switch self {
      case ._GROUP_RELATIONSHIP(let entity): return entity.PREVIOUS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var DOCUMENTATION_IDS: (SDAI.SET<eDOCUMENT>/*[1:nil]*/ )?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.DOCUMENTATION_IDS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_ASSIGNMENT`` )
    public var ASSIGNED_ACTION: eACTION?  {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.ASSIGNED_ACTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    public var ELEMENT: eCHANGE_ELEMENT?  {
      switch self {
      case ._GROUP_RELATIONSHIP(let entity): return entity.ELEMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eAPPLIED_ACTION_METHOD_ASSIGNMENT`` )
    public var ASSIGNED_ACTION_METHOD: eACTION_METHOD?  {
      switch self {
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.ASSIGNED_ACTION_METHOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    public var NEXT: eCHANGE_ELEMENT?  {
      switch self {
      case ._GROUP_RELATIONSHIP(let entity): return entity.NEXT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    public var ROOT: ePRODUCT_DEFINITION?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.ROOT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    public var RELATING_GROUP: eGROUP?  {
      switch self {
      case ._GROUP_RELATIONSHIP(let entity): return entity.RELATING_GROUP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    public var COMPOSITION: eCHANGE_GROUP?  {
      switch self {
      case ._GROUP_RELATIONSHIP(let entity): return entity.COMPOSITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var RELATING_PRODUCT_DEFINITION: sPRODUCT_DEFINITION_OR_REFERENCE?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.RELATING_PRODUCT_DEFINITION
      case ._PRODUCT_DEFINITION(let entity): return sPRODUCT_DEFINITION_OR_REFERENCE(
        entity.RELATING_PRODUCT_DEFINITION)
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    /// - origin: ENTITY( ``eGROUP`` )
    /// - origin: ENTITY( ``ePRODUCT`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var ID: tIDENTIFIER?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.ID
      case ._GROUP(let entity): return entity.ID
      case ._PRODUCT(let entity): return entity.ID
      case ._PRODUCT_DEFINITION(let entity): return entity.ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eEXTERNAL_CLASS_LIBRARY`` )
    public var SOURCE_ID: sSOURCE_ITEM?  {
      switch self {
      case ._EXTERNAL_CLASS_LIBRARY(let entity): return entity.SOURCE_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    public var PRODUCT_DEFINITION_OCCURRENCE_ID: tIDENTIFIER?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.PRODUCT_DEFINITION_OCCURRENCE_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eGROUP`` )
    public var ASSIGNED_GROUP: eMATED_PART_RELATIONSHIP?  {
      switch self {
      case ._GROUP(let entity): return entity.ASSIGNED_GROUP
      default: return nil
      }
    }

    //MARK: var FRAME_OF_REFERENCE: (AMBIGUOUS)

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    public var LOCATION: (SDAI.LIST_UNIQUE<eNEXT_ASSEMBLY_USAGE_OCCURRENCE>/*[1:nil]*/ )?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.LOCATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eGROUP`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var DEFINITION: sCHARACTERIZED_DEFINITION?  {
      switch self {
      case ._GROUP(let entity): return sCHARACTERIZED_DEFINITION(entity.DEFINITION)
      case ._PRODUCT_DEFINITION(let entity): return sCHARACTERIZED_DEFINITION(entity.DEFINITION)
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var RELATED_PRODUCT_DEFINITION: sPRODUCT_DEFINITION_OR_REFERENCE?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.RELATED_PRODUCT_DEFINITION
      case ._PRODUCT_DEFINITION(let entity): return sPRODUCT_DEFINITION_OR_REFERENCE(
        entity.RELATED_PRODUCT_DEFINITION)
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``eASSEMBLY_COMPONENT_USAGE`` )
    /// - origin: ENTITY( ``eGROUP`` )
    /// - origin: ENTITY( ``eGROUP_RELATIONSHIP`` )
    /// - origin: ENTITY( ``ePRODUCT`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var NAME: tLABEL?  {
      switch self {
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.NAME
      case ._GROUP(let entity): return entity.NAME
      case ._GROUP_RELATIONSHIP(let entity): return entity.NAME
      case ._PRODUCT(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION(let entity): return entity.NAME
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ITEM``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var FORMATION: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.FORMATION
      default: return nil
      }
    }


    //MARK: - SDAIValue
    public func isValueEqual<T: SDAIValue>(to rhs: T) -> Bool {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.value.isValueEqual(to: rhs)
      case ._GROUP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?) -> Bool? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._GROUP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      }
    }

    public func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._GROUP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._GROUP_RELATIONSHIP(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      }
    }

    public func isValueEqual<T: SDAIValue>(to rhs: T, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._GROUP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._GROUP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._GROUP_RELATIONSHIP(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      }
    }


    //MARK: SDAIGenericTypeBase
    public func copy() -> Self {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return ._APPLIED_ACTION_ASSIGNMENT(selection.copy())
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return ._APPLIED_ACTION_METHOD_ASSIGNMENT(selection.copy())
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return ._ASSEMBLY_COMPONENT_USAGE(selection.copy())
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return ._EXTERNAL_CLASS_LIBRARY(selection.copy())
      case ._GROUP(let selection): return ._GROUP(selection.copy())
      case ._GROUP_RELATIONSHIP(let selection): return ._GROUP_RELATIONSHIP(selection.copy())
      case ._PRODUCT(let selection): return ._PRODUCT(selection.copy())
      case ._PRODUCT_DEFINITION(let selection): return ._PRODUCT_DEFINITION(selection.copy())
      }
    }

    //MARK: SDAIGenericType
    public var typeMembers: Set<SDAI.STRING> {
      var members: Set<SDAI.STRING> = [SDAI.STRING(Self.typeName)]
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): members.formUnion(selection.typeMembers)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): members.formUnion(selection.typeMembers)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): members.formUnion(selection.typeMembers)
      case ._GROUP(let selection): members.formUnion(selection.typeMembers)
      case ._GROUP_RELATIONSHIP(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION(let selection): members.formUnion(selection.typeMembers)
      }
      return members
    }

    public var entityReference: SDAI.EntityReference? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.entityReference
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.entityReference
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.entityReference
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.entityReference
      case ._GROUP(let selection): return selection.entityReference
      case ._GROUP_RELATIONSHIP(let selection): return selection.entityReference
      case ._PRODUCT(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION(let selection): return selection.entityReference
      }
    }
    public var stringValue: SDAI.STRING? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.stringValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.stringValue
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.stringValue
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.stringValue
      case ._GROUP(let selection): return selection.stringValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.stringValue
      case ._PRODUCT(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION(let selection): return selection.stringValue
      }
    }
    public var binaryValue: SDAI.BINARY? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.binaryValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.binaryValue
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.binaryValue
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.binaryValue
      case ._GROUP(let selection): return selection.binaryValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.binaryValue
      case ._PRODUCT(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION(let selection): return selection.binaryValue
      }
    }
    public var logicalValue: SDAI.LOGICAL? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.logicalValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.logicalValue
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.logicalValue
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.logicalValue
      case ._GROUP(let selection): return selection.logicalValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.logicalValue
      case ._PRODUCT(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION(let selection): return selection.logicalValue
      }
    }
    public var booleanValue: SDAI.BOOLEAN? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.booleanValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.booleanValue
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.booleanValue
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.booleanValue
      case ._GROUP(let selection): return selection.booleanValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.booleanValue
      case ._PRODUCT(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION(let selection): return selection.booleanValue
      }
    }
    public var numberValue: SDAI.NUMBER? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.numberValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.numberValue
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.numberValue
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.numberValue
      case ._GROUP(let selection): return selection.numberValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.numberValue
      case ._PRODUCT(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION(let selection): return selection.numberValue
      }
    }
    public var realValue: SDAI.REAL? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.realValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.realValue
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.realValue
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.realValue
      case ._GROUP(let selection): return selection.realValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.realValue
      case ._PRODUCT(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION(let selection): return selection.realValue
      }
    }
    public var integerValue: SDAI.INTEGER? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.integerValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.integerValue
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.integerValue
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.integerValue
      case ._GROUP(let selection): return selection.integerValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.integerValue
      case ._PRODUCT(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION(let selection): return selection.integerValue
      }
    }
    public var genericEnumValue: SDAI.GenericEnumValue? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.genericEnumValue
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.genericEnumValue
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.genericEnumValue
      case ._GROUP(let selection): return selection.genericEnumValue
      case ._GROUP_RELATIONSHIP(let selection): return selection.genericEnumValue
      case ._PRODUCT(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION(let selection): return selection.genericEnumValue
      }
    }
    public func arrayOptionalValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY_OPTIONAL<ELEM>? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._GROUP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      }
    }
    public func arrayValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY<ELEM>? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.arrayValue(elementType:elementType)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.arrayValue(elementType:elementType)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.arrayValue(elementType:elementType)
      case ._GROUP(let selection): return selection.arrayValue(elementType:elementType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.arrayValue(elementType:elementType)
      }
    }
    public func listValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.LIST<ELEM>? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.listValue(elementType:elementType)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.listValue(elementType:elementType)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.listValue(elementType:elementType)
      case ._GROUP(let selection): return selection.listValue(elementType:elementType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.listValue(elementType:elementType)
      }
    }
    public func bagValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.BAG<ELEM>? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.bagValue(elementType:elementType)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.bagValue(elementType:elementType)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.bagValue(elementType:elementType)
      case ._GROUP(let selection): return selection.bagValue(elementType:elementType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.bagValue(elementType:elementType)
      }
    }
    public func setValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.SET<ELEM>? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.setValue(elementType:elementType)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.setValue(elementType:elementType)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.setValue(elementType:elementType)
      case ._GROUP(let selection): return selection.setValue(elementType:elementType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.setValue(elementType:elementType)
      }
    }
    public func enumValue<ENUM:SDAIEnumerationType>(enumType:ENUM.Type) -> ENUM? {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selection): return selection.enumValue(enumType:enumType)
      case ._ASSEMBLY_COMPONENT_USAGE(let selection): return selection.enumValue(enumType:enumType)
      case ._EXTERNAL_CLASS_LIBRARY(let selection): return selection.enumValue(enumType:enumType)
      case ._GROUP(let selection): return selection.enumValue(enumType:enumType)
      case ._GROUP_RELATIONSHIP(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION(let selection): return selection.enumValue(enumType:enumType)
      }
    }

    //MARK: SDAIUnderlyingType
    public typealias FundamentalType = Self
    public static var typeName: String = "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.NAME_ITEM"
    public var asFundamentalType: FundamentalType { return self }

    //MARK: SDAIObservableAggregateElement
    public var entityReferences: AnySequence<SDAI.EntityReference> {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): return entity.entityReferences
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): return entity.entityReferences
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): return entity.entityReferences
      case ._EXTERNAL_CLASS_LIBRARY(let entity): return entity.entityReferences
      case ._GROUP(let entity): return entity.entityReferences
      case ._GROUP_RELATIONSHIP(let entity): return entity.entityReferences
      case ._PRODUCT(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION(let entity): return entity.entityReferences
      }
    }

    public mutating func configure(with observer: SDAI.EntityReferenceObserver) {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ACTION_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): 
        entity.configure(with: observer)
        self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(entity)
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): 
        entity.configure(with: observer)
        self = ._ASSEMBLY_COMPONENT_USAGE(entity)
      case ._EXTERNAL_CLASS_LIBRARY(let entity): 
        entity.configure(with: observer)
        self = ._EXTERNAL_CLASS_LIBRARY(entity)
      case ._GROUP(let entity): 
        entity.configure(with: observer)
        self = ._GROUP(entity)
      case ._GROUP_RELATIONSHIP(let entity): 
        entity.configure(with: observer)
        self = ._GROUP_RELATIONSHIP(entity)
      case ._PRODUCT(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT(entity)
      case ._PRODUCT_DEFINITION(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION(entity)
      }
    }

    public mutating func teardownObserver() {
      switch self {
      case ._APPLIED_ACTION_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ACTION_ASSIGNMENT(entity)
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let entity): 
        entity.teardownObserver()
        self = ._APPLIED_ACTION_METHOD_ASSIGNMENT(entity)
      case ._ASSEMBLY_COMPONENT_USAGE(let entity): 
        entity.teardownObserver()
        self = ._ASSEMBLY_COMPONENT_USAGE(entity)
      case ._EXTERNAL_CLASS_LIBRARY(let entity): 
        entity.teardownObserver()
        self = ._EXTERNAL_CLASS_LIBRARY(entity)
      case ._GROUP(let entity): 
        entity.teardownObserver()
        self = ._GROUP(entity)
      case ._GROUP_RELATIONSHIP(let entity): 
        entity.teardownObserver()
        self = ._GROUP_RELATIONSHIP(entity)
      case ._PRODUCT(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT(entity)
      case ._PRODUCT_DEFINITION(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION(entity)
      }
    }

    //MARK: SDAIAggregationBehavior
    public var aggregationHiBound: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationHiIndex: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationLoBound: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationLoIndex: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationSize: Int? {
      switch self {
      default: return nil
      }
    }

    //MARK: WHERE RULE VALIDATION (SELECT TYPE)
    public static func validateWhereRules(instance:Self?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      var result: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]
      switch instance {
      case ._APPLIED_ACTION_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ACTION_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ACTION_ASSIGNMENT")
      case ._APPLIED_ACTION_METHOD_ASSIGNMENT(let selectValue): 
        result = eAPPLIED_ACTION_METHOD_ASSIGNMENT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\APPLIED_ACTION_METHOD_ASSIGNMENT")
      case ._ASSEMBLY_COMPONENT_USAGE(let selectValue): 
        result = eASSEMBLY_COMPONENT_USAGE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ASSEMBLY_COMPONENT_USAGE")
      case ._EXTERNAL_CLASS_LIBRARY(let selectValue): 
        result = eEXTERNAL_CLASS_LIBRARY.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\EXTERNAL_CLASS_LIBRARY")
      case ._GROUP(let selectValue): result = eGROUP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\GROUP")
      case ._GROUP_RELATIONSHIP(let selectValue): 
        result = eGROUP_RELATIONSHIP.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\GROUP_RELATIONSHIP")
      case ._PRODUCT(let selectValue): result = ePRODUCT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT")
      case ._PRODUCT_DEFINITION(let selectValue): 
        result = ePRODUCT_DEFINITION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION")
      case nil: break
      }

      return result
    }

  }

}


//MARK: - SELECT TYPE HIERARCHY
public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ITEM__type: SDAISelectType {

  //MARK: GROUP REFERENCES
  var super_eGROUP_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP_RELATIONSHIP? { get }
  var super_eEXTERNAL_CLASS_LIBRARY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_CLASS_LIBRARY? { get }
  var super_eGROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP? { get }
  var super_ePRODUCT_DEFINITION_USAGE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_USAGE? { get }
  var super_eAPPLIED_ACTION_METHOD_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_METHOD_ASSIGNMENT? { get }
  var super_ePRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION? { get }
  var super_eACTION_METHOD_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD_ASSIGNMENT? { get }
  var super_ePRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT? { get }
  var super_eEXTERNAL_SOURCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_SOURCE? { get }
  var super_eASSEMBLY_COMPONENT_USAGE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE? { get }
  var super_eACTION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_ASSIGNMENT? { get }
  var super_ePRODUCT_DEFINITION_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP? { get }
  var super_eAPPLIED_ACTION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_ASSIGNMENT? { get }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var LEAF: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { get }
  var NEXT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNEXT_ASSEMBLY_USAGE_OCCURRENCE?  { get }
  var ROLE: SDAI.GENERIC_ENTITY?  { get }
  var REFERENCE_DESIGNATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var RELATED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { get }
  var UPPER_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE?  { get }
  var QUANTITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { get }
  var DEFINED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var OF_SHAPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATED_PART_RELATIONSHIP?  { get }
  var PREVIOUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { get }
  var DOCUMENTATION_IDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT>/*[1:nil]*/ )?  { get }
  var ASSIGNED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { get }
  var ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { get }
  var ASSIGNED_ACTION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { get }
  var NEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { get }
  var ROOT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION?  { get }
  var RELATING_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { get }
  var COMPOSITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_GROUP?  { get }
  var RELATING_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { get }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var SOURCE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSOURCE_ITEM?  { get }
  var PRODUCT_DEFINITION_OCCURRENCE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var ASSIGNED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATED_PART_RELATIONSHIP?  { get }
  var LOCATION: (SDAI.LIST_UNIQUE<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNEXT_ASSEMBLY_USAGE_OCCURRENCE>/*[1:nil]*/ )?  { get }
  var DEFINITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_DEFINITION?  { get }
  var RELATED_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { get }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var FORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
}

public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ITEM__subtype: 
  AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ITEM__type, SDAIDefinedType
where Supertype: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ITEM__type
{}

public extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ITEM__subtype {
  //MARK: CONSTRUCTORS
  init?(possiblyFrom complex: SDAI.ComplexEntity?) {
    self.init(fundamental: FundamentalType(possiblyFrom: complex))
  }

  init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?) {
    self.init(fundamental: FundamentalType(possiblyFrom: underlyingType))
  }

  init?<G: SDAIGenericType>(fromGeneric generic: G?) {
    self.init(fundamental: FundamentalType.convert(fromGeneric: generic))
  }

  //MARK: GROUP REFERENCES
  var super_eGROUP_RELATIONSHIP: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP_RELATIONSHIP? { rep.super_eGROUP_RELATIONSHIP }
  var super_eEXTERNAL_CLASS_LIBRARY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_CLASS_LIBRARY? { rep.super_eEXTERNAL_CLASS_LIBRARY }
  var super_eGROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP? { rep.super_eGROUP }
  var super_ePRODUCT_DEFINITION_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_USAGE? { rep.super_ePRODUCT_DEFINITION_USAGE }
  var super_eAPPLIED_ACTION_METHOD_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_METHOD_ASSIGNMENT? { rep.super_eAPPLIED_ACTION_METHOD_ASSIGNMENT }
  var super_ePRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION? { rep.super_ePRODUCT_DEFINITION }
  var super_eACTION_METHOD_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD_ASSIGNMENT? { rep.super_eACTION_METHOD_ASSIGNMENT }
  var super_ePRODUCT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT? { rep.super_ePRODUCT }
  var super_eEXTERNAL_SOURCE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEXTERNAL_SOURCE? { rep.super_eEXTERNAL_SOURCE }
  var super_eASSEMBLY_COMPONENT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE? { rep.super_eASSEMBLY_COMPONENT_USAGE }
  var super_eACTION_ASSIGNMENT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_ASSIGNMENT? { rep.super_eACTION_ASSIGNMENT }
  var super_ePRODUCT_DEFINITION_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP? { rep.super_ePRODUCT_DEFINITION_RELATIONSHIP }
  var super_eAPPLIED_ACTION_ASSIGNMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eAPPLIED_ACTION_ASSIGNMENT? { rep.super_eAPPLIED_ACTION_ASSIGNMENT }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.DESCRIPTION }
  var LEAF: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { rep.LEAF }
  var NEXT_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNEXT_ASSEMBLY_USAGE_OCCURRENCE?  { rep.NEXT_USAGE }
  var ROLE: SDAI.GENERIC_ENTITY?  { rep.ROLE }
  var REFERENCE_DESIGNATOR: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.REFERENCE_DESIGNATOR }
  var RELATED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { rep.RELATED_GROUP }
  var UPPER_USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eASSEMBLY_COMPONENT_USAGE?  { rep.UPPER_USAGE }
  var QUANTITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { rep.QUANTITY }
  var DEFINED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.DEFINED_VERSION }
  var OF_SHAPE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATED_PART_RELATIONSHIP?  { rep.OF_SHAPE }
  var PREVIOUS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { rep.PREVIOUS }
  var DOCUMENTATION_IDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT>/*[1:nil]*/ )?  { rep.DOCUMENTATION_IDS }
  var ASSIGNED_ACTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION?  { rep.ASSIGNED_ACTION }
  var ELEMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { rep.ELEMENT }
  var ASSIGNED_ACTION_METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { rep.ASSIGNED_ACTION_METHOD }
  var NEXT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_ELEMENT?  { rep.NEXT }
  var ROOT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION?  { rep.ROOT }
  var RELATING_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eGROUP?  { rep.RELATING_GROUP }
  var COMPOSITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCHANGE_GROUP?  { rep.COMPOSITION }
  var RELATING_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { rep.RELATING_PRODUCT_DEFINITION }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.ID }
  var SOURCE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sSOURCE_ITEM?  { rep.SOURCE_ID }
  var PRODUCT_DEFINITION_OCCURRENCE_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.PRODUCT_DEFINITION_OCCURRENCE_ID }
  var ASSIGNED_GROUP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMATED_PART_RELATIONSHIP?  { rep.ASSIGNED_GROUP }
  var LOCATION: (SDAI.LIST_UNIQUE<
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eNEXT_ASSEMBLY_USAGE_OCCURRENCE>/*[1:nil]*/ )?  { rep.LOCATION }
  var DEFINITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCHARACTERIZED_DEFINITION?  { rep.DEFINITION }
  var RELATED_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sPRODUCT_DEFINITION_OR_REFERENCE?  { rep.RELATED_PRODUCT_DEFINITION }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.NAME }
  var FORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.FORMATION }
}

