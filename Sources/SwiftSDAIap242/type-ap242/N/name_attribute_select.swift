/* file: name_attribute_select.swift 	 generated: Tue Nov 16 05:35:44 2021 */

/* This file was generated by the EXPRESS to Swift translator "exp2swift", 
  derived from STEPcode (formerly NIST's SCL).
 exp2swift version: v.1.0.0, derived from stepcode v0.8 as of 2019/11/23 
 WARNING: You probably don't want to edit it since your modifications 
  will be lost if exp2swift is used to regenerate it.
 */

 
import SwiftSDAIcore

extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF {
//MARK: -TYPE DEFINITION in EXPRESS
/*
  TYPE name_attribute_select = SELECT
    ( action_request_solution (*ENTITY*),
     address (*ENTITY*),
     configuration_design (*ENTITY*),
     context_dependent_shape_representation (*ENTITY*),
     derived_unit (*ENTITY*),
     effectivity (*ENTITY*),
     person_and_organization (*ENTITY*),
     product_definition (*ENTITY*),
     product_definition_substitute (*ENTITY*),
     property_definition_representation (*ENTITY*) );
  END_TYPE; -- name_attribute_select (line:4482 file:ap242ed2_mim_lf_v1.101.TY.exp)

*/


//MARK: - ALL DEFINED ATTRIBUTES FOR SELECT
/*
  action_request_solution (*ENTITY*):
  ATTR:  request: versioned_action_request
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  method: action_method
  ATTR:  name: label *** Multiple Select Case Sources ***

  address (*ENTITY*):
  ATTR:  people: SET [1 : ?] OF person
  ATTR:  street: label
  ATTR:  description: (AMBIGUOUS (CASE LEVEL))
  ATTR:  organizations: SET [1 : ?] OF organization
  ATTR:  telex_number: label
  ATTR:  facsimile_number: label
  ATTR:  region: label
  ATTR:  electronic_mail_address: label
  ATTR:  street_number: label
  ATTR:  internal_location: label
  ATTR:  postal_code: label
  ATTR:  postal_box: label
  ATTR:  url: identifier
  ATTR:  town: label
  ATTR:  country: label
  ATTR:  telephone_number: label
  ATTR:  name: label *** Multiple Select Case Sources ***

  configuration_design (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  design: configuration_design_item
  ATTR:  configuration: configuration_item *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***

  context_dependent_shape_representation (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  represented_product_relation: product_definition_shape
  ATTR:  representation_relation: shape_representation_relationship
  ATTR:  name: label *** Multiple Select Case Sources ***

  derived_unit (*ENTITY*):
  ATTR:  elements: SET [1 : ?] OF derived_unit_element
  ATTR:  name: label *** Multiple Select Case Sources ***

  effectivity (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  effectivity_lot_id: identifier
  ATTR:  effectivity_end_date: date_time_or_event_occurrence
  ATTR:  effectivity_lot_size: measure_with_unit
  ATTR:  effectivity_period: time_interval
  ATTR:  effectivity_start_date: date_time_or_event_occurrence
  ATTR:  effectivity_end_id: identifier
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  effectivity_start_id: identifier
  ATTR:  configuration: configuration_design *** Multiple Select Case Sources ***
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  usage: product_definition_relationship

  person_and_organization (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  the_person: person
  ATTR:  the_organization: organization
  ATTR:  name: label *** Multiple Select Case Sources ***

  product_definition (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  defined_version: collection_version
  ATTR:  documentation_ids: SET [1 : ?] OF document
  ATTR:  relating_product_definition: linear_array_placement_group_component
  ATTR:  id: identifier *** Multiple Select Case Sources ***
  ATTR:  frame_of_reference: product_definition_context
  ATTR:  definition: assembly_component (AMBIGUOUS (SELECT LEVEL))
  ATTR:  related_product_definition: linear_array_placement_group_component
  ATTR:  name: label *** Multiple Select Case Sources ***
  ATTR:  formation: product_definition_formation

  product_definition_substitute (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  context_relationship: product_definition_relationship
  ATTR:  substitute_definition: product_definition
  ATTR:  name: label *** Multiple Select Case Sources ***

  property_definition_representation (*ENTITY*):
  ATTR:  description: text *** Multiple Select Case Sources ***
  ATTR:  dependent_environment: data_environment
  ATTR:  used_representation: representation
  ATTR:  base: (AMBIGUOUS (CASE LEVEL))
  ATTR:  definition: represented_definition (AMBIGUOUS (SELECT LEVEL))
  ATTR:  name: label *** Multiple Select Case Sources ***

*/

/** SELECT type
- EXPRESS:
```express
  TYPE name_attribute_select = SELECT
    ( action_request_solution (*ENTITY*),
     address (*ENTITY*),
     configuration_design (*ENTITY*),
     context_dependent_shape_representation (*ENTITY*),
     derived_unit (*ENTITY*),
     effectivity (*ENTITY*),
     person_and_organization (*ENTITY*),
     product_definition (*ENTITY*),
     product_definition_substitute (*ENTITY*),
     property_definition_representation (*ENTITY*) );
  END_TYPE; -- name_attribute_select (line:4482 file:ap242ed2_mim_lf_v1.101.TY.exp)

```
*/
  public enum sNAME_ATTRIBUTE_SELECT : SDAIValue, AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ATTRIBUTE_SELECT__type {

    /// SELECT case ``eACTION_REQUEST_SOLUTION`` (ENTITY) in ``sNAME_ATTRIBUTE_SELECT``
    case _ACTION_REQUEST_SOLUTION(eACTION_REQUEST_SOLUTION)	// (ENTITY)

    /// SELECT case ``eADDRESS`` (ENTITY) in ``sNAME_ATTRIBUTE_SELECT``
    case _ADDRESS(eADDRESS)	// (ENTITY)

    /// SELECT case ``eCONFIGURATION_DESIGN`` (ENTITY) in ``sNAME_ATTRIBUTE_SELECT``
    case _CONFIGURATION_DESIGN(eCONFIGURATION_DESIGN)	// (ENTITY)

    /// SELECT case ``eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION`` (ENTITY) in ``sNAME_ATTRIBUTE_SELECT``
    case _CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION)	// (ENTITY)

    /// SELECT case ``eDERIVED_UNIT`` (ENTITY) in ``sNAME_ATTRIBUTE_SELECT``
    case _DERIVED_UNIT(eDERIVED_UNIT)	// (ENTITY)

    /// SELECT case ``eEFFECTIVITY`` (ENTITY) in ``sNAME_ATTRIBUTE_SELECT``
    case _EFFECTIVITY(eEFFECTIVITY)	// (ENTITY)

    /// SELECT case ``ePERSON_AND_ORGANIZATION`` (ENTITY) in ``sNAME_ATTRIBUTE_SELECT``
    case _PERSON_AND_ORGANIZATION(ePERSON_AND_ORGANIZATION)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION`` (ENTITY) in ``sNAME_ATTRIBUTE_SELECT``
    case _PRODUCT_DEFINITION(ePRODUCT_DEFINITION)	// (ENTITY)

    /// SELECT case ``ePRODUCT_DEFINITION_SUBSTITUTE`` (ENTITY) in ``sNAME_ATTRIBUTE_SELECT``
    case _PRODUCT_DEFINITION_SUBSTITUTE(ePRODUCT_DEFINITION_SUBSTITUTE)	// (ENTITY)

    /// SELECT case ``ePROPERTY_DEFINITION_REPRESENTATION`` (ENTITY) in ``sNAME_ATTRIBUTE_SELECT``
    case _PROPERTY_DEFINITION_REPRESENTATION(ePROPERTY_DEFINITION_REPRESENTATION)	// (ENTITY)

    //MARK: - CONSTRUCTORS
    public init(fundamental: FundamentalType) { self = fundamental }

    public init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?){
      return nil
    }

    public init?(possiblyFrom complex: SDAI.ComplexEntity?) {
      guard let complex = complex else { return nil }

      if let base = complex.entityReference(eACTION_REQUEST_SOLUTION.self) {self = ._ACTION_REQUEST_SOLUTION(base) }
      else if let base = complex.entityReference(eADDRESS.self) {self = ._ADDRESS(base) }
      else if let base = complex.entityReference(eCONFIGURATION_DESIGN.self) {self = ._CONFIGURATION_DESIGN(base) }
      else if let base = complex.entityReference(eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION.self) {self = ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(base) }
      else if let base = complex.entityReference(eDERIVED_UNIT.self) {self = ._DERIVED_UNIT(base) }
      else if let base = complex.entityReference(eEFFECTIVITY.self) {self = ._EFFECTIVITY(base) }
      else if let base = complex.entityReference(ePERSON_AND_ORGANIZATION.self) {self = ._PERSON_AND_ORGANIZATION(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION.self) {self = ._PRODUCT_DEFINITION(base) }
      else if let base = complex.entityReference(ePRODUCT_DEFINITION_SUBSTITUTE.self) {self = ._PRODUCT_DEFINITION_SUBSTITUTE(base) }
      else if let base = complex.entityReference(ePROPERTY_DEFINITION_REPRESENTATION.self) {self = ._PROPERTY_DEFINITION_REPRESENTATION(base) }
      else { return nil }
    }

    public init?<G: SDAIGenericType>(fromGeneric generic: G?) {
      guard let select = generic else { return nil }

      if let fundamental = select as? Self {
        self.init(fundamental: fundamental)
      }
      else if let base = eACTION_REQUEST_SOLUTION.convert(fromGeneric: select) {
        self = ._ACTION_REQUEST_SOLUTION(base)
      }
      else if let base = eADDRESS.convert(fromGeneric: select) {
        self = ._ADDRESS(base)
      }
      else if let base = eCONFIGURATION_DESIGN.convert(fromGeneric: select) {
        self = ._CONFIGURATION_DESIGN(base)
      }
      else if let base = eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION.convert(fromGeneric: select) {
        self = ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(base)
      }
      else if let base = eDERIVED_UNIT.convert(fromGeneric: select) {
        self = ._DERIVED_UNIT(base)
      }
      else if let base = eEFFECTIVITY.convert(fromGeneric: select) {
        self = ._EFFECTIVITY(base)
      }
      else if let base = ePERSON_AND_ORGANIZATION.convert(fromGeneric: select) {
        self = ._PERSON_AND_ORGANIZATION(base)
      }
      else if let base = ePRODUCT_DEFINITION.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION(base)
      }
      else if let base = ePRODUCT_DEFINITION_SUBSTITUTE.convert(fromGeneric: select) {
        self = ._PRODUCT_DEFINITION_SUBSTITUTE(base)
      }
      else if let base = ePROPERTY_DEFINITION_REPRESENTATION.convert(fromGeneric: select) {
        self = ._PROPERTY_DEFINITION_REPRESENTATION(base)
      }
      else { return nil }
    }

    // InitializableByP21Parameter
    public static var bareTypeName: String = "NAME_ATTRIBUTE_SELECT"

    public init?(p21typedParam: P21Decode.ExchangeStructure.TypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      guard let keyword = p21typedParam.keyword.asStandardKeyword else { exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"; return nil }

      switch(keyword) {
      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21typedParam)) while resolving \(Self.bareTypeName) select value"
        return nil
      }
    }

    public init?(p21untypedParam: P21Decode.ExchangeStructure.UntypedParameter, from exchangeStructure: P21Decode.ExchangeStructure) {
      switch p21untypedParam {
      case .rhsOccurenceName(let rhsname):
        switch rhsname {
        case .constantEntityName(let name):
          guard let entity = exchangeStructure.resolve(constantEntityName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: entity.complexEntity)

        case .entityInstanceName(let name):
          guard let complex = exchangeStructure.resolve(entityInstanceName: name) else {exchangeStructure.add(errorContext: "while resolving \(Self.bareTypeName) instance"); return nil }
          self.init(possiblyFrom: complex)

        default:
          exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
          return nil
        }

      default:
        exchangeStructure.error = "unexpected p21parameter(\(p21untypedParam)) while resolving \(Self.bareTypeName) select instance"
        return nil
      }
    }

    public init?(p21omittedParamfrom exchangeStructure: P21Decode.ExchangeStructure) {
      return nil
    }


    //MARK: - ENTITY UNDERLYING TYPE REFERENCES
    public var super_ePROPERTY_DEFINITION_REPRESENTATION: ePROPERTY_DEFINITION_REPRESENTATION? {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eCONFIGURATION_DESIGN: eCONFIGURATION_DESIGN? {
      switch self {
      case ._CONFIGURATION_DESIGN(let entity): return entity
      default: return nil
      }
    }

    public var super_eDERIVED_UNIT: eDERIVED_UNIT? {
      switch self {
      case ._DERIVED_UNIT(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION_SUBSTITUTE: ePRODUCT_DEFINITION_SUBSTITUTE? {
      switch self {
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let entity): return entity
      default: return nil
      }
    }

    public var super_ePRODUCT_DEFINITION: ePRODUCT_DEFINITION? {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity
      default: return nil
      }
    }

    public var super_eEFFECTIVITY: eEFFECTIVITY? {
      switch self {
      case ._EFFECTIVITY(let entity): return entity
      default: return nil
      }
    }

    public var super_eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION: eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION? {
      switch self {
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eACTION_REQUEST_SOLUTION: eACTION_REQUEST_SOLUTION? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let entity): return entity
      default: return nil
      }
    }

    public var super_ePERSON_AND_ORGANIZATION: ePERSON_AND_ORGANIZATION? {
      switch self {
      case ._PERSON_AND_ORGANIZATION(let entity): return entity
      default: return nil
      }
    }

    public var super_eADDRESS: eADDRESS? {
      switch self {
      case ._ADDRESS(let entity): return entity
      default: return nil
      }
    }


    //MARK: - ENTITY ATTRIBUTE REFERENCES
    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eACTION_REQUEST_SOLUTION`` )
    public var REQUEST: eVERSIONED_ACTION_REQUEST?  {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let entity): return entity.REQUEST
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var PEOPLE: (SDAI.SET<ePERSON>/*[1:nil]*/ )?  {
      switch self {
      case ._ADDRESS(let entity): return entity.PEOPLE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eDERIVED_UNIT`` )
    public var ELEMENTS: (SDAI.SET<eDERIVED_UNIT_ELEMENT>/*[1:nil]*/ )?  {
      switch self {
      case ._DERIVED_UNIT(let entity): return entity.ELEMENTS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var STREET: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.STREET
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eACTION_REQUEST_SOLUTION`` )
    /// - origin: ENTITY( ``eCONFIGURATION_DESIGN`` )
    /// - origin: ENTITY( ``eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION`` )
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_SUBSTITUTE`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    public var DESCRIPTION: tTEXT?  {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let entity): return entity.DESCRIPTION
      case ._ADDRESS/*(let entity)*/: return nil // AMBIGUOUS ATTRIBUTE for eADDRESS
      case ._CONFIGURATION_DESIGN(let entity): return entity.DESCRIPTION
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let entity): return entity.DESCRIPTION
      case ._EFFECTIVITY(let entity): return entity.DESCRIPTION
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.DESCRIPTION
      case ._PRODUCT_DEFINITION(let entity): return entity.DESCRIPTION
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let entity): return entity.DESCRIPTION
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.DESCRIPTION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var ORGANIZATIONS: (SDAI.SET<eORGANIZATION>/*[1:nil]*/ )?  {
      switch self {
      case ._ADDRESS(let entity): return entity.ORGANIZATIONS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    public var DEPENDENT_ENVIRONMENT: eDATA_ENVIRONMENT?  {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.DEPENDENT_ENVIRONMENT
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eACTION_REQUEST_SOLUTION`` )
    public var METHOD: eACTION_METHOD?  {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let entity): return entity.METHOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eCONFIGURATION_DESIGN`` )
    public var DESIGN: sCONFIGURATION_DESIGN_ITEM?  {
      switch self {
      case ._CONFIGURATION_DESIGN(let entity): return entity.DESIGN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var TELEX_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.TELEX_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var DEFINED_VERSION: eCOLLECTION_VERSION?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.DEFINED_VERSION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var FACSIMILE_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.FACSIMILE_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var REGION: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.REGION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var ELECTRONIC_MAIL_ADDRESS: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.ELECTRONIC_MAIL_ADDRESS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var STREET_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.STREET_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_LOT_ID: tIDENTIFIER?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_LOT_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    public var USED_REPRESENTATION: eREPRESENTATION?  {
      switch self {
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.USED_REPRESENTATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_SUBSTITUTE`` )
    public var CONTEXT_RELATIONSHIP: ePRODUCT_DEFINITION_RELATIONSHIP?  {
      switch self {
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let entity): return entity.CONTEXT_RELATIONSHIP
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_END_DATE: sDATE_TIME_OR_EVENT_OCCURRENCE?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_END_DATE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var DOCUMENTATION_IDS: (SDAI.SET<eDOCUMENT>/*[1:nil]*/ )?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.DOCUMENTATION_IDS
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_LOT_SIZE: eMEASURE_WITH_UNIT?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_LOT_SIZE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION`` )
    public var THE_PERSON: ePERSON?  {
      switch self {
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.THE_PERSON
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var INTERNAL_LOCATION: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.INTERNAL_LOCATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_PERIOD: eTIME_INTERVAL?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_PERIOD
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_START_DATE: sDATE_TIME_OR_EVENT_OCCURRENCE?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_START_DATE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var POSTAL_CODE: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.POSTAL_CODE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var POSTAL_BOX: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.POSTAL_BOX
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var URL: tIDENTIFIER?  {
      switch self {
      case ._ADDRESS(let entity): return entity.URL
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_END_ID: tIDENTIFIER?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_END_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION`` )
    public var THE_ORGANIZATION: eORGANIZATION?  {
      switch self {
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.THE_ORGANIZATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var RELATING_PRODUCT_DEFINITION: eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.RELATING_PRODUCT_DEFINITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION`` )
    public var REPRESENTED_PRODUCT_RELATION: ePRODUCT_DEFINITION_SHAPE?  {
      switch self {
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let entity): return entity.REPRESENTED_PRODUCT_RELATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var ID: tIDENTIFIER?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.ID
      case ._PRODUCT_DEFINITION(let entity): return entity.ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_SUBSTITUTE`` )
    public var SUBSTITUTE_DEFINITION: ePRODUCT_DEFINITION?  {
      switch self {
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let entity): return entity.SUBSTITUTE_DEFINITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var TOWN: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.TOWN
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var COUNTRY: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.COUNTRY
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION`` )
    public var REPRESENTATION_RELATION: eSHAPE_REPRESENTATION_RELATIONSHIP?  {
      switch self {
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let entity): return entity.REPRESENTATION_RELATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var EFFECTIVITY_START_ID: tIDENTIFIER?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.EFFECTIVITY_START_ID
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eADDRESS`` )
    public var TELEPHONE_NUMBER: tLABEL?  {
      switch self {
      case ._ADDRESS(let entity): return entity.TELEPHONE_NUMBER
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var FRAME_OF_REFERENCE: ePRODUCT_DEFINITION_CONTEXT?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.FRAME_OF_REFERENCE
      default: return nil
      }
    }

    //MARK: var DEFINITION: (AMBIGUOUS)

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eCONFIGURATION_DESIGN`` )
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var CONFIGURATION: SDAI.GENERIC_ENTITY?  {
      switch self {
      case ._CONFIGURATION_DESIGN(let entity): return entity.CONFIGURATION
      case ._EFFECTIVITY(let entity): return entity.CONFIGURATION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var RELATED_PRODUCT_DEFINITION: eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.RELATED_PRODUCT_DEFINITION
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eACTION_REQUEST_SOLUTION`` )
    /// - origin: ENTITY( ``eADDRESS`` )
    /// - origin: ENTITY( ``eCONFIGURATION_DESIGN`` )
    /// - origin: ENTITY( ``eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION`` )
    /// - origin: ENTITY( ``eDERIVED_UNIT`` )
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    /// - origin: ENTITY( ``ePERSON_AND_ORGANIZATION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION_SUBSTITUTE`` )
    /// - origin: ENTITY( ``ePROPERTY_DEFINITION_REPRESENTATION`` )
    public var NAME: tLABEL?  {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let entity): return entity.NAME
      case ._ADDRESS(let entity): return entity.NAME
      case ._CONFIGURATION_DESIGN(let entity): return entity.NAME
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let entity): return entity.NAME
      case ._DERIVED_UNIT(let entity): return entity.NAME
      case ._EFFECTIVITY(let entity): return entity.NAME
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION(let entity): return entity.NAME
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let entity): return entity.NAME
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.NAME
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``eEFFECTIVITY`` )
    public var USAGE: ePRODUCT_DEFINITION_RELATIONSHIP?  {
      switch self {
      case ._EFFECTIVITY(let entity): return entity.USAGE
      default: return nil
      }
    }

    /// attribute of SELECT type ``sNAME_ATTRIBUTE_SELECT``
    /// - origin: ENTITY( ``ePRODUCT_DEFINITION`` )
    public var FORMATION: ePRODUCT_DEFINITION_FORMATION?  {
      switch self {
      case ._PRODUCT_DEFINITION(let entity): return entity.FORMATION
      default: return nil
      }
    }


    //MARK: - SDAIValue
    public func isValueEqual<T: SDAIValue>(to rhs: T) -> Bool {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._ADDRESS(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CONFIGURATION_DESIGN(let selection): return selection.value.isValueEqual(to: rhs)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqual(to: rhs)
      case ._EFFECTIVITY(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.value.isValueEqual(to: rhs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?) -> Bool? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CONFIGURATION_DESIGN(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._EFFECTIVITY(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs)
      }
    }

    public func hashAsValue(into hasher: inout Hasher, visited complexEntities: inout Set<SDAI.ComplexEntity>) {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._ADDRESS(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CONFIGURATION_DESIGN(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._DERIVED_UNIT(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._EFFECTIVITY(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PERSON_AND_ORGANIZATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): selection.value.hashAsValue(into: &hasher, visited: &complexEntities)
      }
    }

    public func isValueEqual<T: SDAIValue>(to rhs: T, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._ADDRESS(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CONFIGURATION_DESIGN(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._EFFECTIVITY(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqual(to: rhs, visited: &comppairs)
      }
    }

    public func isValueEqualOptionally<T: SDAIValue>(to rhs: T?, visited comppairs: inout Set<SDAI.ComplexPair>) -> Bool? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._ADDRESS(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CONFIGURATION_DESIGN(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._DERIVED_UNIT(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._EFFECTIVITY(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.value.isValueEqualOptionally(to: rhs, visited: &comppairs)
      }
    }


    //MARK: SDAIGenericTypeBase
    public func copy() -> Self {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return ._ACTION_REQUEST_SOLUTION(selection.copy())
      case ._ADDRESS(let selection): return ._ADDRESS(selection.copy())
      case ._CONFIGURATION_DESIGN(let selection): return ._CONFIGURATION_DESIGN(selection.copy())
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(selection.copy())
      case ._DERIVED_UNIT(let selection): return ._DERIVED_UNIT(selection.copy())
      case ._EFFECTIVITY(let selection): return ._EFFECTIVITY(selection.copy())
      case ._PERSON_AND_ORGANIZATION(let selection): return ._PERSON_AND_ORGANIZATION(selection.copy())
      case ._PRODUCT_DEFINITION(let selection): return ._PRODUCT_DEFINITION(selection.copy())
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return ._PRODUCT_DEFINITION_SUBSTITUTE(selection.copy())
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return ._PROPERTY_DEFINITION_REPRESENTATION(selection.copy())
      }
    }

    //MARK: SDAIGenericType
    public var typeMembers: Set<SDAI.STRING> {
      var members: Set<SDAI.STRING> = [SDAI.STRING(Self.typeName)]
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): members.formUnion(selection.typeMembers)
      case ._ADDRESS(let selection): members.formUnion(selection.typeMembers)
      case ._CONFIGURATION_DESIGN(let selection): members.formUnion(selection.typeMembers)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): members.formUnion(selection.typeMembers)
      case ._DERIVED_UNIT(let selection): members.formUnion(selection.typeMembers)
      case ._EFFECTIVITY(let selection): members.formUnion(selection.typeMembers)
      case ._PERSON_AND_ORGANIZATION(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION(let selection): members.formUnion(selection.typeMembers)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): members.formUnion(selection.typeMembers)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): members.formUnion(selection.typeMembers)
      }
      return members
    }

    public var entityReference: SDAI.EntityReference? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.entityReference
      case ._ADDRESS(let selection): return selection.entityReference
      case ._CONFIGURATION_DESIGN(let selection): return selection.entityReference
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.entityReference
      case ._DERIVED_UNIT(let selection): return selection.entityReference
      case ._EFFECTIVITY(let selection): return selection.entityReference
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION(let selection): return selection.entityReference
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.entityReference
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.entityReference
      }
    }
    public var stringValue: SDAI.STRING? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.stringValue
      case ._ADDRESS(let selection): return selection.stringValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.stringValue
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.stringValue
      case ._DERIVED_UNIT(let selection): return selection.stringValue
      case ._EFFECTIVITY(let selection): return selection.stringValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION(let selection): return selection.stringValue
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.stringValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.stringValue
      }
    }
    public var binaryValue: SDAI.BINARY? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.binaryValue
      case ._ADDRESS(let selection): return selection.binaryValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.binaryValue
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.binaryValue
      case ._DERIVED_UNIT(let selection): return selection.binaryValue
      case ._EFFECTIVITY(let selection): return selection.binaryValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION(let selection): return selection.binaryValue
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.binaryValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.binaryValue
      }
    }
    public var logicalValue: SDAI.LOGICAL? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.logicalValue
      case ._ADDRESS(let selection): return selection.logicalValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.logicalValue
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.logicalValue
      case ._DERIVED_UNIT(let selection): return selection.logicalValue
      case ._EFFECTIVITY(let selection): return selection.logicalValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION(let selection): return selection.logicalValue
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.logicalValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.logicalValue
      }
    }
    public var booleanValue: SDAI.BOOLEAN? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.booleanValue
      case ._ADDRESS(let selection): return selection.booleanValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.booleanValue
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.booleanValue
      case ._DERIVED_UNIT(let selection): return selection.booleanValue
      case ._EFFECTIVITY(let selection): return selection.booleanValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION(let selection): return selection.booleanValue
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.booleanValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.booleanValue
      }
    }
    public var numberValue: SDAI.NUMBER? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.numberValue
      case ._ADDRESS(let selection): return selection.numberValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.numberValue
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.numberValue
      case ._DERIVED_UNIT(let selection): return selection.numberValue
      case ._EFFECTIVITY(let selection): return selection.numberValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION(let selection): return selection.numberValue
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.numberValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.numberValue
      }
    }
    public var realValue: SDAI.REAL? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.realValue
      case ._ADDRESS(let selection): return selection.realValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.realValue
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.realValue
      case ._DERIVED_UNIT(let selection): return selection.realValue
      case ._EFFECTIVITY(let selection): return selection.realValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION(let selection): return selection.realValue
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.realValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.realValue
      }
    }
    public var integerValue: SDAI.INTEGER? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.integerValue
      case ._ADDRESS(let selection): return selection.integerValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.integerValue
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.integerValue
      case ._DERIVED_UNIT(let selection): return selection.integerValue
      case ._EFFECTIVITY(let selection): return selection.integerValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION(let selection): return selection.integerValue
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.integerValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.integerValue
      }
    }
    public var genericEnumValue: SDAI.GenericEnumValue? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.genericEnumValue
      case ._ADDRESS(let selection): return selection.genericEnumValue
      case ._CONFIGURATION_DESIGN(let selection): return selection.genericEnumValue
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.genericEnumValue
      case ._DERIVED_UNIT(let selection): return selection.genericEnumValue
      case ._EFFECTIVITY(let selection): return selection.genericEnumValue
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION(let selection): return selection.genericEnumValue
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.genericEnumValue
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.genericEnumValue
      }
    }
    public func arrayOptionalValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY_OPTIONAL<ELEM>? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._ADDRESS(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._EFFECTIVITY(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.arrayOptionalValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.arrayOptionalValue(elementType:elementType)
      }
    }
    public func arrayValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.ARRAY<ELEM>? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.arrayValue(elementType:elementType)
      case ._ADDRESS(let selection): return selection.arrayValue(elementType:elementType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.arrayValue(elementType:elementType)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.arrayValue(elementType:elementType)
      case ._EFFECTIVITY(let selection): return selection.arrayValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.arrayValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.arrayValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.arrayValue(elementType:elementType)
      }
    }
    public func listValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.LIST<ELEM>? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.listValue(elementType:elementType)
      case ._ADDRESS(let selection): return selection.listValue(elementType:elementType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.listValue(elementType:elementType)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.listValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.listValue(elementType:elementType)
      case ._EFFECTIVITY(let selection): return selection.listValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.listValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.listValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.listValue(elementType:elementType)
      }
    }
    public func bagValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.BAG<ELEM>? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.bagValue(elementType:elementType)
      case ._ADDRESS(let selection): return selection.bagValue(elementType:elementType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.bagValue(elementType:elementType)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.bagValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.bagValue(elementType:elementType)
      case ._EFFECTIVITY(let selection): return selection.bagValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.bagValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.bagValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.bagValue(elementType:elementType)
      }
    }
    public func setValue<ELEM:SDAIGenericType>(elementType:ELEM.Type) -> SDAI.SET<ELEM>? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.setValue(elementType:elementType)
      case ._ADDRESS(let selection): return selection.setValue(elementType:elementType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.setValue(elementType:elementType)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.setValue(elementType:elementType)
      case ._DERIVED_UNIT(let selection): return selection.setValue(elementType:elementType)
      case ._EFFECTIVITY(let selection): return selection.setValue(elementType:elementType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION(let selection): return selection.setValue(elementType:elementType)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.setValue(elementType:elementType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.setValue(elementType:elementType)
      }
    }
    public func enumValue<ENUM:SDAIEnumerationType>(enumType:ENUM.Type) -> ENUM? {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let selection): return selection.enumValue(enumType:enumType)
      case ._ADDRESS(let selection): return selection.enumValue(enumType:enumType)
      case ._CONFIGURATION_DESIGN(let selection): return selection.enumValue(enumType:enumType)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selection): return selection.enumValue(enumType:enumType)
      case ._DERIVED_UNIT(let selection): return selection.enumValue(enumType:enumType)
      case ._EFFECTIVITY(let selection): return selection.enumValue(enumType:enumType)
      case ._PERSON_AND_ORGANIZATION(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION(let selection): return selection.enumValue(enumType:enumType)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selection): return selection.enumValue(enumType:enumType)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selection): return selection.enumValue(enumType:enumType)
      }
    }

    //MARK: SDAIUnderlyingType
    public typealias FundamentalType = Self
    public static var typeName: String = 
      "AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.NAME_ATTRIBUTE_SELECT"
    public var asFundamentalType: FundamentalType { return self }

    //MARK: SDAIObservableAggregateElement
    public var entityReferences: AnySequence<SDAI.EntityReference> {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let entity): return entity.entityReferences
      case ._ADDRESS(let entity): return entity.entityReferences
      case ._CONFIGURATION_DESIGN(let entity): return entity.entityReferences
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let entity): return entity.entityReferences
      case ._DERIVED_UNIT(let entity): return entity.entityReferences
      case ._EFFECTIVITY(let entity): return entity.entityReferences
      case ._PERSON_AND_ORGANIZATION(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION(let entity): return entity.entityReferences
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let entity): return entity.entityReferences
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): return entity.entityReferences
      }
    }

    public mutating func configure(with observer: SDAI.EntityReferenceObserver) {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let entity): 
        entity.configure(with: observer)
        self = ._ACTION_REQUEST_SOLUTION(entity)
      case ._ADDRESS(let entity): 
        entity.configure(with: observer)
        self = ._ADDRESS(entity)
      case ._CONFIGURATION_DESIGN(let entity): 
        entity.configure(with: observer)
        self = ._CONFIGURATION_DESIGN(entity)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let entity): 
        entity.configure(with: observer)
        self = ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(entity)
      case ._DERIVED_UNIT(let entity): 
        entity.configure(with: observer)
        self = ._DERIVED_UNIT(entity)
      case ._EFFECTIVITY(let entity): 
        entity.configure(with: observer)
        self = ._EFFECTIVITY(entity)
      case ._PERSON_AND_ORGANIZATION(let entity): 
        entity.configure(with: observer)
        self = ._PERSON_AND_ORGANIZATION(entity)
      case ._PRODUCT_DEFINITION(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION(entity)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let entity): 
        entity.configure(with: observer)
        self = ._PRODUCT_DEFINITION_SUBSTITUTE(entity)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): 
        entity.configure(with: observer)
        self = ._PROPERTY_DEFINITION_REPRESENTATION(entity)
      }
    }

    public mutating func teardownObserver() {
      switch self {
      case ._ACTION_REQUEST_SOLUTION(let entity): 
        entity.teardownObserver()
        self = ._ACTION_REQUEST_SOLUTION(entity)
      case ._ADDRESS(let entity): 
        entity.teardownObserver()
        self = ._ADDRESS(entity)
      case ._CONFIGURATION_DESIGN(let entity): 
        entity.teardownObserver()
        self = ._CONFIGURATION_DESIGN(entity)
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let entity): 
        entity.teardownObserver()
        self = ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(entity)
      case ._DERIVED_UNIT(let entity): 
        entity.teardownObserver()
        self = ._DERIVED_UNIT(entity)
      case ._EFFECTIVITY(let entity): 
        entity.teardownObserver()
        self = ._EFFECTIVITY(entity)
      case ._PERSON_AND_ORGANIZATION(let entity): 
        entity.teardownObserver()
        self = ._PERSON_AND_ORGANIZATION(entity)
      case ._PRODUCT_DEFINITION(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION(entity)
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let entity): 
        entity.teardownObserver()
        self = ._PRODUCT_DEFINITION_SUBSTITUTE(entity)
      case ._PROPERTY_DEFINITION_REPRESENTATION(let entity): 
        entity.teardownObserver()
        self = ._PROPERTY_DEFINITION_REPRESENTATION(entity)
      }
    }

    //MARK: SDAIAggregationBehavior
    public var aggregationHiBound: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationHiIndex: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationLoBound: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationLoIndex: Int? {
      switch self {
      default: return nil
      }
    }
    public var aggregationSize: Int? {
      switch self {
      default: return nil
      }
    }

    //MARK: WHERE RULE VALIDATION (SELECT TYPE)
    public static func validateWhereRules(instance:Self?, prefix:SDAI.WhereLabel) -> [SDAI.WhereLabel:SDAI.LOGICAL] {
      var result: [SDAI.WhereLabel:SDAI.LOGICAL] = [:]
      switch instance {
      case ._ACTION_REQUEST_SOLUTION(let selectValue): 
        result = eACTION_REQUEST_SOLUTION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ACTION_REQUEST_SOLUTION")
      case ._ADDRESS(let selectValue): result = eADDRESS.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\ADDRESS")
      case ._CONFIGURATION_DESIGN(let selectValue): 
        result = eCONFIGURATION_DESIGN.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CONFIGURATION_DESIGN")
      case ._CONTEXT_DEPENDENT_SHAPE_REPRESENTATION(let selectValue): 
        result = eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\CONTEXT_DEPENDENT_SHAPE_REPRESENTATION")
      case ._DERIVED_UNIT(let selectValue): result = eDERIVED_UNIT.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\DERIVED_UNIT")
      case ._EFFECTIVITY(let selectValue): result = eEFFECTIVITY.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\EFFECTIVITY")
      case ._PERSON_AND_ORGANIZATION(let selectValue): 
        result = ePERSON_AND_ORGANIZATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PERSON_AND_ORGANIZATION")
      case ._PRODUCT_DEFINITION(let selectValue): 
        result = ePRODUCT_DEFINITION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION")
      case ._PRODUCT_DEFINITION_SUBSTITUTE(let selectValue): 
        result = ePRODUCT_DEFINITION_SUBSTITUTE.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PRODUCT_DEFINITION_SUBSTITUTE")
      case ._PROPERTY_DEFINITION_REPRESENTATION(let selectValue): 
        result = ePROPERTY_DEFINITION_REPRESENTATION.validateWhereRules(instance:selectValue, 
        prefix:prefix + "\\PROPERTY_DEFINITION_REPRESENTATION")
      case nil: break
      }

      return result
    }

  }

}


//MARK: - SELECT TYPE HIERARCHY
public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ATTRIBUTE_SELECT__type: SDAISelectType {

  //MARK: GROUP REFERENCES
  var super_ePROPERTY_DEFINITION_REPRESENTATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION_REPRESENTATION? { get }
  var super_eCONFIGURATION_DESIGN: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_DESIGN? { get }
  var super_eDERIVED_UNIT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT? { get }
  var super_ePRODUCT_DEFINITION_SUBSTITUTE: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_SUBSTITUTE? { get }
  var super_ePRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION? { get }
  var super_eEFFECTIVITY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY? { get }
  var super_eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION? { get }
  var super_eACTION_REQUEST_SOLUTION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_REQUEST_SOLUTION? { get }
  var super_ePERSON_AND_ORGANIZATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION? { get }
  var super_eADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eADDRESS? { get }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var REQUEST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { get }
  var PEOPLE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON>/*[1:nil]*/ )?  { get }
  var ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT_ELEMENT>/*[1:nil]*/ )?  { get }
  var STREET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { get }
  var ORGANIZATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION>/*[1:nil]*/ )?  { get }
  var DEPENDENT_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_ENVIRONMENT?  { get }
  var METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { get }
  var DESIGN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCONFIGURATION_DESIGN_ITEM?  { get }
  var TELEX_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var DEFINED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { get }
  var FACSIMILE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var REGION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var ELECTRONIC_MAIL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var STREET_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var EFFECTIVITY_LOT_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var USED_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { get }
  var CONTEXT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP?  { get }
  var EFFECTIVITY_END_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { get }
  var DOCUMENTATION_IDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT>/*[1:nil]*/ )?  { get }
  var EFFECTIVITY_LOT_SIZE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { get }
  var THE_PERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON?  { get }
  var INTERNAL_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var EFFECTIVITY_PERIOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { get }
  var EFFECTIVITY_START_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { get }
  var POSTAL_CODE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var POSTAL_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var URL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var EFFECTIVITY_END_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var THE_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { get }
  var RELATING_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT?  { get }
  var REPRESENTED_PRODUCT_RELATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_SHAPE?  { get }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var SUBSTITUTE_DEFINITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION?  { get }
  var TOWN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var COUNTRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var REPRESENTATION_RELATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_REPRESENTATION_RELATIONSHIP?  { get }
  var EFFECTIVITY_START_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { get }
  var TELEPHONE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var FRAME_OF_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_CONTEXT?  { get }
  var CONFIGURATION: SDAI.GENERIC_ENTITY?  { get }
  var RELATED_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT?  { get }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { get }
  var USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP?  { get }
  var FORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { get }
}

public protocol AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ATTRIBUTE_SELECT__subtype: 
  AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ATTRIBUTE_SELECT__type, SDAIDefinedType
where Supertype: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ATTRIBUTE_SELECT__type
{}

public extension AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF__sNAME_ATTRIBUTE_SELECT__subtype {
  //MARK: CONSTRUCTORS
  init?(possiblyFrom complex: SDAI.ComplexEntity?) {
    self.init(fundamental: FundamentalType(possiblyFrom: complex))
  }

  init?<T: SDAIUnderlyingType>(possiblyFrom underlyingType: T?) {
    self.init(fundamental: FundamentalType(possiblyFrom: underlyingType))
  }

  init?<G: SDAIGenericType>(fromGeneric generic: G?) {
    self.init(fundamental: FundamentalType.convert(fromGeneric: generic))
  }

  //MARK: GROUP REFERENCES
  var super_ePROPERTY_DEFINITION_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePROPERTY_DEFINITION_REPRESENTATION? { rep.super_ePROPERTY_DEFINITION_REPRESENTATION }
  var super_eCONFIGURATION_DESIGN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONFIGURATION_DESIGN? { rep.super_eCONFIGURATION_DESIGN }
  var super_eDERIVED_UNIT: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT? { rep.super_eDERIVED_UNIT }
  var super_ePRODUCT_DEFINITION_SUBSTITUTE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_SUBSTITUTE? { rep.super_ePRODUCT_DEFINITION_SUBSTITUTE }
  var super_ePRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION? { rep.super_ePRODUCT_DEFINITION }
  var super_eEFFECTIVITY: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eEFFECTIVITY? { rep.super_eEFFECTIVITY }
  var super_eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION? { rep.super_eCONTEXT_DEPENDENT_SHAPE_REPRESENTATION }
  var super_eACTION_REQUEST_SOLUTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_REQUEST_SOLUTION? { rep.super_eACTION_REQUEST_SOLUTION }
  var super_ePERSON_AND_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON_AND_ORGANIZATION? { rep.super_ePERSON_AND_ORGANIZATION }
  var super_eADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eADDRESS? { rep.super_eADDRESS }

  //MARK: ENTITY ATTRIBUTE REFERENCES
  var REQUEST: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eVERSIONED_ACTION_REQUEST?  { rep.REQUEST }
  var PEOPLE: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON>/*[1:nil]*/ )?  { rep.PEOPLE }
  var ELEMENTS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDERIVED_UNIT_ELEMENT>/*[1:nil]*/ )?  { rep.ELEMENTS }
  var STREET: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.STREET }
  var DESCRIPTION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tTEXT?  { rep.DESCRIPTION }
  var ORGANIZATIONS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION>/*[1:nil]*/ )?  { rep.ORGANIZATIONS }
  var DEPENDENT_ENVIRONMENT: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDATA_ENVIRONMENT?  { rep.DEPENDENT_ENVIRONMENT }
  var METHOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eACTION_METHOD?  { rep.METHOD }
  var DESIGN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sCONFIGURATION_DESIGN_ITEM?  { rep.DESIGN }
  var TELEX_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TELEX_NUMBER }
  var DEFINED_VERSION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eCOLLECTION_VERSION?  { rep.DEFINED_VERSION }
  var FACSIMILE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.FACSIMILE_NUMBER }
  var REGION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.REGION }
  var ELECTRONIC_MAIL_ADDRESS: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.ELECTRONIC_MAIL_ADDRESS }
  var STREET_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.STREET_NUMBER }
  var EFFECTIVITY_LOT_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.EFFECTIVITY_LOT_ID }
  var USED_REPRESENTATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eREPRESENTATION?  { rep.USED_REPRESENTATION }
  var CONTEXT_RELATIONSHIP: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP?  { rep.CONTEXT_RELATIONSHIP }
  var EFFECTIVITY_END_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { rep.EFFECTIVITY_END_DATE }
  var DOCUMENTATION_IDS: (SDAI.SET<AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eDOCUMENT>/*[1:nil]*/ )?  { rep.DOCUMENTATION_IDS }
  var EFFECTIVITY_LOT_SIZE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eMEASURE_WITH_UNIT?  { rep.EFFECTIVITY_LOT_SIZE }
  var THE_PERSON: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePERSON?  { rep.THE_PERSON }
  var INTERNAL_LOCATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.INTERNAL_LOCATION }
  var EFFECTIVITY_PERIOD: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eTIME_INTERVAL?  { rep.EFFECTIVITY_PERIOD }
  var EFFECTIVITY_START_DATE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.sDATE_TIME_OR_EVENT_OCCURRENCE?  { rep.EFFECTIVITY_START_DATE }
  var POSTAL_CODE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.POSTAL_CODE }
  var POSTAL_BOX: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.POSTAL_BOX }
  var URL: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.URL }
  var EFFECTIVITY_END_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.EFFECTIVITY_END_ID }
  var THE_ORGANIZATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eORGANIZATION?  { rep.THE_ORGANIZATION }
  var RELATING_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT?  { rep.RELATING_PRODUCT_DEFINITION }
  var REPRESENTED_PRODUCT_RELATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_SHAPE?  { rep.REPRESENTED_PRODUCT_RELATION }
  var ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.ID }
  var SUBSTITUTE_DEFINITION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION?  { rep.SUBSTITUTE_DEFINITION }
  var TOWN: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TOWN }
  var COUNTRY: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.COUNTRY }
  var REPRESENTATION_RELATION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eSHAPE_REPRESENTATION_RELATIONSHIP?  { rep.REPRESENTATION_RELATION }
  var EFFECTIVITY_START_ID: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tIDENTIFIER?  { rep.EFFECTIVITY_START_ID }
  var TELEPHONE_NUMBER: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.TELEPHONE_NUMBER }
  var FRAME_OF_REFERENCE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_CONTEXT?  { rep.FRAME_OF_REFERENCE }
  var CONFIGURATION: SDAI.GENERIC_ENTITY?  { rep.CONFIGURATION }
  var RELATED_PRODUCT_DEFINITION: 
    AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.eLINEAR_ARRAY_PLACEMENT_GROUP_COMPONENT?  { rep.RELATED_PRODUCT_DEFINITION }
  var NAME: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.tLABEL?  { rep.NAME }
  var USAGE: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_RELATIONSHIP?  { rep.USAGE }
  var FORMATION: AP242_MANAGED_MODEL_BASED_3D_ENGINEERING_MIM_LF.ePRODUCT_DEFINITION_FORMATION?  { rep.FORMATION }
}

